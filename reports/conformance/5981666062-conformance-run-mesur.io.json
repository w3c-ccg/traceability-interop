{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2df516b5-1ee4-499e-9a5d-ef1101faec0f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "990766b4-512f-4929-977c-bb0e21a36c7c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d45b7ab-f844-4d66-b8ee-9650baee81d6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ff4d64ac-8721-4535-a689-b84fbd23d3fc"
                }
              }
            ]
          },
          {
            "id": "35556c41-ba44-4302-abed-99719a9ce4f4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59298ef6-5d47-4daa-8da8-5b341796bcf0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7ce19c71-a007-43cc-a263-92d14c93296d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1024e984-948a-4eea-9c13-cd0cf120b7b5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c7ff0ab6-2c30-4509-9f7a-264d7632b1ab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4161e997-617c-4751-8ebe-f5321f4eb1e7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a6484da-5cdd-44b3-93f1-9f73682ddc24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b801c790-ae3d-4a25-9c2c-72c40a95fe38"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "519db020-2555-4142-bf25-030fb7152b9f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0439225f-eebd-4267-88a3-63a4083f9e07"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fc8a6c4e-b545-4620-8f1f-c7bb730b063e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "825a7f58-2f54-498a-add4-9e79a635619e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f408df5e-0c75-4526-88d8-ef4b8a46bfae",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "95775ae5-8b2c-4e30-8e6e-4a8c3c15e57d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c74fadd-3537-4dcb-92c9-bf29a3f38b08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a24daae-4f44-4f78-87c8-ceef96f28dbe"
            }
          }
        ]
      },
      {
        "id": "ac090a27-e9a2-44ee-8e7b-d7b5dfeb4527",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ad9fdbdf-d1de-465c-ab30-a32547a3f2e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ef85db9-d7b2-41d3-bf6b-62f666c14d5b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2e0b051a-6e3e-4a94-a365-6bb8fbe4f078",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a469e6ed-3606-4843-abf1-a465de729d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "718406ae-7312-47c4-a098-281f1ac7bbcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251ed8b8-c8b9-4c78-ae11-e7331b9ec111",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3635a50d-3a89-4444-8e06-5f1d2f9b4382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba0377f4-f74d-42e8-afdb-14e46700543a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573ebf20-e4fe-47ca-a033-dfcd19e75e7c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e191924-f899-429a-8d7e-d8ca614a2a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4696650-5ed9-4113-9a35-c2085f6b5618"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "672d4b7d-d98a-450c-a75f-34212d13419f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d055755f-64bc-4831-b248-b6a9a3f08e59",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5922c142-a482-4f7d-b5e6-d413259d6d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb93d05c-d051-4b7c-b41d-9a4b357e259c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a56c9b-887f-4cc8-ab3a-bf9dbf8b75b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4952285-2abf-4636-a0be-463019836f50"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e7eef0ee-de36-42d9-9391-c80bb25f799b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "982e6f2f-5a1e-46fd-8ab9-ddc423ff72a5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fb75c33-8683-449f-bfd8-27e5a72fe6aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "624ac57a-fa3e-4e19-af7d-859f51096ff3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b92a74ad-07e8-45fb-b035-590335dfcf8e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "65bfbce4-6b88-41e0-8e03-3e65b6501e0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bde291bb-3c3d-484a-bbdd-814564ad975d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c534f532-57d2-4a35-8eac-42efc870f719"
            }
          }
        ]
      },
      {
        "id": "77c43d48-bcaa-4b75-8577-a27c91427658",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e4b2c6d3-8096-4207-97d5-1da2a86a65a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a1787b4-14af-4d23-b269-f328b085858c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5af9be65-048d-4559-a3fd-c4339af18968",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfd280c-74a4-4e71-8507-cdf55a25d6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a773efe-24a9-4115-b9d5-d21683107db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e96822b-6cdd-407e-b67c-697753a12826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27b20ba3-4961-40b0-8166-47edd710461d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0751b7-15b2-4329-922b-aea166cc6b93",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9154b0-e553-4fb7-8d8b-2e59808ce7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e29ab2d-1bd0-41e2-913c-a899b40ca02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b5c6c9-ae28-4def-ae69-6458a9ae653f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee535d05-0f64-4c66-b1f5-f7c198c16513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e18fce-80f1-40b8-ad70-844bd1ec9ef1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703a3463-f6a1-4957-b82e-6e2bcee49a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f338402-b065-4acc-8030-9854b09809d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed46a620-27a8-4254-8021-62024b71cffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6b8806d-5af8-4e1a-a693-bef4a561f37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab4a1ef-1635-49ff-a4a1-14df4b0311f8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc8e610-5f4f-46f1-aa47-d0b4ec7c8f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742eb007-8fac-49c6-950a-a5f9d14dd632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65a59f1-56f2-4275-bfb5-3147a5219132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25887a29-0ea3-4a64-afe6-acae7e9c1cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed60c05-5448-4b21-a352-8c7f777b9fc7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08dcd44-9656-464d-afaa-65522fccd5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d81a9f-a0df-4259-90e7-bc71a123e91e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a633e383-495a-4909-a179-4ae51f9392cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16e16460-c643-4183-b514-45d953a6af0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b69f80-53f6-4c08-bf72-de5e7d2c1cde",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8460e22-0cde-41da-a4b1-f565e2043e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d19c715-7b28-4a50-a9ce-2f9eee219b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e9fc35-0020-4c01-9100-513d2776f92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2b1cb19-16d1-4b8d-8691-07962f5cbb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf1a2f6-115c-437d-a611-6ce255b112d0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7647002-be19-4e7c-a1c4-b938b100dd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a061f7c-6e25-4abb-86b3-1ad470f8240e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2795f6-dbe3-4b48-99bc-695834e09c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06a42e15-90f9-42ee-96e6-edca2bfddce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c79dd7-982b-41cd-ad54-0da3b41d455d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed7dab8-6bf9-4d0c-9e6f-09a30f631213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4679a0a-b047-453d-9191-47c6c9d46b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9865eb73-202e-4598-b9d3-8aaf328f87c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11e79307-febd-4fd8-84b4-0b6310c4831a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1241c37-3938-49f4-bd28-c0f5bd569bbe",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdeabbc-1520-4c43-9611-61d2ad3777b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65e7411-be60-4801-b65d-9cde64d663fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f362ac-1146-4285-98ac-10d746e520c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d19c3de0-e91b-46ca-90d7-e50127c235fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e5977a-acc4-452d-b2c0-a5577b26bc58",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "671920e0-d9bf-42d2-8155-9f215174681e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21bec693-42c0-4ed9-aa57-3b8ef45a9e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0195ddad-73f1-4a5a-bc51-e9a2407a91fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45e18216-a1e3-4457-adb1-30b08d4586ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fede678-7535-4c38-a8d7-2a67ba6fe6c9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c1521a-98fd-4f9d-861d-f9bbf9056199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56534c5-d5ad-4c36-a12c-fc50116da746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e974d33-4a21-422e-90ee-e29f3eabbfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2be3c4e-5b5d-432a-a2f9-6382ae26cd98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bab4b7c-942c-427f-9603-051ad20eee80",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6e9009-0de4-4d62-9b93-588b6af776c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d350d0c-a41e-4a64-b246-e8d969e3a73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3b1917-88d6-40a3-ab3b-d2b613ba40f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43295b6b-9953-4c38-9680-32cd9cad806d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a716f9-aeed-44a7-b433-dbf8ef96b953",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "972ea958-d0f0-4bcf-bb3c-6eafb51ebd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ddece7-6526-42ca-87ee-32908a3090d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43174b4-4d03-43a7-94ae-5d03b0656487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98f36143-dc0f-4c6c-ae3e-2656cd708a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714f3803-0a6b-460d-9a2d-1f3f1292a42a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e962aee-9baf-42ea-b6d7-ee6731bb125c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238c6c91-bbf1-449e-b24a-53b3d57794d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbc6d29-4606-4019-bb28-fb7daa8007ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3fbd958-6a19-45fb-a472-ce54a2df20c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa9b28f-448b-4cce-b345-0440cd15dd43",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefadbd2-8d6a-4a94-9ebe-58504edb4b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e58404e7-07a3-45ab-bde5-d3bc0d4d7d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d53c2a-026a-4978-95c2-9c3edfd05d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8e45c70-b64f-4869-b631-4b089c0c084a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60464f4-6a42-467e-956d-0d23119ea308",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a65c01f-0aba-4d6e-8238-9ab340005270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa2afbe-72fb-4667-b1ed-3b78e73d1e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5c38b6-9d9f-4465-b2e4-a7e884990539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f060324f-ddd1-4b88-9eea-9cb607fcad64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33b0e14-c10b-48de-8843-95d52147d9eb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93120a32-0fd0-459b-a54b-b79e487a7b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbee9a3f-2f55-4d00-820f-42c5793e3696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cb7b17-45d7-43c2-98b5-21d64d4ac3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccd88fdd-5c51-4d4f-8876-435cda6c838e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e539924b-39dc-4c86-8abd-989cf9cb8135",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6409280-88c4-4caf-8896-a6bff38a6524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0aceb6-c4c6-4d98-ac0a-9648de4a4db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04da99cd-9446-4066-abf1-122f73521c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e262bc-2c3b-4c56-abc7-62bbefe92b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f4ce81-98e5-4d43-a617-8181744bdbc6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e199aa70-40a5-4d28-b6ca-9e70174c22f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5796b30-68b5-4a1f-8b7c-2703a034bbad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bf8dd2-962e-4019-af6b-473bd0b05b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c716b9cc-53bb-429b-8f33-ceafea88782f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18773127-824f-453e-a6c8-4adadac147a4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659a2de3-d1a6-4786-82cc-104477098518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553bc1c7-9f18-41d7-89bc-249521a20ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee91dc6-1edc-48a5-b91f-fbc619fb0a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2288b785-12ca-4f74-abef-b125bbb649e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebec8d6-44f4-41a5-98d5-d2fa3464be6d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce06f7b-6a24-4833-a1a4-a266fb81a795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc8c62a-d538-4b66-8660-b67f153f5649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9045bdb8-1504-4842-9ac3-94e590f0994c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c4d168d-cc9c-46c2-9aea-ccb80a76093e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8717f0-e8ba-4f52-82aa-ac3deb9a0ec0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "993eda5e-e624-4110-b745-d7aa1335f2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973cd159-32c0-4c86-844e-0c43c682568e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce46775e-2ef7-49c7-bad6-fb64ce7d89ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0e86af-0dd3-4931-993c-0fdab4700574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50495eb5-d59e-47c6-8eab-41977af68ccd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17418c58-92bd-48e5-9aab-f1bb5bd635b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fab48fc-c5fa-4430-a8db-8f6a50dce447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e991fbf1-08b5-4088-a49a-14162fa20a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87d1689e-432d-435f-85cc-b169bc2ca1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e2f590-51b9-4b96-bbe6-7c014d2d1492",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2439d01-2ddf-4f81-b17a-bcfd22f1debb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb2b414-07fe-4c62-bac3-b9e31c3b804c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5e647e-430f-44a2-a038-464f9b92a289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2c7657-6f9a-4272-bf8c-990ccc0f9747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d631b3c7-45bd-4255-ada6-9654ec505db6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7285149-5aa0-4504-8cef-27ceea21b9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7d2382-0468-4415-bf3a-d52d536445a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615672f3-93d1-4ef2-b737-be51ae7f7f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8168a9-2038-4cce-89f4-1b0f1b7821c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d6f904-e5c6-4f73-b448-7ba49b04cdb8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd3a361-c3f3-4e41-8517-317119d8b418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40add3ba-b9fb-404d-bf66-cfdf8bbb6765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12afcf1-896e-40e5-81a2-c32d26e8c2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0e1082-9c62-4c5d-abd2-bc09b4935d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa932cc-f65b-4539-a19d-7a9f3709674c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fff8be0-1f45-4b21-8fc5-9f1c72ca0120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb262dd-ec56-4b0a-bbc0-5c526784081f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50e354a-1025-441e-8e4c-47e8d077d70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "30a96138-2fe5-4fad-8ebf-5684e774bcf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8c33e7-f3e9-4927-bacb-c8f29fedf25a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a1a461-29a3-4f1e-884b-db566b164d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e19afa8-1bf9-4833-acd5-d2e3f4c773fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04da3e3-3b33-4f45-a0ae-66c50ae8ba32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9ab4cb-d0c0-4390-8af1-6f600d59c795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1ac990-2a31-4c51-9fe5-a011fbcdff72",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fb6efa-05c3-4065-9063-fcb922f171ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "370e6138-a285-4cd9-8306-b4d5f056e039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f060035-c306-4a43-956c-0514dfcb3ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb39b43e-371b-4faa-8328-339b6f3aa2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e95c34a-5d3d-490e-b922-a0c39c17e2cd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e155e1c8-7df7-401f-8b41-284f8a61d235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8d7b81-f8ef-482d-bd89-10d828a43fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8dc946-c730-4262-b387-b63534b5a8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "547007ab-342a-4649-bfa2-5466bd1b6602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d424a5ab-cdfc-4e50-a450-35a0e56bed60",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34459b34-ac18-4241-9eb7-e3583afda9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc5c7ed-26e4-4812-8168-2edd477c6684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27e1227-34a7-4fe8-9bde-e997402f288d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b573fe-5d43-4fd2-8c5e-8172fe89684b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf687637-4b97-4c42-a1c1-3cb929741fbb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37206d79-97d8-4c7c-bf2d-5b85c35f580c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97bcbebc-a6b8-4b15-b7bf-c7c8e0402b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378b5e96-d031-4bfa-964f-f63cb7b24c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb7d8d4-f45f-4d59-911d-08f89754665c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f7266e-b64f-44c6-89c1-ff511f600b64",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72f4639-20e9-4838-a91a-bba8c29879b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99afef53-3017-45d1-9261-5e0421ebda18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd0f1fe-86de-4750-8bab-3216ff4f682c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5957df-7c60-407f-aac3-91fcaacf3c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2707c56-6948-4ba4-b655-1fd7ee144fdf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe0a8d9-2fb0-48f1-bb74-efbf2255909b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b65be1-3d25-4e6b-af2d-4230a19ce8a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079b4ac0-e73d-4d3d-a0e0-bbf8e28fa6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74b078c5-a36e-4e22-a92f-d27146d29b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ecb604-ad95-4021-98ca-6673c05eb0a8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d724e22-f5f8-4eb3-baf1-891083e95a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a53016b-5988-4d25-b82d-dc6ce3632a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b57326a-2503-4108-aaf3-896000929f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e80ef6c9-a127-4f78-8578-e44cce2289c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001114cc-17db-4de0-85fa-7fe46b4dac6e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b01e078-ebf9-49e9-887e-45701f771b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ded78323-bd7c-4b8b-9ee1-d3d884f3f8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207a2801-f600-4c71-930e-6406cd5cbc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "391c249f-7a4f-4bd4-a8d8-599a662c9a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282537d5-a3ca-4bba-8769-0fc389ef5945",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f4c077-fdab-4bf0-9c46-ee4c7010d420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a31978-97e4-49b4-bf9a-184989f58a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd54d02-380f-43b5-94d9-1af870b9b01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e277d70c-3f22-425e-92c7-aa617506d2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21542fb7-3360-4c13-b03e-3e0b8a14c3f2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3741546-5da1-4bb0-aed6-6379ccc2423b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84d7cab-9e8e-4777-a40d-b3bbbc497127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614d78e1-4a5b-43ca-9a78-9feb43750f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "95973484-0576-48a2-8b8a-ae9040652015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f8adae-6923-4b68-b666-58ec97c70617",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8520b554-bc96-4e65-97e7-43c0c86123a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9427b10-beae-4bae-8f66-5e0ff75caf21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10facc6-afa8-4a4a-a5f8-18f061755014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2569f077-6396-4053-9af9-66dc3ca260ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9979172-4084-4d77-9c08-2ec31c63390e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdb4e1a-7fb3-4ebd-ad46-30818fd1c8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f13320-3ca1-48e1-afaa-11903347c65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac6637e-3064-45ab-807c-de4267bc359b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "96071fab-48c5-4e21-8cc2-793ca875c809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a7f435-836b-406a-98ec-af94cc189650",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce64d95-57e5-486d-aebd-150cdad77a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666a1af2-784d-4db8-8a15-0a6107138601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c5d8a0-a818-4990-ab29-73f330447134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "43231947-6684-419d-95c9-38060825371f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c418c2-59e1-4ca8-a0c3-d89c19100419",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31292ba8-ece1-4828-8188-23413566c1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c6f942-f424-4dde-8b90-8846488e3bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43153b43-45d7-447a-9304-650af9436c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ecdb6e1a-00a5-4592-b8ce-b0fb017fa694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba944395-8e93-417b-a55d-88d53733cc33",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a22354f-7dff-4ae8-9ea2-49bc680a1382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08e325f-8421-47fa-950d-8cf3fa2848a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4d4b02-0180-4b88-a955-a3f131a4f835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7295953-c547-445c-9ebd-7a1f35d413bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf63131-e9f1-4024-8574-171539607bd3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fda698-b49a-440d-ac00-33d73fc0d3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8f88fc-0426-459f-af34-230573262146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61ea8cd-0fbd-43d2-be97-577c3b4ad33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d5dc1d-f8ea-41d4-a463-48be7d432db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8ce09b-7897-4dc2-81a4-dd6b7cbaa955",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186d5df1-38bc-48b8-9f7a-4df40c5df324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9c9137-e391-4b43-853c-aec35c49365e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83a2bb7-6525-4125-8a3a-7dbeea99cd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "90c0f027-8733-46e7-a9eb-1447a3d3ccc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52eb2e0c-c8d4-437b-8312-414d1f78b68d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff0c462-78d1-4539-a421-84536fbb2525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f41f16-f6d3-4c85-a4bd-4abd5d12c02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d355bf-64c7-4301-94c9-bcadfcfd37fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "663236ff-f7f3-42b8-a793-97fcb3153ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6ede0c-f766-4fca-9f75-73ef3161d028",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00115970-ab82-468e-b108-c26917e8bc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8180fd12-f152-4378-adba-959a7c83c898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2af68df-e28d-4a3a-a764-49c26911ede3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16b0bf03-1e7e-4b26-b1ec-ad34ef9d0554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a02a727-78c6-4a42-8522-c644757447ef",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f7d63a-7d03-4a59-8866-46a9b0965b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72088bf5-b569-4422-af17-e1022e68b0be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a376434-8e4d-4581-a258-d2757d7dd377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09e7b26f-9cf3-47fe-8c23-1ba4869690cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9817bc-230c-4f2b-a771-aef7003d58d4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0968160c-f978-4edf-9024-86e0cba9ca4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80bf155b-b25b-42fa-a075-acb12621732e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f54ca7-2052-41da-9e5c-af44485154b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2502370e-f8ad-4c6a-8b4d-d20985805835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abac258-09fa-4eae-b698-835e73db3314",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053fc574-361f-4de3-8b25-bcc4b4068c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf832f77-b635-4681-98f3-c7a0be13826d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3358d9-7111-460f-93bb-0df6ad2016d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a51677-7a6e-4c7b-99b8-32fbb5458cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5921c39b-583a-42ee-9985-bbf09e4be509",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05a972d-1ee2-429c-a238-5c137e4889e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f288b948-4444-4ff9-8be0-b4c275a25ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b957835d-2858-4d1a-b03f-8e5b4878d4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d184a6e-9183-40ef-a5f5-4423f9f63d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a22fe22-dd9f-4958-b883-ca62c5b60cf9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e383e87-b212-4cdf-b1a7-9fd79e68ee3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2996e96a-7b57-4873-8daa-dbb99c5c3ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad46a358-df8e-400b-b080-e5ba47c615e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3d0f06-e756-415d-a161-ec1a75fabc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed076895-28df-4626-87ec-eaef3f960a6d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24639d86-1dcd-4187-ad9e-5d95001320f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2fb864-6acc-46c6-a497-fa3b285cf5ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab86ad9-d05c-4480-b116-27743dee71e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b33be4de-043d-44ed-a265-5d1d63f6362f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad535074-13a8-48c0-a365-95cd3ede3c2c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97884cf1-dc7f-4332-8aec-ca766f13583b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18aa635-78fb-4b1d-bf02-b6ef656517a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed727d5-7178-4b41-8421-39f3bfcd17ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cdafc6f-52a6-481f-9cd2-6edaa7f3bd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f2d028-a906-422d-8d9b-aa825b8282f6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad62455-40f4-4b6f-913a-75f78347a32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28260d0c-c8e0-4c8d-8e3d-64ff5403e5ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918af2e5-8e5c-439e-9065-522a3d816955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db2d0c0a-867a-4bfd-9d54-6db85bf20e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a214d0-8de6-4bee-9e39-9e814731ce84",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d3b509-6e7b-426e-bd68-d600f79856f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55554973-0dcd-4068-8561-1dda5f891e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a4209b-d24b-49b9-b8d6-beb5316d4839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd83742-e67e-42d0-868e-00b05bf5a42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2cf792-9617-492f-b2e1-ec563bd4b6d8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbf300c-1838-4c75-a708-516c5e8f9482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a04542f-6289-448a-993a-572a5836ec25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342202e2-bec1-40b9-a47d-ddf4eefdcbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "32647846-d2ab-4850-8544-08dcca3991e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6152730-2a29-4fa8-8976-ece5f407c27c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e77ce9-ca48-4349-a28b-34003bdff849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d5dc10-696a-4027-82d6-92f92672e4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54152a8f-bc3c-4b46-bcdf-47845a9f86ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d32d6af-44cd-4c93-b1c4-7ac3de7bd47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8b749c-c750-4388-9967-b5ff2752df92",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335ef008-12fa-41b8-a4de-1e8f5dbb245d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ead2f1f-6a2b-4b54-90b0-092995813458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005f54ef-9bea-408f-a0b9-1861bd2d9cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "69daeda3-8969-4dac-8a7c-f988671297cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fe42f3-6348-4ea4-b1e7-6afe39665483",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da252304-3628-4841-8345-9ad1992fa8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7615d1a7-5d84-4204-8e57-5466e43f2ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d904e42-d0c6-4e9c-a1d3-eb80cf4e8b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f56d085-184a-4b6d-bb25-696877ef2604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fafdbda-e131-4174-8be3-41cac6a89f34",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fe278a-5f0b-4271-b8b6-2bd9dd440268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36044fe3-8c9e-41df-8e47-ae36a554a0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0348aa5-dd3d-40ba-8b5f-5fc9a26b3b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3221f56d-f298-4f81-bf39-320839cd7c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a502b8-762a-45d1-bd44-239c9bf0145e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f2a95e-4ae7-4640-a9f3-7cb7457d5d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac90e59e-b33e-43d8-a3f3-15eeec3f263f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f544800a-9a00-45ac-81e1-6e3fde220c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8df115d3-bc23-42af-b9c8-3a79ee0a3093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d539a82-7873-4bdf-934d-d2f7be5bb0db",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c903b03-2d06-44c6-a591-c8f7beb2145d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95639d8a-cea4-4cfd-b96f-898ca38a722d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc9b3de-8c5e-4f33-b477-72cdac5faac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4af9dc30-de98-4ad0-9f4f-9c79c650f742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb26b8e5-7779-41d0-91b1-b28405d2c74e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76bfc04-963f-407c-ac5e-a747bd45be96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce26ef0-d1a5-416f-945b-ccad78afd0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981c25e6-18d2-41cb-8946-878b5c1ee312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "caa4351a-3a02-4af3-ac6e-bab0ff1ae217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ece3bb-a528-4f1f-8ed9-466765ff724c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b41f44f-52f4-4597-9d55-890580d135d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e883424-e24b-4574-b600-e15aca1b4b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e121a10-c0c9-4aec-854f-8725ffc01c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18a1fc04-db98-46f6-9902-63c014c26f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a53c5a8-c7ba-4a5a-b151-82d8bf2d6aa2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72aaee34-3c30-451b-99f1-53691b34ce05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67330156-0de3-4a22-8265-c23f84baf62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3188b9-7b69-47f2-a7c4-18aa8f8b8b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2592cadc-ec17-4404-9229-3ef248c4ad9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8f4fea-05dd-41c3-a9bc-dda59ca11f16",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639630b4-b96f-4700-a91d-4220a9307c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08036483-c1b2-40ab-a52e-042d5589bdd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da21cbf9-8f5f-430d-b194-5b90fdbac483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fed7edf7-c106-4d74-87e5-19741b1eaf2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e44134-2a9d-4266-835f-bc71db3b382b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bdead0-f504-42c3-a689-7031c8ecd724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4bfe88-3e42-42d7-9a1a-329ee39ab049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd6dddd-9876-4d0d-88b3-d574b8f9fee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc4a8bd-1fcc-4d47-97b3-d4aec0e0b0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2f6003-8fc5-43ca-8118-492bccd6bf78",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a2bfc9-5243-46c7-9f36-3006d3017baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe0a81c-0ddb-4488-9d1d-a20209fd064c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030ecd92-b4a4-4a69-a595-5f91e60419e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf2fd77-697e-4f03-b256-0edd96021f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cb124c-6435-4dd8-ba7b-690569998bfd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259da2c9-2704-4394-b800-84d2b049be8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e92c23-d204-42fb-94c2-22234512a809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edae8b5-972e-4f6c-98e4-577cdf90567b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5f6bb4-8126-46e6-aac5-1aa4c5f0e383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278db912-c03a-43a0-88b2-2f5bed5f5149",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac752a4-a498-4781-8738-e75e98f61e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d32d2d-fa06-4c6d-acbf-c2eed9e17469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ca3c42-8d97-435c-9ae7-1358421d55bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "157d95a1-e0f5-4c03-a478-d01644e00543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3b85c9-7528-4f40-90ab-7de05a26a44f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291fdf4a-880e-463f-8bf4-2c40cbbbf400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25be6d5-d5e1-497a-9442-231a24c64f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8baf0db-25aa-46e0-a1b6-820e4133f18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0abfa49b-cf75-414e-8fd5-44bba3a3386e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cbc39b-3526-4b03-a010-deebff52072d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2500d8-56d4-4b90-a518-96952683e377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dced48b-d357-4ac0-9424-6d0732a8e5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb9f5a8-6d72-4525-8dbb-09ad30da94a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2da96497-db36-4379-8079-95e74b5b896d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0834ce-e6f8-465b-924c-bfdd7da7dc87",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dab2c52-9560-4d51-abe0-d5d5be4e6105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9756f959-c996-458a-8183-6f748c644a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967b349f-beba-425e-b1fb-b513fe5f5db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a364f80d-8e03-4dc2-a949-d0ef73475b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58de2678-a352-4ded-a1f7-15e6748819e0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12996b09-d463-4bf4-8588-f11253d7afa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca51b9c-9b37-47fe-b101-c1ddbd7a4623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2487730-6a7d-4ace-a49f-c59b100281fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb21501-2238-4307-a483-0d59154a9398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5d11a9-b629-4447-9ba5-d3e1e6ab83e0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3153cbc0-830b-4705-8ced-bc0a00270ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d30e5f-55a9-4e46-a4de-07c1ad7c8f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def16157-9822-4725-a340-f4b7004d8cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a064353e-5185-48fa-8d9e-dfc9e2a2cbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1653e9-f1f8-4ad3-8194-10abf08e6f4d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db66aff8-57bd-43fd-8208-55844c47313c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a34d8bfa-4e95-40d7-88de-a058b78fa2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba74bc6e-cd6f-476d-8b0e-d12343a1b0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd17149-7e35-4d28-8b2b-201d5abd3d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6a5f4f-deb9-47f6-8b5c-d696938e5b17",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da2ac8d-9ea4-4d8d-a10a-6ebb7a8df071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5cb9e5-f04e-479b-898a-ee85657e8200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9543a2c7-2888-4719-9b2f-138d18f602d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "434c71fb-2f37-4b40-bb95-223eba63e794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5004de6-2f03-47b6-a5a8-46add85f08a8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096b3e07-eca4-4819-9599-dc3d66e74041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1be33f8-28e0-4246-a3f1-0a2463ed05dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee29955-a513-4229-b774-860dfae09d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ae4ae7-0ca9-4642-8c90-ab2669f68a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a496c53-88f5-4d2c-b802-ff0129eeb8c2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014b7056-5f6f-44dd-b616-1b6d7eddca01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822a5c4b-99ef-49a8-bc7f-b77e84fb511f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d4f1e0-60dd-420a-8e0d-ed89a77a395f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a147c42-879f-4f87-80cb-cc9da78085aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec19e887-7455-4dc0-9824-cb676c6d40fa",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867c7f86-ffbb-44e7-ab4b-6da728e52330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0faf835c-39e9-4914-8897-b97e36e0acdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa989550-3e57-494e-8d58-2ee09e7479fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8de4e89-65b6-4ff5-92fc-60e170a946eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c521ed9d-559f-478a-91ad-10f879b192b2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ac3f30-8c7f-4923-863c-bc255813f409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77aed175-fb71-420b-950a-77eff6aaa240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30975f34-0721-4d1c-92ec-2c80b8e81cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa6b836-f492-4723-bb42-6907da457d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c06ef0-8868-49ce-a491-bd8c669a0095",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0872b228-33ce-41c5-bf05-5210e6e4db9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd340c6-bd8e-417c-ba94-4e670c583066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f3976a-b0af-4598-8953-738760fe2c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eeb3710-0490-40e0-a7b0-ef87fd2d8342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71141a5d-6523-4119-ad79-045787e91e95",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8287f054-4496-4543-8f2e-5d3e3bb2241b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093498bd-330e-4b28-9217-e0c38dba94db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfbb9f8-60cd-438a-87d8-8e9ca103ceea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e02947-5421-4a06-9f4c-a06c00051c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9c6f50-057b-47f1-b281-7543ad4c50d9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6c06c9-f81a-4cad-b16f-cdc97238db97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9bea24d-184a-421e-b619-a1b2467e910b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa60cc1b-6db1-4509-8f6c-e67af220d537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf93ce08-f6b3-421c-8bf1-1fcf12777f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ba1d9e-dd8b-439b-a43f-4db654c6e359",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccacbe99-c0f1-4b23-b62c-1a97576fa50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b7b7fa-d475-430d-87af-9a2872326532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8bf37f-b4b7-4160-b1cb-704886d17b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cba0ca2-d41a-4cf2-953f-b4bfa0424b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0964c7-a57c-4472-87bb-b6878528b440",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602fcb45-c849-4d3f-8b12-c8239264bbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027c87be-4368-4ed2-814f-b9a8d0823043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bd8aba-0716-4e28-b564-2286e994117a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4efc145c-073a-475c-8c1f-743de48248ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986a38ba-6645-42c7-b152-a29263534c13",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62e6bb5-9e17-48ff-a0b9-df75cf63bdef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9314e74-83db-4903-8b26-3360b51445d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3903af68-4348-427b-8901-1de1e85f04c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a531026-e1e9-4244-8a7f-5eb996665993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0c2a96-b6d7-4314-91c3-a231df1323fe",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613c0879-d651-476b-b8f3-0fec925dcc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29ae068-5a47-4dcd-bbbe-16366eac2a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e848e241-7f52-4fd6-895f-696d381eeba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9cf971-c862-4ed9-b1a0-a1578701b152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d1b1e3-319a-46f4-9f38-02a47fecd976",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9f7c29-83ec-4318-bccb-37840109699d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54473bdd-b157-4c59-a5e5-e9d294f1e64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec14427-414e-4ee6-9e5c-e1f4ef11d86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee94e7fc-b676-4dd5-b5fe-d9f735133cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea349b4e-45ae-4927-851f-77444488892b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d728c640-d08d-48b3-a638-c34587c50076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367d1dfb-e77a-471e-8a02-30aa2152aa88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6c8ac4-4f74-4c03-9acc-36782cf9178b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "660d15dc-f0c2-491d-b825-f070a567792a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca75e377-bf86-4bad-9714-1238312a3dfd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d537ee36-0bfa-428d-a55d-ab869188db88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6b10094d-d64c-4537-a305-ecceb804746d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c93ffa-5e3d-460d-a055-b2b6a4051ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "78c7607a-cadf-47db-b20e-a47159619c17"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "78f2415a-e1fd-4ecd-b3e9-bf5c4f02c65f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50b4a52b-5485-4bfb-b4ef-821644fb1a22",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c01580-2111-48c0-b772-8f0656bb922a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b71b82c8-3483-4750-9b5d-1bb6fe7fe8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e59246a-5bd5-4237-a8c6-385532b6d0bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82f320ec-fbf7-4f55-acf9-459a8df4f639"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2458a2b4-d9f4-459d-9d4e-afb313fef40a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30b2abe0-ef92-4b6e-96ae-f105bb9128e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c112e19-3f7f-4ce0-bc49-358cc394c102",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f089839e-44a2-490c-9301-94c3c7743f3e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7884a53e-39c5-4dc0-ada1-69e1a4ef5708",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67a48d35-6be9-4853-b849-9fe916ab37e1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3f7a6af0-32f5-42fb-a003-0ce0d6c1fd98",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66e4892b-0995-4390-82b8-bef3fd6dc338"
                }
              }
            ]
          },
          {
            "id": "b125e633-e602-4cda-a867-dc088ac4d187",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f4d96ed-f248-45f5-8ea9-667bed6d0b41",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6941242-125e-4381-9afb-6901df6e990f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5870ddad-0e44-4625-9b8e-9816c45ba356"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9592166-24f6-4313-8689-4a43415de7e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ac03b508-9994-43e4-b497-dc814e9d1136"
                    }
                  }
                ]
              },
              {
                "id": "197deded-276c-4440-a417-112b75d5ec5b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8874f173-26c3-43de-95e0-054a4d4590eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3e46697-8b17-454d-a311-1f09ec8252eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "babf8d4b-20a9-4816-ac91-f141e80e4b35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "501a8568-add1-44da-8e6d-6bffed4a80e9"
                    }
                  }
                ]
              },
              {
                "id": "0200f68d-8e38-46db-98a8-0721bd4329b9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b5e73e2-c7e5-4023-b16a-d34b2d38d82c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13d7a316-61d8-40f7-b1d8-f8741409b4e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae38f0a9-563e-4ede-b142-3d067b133fc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4104fa3f-bf47-4e88-9a1f-c0db35af2132"
                    }
                  }
                ]
              },
              {
                "id": "26800ef4-0a47-472f-a1f5-bfa6d4035e7c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "baa2399b-5eb5-4678-b34d-3a91deb8b400",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93749802-f9bf-49eb-9b54-80c7f2df7e36"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f568d9bc-cc05-41c9-9620-d9808052756d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "979929a6-4369-4ad3-9e68-50bd9adeb731"
                    }
                  }
                ]
              },
              {
                "id": "4583346a-7b7a-4efe-bf03-892dc444b981",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "042b38bd-2051-43d3-93a1-8e7581c966d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19e1c769-41cb-4865-9518-3f8ff345b6cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "703a6147-d8d8-46e4-9488-3dd657fd2155",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d428cdfa-53e6-4781-9bf7-b00b1d79b41e"
                    }
                  }
                ]
              },
              {
                "id": "9a1dc3a0-effb-404c-a7f7-c21355411cd9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c712fd2c-b656-4a0f-9155-e717fb2857e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b10749d8-31e1-416e-9725-b6ab43a12e08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b1ef906-0491-4ea5-b752-589d714d2f16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7fc1dc75-235c-4b00-a42a-227330599463"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59f9ab16-b1b5-44b3-b631-751bae9ac1f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c6ccfd5-8c09-4113-ac6e-ca4bbba7e881"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0679c992-95e6-4042-af33-1c35fe807e60",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9dc2f512-ca14-48c3-8bc7-840b1a2a365d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6db9e2b-7093-49b2-94e7-a5d63962aa45",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4215b397-ebde-4dc6-9ada-24058aed0807"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e788f70f-1331-48c8-bbd9-52c92474cf65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8738328b-9f78-442f-a0e1-e6d48879f1a1"
            }
          }
        ]
      },
      {
        "id": "75274989-0276-4f92-9fd7-160789f87a9d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "795b1ef1-5483-4478-8d0d-2a9695363916",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a0b6ab3-b5df-48c5-9ac1-1b6ff4df299d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "db153ede-61d7-4d32-98f7-f9b6dd1086b8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1201ad2f-8de8-45f8-9c71-88be12cdbdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362293a0-5ce8-4bd6-b0d6-ccbd78fe2944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455e35e3-0570-4ae9-b846-ab8f774c2b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "555994ce-4c09-449b-900a-07640f8e634e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4b02fd-9cbd-48a3-b265-7f51331097ad",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5741c97c-0662-4a14-84aa-1e5f931a4bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f638193b-7b2c-473b-ad66-573f7ea97c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ade125b-7e12-4586-a20e-324a29a622db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f37da23-e16f-4351-8313-ef153b428057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0927de3-bc14-4cdb-8aa8-412695770da8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b86d810-cba9-49b2-9490-056ce33caabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a34be0be-9815-400f-9db5-e6a0f6bdd072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9e4629-6b5e-4efe-978c-79a641f3c0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6048f34-90b2-464f-9e1e-b3732216979f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b914e554-94f7-44fe-b0a3-609725be645a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c73e5b-faf4-43b3-a48e-3f25119381da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c43a58-a267-47d6-8207-c63a93731900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3a1d44-e0f3-48ce-9d45-e9dad67fcce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4aa5e45-b833-4e9d-beab-ee6285f5efb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f727ac13-6a45-4981-ab02-496588e2428d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f93fd5-13b4-4836-9afb-129eb97af8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5449d695-ebf7-46b9-aba2-1fce41c1e7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430bf256-ef58-44d8-ba98-06b05e04037d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec2250f-1461-4ac7-8655-1599e81be639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267f80ca-963b-49d7-9dda-c068e3b55272",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7eca419-231b-46b0-9fd6-60623721cbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d332287c-1be4-4bb6-bb17-60756f639203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8218deab-4dd1-44d0-9fb4-8a1f89643b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84ae1ab2-a27a-46fc-924a-49b05a178f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdfbe96-b27d-44f3-bc97-64cf235340d4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c3ce94-9ca9-4a21-87e2-9292f713f97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f461d37-1a14-4e1f-bd83-ecc4adb932af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c70c6e-3c5a-4dae-b4ca-aba09a63532d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc20968-163d-44d3-9949-ffbd65af88d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf238ab1-165c-4fd2-967c-cae1e3456275",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52daa7de-0bfd-4e01-aef2-0c6cfb99738c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506e2223-5dac-4362-8536-385fa077a2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f7e789-d753-4dd7-989e-de4c43eea2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2902babf-1459-41fa-b31e-f3de15f15611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef5852a-d695-41ac-9999-0e23135ef844",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37dbf767-f3cd-4214-a02d-c5641c99e895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c16fd0-05df-479d-88ba-e1d53cd0781e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c71be4c-677a-44dc-981e-8c1421c44689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c93c2cdc-d91e-43fe-ae5e-52bff30108b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa0c8a5-a719-4082-b8cf-406b5e0d90e1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6b6c3d-4cd7-4d43-b820-c956a5916279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424764ef-5d50-4d00-b36c-62e380e93318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9320f786-4c4b-442a-afab-4b3008613bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6df3ecd9-874a-4f48-8bd8-7c0043ebffb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa905c03-bb3f-4547-9f9c-ece6eb0ca5fa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6c2d3e-628d-46b3-b1ea-769af42873bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a29128a-84d7-492d-a967-c3db8237e1d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57bea71-ac45-494d-b0b2-9c3aa4e7fb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "245fcbc5-e0ec-483b-99a8-38203ab4d1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffaa780-83a7-49f8-a3b3-c0753848b801",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e78dc1-f780-419b-b2ef-b36335eca87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89087e53-54d5-477f-b595-dce113248bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164e0ff2-5136-4c6b-aecb-d08aacf6d43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2dab4334-be61-4417-a08f-d4218a40a0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960dbdae-be61-4878-9e94-17a9392e108e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b63834-f24a-42fd-bdd8-dd4465bf123f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ea3a8f-0266-4fe6-8325-dde1307a58be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bbd6fe-7a7c-4b16-b484-ae760b54ea99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20e6aa2c-255c-46dc-a49d-8090c0d2fa5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6adb6ea-5121-4172-86d7-105f1d7283aa",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a967dd-3b35-4d7c-9938-5ea17afa896c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2f1f16-ec22-49a7-9202-c8a55efe8428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ff3cb3-87bf-41f1-b5e7-37f5339108f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "14ff8cd9-b8cf-4b99-a6d5-0be1a640fa32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fbae1a-f446-4c61-9298-aedccb041e19",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b716800-426a-4aaa-8fd3-df11c23e6986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ebf2be-a488-4a5a-b732-e2fb6e071ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a61e5b3-c660-42d8-82b6-c46bec810cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a97c9b4-a4f4-43b6-913c-a41105763cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd10c1f-cd94-4df0-8836-caa66ecad320",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91266333-171a-49f6-8017-5dcc657ce010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccdfa6aa-9eb8-4da0-9210-ecec457e16f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d46e2e-0288-466c-acc4-52cec0146c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3190f7-4e50-4060-9411-d9bd99a07e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e36e945-adf0-4ba8-b8d4-a3bf75dad67e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb69b42-d77b-44e5-9cc5-cbbf3ff34d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7f0631-15ca-4610-b9b5-0b987e28d43c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4187c1-994f-4384-81d0-886f2698d9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d5bee1-eb1e-4c55-b414-ace05261908b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86886e8f-ac62-4957-9a4b-8f51cc48f816",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561fe31e-92f2-46bb-b2be-d1b20403ac69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7251329-cb02-401f-aaba-ab6d6d935cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b229cdb-ef21-43ee-8093-66a06363a720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5fb2377-bdb7-4069-905c-ee5029368d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7ea176-169b-4cfb-980f-ca89bbb1678e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646399c7-4463-458b-8843-a790b855ad99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b141c7-06df-43e0-9237-6bd05b42ecbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d82021e-cbb2-4216-8b04-7e1bb0360969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1fc2e7f-ead7-42d5-b4a1-1b6afa665f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbef5942-6cf8-4208-a0d7-26cd5c3a4f07",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be3a860-1070-4f42-b192-9357d3338423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1067da40-8d16-459d-834d-4a14aa3b2a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afef6bb5-cd4c-4306-a816-9dd1eed7d6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d3b5a3d-bce9-4bdd-8f89-578fe361b22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8e4c74-06e4-40b8-880b-a6f643cc5d23",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2d04df-d1c9-42e2-b26c-281c851bd0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ed91b9-68d4-4e95-9768-e084af0abd5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcae43dd-718f-47ec-9677-8a870ba8a05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be12b259-9869-4e6a-a9db-13103ab41d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a911a99-b552-4d72-b5ee-559616a2aa2a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b03ea2-c68c-4cb4-949a-bbfc4144550a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0a06a2-6f49-4882-bd5a-b9ac1f7e3746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a92cfb-d073-4c07-b343-ccd3f9b97631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09249799-2664-47e1-ade7-98937d1eae4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de87841-0d15-4027-8c2a-885f1f1c6a79",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e40b8b4-6a48-41dd-b0fb-eca96d9bba82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a65be8-abe0-42f7-bfbb-e71cffc501b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4263a0-0004-4f97-9fde-bfb755bcfdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f443e1e8-a8ff-44d1-b1d0-c5a803ddd0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72330b1a-cfaa-4d3f-b0b6-161b1db72ac6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "241ebbd8-7455-4adb-bee3-cfa306863ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eaf4992-5ab1-40d4-855f-3ac5750ebf1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78065979-4e53-4417-a12a-804d7c370bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff2f69c-6840-4a84-bfe9-68683bcb99bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294cba0b-cd60-4cf4-bc18-faab6a5b6b30",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e0e064-747a-4447-910d-4588b39594b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13fc9ae0-ff24-49b0-83c1-3f1f1e8eca9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74659f3b-2344-4562-9515-2dcfa833ad89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d62ae86-9b85-4988-a407-d2388ff8ea7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54e6376-4d5b-4efe-89e5-6e447bea5d7d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8369f4-9b96-4969-bad2-b8bac751f3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d30bd39-5135-402b-a368-dd5a49d57648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d1c5c1-c751-44a1-95f6-808db67197b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3280b877-31b1-488b-b75a-3160ba2a8d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6e0343-ccda-40c6-b70e-f3f06cda9bf4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff6086e-b4c4-4701-84b4-16636b178dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8834cea1-346d-4b48-bb37-f171cb1262dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce82616-3e0c-46c4-bf8b-d29adbdabe13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e792291-910d-420c-b73e-bfed96d185dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7e9941-e7cf-4ca8-9f6d-a8a3086aec79",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54fbeaf-bd68-4f28-a767-380aa832ec0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44110f96-82be-40f0-b7ee-75fe50a22f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e65755d-5252-4850-ba3c-f42b9c21d289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f411d1ab-7a99-4f31-ab57-980ee131e896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b562626-c8e7-4d10-92af-318f5d2bf32b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51677d7f-a470-4ed2-9ede-6594f683ff55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd8bf92-e853-4eb9-9509-3678544a3221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cf6e76-b8d4-4069-9fed-83fbb5eab8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7fee23b-68bc-40f1-9442-cb6320a40b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1daf49f3-facc-4916-85c5-84d250652a76",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ab9203-58b9-411f-8247-5a74badf946b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28ab840-75a1-4e1b-9952-8ba9989ee7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb54d63e-9b75-462e-af01-bce33e132f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cfb7f1a-5073-4595-afc6-93bc81a85bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1233b719-0c67-4df2-9ec3-49f1f57e0cdd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d61d2f9-3f8f-4357-9ff2-6166539610b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a87955-bf21-48c4-b4f9-daa4fc1e709e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8564899f-585d-4c77-93d6-18b2e74a1d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af2a121c-431d-49e2-a980-1f7d268d43ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3cdef9-94bc-40f8-9abd-8a77f7b094b5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b6b0ff-b020-49a0-9ee0-a738a44043c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1085482-de70-437c-ae2a-d39210992dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072ab975-b516-4acd-b206-3250f83d649c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc7ff89-fc92-4a40-a2dd-ec91cd52d419"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d5fc2943-4d72-4d12-bbc8-f8d0135b6dbf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ebcfea9-abd8-4015-b022-7b79cb2de7d1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913e7917-e1e9-42ab-95ce-9687e5d3c9cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd05f62-b009-4fc6-b97a-510d4031bbf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1bb415-bb70-430d-8155-28b1df09e27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed928fed-883a-433c-a7d3-a14618ba6c20"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e4d2066-039e-400a-b0a8-59060ff8172d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c68a0665-25c5-4dab-a531-ab2d347ea5cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6750d99-7168-4022-9180-ff5e0b34fa6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e39d2d45-18e8-490a-8450-d1106265912a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e36f73a-8fda-4b59-a5dd-c8daf0984c63",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "94e4546d-5347-4366-8735-ed51dafa156a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2b6052c-fb19-4e6c-80aa-e82041d62d8d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6c27714-8208-4ecf-aa59-d23c09e7effb"
            }
          }
        ]
      },
      {
        "id": "7dccc417-8ae8-413d-b063-2f150193ae21",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2d25c09d-c8fc-48d5-8395-47d51b8162e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23301834-eebd-40a1-9152-baf2db265e33",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2e45ba40-77ac-4acc-9b17-cb3d91cc3b1e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9fda63-5c68-4d86-8e8b-6724277e95ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b20d3f4-4599-4843-9330-cb2666ddd5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df188d3-a21a-4ae1-9695-1aa96fb909e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f01796-b7b8-4e98-aff8-3230eabf9ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5065a776-5740-46c0-90fa-3d2eae6d0d62",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cff331-c6e5-4980-baf4-7535d54aa2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0363472-f3c3-42b3-9333-a9e5c22c1bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e75e6d-4673-4097-8215-54e49ba160b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb039b2-cd9b-470a-bcc8-fcdc994e8a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c51af9-4455-45da-b2d5-12bce7b660e6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248e971b-ae2c-4bc8-947a-bd250f1e1b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b30a2e-45f6-4cec-b0d9-e60c3139f36c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12468a62-10df-40e3-a7ee-89024f50a4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95e73652-fc93-4d4a-bd40-e9e4bfd9f56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bed661-ec91-475b-b52f-adc42d7b4b39",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be28cfe-a5ac-4d65-b397-5644158cafcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c0ccdc-5877-4326-b887-c6ea12595fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9fbc34-b29a-423a-9b25-0c3f2d687088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce502689-ffa9-4450-a4e5-0b8d5b209dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c80c0b-694e-473b-aba8-785d3c7ba46a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fad3ec4-3e18-4b9e-97ad-a6f87512b1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aafe06cd-b9b9-4517-a10c-427a56358f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8ed5f6-e827-4c36-845e-6ea8d3c73fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dfc549a-a901-430d-a25c-ebb91ff30d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31724e0-37bd-4a30-8250-a8068acb0a03",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc52d311-34c6-4fb1-9976-a1c35e67ac8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f369a0-4885-497a-99fe-6dd1797afde2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fc5894-39e4-4bcc-86ff-4143c569357b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c97e4b61-ce4c-4fd0-bf32-f403ef45e393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2f102b-eb14-4fb7-8ef7-2712c535e9cd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96845e5-998a-40a4-8014-d8980e9b72f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d51cf240-3464-4fcc-989b-4bc42cb1153c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff0dbd0-59e5-4778-a652-23fdb8650b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8632b9e6-ee46-475a-82b4-2c497d18d776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70334ab1-8cd1-4b56-8bf7-718aefd1fab1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565b724f-ad2f-4f87-8c33-86755f51fe32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6d393b-b1d1-4289-9b3c-04151d077f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058c4750-c38c-437e-b1cf-31a8f78b519b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceda674c-0503-46aa-bdf8-ce3c0d8ad9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0bacde-e0f9-4dc8-9e65-acd27f93e290",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed2ba7b-e20e-4df3-8af7-255c2c51b22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8122bc-42e6-4b56-bd6b-436656542136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffa42cf-eef1-4e9f-b100-cd4f1ce971ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c38bac0-9040-4f47-b4ca-81289b5aeb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15470066-f5ad-46f2-9bc5-e63d8a413849",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf6ae2c-82e9-4648-8eac-2a147600c571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d031a521-d3d6-48be-94ea-d50e4c03a4a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b536dea-7072-4f20-bdf1-641a7defb6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f75e9a7-5f0b-4f94-971d-2ce6b56f57bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e06a29f-fbe3-4187-a59f-96c018bb9f18",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e5aa3b-6f3f-4f1f-a766-70478a1cc2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4954ba-1d04-4084-b5c8-07b1723a5fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beccfe4b-034a-457f-b9ab-c8ddc0a73abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb31901-8ba1-49c9-ace6-09764d5194f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6f2479-cd3c-4d57-a560-2ef4cb62f887",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d97614-798d-4b0f-be80-0c90cac18ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fd2e4f-58dc-4d27-9aea-e3aa7dbd6a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d7de52-4755-4cb9-9e89-de0cfecfb92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb59832-5851-4e7f-b9fd-abb214fa5a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b04ad2-074f-4235-9a3a-40bfbb1ea44e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cc9fb3-60f7-4bd9-b93d-80a951cbbb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db13815b-4259-472f-82bb-4327d528ad5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bffb94-ee02-40ef-836c-a22e01e5113b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "372abf23-5d4c-42ac-aa1d-4591c454680c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8dd91a-f5b8-42f5-8cd5-e304fd1a4f5c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6507c89-3f98-4c15-9e04-8829504b22af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ce4604-91ed-4da9-8880-5c186b8dce12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1bcc3f-fffd-44d3-85a3-04d6b0822224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7183907f-c664-4c51-8be6-d22d9576ce29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd37f37d-71ac-4b98-a287-abd6ac7d5ffd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7049e03b-52b1-4071-9fa8-a48e1dc25d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b821faa-99bc-4d09-9bc9-1f63e484857a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515e6df8-892a-48f7-acd5-a4f4782fb0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bed78df-0073-44b2-9014-0c36c02c1a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8e6104-03de-4709-955e-26e2a4c4a708",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920c9ecb-92b9-4956-9af5-a353a96b8cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31f0f79-ba0a-4c39-af7c-f03069d38ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ada8bb-a8ca-45c1-984f-369af039a5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9cc7ae-8806-44ce-9527-d64d19250b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e763ed-722e-4f1a-a3d1-6e42d4bdacb9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16906c1a-7079-473b-8a3b-a2f85f50b888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308f2a1a-1d6b-4673-b6c3-7e4485163024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd4a99e-49a4-4e58-8faa-8130534b3c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "84e2f3f6-7d38-42c4-b0c3-06d3298eca6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d44d3b-74fc-496a-b4fb-361d83cfcff3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a999856-0a2e-417c-8039-e69840212e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240f12e4-f5ca-4682-9d99-78407330cb95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72950544-2f3f-4c07-b61f-6706820a35c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f710462-a5f1-4064-9272-2834296a403a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd65513-6cec-4f92-be8d-45c1213ad013",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8482b1bc-a9da-4b34-beba-2012bbf09be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93aca2cf-1adb-4806-8359-74a7a4bbf37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de063cc-b204-487b-811d-9fa99b082326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "478116e4-ba3e-4939-9a5e-db82a7c9ec22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e1b996-4c2c-4315-87c1-9cd6fd7e87d9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04224c50-728f-431f-a741-df495ae6f156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95eae631-d469-4522-a4c7-4898ad6f02bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf11bda-7e7f-441e-9bcb-f550cfeda0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40c9299c-dd3d-4d7d-8121-4602db1102de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13444569-c43f-4fb0-8bf1-0a84e95825a6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18105c45-4ab4-4c77-81ea-1f9e27c26701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce37125d-25e2-4113-9f5f-6b7967118807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9755d2d9-b4fa-40d7-808b-cbc2ed92acb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05332c10-0fba-40c4-8331-1d56df73948a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de25c704-42fd-4e9c-b84d-5a72f31161fe",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bd062e-0815-4cb9-aef1-a3a73f984637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e55f1f-a1f0-4f6e-8f08-1f9b07526459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370475b6-d651-4f78-8398-00176351e576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "364317c4-0780-434a-9255-1dde3f788782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad82c762-84c2-464a-ae1e-87b94b8cbb38",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51c9a56-571a-4e1f-9615-4dde528bb36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02852fc5-8062-4a34-925f-243ca242af2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde35392-296d-4d32-88f9-592e70dd66fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fae42c3f-c349-4e78-896f-0511f3a9d463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a33662-84e0-4065-9ec9-4695675ee9db",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7370a28-e498-4f56-ac1f-95dbd3259681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3fb020-b810-4318-b6bf-145241a2b93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15badd5b-6be4-4764-9e01-c86d0cadc657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "810d4974-8121-4a8c-ab59-2b1a3311cd2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763caee1-7969-416a-8385-f1c1d55f1b53",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6849d8d6-1744-497f-af0f-213c8e984a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a04cdb-7d67-4e05-aa19-5b02b76dc375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b03ed3-78c7-4c70-9024-2e6d365e9d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "226cffb1-e4aa-4d22-aa6b-d85f4c5707eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb391fa5-512b-4ca5-994e-dda28307b7b1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b25435-d9ac-4e7e-826a-ab5accf57c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4f34b9-d2e1-4eef-9168-0576a507f6b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f3d11a-fe24-4482-8e0a-5c06d9b9d421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "471878bf-89b5-45d2-aa65-29e8ec442eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378ef6a0-0015-4b64-ae68-092dec7e43dd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115163fe-c2ee-42dd-9df6-19f4e96f9d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0aa326-de7d-4ab0-b86b-5f8b3e377c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a0adff-9298-497e-8da6-dad76596212d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf603f6-c0e3-4174-9fad-d3a21eeb70bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157a8ae9-31b5-46d2-abbd-28d1b4c01038",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a3982c-a534-44cf-8295-6fe5e3b33a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5735089-3034-4e1e-87dc-a9eda7d92b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca47fc1-af41-44a8-a60b-922bbc59945f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8207665d-14d6-43e7-93ef-be6955cf3740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc7876c-8594-44e7-9936-a6439f73ea25",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534e09da-eb8a-48c3-9c43-59dc14d69c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9086bd0a-cea7-4c63-a3fd-2993eb64134f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0042626-31ba-4137-8a89-d77cbae2b415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e058b565-cf26-4635-b8b8-9d2c4b57f651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a2cbd7-3b54-4e25-973d-2f07dc8e8dc0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bafd20c-e5d0-4ef9-a4bb-b170252ad35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e36120-02f4-4b5c-b067-1e39b839a01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9678f025-8aa0-4cda-bd26-217e3704cbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2936025-3a26-49ef-9351-68352fe7f07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1249a934-80ac-4b71-94e0-38c32c7e9375",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3e3b53-cd70-4e8b-81b4-939b2edb348d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3941b1-1337-486d-9b5c-3d63ff84fddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befd9954-e255-47b2-b942-0cc911dfe252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf44d3a-0769-42b6-9415-83bad5c1f4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df68b84d-3df4-445c-92c6-1de8d9409a72",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c5a0ae-c281-43b9-aa69-b1105d56a1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0e5320-5bbb-4163-91db-cd72bc86b044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cdf758-8b47-426a-a451-c00cd36ab985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "940f59a3-55f1-4cc7-a8f0-cbed628a905d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c392fe98-6909-4d3b-9b07-50cacb71ae2d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcc6cda-d067-484f-89bb-1da3b2b2db59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc704cb-3520-4fc4-94e5-88f541b6edd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3849c475-ce27-449b-b05d-999840860672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5f1bb7-c9f9-499a-8b83-6288a63fce8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd23e322-57e6-445c-9586-5627ae6be602",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415649e2-ab9c-4f7f-841b-fed889c6eedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0cb642-57c8-469d-9612-76d519c8a87f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cfa5f3-1573-4660-8a31-7e8d07d5da0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "498f3fc3-55eb-4bbe-b48b-412b8e0806a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc4ce8c-db88-4584-ad18-18ef704bbe9a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49871672-d9a1-4836-a835-016aa518245b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce94cf11-8e09-4a34-b2dc-497f5e835623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a174494-a52d-4f73-a65d-9d6561526d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "845881c9-edd3-48c4-9bbf-768f1349aa71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbd120c-d29f-47a8-8a91-d8b73102ef89",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f7b7ef-fb15-4739-ae88-ef690518a876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0fc62d-dafb-4a0e-8da5-eee53daea3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b32cebd-f8c1-4630-b85c-cb084a2121df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca891635-df2e-4463-9af8-3d24884dd923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4795dcc9-5cbf-4cde-814b-2d4ef43ceadb",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a9f2bd-1db5-49ce-9fd0-f830e5ad4d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181f4ec1-945d-425d-8d4c-1da5e8bbdb73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b018632e-6201-4ce3-8dec-2889caf5c299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36809415-a98b-4548-a17a-3e570507f3cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "342a4182-e367-42fa-9d63-c61ff535e5ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f486199-a7e3-4786-8513-4383d2954f13",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600805c4-05b6-4b2d-b4e9-55ca514f2d95",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "90e8a467-b593-4a8f-8c1a-32d3957445a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ddaaeb-7fdf-445c-a24d-904d0052b960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ca60326-7891-42e5-89c5-8abc3d9c19d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "130b5d28-f64c-4187-a106-5e3fb1552755",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba49d738-5917-4568-8750-3eaaa876a0a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68621661-e3ee-4e7e-964c-731f4dde4b73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4801f0b-3a5c-40dd-ae12-c4f75cd992f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2ffe06e-4251-4243-bd7c-f460b2e534e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d19b1850-53ca-4341-8b72-15c9baf26456"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87b0381f-45d2-4c00-b8e4-f54e478e3077",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb883df1-e0d7-4efd-a1dd-55bc760f33da"
            }
          }
        ]
      },
      {
        "id": "dbc027c5-9ab5-471c-a5ed-95812b305a7a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f6818bee-ee2c-4a92-899e-e445a2b90def",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99d19739-e099-4e15-bdf9-6e4d6942414a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "940a3cea-a110-4a73-b7c5-9eb42d0cd046",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f00885-44ab-477f-aae7-58b1cc459a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae706c0d-712e-4333-bcca-f9eb241a89ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f0f521-4c49-4b85-a585-16daeb46c14e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8fb229-ef05-4372-836a-0ed87940157d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b274b17-c634-446e-b510-f6131f09e086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10752335-5072-4e83-969c-b23feb3f5cbf",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfcedfe-582b-4256-9013-817a3b097cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1a7fbe-1e02-444a-a307-78c4a547432d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebaf3390-0e73-4829-9ac0-fad923b0a73a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2bcb5e-a5f7-4fb1-9ecf-1658cb443a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d793d9ef-1fb1-4008-acc4-33ce7a4248d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6cd14e-f720-45ba-adbb-34c21f83b27f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530d74cc-90f3-430d-b21f-c0c63f28db32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ea6825-617b-465d-9287-684ac2023936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844865f6-a9c3-41f8-b3d7-3fd253ab5769",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0583623-1fa1-4981-a06a-64f9f5b9f105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014b0a74-99fd-42ac-91dd-9541b1a13ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938370ec-acf9-41fe-9e7d-b5cd595bbade",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308c47ee-2ea8-4c23-9fd8-de72ee5a470e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba1ba00-4f1f-4f77-a044-569432caf919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec258b47-2d63-44d4-ab86-817059d71d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929d17fa-17f4-44de-8300-ff411543f51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c479bed5-598b-4565-bef3-24009bbcc463",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb22662e-55b8-4efc-a4cc-2ebdf1eb1f2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a21ffffe-52b8-4c60-8ed5-99dac88ee3e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32ba8e8-a5d5-4b53-b3d8-951f3c644658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9211cf-6a33-4d03-906a-f1d520725e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77939e0-b7c3-475d-88dc-061fd83b7824",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f77d538-1b2e-4316-ba96-46cb526660f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3df4c09-73d5-4bca-bd50-10c6f48da36a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24573d8a-3d01-4670-9b62-2e8f5b9abbcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e781e0b3-f99c-447b-bdcb-a8eeda4ece93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f6c590-4670-497b-bc2c-a9718a8cbbb5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9acdb8-ab44-4e23-a1c8-f80736ba9216",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22c02923-9cfe-4d55-a998-e692292521b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd9ab44-4503-402d-b4ab-989a28d85a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ca8d36-e213-4621-8784-f14f236d9b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff98187-6d51-4003-bf90-a79560237a7c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0535649b-4334-4416-9eab-a075c2cd9921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce351010-35f7-469b-be79-3c8408208c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6e14f5-0082-42c3-a94e-0a563c433b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7e27e3-6f3f-4dcd-8f94-9e01594b1c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a02dc3-abb1-445e-bd2a-bc240d00fc20",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9dde0b-af28-4b50-9370-1549c0067293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e45d0c66-9bac-4de0-833b-80f39e6f99dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea730e2-95d1-4e61-9600-dd822dcf4201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959ee8a6-0465-442c-97ce-ca8d144ce135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed2facd-48c9-46ba-9011-40064a32a259",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb11afe-57c7-46c3-9c52-ce376b1f69c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4eb558e-8318-4bd2-ad45-e802c9e03c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59b8d5c-1398-466e-a58e-c57cd8b69ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8317d5a7-3fc1-42e8-bc0b-ec40a922e3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef60c983-5d08-48ff-9d16-befa79c158e8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6f2827-67d9-4935-bac7-36f096647a63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc5702ea-f10f-49d9-b8cd-a7f8713d8e4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71142e4f-aeae-4875-a41e-d5629874fb63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6ccbab-91d2-4a62-8a25-eab0a93b19eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a26894-64d6-421d-9f6e-8cccb6347f7c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9262ec7-dcb5-49de-b46d-90596b87a066",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf1a5d07-3bca-4de0-ab21-a6e1bef9a963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faab45a0-f627-4b6c-8985-67a94185f62e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f768a9-27d5-47c2-935a-078986ba2bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6028960c-de48-4f23-a41d-7c35a2e2fb1f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4afe56-b6a1-41c3-9983-d7e8c4ab6cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3846ecfa-e0fc-421d-bd2c-8e17feeca8e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f02aa0a-edc5-4be1-a128-fc3a55514639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb6d818-d486-4f1b-a5c5-f7d6711254e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4247800d-a14e-4efb-8876-c806220a5196",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a51f800-45ab-4472-956f-f2e79f98e3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbafc0bf-0daa-49a7-8c09-23c64c13801f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae895b9-242d-4c3c-a1e2-bcaac1dc56d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6253371-ffc8-414f-ac81-ff0beba0d86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b360cef-951b-4aba-af67-350149884630",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34632edf-d7f5-4747-b549-b001aab263f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cffbf71-7796-49bb-a142-23ffaa1e4491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ea03f7-7650-4f0d-ac0f-c9f9e156de61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86161b0b-401b-4555-aac8-4af31bf4cc5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8166f09d-87f1-474f-b06a-726c3c1a1a17",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d563f0-8fbb-4778-8e9a-c128c24874ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aed1868-a06e-4fda-afe4-6bb244f865cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81afdcc-fc8e-4685-bae4-031794f22d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20ee6b6-30b8-4bb4-9336-95a364f5e081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0084bf35-4181-421c-9a9e-644af8b49a29",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f21bfd-212e-4365-aed8-dbcf8eb09e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24449404-1384-4bbd-9c59-5cb5e36915a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d302708f-3107-4217-9795-510a899ae2e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61649d05-ae99-42fc-94eb-fd5c76a41c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72f71f7-17cd-4012-9070-4efa69f79303",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4ae56c-e224-4ad1-91bd-81af856f401a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "626ca893-54f6-4e89-8779-9a2ad49c002d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9314591a-e83c-4ec9-9696-599ff0370dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede88a4f-29e3-4ae4-9805-d2245ffa82ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e099d048-f977-4207-b98a-9a72b356ec32",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab29ce6-e9af-4d4d-bd89-ba3319388d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58addafa-819a-4d9a-8703-dc2cc88e8192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f89b08-b833-4281-9df4-00e64efae4d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9262f3b5-ecf4-4c9c-8403-dbb77d69ebb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e555f5-fba7-4fe4-b2cf-1720d091ece9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5732ed92-681b-484d-bcda-b4a7c2b54b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42fad78-c5c5-4e93-87c8-1f6c5a84970f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e07564-62c5-4196-9c34-6ce05451ff9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bdd2e7-3c13-41d7-a09f-ff5c94f02b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b947893-6b6c-4a8b-b129-23aac4da240e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4186ac1-4c2f-4919-b4ad-43cc2d1dab46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95f2450e-27bf-4b2f-a8a5-98dc8723c736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "367d47ef-a5c0-47b7-9700-0225fcd39a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb263919-35c2-418f-88e2-8a04555fdebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1afa19-57f3-4169-87de-616c92b6facc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54633333-894a-417f-b8f8-dd0e69e963f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "011e764a-188e-49fa-9aaa-9eb935af5b0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a668c61-5c61-419c-98eb-286ff7a4a2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4fb0a0-7904-412d-9b27-17b3fbd7ce67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317fa94c-6069-4d4a-842c-3e1b85c13ef4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626f30cc-0099-429c-b7af-9d9efd048b2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9da722fb-9a0e-499f-8bc8-d74606d9b327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b176b8e-b1a0-400f-a3c3-a06368df796b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528eaf21-f676-49ba-a184-1273ca24df22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b595a9cd-fe5f-4fa3-a116-f95e3b311f94",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07ee9bd-eafe-41ae-9d94-abd10672f0ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a8e98a4-d1c4-4b97-b88c-2cdd51977853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc61471c-7e6b-4d7c-8643-63aca52b377d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d06550fa-ddd3-4b27-ae3c-cec517c39df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7b5d11-78fa-4df7-8160-123a29cfe1af",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271fc37d-baa5-4a28-8394-c729061830f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05354fa-8e4b-4351-9206-38a1f786845e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54109a7f-672a-46f3-acf0-b513ca823c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b1a948-5c58-4231-8e8b-09345aa32585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b939f5-e124-436c-99a4-301c062d8b0a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722136cf-2744-4b1e-b57f-b5ed4ac8e547",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "298f9004-fd83-4b51-9bd3-bd4f9dcc1130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fe1525-067d-49d2-a2dd-c38fb20e38e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3805ae0d-099d-42da-afb8-83bd3c2c93cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5d1242-3d40-41c2-b60b-09694a54d04a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c821779-3932-48a2-aca7-eb9e90a18c3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41392543-0625-4ef0-866d-cf686b99a10a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdba210-9ec2-471d-8cd7-25c1744f5934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bcade3-91b9-4e29-a5bc-1a89f114de83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70dd969b-2013-41a8-b0ff-2efc8809a51d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064fdd9a-f609-4c76-8614-3a3ca4ec24f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4b8624a-92a2-48d9-8e44-27b2c39a3e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45287ba8-4463-45c0-9b8d-6353c0c1545b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea539a8-dd71-4847-9811-ee418c3c3630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596132cd-f15d-437c-957f-a6c8ca9d0629",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7876ee3c-e475-48dd-b5a7-daea14a9f2b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8103049-ceee-408d-a341-e55301066bf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917722ff-4c51-4e9c-9b3d-4be30f03c14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f17963-bbe5-45a7-a042-d07634d50296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ae727c-adb0-4cc0-a86c-36b7d00b12c9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efebecb-c1ea-4e5b-ab74-dd8f4b539568",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81f8e79e-a2a4-409e-86da-a81524084d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "186b8ca1-9094-4a56-a1f8-aaec86ec9706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2caa57f2-c433-4d93-9dca-0407a2b2fdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962d5b6f-b589-4a02-af9a-c1e4546e3d0d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a754016-cf73-4fa0-a8b5-40055e026d62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cded1b6b-6d47-4f74-85ac-510c9f45856f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24790db-013e-4684-912a-592972a668e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e189c1e2-5582-4fcd-88af-40da8baf7722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa87a7f-a64e-4acb-90dd-74209315d588",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59def5f2-5c96-46d1-a430-4f5098dabf1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6807a234-52c3-4267-9eda-6f817baf97ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fffae96-bbdc-4aad-a19f-02a53bd1bae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5db3bd9-7741-4659-99aa-de80c63912b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc97a44e-4577-4c08-9486-8c68a0e6029e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591f0c66-cf0b-4f63-9415-dd05203b2639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581b6937-41cf-4cb7-a1b0-b188de1ad9b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba4bf0a-ae13-4b0b-9620-8265a75d6e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868fa536-dfa2-4455-bcab-52c3551940db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c9b863-2fe3-46e2-8ded-b221d4806b78",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a7bb44-1ea5-41a0-bb2d-76a09d33e82a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efcca13c-68e0-44cc-88e0-cb027bcb8473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bd9b27-a383-42a8-a2f8-00b01eeb988b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94cf9cbb-3df7-4001-bef4-88679fed7382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc35373-0de0-4c8c-a6da-0c1ef999e989",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef738357-091e-458e-8c9e-fa8f28797274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e04c338-e07b-47ae-ac14-b37c76975795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fee214d-1132-4e5e-89fc-6f24fd052cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e4ca60-616f-44ba-9a0f-8ac60d6f26b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a6bf6b-9044-4d09-a3a7-9ed08e3c1ddb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064d2edd-9296-4b62-a8a2-317d8f6ec21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5b1fb3-3b48-4787-97de-d3e067a215e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "348bbdc9-7d00-4b69-a90e-f8ebd59b087a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7277269a-7d89-4087-84e3-44b8c3277465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46819a70-8c2d-4beb-a72c-d025cf26874d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b6d5a7-8411-4b26-83f8-ca80048824b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab9e8bb-2b14-4792-8950-f30100737a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe354cc-1bb0-4f19-bb98-76ef3feeb84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a48d6e-56dd-4e81-8428-5d155cff200b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344af227-3a0c-4922-b189-3e7ff8626b05",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cc6650-55e7-40ae-8800-428e36a906ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1a8006-53fa-44bf-bd7b-92e2e05fa604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b5aeb6-2b18-48cc-885b-efa502fbf33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36bcc818-add1-4c43-a238-0e5c9ad5d644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76181fcb-d0f5-4662-84b1-3ff046d8db06",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db52db5-3671-4761-8a77-9a5d0ed9bb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481e2823-a8e3-4b93-aa88-0aaad7e7b22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efcf41e-c3cf-45a4-9ac6-765b583f0366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2931213-e1d8-4b92-a03e-29611c4dd1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac62b26-2aec-4a3a-8b57-f4033942aac4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b899e1-8249-4c3e-8f1a-353ed6bf22e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59fcf77f-1aa8-4736-9b77-734c11dd2a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dad40c2-a4c4-4cbe-9848-e447f3c43ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f67b59a-4ea9-462b-9880-f5c776a5bdcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c206f0-f1b3-486a-9784-6126b69ccded",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50359ef-54dd-4641-a36d-dc598028a190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d55381-d6f9-485e-99f0-7cf102e8c649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4383168c-5855-479b-aa80-6b9e30db48c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1a7694-2fad-4a0d-a559-d5a5fa5b2b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00974822-9a63-4aa6-8ef6-add73e45e117",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8790eaf3-f35e-4b6a-abfb-b059fa21fcdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1bac6e-dcc4-4738-b464-10bd4a94362e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ad40aa-e119-4dbb-955f-feecb1b3c991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c33ba38-64db-41d5-b2d2-4abe7a999015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff78849-e63b-4c80-b0e0-42f2627c9478",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca373c69-7a2f-4e22-a612-9841347dd029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c938f73-31da-4463-bceb-66f4a0f1e755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b34585-8ede-4d85-bcb0-850eedb07b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1bc2b16-062c-4f96-aae1-0f975106ec2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67752aa7-0f80-470f-b1d9-a43185da01ae",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cac1a45-1590-4f63-aabd-6ce7944958d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87ec002-5ca7-4766-8182-8b48dc5e513d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c094bdb-a6d8-48bb-becb-778411c751fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17291150-4731-48f3-aa50-872b91de6324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bf0273-5dda-4daa-acfe-0913b5190ace",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43fa503-c1a8-4066-8935-3e839386e99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99b4308-c263-4ac6-9fb4-a106154b51ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5127df5e-579d-4191-a990-87044c7d3b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d9a846-111e-4390-86a4-61770d350892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a499a47-5b5b-40d8-8dd1-9bff30dfd766",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea26b66f-315a-4d2c-839d-9f8bb4e3b85d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45863d3a-b2e3-48ef-9ccd-ff8f182a84d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94942440-a2a5-44c0-aecb-dad616fa6dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064df8be-3df5-476f-8f00-31a10bbea9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e2719c-aeb8-4eaa-8291-94f39ca52785",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d60613b-3982-450b-916e-e30746bac631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9666f7b9-f6dd-4034-9d00-7fc81de64d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f67884c-04c3-4a62-b589-916c6857e664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bfcd9d5-6b62-4802-aa35-f45ae93ca001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555b3ada-3be2-40ab-83df-4f963c271eb2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89031c5b-0506-4571-a385-a68309dc1608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c65235a-1de8-4693-a2bc-a18125eb3d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34242b47-85f0-4b62-976c-87ddd8a9cf01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b9ce83-68f7-4a2d-a087-d75972c379c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda52c37-be2f-4ee9-8fc2-0115201381f9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a02459-0408-42f7-994c-77e5ff03f586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace70410-e623-49c8-8f6b-fec6ef8d26ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7310440d-18a5-42b7-b409-da49cf60f64c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80931067-f2bc-4512-b144-5a4897ad86b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779c497b-d027-4368-bb9e-fd83bf88818b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084f9f75-5ffb-48a6-b52d-d437c851d8de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b70b64-7bb8-4f87-9db4-412b499771b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263fb320-5aa3-4d13-9f93-954993a35415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ad9f69-6e3b-44c7-86d8-ef4b453745c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5014e349-b0e3-446e-80e0-ee607c191be7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73681727-72df-465a-942b-621addaf4c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a375358a-aff7-4016-bf3f-08ca3b5bf232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78664d5a-a1f0-43ce-9d2d-c4b4004dfc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363117e7-cc95-4e3a-a6fe-961162995717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff5484b-116f-4512-af97-37caddb107b0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673e6210-795d-4d21-8c06-a166e398c747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e03bdc5-ef28-4336-b2f4-120ae7f777b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db04994-130e-4ff6-bec8-4b8bbbec1ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac8ea2d1-5a90-4f8d-b8b5-afeee3c6311e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20411302-fe60-478a-99c0-2d8560a45593",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd4e1e8-375d-40bb-846b-128f52349e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4210b95-f7b3-45d7-828c-c6907ea6d024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e8c0db-2659-4ac6-b206-04addc272d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc0455c-3fe7-4650-b979-455a326d2d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5135cdfb-effc-49fc-bbff-b13914f4f3dc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112f4d60-e48f-4e96-aa36-f523e23482cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15a4c9e-8866-4297-81ee-6803f731b7ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b84a473-905d-4516-8991-898fe60763e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3adc4fa-7a9d-4e07-9433-3519e3a9b0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a5bff8-6337-4fd5-bab0-fe19b8987125",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a69ac8b-43a2-44ba-b02e-ce7880f66f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e3fb74-df91-4747-a019-5379e950f961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38975c5d-5fe2-4419-b536-4063a04d391b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dbaea0b-3197-453f-a7c1-b8fd9a12416d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571d4b48-7c54-407d-8fa6-670af4aab497",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810f0ecc-e0c6-4457-866c-f9439f4690ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fa9ce0-c65f-49f5-bbdf-72cda3dced9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c6d4da-2375-4821-a3a9-1fc833851c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d978a0d6-7866-4fd3-87bf-6d572e3b990c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e419a30f-ce5a-41cb-9649-238b2f1f7f01",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7245408-106d-4352-988d-a2214910a190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06254d59-a043-4edf-97dc-2ef6021028a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0900e9-ade4-4eb1-b60a-c597cf971d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c381a3-fdd8-40a5-93d3-cca7cada4ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d9573d-3909-465c-b694-c7f28575e518",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ef35f4-18b7-4759-8f9a-df888ca264b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef26e71-9539-4108-8a5f-48e329699cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fa681a-31b5-460e-9269-8b5e6aea0f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a199326-d47d-4e53-b088-ff11ed5a0475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3698d8a4-4b0a-4505-90d3-4ae0cccd4b63",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209f104f-a85b-4f55-8d16-b25576081d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad11ee1-2701-4fa5-948c-9182f97537a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26425316-2c3f-4e62-8da8-79d7d43a3af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db4dcf6-c58d-4e47-b39c-61436a4e09f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e4b34d-f576-4546-b0ab-31798be449cb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc314a2-8a73-4d40-ba51-3ef925464b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38a3612-4f31-4f6b-be53-5b50f41f9f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ce8718-c32c-4f3e-bad4-b8718da16f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1dff710-ead4-486b-8eb4-ee2d65ea1246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b07073e-98ec-4db5-b632-a60bcd86eb01",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079b437f-29b8-401b-89b7-045570821238",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70c3f95d-30df-4ac1-830f-71eea7599035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecf337f-7acd-48d5-bb16-f69a40754aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5833ad4e-7698-4aa2-81f3-0b511c23e6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1412e391-cd53-43ee-aef1-8cb3b5d98eb9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6159a6-45a7-4183-9e42-33520a67b946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d37db55-de4e-46d3-bfb3-3f94f975860c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "841a2573-2966-4752-b60b-e2c5ebfe6144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "036ff51f-cac8-4d72-8f8d-a83c1997bcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a5d562-e1c2-43a0-af83-c2c20f72e657",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04d311b-6e88-4e58-94e8-8970af92fb96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cb584b0-93cf-48d0-b7c7-147f7cce421d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45de3ea9-14da-4f96-b614-eed08d887e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d847c18-1a25-40eb-94c0-9e9ba4be9f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f06b45-d552-4608-aaf0-d8fea3a9c7cb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cee5f46-37f5-4018-a22c-73daddd9a67d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac075a84-5f56-4524-96f7-b2cebbdd075f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4b963b-82df-482d-a345-d9dc0413a718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06e5bfe-7ed0-43a2-848d-e202b0d51127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccddd2b4-86c5-4cc1-9642-ec419ba4d7ad",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbddbbeb-c745-46be-a79b-4543a4f1e8cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf894788-9409-40fb-88b9-ce933d4e8c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7fe165-379e-470e-9c55-0222344fe8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09bb0f7-71ec-42a7-860f-3ee1279bd68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765c0eda-740e-4574-9add-89dc9e04e010",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cac17a9-88ee-41b8-9ea5-ebc1bd481b1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b1e93ff-5627-4579-a4e7-47110bd5336f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c80566f-7c5d-4050-9695-f2b726d2fa5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794ee970-0d47-490a-b599-a56fd0cf8773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5293b9-efeb-471c-878b-44ab095740c7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20c02bf-a045-4add-9628-ef2753b2fb10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4114451a-2e49-4a48-97a5-06cb7fec9358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8ae520-221d-4695-9214-04bfa58ccdc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82954df5-9733-4040-b483-6d317c8311fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085b244c-ed45-4a27-b83c-482708ca0dc8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8becac1-1633-406b-938b-638d929eec36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bddb502-00f2-40c0-8430-b67c7ad6b18b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28d4e78-3171-48ed-8773-e101b1f0cc05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238d1666-e8ea-4dd8-b3f3-26c0f1e5763e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f0455c-cad7-4495-aacb-bb5d4e459dab",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c0e195-0ce6-444f-8ffc-ab83278ac58c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f89569ef-d541-4bc8-bdc2-e13ae5c67a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "614fc435-dda2-476d-9c12-93911c9d51ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4325e28a-69f2-4fbd-aef7-4c33fd687958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c203f5f2-6b94-4139-87e0-b0a78fde6984",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29bb92f-635c-4917-a6b8-6acc706b50c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6737f99-804d-4515-b5ec-1b3f2e73e2b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8ac248-3802-43ab-b3dc-ccea1e700adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c84a47-e21c-43cd-99dd-ea9c1ddddd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf21ed4-cb1f-4fd9-949b-e150b51f3ee0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdaaf1b-0d1e-4be5-9d51-f09701ef0b40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30e6cb2d-dcc2-4075-8b0d-ef01734bd3f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e96151-3754-4c5e-9c27-d9322dd757db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e34531-2d19-446a-a1b8-a85f791ed4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e02b0cc-4e37-44ea-9457-9a976afcb8f8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934caf68-e0c7-4691-8ca7-85755f0b25c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3061a2e-932b-45c8-8179-8a6787a01c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e18482-51d0-4aa1-9b30-2334bd671b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129da901-a5dd-45fc-b063-bab528908bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24541d43-e04e-4f83-91e9-0030e4babae0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b00136-3ff4-4b57-b8d8-9a8bfd649b60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bbe5c0c-e906-4a9f-abe6-bd441a954d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fc808f-7fc3-417e-8000-199952da1c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4acd78ee-7b8b-4bfb-9ad9-bf1ea7d2fd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ee731a-73a7-4d7f-9cfa-6b427bf7bdc0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdb0573-73e9-4d49-9096-25f400af7ec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cce102bc-c7ea-484b-9c81-c3d729bc1bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e4068f-caad-4c8c-a67f-516b37459b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2045c3fb-6d9d-465c-bd3a-c9b8b1da271f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d06997-24b7-4575-83e0-e77caa186974",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d5d0d6-7738-4796-bc33-0f558ba83d36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b454bf7d-18ee-480c-afa2-e5336c72bfaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b78148-6eaf-4f2c-addb-144aaf53f8e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640f36e7-c02e-4aae-bb97-a03fbfa0a1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4ce1ee-89ea-4635-a995-5197322983c6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de4e020-944b-4035-b0cd-8629c8b0f930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db833bd2-556d-49a9-bb46-45661e293cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2184259-ebaf-4ecd-9e3f-e13f1ee49bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397d175a-61d3-4995-83ec-b98e2419ac11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67f7b5d-be18-46c7-9583-2d75555a5dcd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36aef3ca-defd-4820-a874-c704c23fff67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b10f294d-5fe2-46fd-aa8c-9bb2bc87c65c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "937e4986-5fb9-4457-92cd-c2f7f4a03002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c08d1a8-ab09-4031-9183-90662b917047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe7583e-d85f-42d6-87b5-08ea7106e52d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5125d5d6-ac6c-4743-be91-01bc888b67d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "999499b5-8827-4bbe-9c0a-e62ad35dca25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6235ce-8f46-436a-a15a-6e2ef0595129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d4c579-db61-445c-b4ab-9083c8998cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a48c3ea-be9f-43d6-9448-6a6969179070",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a96f52-cb01-46ab-b6ce-de1ba6dba634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce1f1f76-ef2d-4d13-a2a6-d71e3a26f343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b553afb8-8248-478d-8141-973699ea7f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c71abc-a9ba-4d74-997b-cef9b4033151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2309eb32-90ea-4a7b-821f-c739370261db",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2598a592-5634-48e7-bf89-fdc0c59c991e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00a5ca1b-537a-4466-88e3-e37b67ba860b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6645defb-2021-4ea4-924e-020ec9941de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa18d0cc-ef04-4ff7-b6ff-221f6282d25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47dc0e09-5be1-4367-bbca-262726d5faba",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9d111c-b788-4ff3-af85-a2a84ba02718",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54cd9b0a-eeeb-4f7d-88b1-b0ec9c83a053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd09355b-61e3-4e31-84c0-a8e869704f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3bed70-adfb-47a4-ad8f-9e6b1d8408c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7290d886-dbc9-4fe0-9cbe-98dda760edd9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89edfbd3-4c27-41e3-855b-be1284f23237",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61adc69e-0534-40f2-ab90-05ef6a085d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f643af59-e9cd-4643-b81d-0cdb6441d218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0beb65-c6bb-4d6d-9a90-55cd461b5c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33c0401-abf1-4db8-bfa7-d8226dbdb7ef",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704c0577-b53a-4170-b503-57962efbd679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a757b67d-3a63-4270-8c44-629c6e0fe874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de4cdf0-8c85-4e5b-92c5-c98fb688f1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5311bc45-5407-46a2-9d3f-49053479a0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90d81ed-d5f0-4010-bc03-c00ff39817be",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee619a8-bb73-4cb2-8623-def348ac25db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac34bf6a-fc28-4325-a0e5-4344e82bcef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa1d246-2e66-4da3-8c04-1479785681ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51045e6a-3360-42c9-be3c-3be8941dc42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a13e921-b4c2-4284-8252-00d9e67e5a5a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349320f1-cd57-432e-9e17-91c89e52211e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "721b060b-bea3-4d7c-993a-4fd91a71cb42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47b7429-0424-4775-a593-474b20010497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6293add0-9782-4af4-9b54-55faadfba598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd51b1d6-8764-4238-82f7-305e81cae0e0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d12fd3-66e9-4ca2-a4d5-86ea0a0e5209",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27b4726c-e31f-4d89-9075-ab541ad2fbdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80547b03-63ed-4b8d-b61a-c0050aacaae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7518276-201b-4079-9d20-d4214095136c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273ed610-d21d-4936-8fa6-1293aeeb8554",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a577efe-57d8-49b6-8f85-dc307f9f9c9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46fe4cb3-7d4f-4c64-b410-40d97b2d0511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c56b3c2-92dd-49fa-8e0e-a32d03a07c09",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc502455-b87f-4bc5-95ab-3fb35865ab5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d63507-00f1-4883-8eb6-4e2ca8333742",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c4bcf7-33d6-4595-b346-ef7cbac5a2cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b91afac3-7331-4c15-a6ab-ec180db6d450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ab3116-3af1-407b-8bae-787938703a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416fedf8-5942-4381-b888-31969406339f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fd231f-bdaa-4666-8f5d-90a677931c52",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ea6b41-4654-48f3-983d-2aee44ebbaeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e584acf2-5637-4b5e-b210-f18b76826cbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c898673-8295-45b5-8e8b-6c73514b6351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d14d7b-562d-4c7f-8ed3-814b50684e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c3b1f1-7af2-42b0-9d58-b46fca5b829f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59e5ea5-1e73-43d1-80d8-e6463cf82224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11a128c6-1215-4f4d-837e-605fb627dd06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ca3b5c-430e-4d49-ad42-0b37422314bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9b4ed3-2b40-419b-ba15-529e1226cea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451cc724-f2a5-4a3a-b1ca-17d626190f23",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba253d1f-c759-4663-8f1f-a94b63c3868a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06a435fd-9b52-4f30-997b-80ba36f67098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4173affa-c114-41d9-b143-b54900d57757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383df56e-c139-48ec-b35e-de47b3951259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31a389c-bf76-40cf-9519-925233c2e562",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962577e7-afa2-4f51-ad68-abb7ab475b0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78a41f52-0c17-46bb-95c1-d2d3875fc03c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddfd5a2-ea80-4aa7-8024-9476de6124a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93fb69a-709e-4806-adb9-1aa6600f5899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdda1db-e066-48a2-8971-5a1130a284d9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86d6628-d477-4761-9f7d-089fc74c62be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34ad5d4d-2497-4bfa-9502-c99c07603271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3be718-266b-445c-a4af-7eb91fb058ab",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a512a1e9-5308-4985-b1a4-1064a2e7c027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0eb6b4-d06d-4393-aa75-dcc0f60b7151",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b7a5c3-d80c-4bbf-a92f-473e2e176438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc9da066-bcfc-4d46-b0f3-413737e9c59a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed18e1cc-4720-415b-866f-8d3c96e770f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87a4703-7743-48ba-969e-c1f2942ce6ef"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f791a63c-eb39-4a81-b467-190d7b5f50e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdc72e1d-3a3a-4d66-98b4-8b542e6df189"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75d7dd70-e21a-4bc3-96ba-4fa3bb88b70e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "240ea5cf-c019-492d-9291-224d8426727a"
                    }
                  }
                ]
              },
              {
                "id": "860eaf29-9fa7-489d-afaa-e8aec761206f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f67cd068-33f1-40f1-af10-05f1f7ac2df3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2882d0f3-3afc-4a5b-a87e-46d2dbb49287",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d1c71b37-6fe8-414c-8568-95c5f63fe3f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f488dcb-2511-4136-a473-049e4a7cfc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81f51ca1-4a8d-403d-a954-984239e26350"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57767d96-6f8d-423a-b9b1-fa990fd4a49b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aac5736d-b31b-4b12-8293-7f96c2e41a6d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df89a6b0-eb2d-463f-b52d-e6f2e3e74961",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23182d92-4961-42c5-83ad-9938ce273ea5"
                    }
                  }
                ]
              },
              {
                "id": "9c285ef7-70f8-4a6d-9ce2-45a679c90f6d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b84cc800-ea4d-45a7-bca7-207b04f29b90",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8c41e3-a9ec-4d7d-90a1-449d5815f473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d488033e-e33f-4b39-91b7-1cd4a3536f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561ca06e-0426-47e2-9b8e-43511064b595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b969e7b-2e64-49b4-90c1-f5a3dabb00b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ddd8c227-cb7d-4e74-8ae4-f01502ad8151",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bedafc93-1b5c-42b1-baf7-8c955edb50c3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6672bd2-06c9-447e-b3b2-8d9a2edeafd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7a143070-103d-4d73-845f-f5701b4f1f8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4775d31-d10e-4f77-baff-dd32b9a3381b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fc2c39f-1f5d-4765-b2f4-d69120021567"
                    }
                  }
                ]
              },
              {
                "id": "b5cc134b-2222-44f5-b2cc-ec4467baeb04",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a486f2e5-2afb-48ba-9723-d0960be11694",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3d1c9d2f-6774-4aa5-8b23-a395656b2057"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "101cc69c-4881-4f9e-bf80-a663a092a8de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca02d643-4abc-4484-b442-72932dfdb9fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31bfece9-c704-4f6c-ac3e-c54df68892a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "649deaa0-b546-43e6-ac45-56e2bc5ab900"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7158915-ea8d-4989-958d-f588aedbf61a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b580843-f8f7-44c7-83d4-459019b6c257"
            }
          }
        ]
      },
      {
        "id": "84a7286c-6be4-41a7-9bf9-09201a52c3bb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "92657b7f-b7da-4f27-a5e3-7eed6749e15c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "310d39c2-55b6-4b10-bdb9-2d738e2d85d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8f567ba8-f4bc-42c3-a6a9-e70565b5ec35",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf65cd4-01f9-4a5c-a246-521ca9ac0abf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "add94830-4cd6-4dad-a526-755352093a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16709738-57e5-4883-b53d-c9c68580840c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47fc7c7b-2111-4b50-a6f9-3fba98566b41"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95aec344-e428-49eb-aa21-d380aef83340",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "285786c3-1e32-4b7b-b8c4-0462751b079e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf6d4c50-9654-4c5f-bf55-095bdbffdb97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3c8b6af-3bcc-4a68-b799-e5bb9bdad6b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c8a46fc-efaf-4498-a266-804e8d155a9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4247c219-d506-4deb-b0ea-bd9f739cea12"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3bc4ed6b-b218-4757-bb9f-354b957f75bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d5b33ff-2f0d-4729-85be-5f99b6e10e92"
            }
          }
        ]
      },
      {
        "id": "cf490d37-c49b-4d00-a02d-a98c100901ec",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "796f00fe-7643-4113-bc53-44e64b5db447",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f90c079d-e2f8-44b8-8377-66af0c10d38e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ecc0517-a697-43e7-8dbd-5cffc6e76017",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e0f976-d4b8-43a6-8eac-6199f085b4c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "470106b4-3631-4c97-a430-ec6545310175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c14ef5-510a-42db-a4d6-5d44e501b55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d95d15c3-bbfe-430f-a635-905d6346cf5a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b3761d7-0e9b-413a-a021-cc2a87bada26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db0185be-8253-402f-8ec2-7718e58c6390"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f7d14d0-2ac2-449c-8f0c-c117d0f68af7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c437495-bbfd-498f-9282-71982416bdc0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c10bab24-0bbf-4829-b54b-fd19be67af3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fb79dd2b-1f7b-406e-ae26-0e438c26bafa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0717cc88-87db-420f-9b01-6d691e377a4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c06bf9b-ec9d-41af-afdb-50f292d2f32a"
            }
          }
        ]
      },
      {
        "id": "c29d24c9-d126-40ab-95e4-a0190e570642",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a4cfb14a-7e26-4b5b-8ce3-4cdb9cd9842c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbd6132f-41bb-4363-a799-1e862e99fcbc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6dea42b9-cbf2-4150-b4e4-96933ce60209",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cd3dba-6b20-4381-a5b0-9d72379a2986",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c561bf13-d798-4816-b797-0599db4f763a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc2e6df-fe0f-4464-93e0-aca23cb61a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e1bc91e-43cb-4b6e-8fa0-740d1717cf46"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61c0f431-eed9-4fe0-af2c-09a46d1b509f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "041a6785-a827-4444-aa7f-7662eb43d9bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66a76618-2521-416a-bf83-923ca096e45e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03f9f9a6-cfe5-408d-8d07-4c4725de8221"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88a3e5b2-7010-4ada-86ba-37eb8f996f22",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7a890653-a2af-4661-b128-86789bbff459"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc973274-b4ea-4fd9-a82f-2638aee85df0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8da91748-4809-4868-b334-517fa213f935"
            }
          }
        ]
      },
      {
        "id": "ad23716f-a5e5-484c-8653-86d4d800edcf",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3b7e1d7-fab2-463f-9a8f-98a784a735f6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4eb122d-9cb6-4754-8309-a69fab6368a4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "36fa1453-336a-4bad-b0a6-dfc221ae4e28",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38f324ea-54f2-4a04-b923-27ff67ae0d4d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75759cf4-801b-4692-a194-3edbd27fdd9d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 36.41549295774644,
      "responseMin": 15,
      "responseMax": 300,
      "responseSd": 26.178219889594786,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693009859697,
      "completed": 1693009882992
    },
    "executions": [
      {
        "id": "990766b4-512f-4929-977c-bb0e21a36c7c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5cd6d5bf-861f-4c29-a56d-e0310dadc66f",
          "httpRequestId": "29957a52-e8b7-4de0-9b36-5130da9a5358"
        },
        "item": {
          "id": "990766b4-512f-4929-977c-bb0e21a36c7c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2d2eee09-b2af-44e3-b967-8219be1fcedd",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 0
        }
      },
      {
        "id": "35556c41-ba44-4302-abed-99719a9ce4f4",
        "cursor": {
          "ref": "b1148851-8805-45bb-865e-625ff06f40a0",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fe214493-f654-4ad3-9f01-e2efe9ba8723"
        },
        "item": {
          "id": "35556c41-ba44-4302-abed-99719a9ce4f4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dec24239-030f-47a3-8d72-bd0f91413ef8",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "4161e997-617c-4751-8ebe-f5321f4eb1e7",
        "cursor": {
          "ref": "fe18fa67-30c8-46f8-a4b7-d0b8b26736d7",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "03b3eb2e-d7a9-4062-b1ab-8207afa76647"
        },
        "item": {
          "id": "4161e997-617c-4751-8ebe-f5321f4eb1e7",
          "name": "did_json"
        },
        "response": {
          "id": "599ecf6c-a24b-49e1-bc74-82e69785ec6c",
          "status": "OK",
          "code": 200,
          "responseTime": 245,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0b051a-6e3e-4a94-a365-6bb8fbe4f078",
        "cursor": {
          "ref": "d68d21ab-fb99-4688-8630-090c822263f2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1dba139a-11d4-4d58-afa8-4b4262f1c8db"
        },
        "item": {
          "id": "2e0b051a-6e3e-4a94-a365-6bb8fbe4f078",
          "name": "did:invalid"
        },
        "response": {
          "id": "d8f8d7c0-641b-4371-a8ac-039c2e5f0888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0b051a-6e3e-4a94-a365-6bb8fbe4f078",
        "cursor": {
          "ref": "d68d21ab-fb99-4688-8630-090c822263f2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1dba139a-11d4-4d58-afa8-4b4262f1c8db"
        },
        "item": {
          "id": "2e0b051a-6e3e-4a94-a365-6bb8fbe4f078",
          "name": "did:invalid"
        },
        "response": {
          "id": "d8f8d7c0-641b-4371-a8ac-039c2e5f0888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251ed8b8-c8b9-4c78-ae11-e7331b9ec111",
        "cursor": {
          "ref": "3d1bfa50-03c5-49d1-9ee2-5e67dcf99d08",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "19617208-bb48-4f41-8cff-33a4d9c53435"
        },
        "item": {
          "id": "251ed8b8-c8b9-4c78-ae11-e7331b9ec111",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f2055811-967a-47ff-b78c-87f80d1adb91",
          "status": "Not Found",
          "code": 404,
          "responseTime": 74,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573ebf20-e4fe-47ca-a033-dfcd19e75e7c",
        "cursor": {
          "ref": "33990f4e-f3c4-47aa-bbec-bdfb9e8f69a6",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7b1622f5-91d6-4bff-969f-95dfe0e53c72"
        },
        "item": {
          "id": "573ebf20-e4fe-47ca-a033-dfcd19e75e7c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6b39784d-c228-4707-8d08-92607b47fa96",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d055755f-64bc-4831-b248-b6a9a3f08e59",
        "cursor": {
          "ref": "b0fb4c67-1e4c-40b9-9842-f618560aa447",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "888c67f9-b3fb-4ff9-a9ce-814375c13a83"
        },
        "item": {
          "id": "d055755f-64bc-4831-b248-b6a9a3f08e59",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "80fcb965-7f99-42bc-8b00-6ae28e156def",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982e6f2f-5a1e-46fd-8ab9-ddc423ff72a5",
        "cursor": {
          "ref": "5922740a-6dea-451e-9806-803bae92f49e",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "31074643-4d09-4529-953d-a84fc51fc4c3"
        },
        "item": {
          "id": "982e6f2f-5a1e-46fd-8ab9-ddc423ff72a5",
          "name": "identifiers"
        },
        "response": {
          "id": "20d52d82-2701-491e-964e-f549a816e1f0",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af9be65-048d-4559-a3fd-c4339af18968",
        "cursor": {
          "ref": "e870b5e2-0fd1-4b0e-be10-2457e912cfaa",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "aebbc6bc-b980-4bbf-b4cb-9d602b70727b"
        },
        "item": {
          "id": "5af9be65-048d-4559-a3fd-c4339af18968",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5214c21b-36c1-487b-a564-4d09e075105b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0751b7-15b2-4329-922b-aea166cc6b93",
        "cursor": {
          "ref": "9448d569-5142-4e7b-92b0-0a8f6b3c0310",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "964ef0af-3a5d-4770-9b2d-ca0f14a734fa"
        },
        "item": {
          "id": "2c0751b7-15b2-4329-922b-aea166cc6b93",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ea6d3e68-da8b-4124-9850-0c6b0838a4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e18fce-80f1-40b8-ad70-844bd1ec9ef1",
        "cursor": {
          "ref": "690a3b7d-6274-42c7-bc15-b035faf8a9ac",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0b78dd58-70fb-4793-a9fa-b7adfe9d65b2"
        },
        "item": {
          "id": "46e18fce-80f1-40b8-ad70-844bd1ec9ef1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5ec7dc9d-b1fe-4fcc-9845-3451dd76c065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab4a1ef-1635-49ff-a4a1-14df4b0311f8",
        "cursor": {
          "ref": "8d7a39f6-2100-4211-92ba-b7661116aa95",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b07909e8-2010-454a-8414-4b5d34240a66"
        },
        "item": {
          "id": "7ab4a1ef-1635-49ff-a4a1-14df4b0311f8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3161177d-42ac-405e-bf7e-668552e19e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed60c05-5448-4b21-a352-8c7f777b9fc7",
        "cursor": {
          "ref": "c11dd20e-8efa-43f7-aa40-f019a6614436",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d95b2ccb-92d1-4621-b15b-7a25c2e35d54"
        },
        "item": {
          "id": "7ed60c05-5448-4b21-a352-8c7f777b9fc7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0c4228b8-2bb6-4177-93f4-f91dc2135ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b69f80-53f6-4c08-bf72-de5e7d2c1cde",
        "cursor": {
          "ref": "935a1831-c43e-47b4-a16a-bb4e9d0b1d61",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "30351bc5-7179-4678-b71e-cc6e11e8b39f"
        },
        "item": {
          "id": "64b69f80-53f6-4c08-bf72-de5e7d2c1cde",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "56fdb65f-385c-4758-8924-0c86e6d9d507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf1a2f6-115c-437d-a611-6ce255b112d0",
        "cursor": {
          "ref": "a94f14ea-2a90-4ea5-bfcc-1e8a54f5fefc",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2d55413a-4047-42e7-8845-a77518f418b8"
        },
        "item": {
          "id": "dbf1a2f6-115c-437d-a611-6ce255b112d0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0a4eb964-bc72-4df1-a35e-60c4f72ae466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c79dd7-982b-41cd-ad54-0da3b41d455d",
        "cursor": {
          "ref": "c8d99838-f815-4112-b7c7-f96da2bef825",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e403d263-8a84-49ce-b243-00d3679c63bc"
        },
        "item": {
          "id": "94c79dd7-982b-41cd-ad54-0da3b41d455d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cb6ec502-ef84-4c65-a7b1-1afe185ed610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1241c37-3938-49f4-bd28-c0f5bd569bbe",
        "cursor": {
          "ref": "59e46287-eb92-4c79-991f-2dfb7711c388",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "78741b18-edfb-4170-9f62-2ee851f37ffb"
        },
        "item": {
          "id": "b1241c37-3938-49f4-bd28-c0f5bd569bbe",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b6917ff5-62ef-4e89-8f18-5e56c4f39f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e5977a-acc4-452d-b2c0-a5577b26bc58",
        "cursor": {
          "ref": "e32634fc-2e63-4939-8a0b-ecd3acbe6705",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1322ea37-04ac-44ac-9f85-9c1815f31f74"
        },
        "item": {
          "id": "40e5977a-acc4-452d-b2c0-a5577b26bc58",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ef6e571f-968c-4555-a67f-d7c136ea65e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fede678-7535-4c38-a8d7-2a67ba6fe6c9",
        "cursor": {
          "ref": "54f02ef7-f7a1-4594-ba01-3451e00cb1fa",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8618eef2-01c3-4928-95de-57b57a772e11"
        },
        "item": {
          "id": "4fede678-7535-4c38-a8d7-2a67ba6fe6c9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "48db71ab-6f9a-4752-8938-0ab60a7027dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bab4b7c-942c-427f-9603-051ad20eee80",
        "cursor": {
          "ref": "dec71c95-51ce-46cc-8ed2-70d1d7594ba5",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "927f4911-b2f8-45f0-a64b-f5fe0bcb32ef"
        },
        "item": {
          "id": "2bab4b7c-942c-427f-9603-051ad20eee80",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "217a6be9-f311-4e08-81c3-692895b45c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a716f9-aeed-44a7-b433-dbf8ef96b953",
        "cursor": {
          "ref": "862bea7b-a32f-4002-b470-c46f667cf575",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6cc66f27-3f23-440c-be0e-2fa317fca050"
        },
        "item": {
          "id": "86a716f9-aeed-44a7-b433-dbf8ef96b953",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "dc9afca8-7ef8-41d2-a8c7-31e21c011cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714f3803-0a6b-460d-9a2d-1f3f1292a42a",
        "cursor": {
          "ref": "4cea942d-da10-4a7b-bfbc-466a6603c23d",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "98aa44a1-4d47-4658-aada-cb1f9d543a4a"
        },
        "item": {
          "id": "714f3803-0a6b-460d-9a2d-1f3f1292a42a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6b5219e6-a069-4d1d-9436-9ab6cf099634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa9b28f-448b-4cce-b345-0440cd15dd43",
        "cursor": {
          "ref": "98783506-437c-479f-afcd-7a731cd46ccd",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e640a852-156e-4ac1-9f10-ed21b7836644"
        },
        "item": {
          "id": "0fa9b28f-448b-4cce-b345-0440cd15dd43",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1e1b2d74-e708-48b7-8732-23787abb8ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60464f4-6a42-467e-956d-0d23119ea308",
        "cursor": {
          "ref": "f727821e-cbf2-4c82-8628-c9ae5a64b431",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4c7d1668-4d35-4681-bfb3-fc0baf47f224"
        },
        "item": {
          "id": "c60464f4-6a42-467e-956d-0d23119ea308",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "60299db9-96f5-4173-95af-b4506cba886b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33b0e14-c10b-48de-8843-95d52147d9eb",
        "cursor": {
          "ref": "b32a6f9e-1f17-4aec-b5af-13976d018c58",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9777c201-00e4-482b-8266-59f210a283ad"
        },
        "item": {
          "id": "d33b0e14-c10b-48de-8843-95d52147d9eb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "aebf21a6-f2de-44c6-a54c-329fdd6cc99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e539924b-39dc-4c86-8abd-989cf9cb8135",
        "cursor": {
          "ref": "80918023-aa59-4e46-8c14-db7d40c51085",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4af36970-a173-4dfa-9e0e-e21a839f0e6d"
        },
        "item": {
          "id": "e539924b-39dc-4c86-8abd-989cf9cb8135",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "68cfe7bb-f726-461d-8edc-ce144d3f549a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f4ce81-98e5-4d43-a617-8181744bdbc6",
        "cursor": {
          "ref": "8561b6bb-4d5e-4ed4-ba93-5b25c70aaee8",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "79b76674-8b1d-4ceb-adfd-519306e62a23"
        },
        "item": {
          "id": "f1f4ce81-98e5-4d43-a617-8181744bdbc6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6d220aa0-e718-41bb-8a8c-4225ba44b0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18773127-824f-453e-a6c8-4adadac147a4",
        "cursor": {
          "ref": "31373719-88a8-45e0-92c2-b2dbfaf65385",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "19bc1cc4-cd2d-488a-9717-4ae54d1fa536"
        },
        "item": {
          "id": "18773127-824f-453e-a6c8-4adadac147a4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bbdf1a37-f0d9-4d8c-b1f1-4f2f784a86f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebec8d6-44f4-41a5-98d5-d2fa3464be6d",
        "cursor": {
          "ref": "847d6797-2ac9-41bf-8605-d545b1d43a6a",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "29e1858c-f062-478f-863a-7611eb49dcaf"
        },
        "item": {
          "id": "2ebec8d6-44f4-41a5-98d5-d2fa3464be6d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "89b06306-46e7-4bdf-ba78-3bf8faa0626a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8717f0-e8ba-4f52-82aa-ac3deb9a0ec0",
        "cursor": {
          "ref": "1b2b4b18-a7b3-4eaf-8745-b913d4ec873a",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7aaad92c-9bf5-43a2-bbda-a16ef16180b8"
        },
        "item": {
          "id": "2a8717f0-e8ba-4f52-82aa-ac3deb9a0ec0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7339a00c-8308-498b-b62c-dddcc5684cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50495eb5-d59e-47c6-8eab-41977af68ccd",
        "cursor": {
          "ref": "f92e3fc5-888f-4f77-8b94-c3873eb3a62e",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c0b1a3f3-485c-49c5-a0e5-0384c8e79320"
        },
        "item": {
          "id": "50495eb5-d59e-47c6-8eab-41977af68ccd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "91c647f2-356e-4eb7-a348-3f8a2ff48924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e2f590-51b9-4b96-bbe6-7c014d2d1492",
        "cursor": {
          "ref": "f6be67d5-ef03-4118-ba9a-81e990fd4833",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "037e943e-0b1b-4a40-81ed-6581c9545574"
        },
        "item": {
          "id": "23e2f590-51b9-4b96-bbe6-7c014d2d1492",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f76ff622-dcf2-49c0-a2db-c9b94d2b8be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d631b3c7-45bd-4255-ada6-9654ec505db6",
        "cursor": {
          "ref": "8779d3ec-31e6-4ab0-822a-37fe9a4472ff",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cf79c0b0-ca06-4daf-96f5-931135f2774d"
        },
        "item": {
          "id": "d631b3c7-45bd-4255-ada6-9654ec505db6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ea8db84d-64b2-4c84-9bcb-ff0471fdce8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d6f904-e5c6-4f73-b448-7ba49b04cdb8",
        "cursor": {
          "ref": "52befcaa-0bec-4cc7-a693-d33ab7057dae",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5f3fd73b-961c-4ad9-b5b8-7a54387c623d"
        },
        "item": {
          "id": "59d6f904-e5c6-4f73-b448-7ba49b04cdb8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6aa11f90-3b07-4b54-bc2b-9b3d68c737c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa932cc-f65b-4539-a19d-7a9f3709674c",
        "cursor": {
          "ref": "56e95f36-f585-40da-8187-1788b89913ed",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "244184cc-9702-46d7-9ba0-5d9a9b7a7881"
        },
        "item": {
          "id": "9aa932cc-f65b-4539-a19d-7a9f3709674c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7a5b5697-38bf-4496-bdfe-d30c85ae7405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8c33e7-f3e9-4927-bacb-c8f29fedf25a",
        "cursor": {
          "ref": "5468294c-a830-43ec-a0f8-8ac3985623b5",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2d6a47c9-a2e8-48c8-932a-cb5f4c567e7b"
        },
        "item": {
          "id": "fb8c33e7-f3e9-4927-bacb-c8f29fedf25a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "06ca9fe1-2c19-4584-b39c-53e713769415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1ac990-2a31-4c51-9fe5-a011fbcdff72",
        "cursor": {
          "ref": "ad1cbc28-0a4d-4b1e-8ed4-711c9065e809",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1335ac03-4efd-4204-aab7-ec8cac221a95"
        },
        "item": {
          "id": "9b1ac990-2a31-4c51-9fe5-a011fbcdff72",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "125af989-1cee-4c9d-a00a-6542a3b3a2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e95c34a-5d3d-490e-b922-a0c39c17e2cd",
        "cursor": {
          "ref": "28fd71d4-e12d-4e54-bf7d-2719e456cc8d",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6bcabcc3-e3fe-45ea-a9bb-3f92439b0623"
        },
        "item": {
          "id": "6e95c34a-5d3d-490e-b922-a0c39c17e2cd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fa91fd9c-5851-4c41-bed4-fe5fdfd2c56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d424a5ab-cdfc-4e50-a450-35a0e56bed60",
        "cursor": {
          "ref": "4e0a1c41-1f0f-4751-b084-8517c246062b",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "33cce52f-9dea-4958-9fb3-3b8d3b48a313"
        },
        "item": {
          "id": "d424a5ab-cdfc-4e50-a450-35a0e56bed60",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3283e73c-d3d7-4af7-a740-d91678cc9a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf687637-4b97-4c42-a1c1-3cb929741fbb",
        "cursor": {
          "ref": "2114cfe6-cd24-4820-b972-40b550596582",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c29dac5b-8474-4292-81a8-4852c25a3a0d"
        },
        "item": {
          "id": "bf687637-4b97-4c42-a1c1-3cb929741fbb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5bb83616-2e97-4440-8025-8dcc875aa3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f7266e-b64f-44c6-89c1-ff511f600b64",
        "cursor": {
          "ref": "ea16007e-8099-49ed-8cf9-3e455f10b58c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "05b06fce-73fe-4657-9ac3-1f4cd58c0cab"
        },
        "item": {
          "id": "94f7266e-b64f-44c6-89c1-ff511f600b64",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dc4879a0-a8c9-4bdb-97a1-5bc782ba5f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2707c56-6948-4ba4-b655-1fd7ee144fdf",
        "cursor": {
          "ref": "ffa764dd-997c-4cc9-bfa9-b9a2666ff014",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8fb5a718-fa3a-45d8-a80d-7fca40b0f814"
        },
        "item": {
          "id": "c2707c56-6948-4ba4-b655-1fd7ee144fdf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4f6c755f-55ea-4ab3-97bf-603e5888ca99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ecb604-ad95-4021-98ca-6673c05eb0a8",
        "cursor": {
          "ref": "d41982fe-c546-4e91-baaf-fdec8eae464d",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "509805e7-7091-4a0f-9a29-603602b10421"
        },
        "item": {
          "id": "a0ecb604-ad95-4021-98ca-6673c05eb0a8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "664e1579-0088-43b9-9833-8f011827152b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001114cc-17db-4de0-85fa-7fe46b4dac6e",
        "cursor": {
          "ref": "9366ff19-a2ac-47cd-b00d-c1f1838ce3c4",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "557acadd-71a4-416d-8680-b2b254145541"
        },
        "item": {
          "id": "001114cc-17db-4de0-85fa-7fe46b4dac6e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fe1d7935-f8f4-4c1a-ab05-dce78b8f3543",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 54,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282537d5-a3ca-4bba-8769-0fc389ef5945",
        "cursor": {
          "ref": "dda138e5-b29a-4e54-96b2-a2b0facb12ad",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2c2b0b72-796b-46ad-9418-cdf24f12c9d9"
        },
        "item": {
          "id": "282537d5-a3ca-4bba-8769-0fc389ef5945",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7f3b93c7-8c01-45f0-94bd-be4f35bf8de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21542fb7-3360-4c13-b03e-3e0b8a14c3f2",
        "cursor": {
          "ref": "bd977360-a3d5-4fde-bbbd-65a9e189a8a0",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "09bc44c5-fc42-4216-b7e9-4a66a8da0e4a"
        },
        "item": {
          "id": "21542fb7-3360-4c13-b03e-3e0b8a14c3f2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3aa99006-f04f-4bef-8518-a8fe90f82157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f8adae-6923-4b68-b666-58ec97c70617",
        "cursor": {
          "ref": "d6dbcc42-0f81-464f-bac1-6f4ea737cbc1",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8c4bdf36-d5b9-4e2c-9f0a-26e92a7be95a"
        },
        "item": {
          "id": "82f8adae-6923-4b68-b666-58ec97c70617",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "95ee6b4e-2868-47ae-b7a0-13620ef8a7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9979172-4084-4d77-9c08-2ec31c63390e",
        "cursor": {
          "ref": "94001a10-cbee-4199-a325-c22759cb3aaf",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4b98d58f-a107-4d55-a32e-b5c72c3aca8c"
        },
        "item": {
          "id": "d9979172-4084-4d77-9c08-2ec31c63390e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "59d48ce2-4de4-426a-835a-d6c605dd2a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a7f435-836b-406a-98ec-af94cc189650",
        "cursor": {
          "ref": "a8f7e76b-3ca2-47f5-927f-8d088cf05968",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "997ca4d7-10ab-480d-8ae3-3054bc0b7ae9"
        },
        "item": {
          "id": "f8a7f435-836b-406a-98ec-af94cc189650",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "56b4a29b-8102-4e26-af35-106a6bc63857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c418c2-59e1-4ca8-a0c3-d89c19100419",
        "cursor": {
          "ref": "5911f22d-0760-4f20-9032-ad4b504f8d4b",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "58aeb0b0-d2cc-4a9f-9c9b-7eb90814cac4"
        },
        "item": {
          "id": "13c418c2-59e1-4ca8-a0c3-d89c19100419",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "74a0fe84-d641-4201-a0f4-6605b3b001a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba944395-8e93-417b-a55d-88d53733cc33",
        "cursor": {
          "ref": "c8eb04a1-38f5-4512-ba77-d2833c35b178",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d9e57106-efbf-4ade-934f-60c6573bb416"
        },
        "item": {
          "id": "ba944395-8e93-417b-a55d-88d53733cc33",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "dde93e0a-0602-4bbf-a9b8-86e1454e1bb8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf63131-e9f1-4024-8574-171539607bd3",
        "cursor": {
          "ref": "d7d7b74a-e42a-4bd5-9c21-ea10006e32d6",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "dde04d9f-914a-4942-a148-4fa6d1cdc032"
        },
        "item": {
          "id": "9bf63131-e9f1-4024-8574-171539607bd3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "efaebcd1-8cb6-4c1a-97ee-dafc7c83c73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8ce09b-7897-4dc2-81a4-dd6b7cbaa955",
        "cursor": {
          "ref": "2f8dca8e-699c-4884-9745-b8b287f15891",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3350dc99-0479-4f85-8381-ec4f89227c6d"
        },
        "item": {
          "id": "cd8ce09b-7897-4dc2-81a4-dd6b7cbaa955",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "211436d5-9c7a-462e-a7f2-79f0b4206515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52eb2e0c-c8d4-437b-8312-414d1f78b68d",
        "cursor": {
          "ref": "25a6eba7-b74b-4dbc-a208-255087d2e8d4",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c1cdd066-fd7b-4dd1-b966-a50f63c2c847"
        },
        "item": {
          "id": "52eb2e0c-c8d4-437b-8312-414d1f78b68d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8d4a95de-b971-42b5-b3c2-abf48639c5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6ede0c-f766-4fca-9f75-73ef3161d028",
        "cursor": {
          "ref": "2ef80e54-3097-4927-853d-678ee471e0a7",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "83e0d53a-5589-42b9-9a22-bacb10f776c7"
        },
        "item": {
          "id": "be6ede0c-f766-4fca-9f75-73ef3161d028",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a3503b29-3e30-4c44-b7c3-b1c987843d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a02a727-78c6-4a42-8522-c644757447ef",
        "cursor": {
          "ref": "87d0bd08-c550-46b8-bcc6-b89072b1ca46",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6b3a5235-ae56-4a8f-bbd0-cb203db2359a"
        },
        "item": {
          "id": "5a02a727-78c6-4a42-8522-c644757447ef",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1fa45593-223f-4e0a-85d8-8c71a38cd661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9817bc-230c-4f2b-a771-aef7003d58d4",
        "cursor": {
          "ref": "df422d81-6092-44b1-ac4e-64e1d3a3cdf0",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "026d5568-f2f9-42b6-b2f8-22cdff6f11cf"
        },
        "item": {
          "id": "da9817bc-230c-4f2b-a771-aef7003d58d4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f276dc64-37e6-42ec-86bc-ac229f7f0158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abac258-09fa-4eae-b698-835e73db3314",
        "cursor": {
          "ref": "1516f013-6a06-4bc8-bb5c-6c2c2d5d3d9c",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4b643e26-7fe6-4986-839f-7862304d4a13"
        },
        "item": {
          "id": "7abac258-09fa-4eae-b698-835e73db3314",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a469e7e8-30fd-48d8-bce5-3d28e36f6d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5921c39b-583a-42ee-9985-bbf09e4be509",
        "cursor": {
          "ref": "9a2a7ee1-8b57-4ce7-9c22-3e089243dd8a",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a02611bb-7cbc-4e05-9b3f-91025e520b11"
        },
        "item": {
          "id": "5921c39b-583a-42ee-9985-bbf09e4be509",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "895a78b2-f0e5-4ca5-9bca-0d7351a05090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a22fe22-dd9f-4958-b883-ca62c5b60cf9",
        "cursor": {
          "ref": "2ba9b98a-86ba-418b-aa62-fb90f2921f6b",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "25c921c0-734c-471e-8059-2bc1eaf053c6"
        },
        "item": {
          "id": "6a22fe22-dd9f-4958-b883-ca62c5b60cf9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f8c79bb5-b222-40ce-813d-4668851cf628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed076895-28df-4626-87ec-eaef3f960a6d",
        "cursor": {
          "ref": "6444b52c-0b5c-445d-afb3-b8931b139a56",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0b6e7cb5-cee5-4944-bb08-6575ab16f302"
        },
        "item": {
          "id": "ed076895-28df-4626-87ec-eaef3f960a6d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ed9abec6-e244-451a-b111-c90c5bcab484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad535074-13a8-48c0-a365-95cd3ede3c2c",
        "cursor": {
          "ref": "1f232dfb-8c8b-45d7-94ca-755065e18242",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9be228cd-9c29-4967-9dc6-79ec1092a6b5"
        },
        "item": {
          "id": "ad535074-13a8-48c0-a365-95cd3ede3c2c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1e2d3ee0-0a4f-4139-93ff-4f299ea7f7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f2d028-a906-422d-8d9b-aa825b8282f6",
        "cursor": {
          "ref": "7a002fe4-6448-4191-8c05-ad57bd92cee2",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c898a7fe-cd04-4a6f-98e9-a6a4299dea7d"
        },
        "item": {
          "id": "d9f2d028-a906-422d-8d9b-aa825b8282f6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "957e933b-5a29-41e9-8f1a-5570009bd80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a214d0-8de6-4bee-9e39-9e814731ce84",
        "cursor": {
          "ref": "a67f914f-8f9e-4cab-8101-3c8ee61d1715",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b6f27ae9-b5ab-41a8-ba10-d769c6adf749"
        },
        "item": {
          "id": "42a214d0-8de6-4bee-9e39-9e814731ce84",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6ac7bdfd-66e9-4d1b-a0c8-0f0f0e7ca406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2cf792-9617-492f-b2e1-ec563bd4b6d8",
        "cursor": {
          "ref": "13777330-759d-4f8f-b3e4-23401e193177",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e0b0a989-b873-4996-9c1e-683e077c146d"
        },
        "item": {
          "id": "fc2cf792-9617-492f-b2e1-ec563bd4b6d8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f42720ab-bcce-4ca6-97cb-72b0c4e4165e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6152730-2a29-4fa8-8976-ece5f407c27c",
        "cursor": {
          "ref": "bbd1b4f8-c7f6-408d-a50a-aac4e700a11c",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8f43fe40-a60a-478d-a9a1-2be2c115df5f"
        },
        "item": {
          "id": "d6152730-2a29-4fa8-8976-ece5f407c27c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "862f40a6-c5d1-4032-8a0d-bc4f5ea375a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8b749c-c750-4388-9967-b5ff2752df92",
        "cursor": {
          "ref": "a6a77fd8-58ad-474f-a957-1e2b913ff3f7",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "812f0339-965a-495c-8efc-086f9dd788c9"
        },
        "item": {
          "id": "ca8b749c-c750-4388-9967-b5ff2752df92",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4ae747dc-e680-4409-a7c9-c5025776480b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fe42f3-6348-4ea4-b1e7-6afe39665483",
        "cursor": {
          "ref": "72df7e49-5cc6-45c7-9be4-93aeae476cb2",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d8002d73-cde8-441d-904a-69e14051a228"
        },
        "item": {
          "id": "e1fe42f3-6348-4ea4-b1e7-6afe39665483",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "61ce8e28-459d-4dfc-9aad-31c3cdc5c65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fafdbda-e131-4174-8be3-41cac6a89f34",
        "cursor": {
          "ref": "19615b55-3c9a-43f8-88d9-972139951e80",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3ee5d203-9810-4632-951b-60b3d660c371"
        },
        "item": {
          "id": "8fafdbda-e131-4174-8be3-41cac6a89f34",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "16465065-7e9d-440e-9db9-39f2aa1f9198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a502b8-762a-45d1-bd44-239c9bf0145e",
        "cursor": {
          "ref": "5462df8a-3f65-40e4-a47f-3ceda4ae4664",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d9203751-6553-4c3a-9af6-468d7966c64b"
        },
        "item": {
          "id": "f0a502b8-762a-45d1-bd44-239c9bf0145e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d010032e-f87e-48a1-b72a-da1d722c852b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d539a82-7873-4bdf-934d-d2f7be5bb0db",
        "cursor": {
          "ref": "743f892c-9b43-461b-a475-dd482310f1d8",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "054d3cd1-ad86-4031-a3a0-ddf552f5b144"
        },
        "item": {
          "id": "2d539a82-7873-4bdf-934d-d2f7be5bb0db",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d1d062d1-bcc6-45fe-9296-800b5e9b3fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb26b8e5-7779-41d0-91b1-b28405d2c74e",
        "cursor": {
          "ref": "897171fe-c4f6-4685-a0a3-9ced99fee129",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "388aab36-0829-4088-bd64-6d707daccef8"
        },
        "item": {
          "id": "fb26b8e5-7779-41d0-91b1-b28405d2c74e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "34195884-8753-43f0-9ae6-fea6ae898e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ece3bb-a528-4f1f-8ed9-466765ff724c",
        "cursor": {
          "ref": "5f9b3b41-3cb4-46c6-b19b-450f4643efcd",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "61f28d47-5456-46b5-8e30-3e4fd5618e22"
        },
        "item": {
          "id": "00ece3bb-a528-4f1f-8ed9-466765ff724c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c12d5da0-6b85-4b22-8224-17960a47a3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a53c5a8-c7ba-4a5a-b151-82d8bf2d6aa2",
        "cursor": {
          "ref": "4674da82-7287-4d04-9b57-b8b12331259a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0a8c6d22-5d9d-44ad-95eb-326befeb76e3"
        },
        "item": {
          "id": "5a53c5a8-c7ba-4a5a-b151-82d8bf2d6aa2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4f7c3831-c04a-4296-9bff-e8e614fe0613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8f4fea-05dd-41c3-a9bc-dda59ca11f16",
        "cursor": {
          "ref": "ef4f8361-1ecd-478c-948c-c5c4383c706e",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "16c038f0-657d-4a52-af7d-f8e9aa17394a"
        },
        "item": {
          "id": "de8f4fea-05dd-41c3-a9bc-dda59ca11f16",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "724e6f39-7055-4008-9ace-ecb731cfe438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e44134-2a9d-4266-835f-bc71db3b382b",
        "cursor": {
          "ref": "c2f4b639-ba75-4958-803f-89dabbc358dc",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e86247f3-5e3c-4ab9-baae-5c7a748733be"
        },
        "item": {
          "id": "b4e44134-2a9d-4266-835f-bc71db3b382b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c4a59a4e-9523-4f2a-a5b6-39c73e60139f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2f6003-8fc5-43ca-8118-492bccd6bf78",
        "cursor": {
          "ref": "df712596-df13-4af1-ac24-26c2727b4ca1",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "dc1625fc-b299-4d5c-bc9f-00ab161aef5f"
        },
        "item": {
          "id": "8f2f6003-8fc5-43ca-8118-492bccd6bf78",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "70b3c564-0f85-4ebf-9d3f-2598cf868414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cb124c-6435-4dd8-ba7b-690569998bfd",
        "cursor": {
          "ref": "cf9fca8a-6174-4aea-9d49-cc1a7817e48d",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c29a672c-25c3-445f-99fa-a93156d0a40a"
        },
        "item": {
          "id": "12cb124c-6435-4dd8-ba7b-690569998bfd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3efd4f67-5e21-47c0-87d4-ac74b5e7b484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278db912-c03a-43a0-88b2-2f5bed5f5149",
        "cursor": {
          "ref": "800f38b8-ccd8-46f8-a286-abe9eb4e9ffc",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d9b6f096-d795-4f95-987a-7653330269bc"
        },
        "item": {
          "id": "278db912-c03a-43a0-88b2-2f5bed5f5149",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6e0bbdcf-86db-4f4c-8297-a4f6485ca955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3b85c9-7528-4f40-90ab-7de05a26a44f",
        "cursor": {
          "ref": "fbff6804-a8c4-4916-ad17-aaf31591c63b",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1db68f0c-5269-4d3a-ab54-732add181083"
        },
        "item": {
          "id": "2b3b85c9-7528-4f40-90ab-7de05a26a44f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c374b594-de41-405b-a112-a69523853434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cbc39b-3526-4b03-a010-deebff52072d",
        "cursor": {
          "ref": "c94b6056-c89d-4dd7-bfd3-dad419560584",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f0ab3dfd-ea5c-4514-a64f-ce056c422eab"
        },
        "item": {
          "id": "82cbc39b-3526-4b03-a010-deebff52072d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0b74fa02-b3cb-4b4e-97c0-55b5b5c57577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0834ce-e6f8-465b-924c-bfdd7da7dc87",
        "cursor": {
          "ref": "910a0398-08e8-4102-b84c-42742a8e9b81",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "09d2921d-5c2a-4084-923a-cf6bf7309c58"
        },
        "item": {
          "id": "6b0834ce-e6f8-465b-924c-bfdd7da7dc87",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "563fda62-c88c-440d-8ba6-3663cad97784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58de2678-a352-4ded-a1f7-15e6748819e0",
        "cursor": {
          "ref": "7af30736-47a5-4edd-a908-0252bdbae32a",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "06c8066c-9cab-4263-9f89-8cbf2526a9ab"
        },
        "item": {
          "id": "58de2678-a352-4ded-a1f7-15e6748819e0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f2c73365-fca5-4599-9c4b-fcaeb3ab9f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5d11a9-b629-4447-9ba5-d3e1e6ab83e0",
        "cursor": {
          "ref": "1291ac98-3979-4004-a3da-753ed561475e",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1ddc4f77-652a-4d7e-8505-85f6e8db921d"
        },
        "item": {
          "id": "6a5d11a9-b629-4447-9ba5-d3e1e6ab83e0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e69c0f09-dc31-470f-8201-7c9030931cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1653e9-f1f8-4ad3-8194-10abf08e6f4d",
        "cursor": {
          "ref": "60280cae-9f5f-46fc-bf7d-f01f9aef7559",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "042444da-aa09-4344-92ad-caa12174f6e3"
        },
        "item": {
          "id": "2e1653e9-f1f8-4ad3-8194-10abf08e6f4d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e407d150-98b4-47ec-9f82-e7c89fa0b92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6a5f4f-deb9-47f6-8b5c-d696938e5b17",
        "cursor": {
          "ref": "b384fe5e-ba30-4baf-b50a-b8acfe788c57",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b8f1fd08-185c-49ee-8261-df1b771f7083"
        },
        "item": {
          "id": "ea6a5f4f-deb9-47f6-8b5c-d696938e5b17",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6197e380-0420-488c-baff-c6b9137f3e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5004de6-2f03-47b6-a5a8-46add85f08a8",
        "cursor": {
          "ref": "01331091-c152-4cf5-8c94-13f1f11d44fd",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5911cc6a-1b77-4e24-aba6-c627b3148ae8"
        },
        "item": {
          "id": "c5004de6-2f03-47b6-a5a8-46add85f08a8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5f4e036c-5321-4011-af3e-1ca2b04b88df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a496c53-88f5-4d2c-b802-ff0129eeb8c2",
        "cursor": {
          "ref": "7757b21c-8b56-48e1-94e9-acc6cc0cedba",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b1494b80-37c6-47eb-a428-9302052632c9"
        },
        "item": {
          "id": "6a496c53-88f5-4d2c-b802-ff0129eeb8c2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b317007f-a3a8-4918-8dbc-3bf2709e2cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec19e887-7455-4dc0-9824-cb676c6d40fa",
        "cursor": {
          "ref": "190423ac-868d-4154-b682-c62e7d41de99",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0517a819-3e3c-4a33-bdd3-6fa7aeb95a53"
        },
        "item": {
          "id": "ec19e887-7455-4dc0-9824-cb676c6d40fa",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cd9aec56-ac2d-4092-9e39-1ae86bef7946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c521ed9d-559f-478a-91ad-10f879b192b2",
        "cursor": {
          "ref": "6e6db18f-6ba5-42f9-ab89-19c3e984a5f5",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c72b467e-8639-41fb-8c3e-5a3678c383bd"
        },
        "item": {
          "id": "c521ed9d-559f-478a-91ad-10f879b192b2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "38074a19-5bfc-4456-8b3a-6bd04cbcff42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c06ef0-8868-49ce-a491-bd8c669a0095",
        "cursor": {
          "ref": "7006f279-b4a6-4067-a8c4-21d3b504fe45",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f892457a-b16b-4e1d-813c-a626201377fd"
        },
        "item": {
          "id": "a5c06ef0-8868-49ce-a491-bd8c669a0095",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4d9f38f3-6ef5-404e-854c-26ae9b88e1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71141a5d-6523-4119-ad79-045787e91e95",
        "cursor": {
          "ref": "12c41bde-21fa-42bd-8690-49f1a023838d",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "32c3d3c8-82a9-4580-b739-d637acb779a8"
        },
        "item": {
          "id": "71141a5d-6523-4119-ad79-045787e91e95",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "892a9e6a-d7ba-466e-914f-f79c91919338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9c6f50-057b-47f1-b281-7543ad4c50d9",
        "cursor": {
          "ref": "a2a58433-ac9c-4e02-b933-1e7b8fc09af1",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9c55bd65-6e88-4ad2-b71d-e4f51bb9a3c3"
        },
        "item": {
          "id": "ef9c6f50-057b-47f1-b281-7543ad4c50d9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "deb95f76-aacd-4101-9983-0c50f81873e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ba1d9e-dd8b-439b-a43f-4db654c6e359",
        "cursor": {
          "ref": "eb2672ba-1a6b-4281-9211-93962a3a0108",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a7b863e2-b477-4f5e-88fb-626c10c528da"
        },
        "item": {
          "id": "b7ba1d9e-dd8b-439b-a43f-4db654c6e359",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "56dd29bf-dcca-456d-a815-cb6d1858f6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0964c7-a57c-4472-87bb-b6878528b440",
        "cursor": {
          "ref": "3bfa9de0-362c-4668-9c95-30c0934039fd",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6cc6bd61-c7a6-46b8-aa11-9fa5b26b682c"
        },
        "item": {
          "id": "cf0964c7-a57c-4472-87bb-b6878528b440",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c50eb31e-2839-4dfe-990c-d888d76cc28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986a38ba-6645-42c7-b152-a29263534c13",
        "cursor": {
          "ref": "8e4f9c58-cf98-44ca-a3bb-e8797a720fdf",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "18766d7f-196a-4bdc-9eed-4b6d81965943"
        },
        "item": {
          "id": "986a38ba-6645-42c7-b152-a29263534c13",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9b6e8b6a-65cb-4e00-8cdf-d72b11a0c28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0c2a96-b6d7-4314-91c3-a231df1323fe",
        "cursor": {
          "ref": "8a7f336a-dbe6-4f9d-9965-22a9cd83ace2",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1f773357-5c75-429d-b876-7edcee31a0cf"
        },
        "item": {
          "id": "9f0c2a96-b6d7-4314-91c3-a231df1323fe",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "41aca8b1-7330-47f6-8277-9d431d658842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d1b1e3-319a-46f4-9f38-02a47fecd976",
        "cursor": {
          "ref": "343d0ef9-3f16-4d40-a6cc-046e100bb5f2",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4f18accc-92c2-4e74-bb5b-52d6ba6ece53"
        },
        "item": {
          "id": "17d1b1e3-319a-46f4-9f38-02a47fecd976",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d300a989-97af-4c68-a214-7069ce56a62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea349b4e-45ae-4927-851f-77444488892b",
        "cursor": {
          "ref": "7a2bb22c-7cd6-49a7-8288-6d86cd8cd391",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b4554fe2-5323-4a69-aa1c-3051edf3e2a4"
        },
        "item": {
          "id": "ea349b4e-45ae-4927-851f-77444488892b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "37a610dc-8430-4bdf-8149-ab24ec4eff33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca75e377-bf86-4bad-9714-1238312a3dfd",
        "cursor": {
          "ref": "a8475517-4b36-40c2-9751-f530d99cb144",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0b629bb4-aa89-4197-974c-b638a5fc5cb5"
        },
        "item": {
          "id": "ca75e377-bf86-4bad-9714-1238312a3dfd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2398bb62-d5da-4041-a667-b879aebfeea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b4a52b-5485-4bfb-b4ef-821644fb1a22",
        "cursor": {
          "ref": "88469fcd-d7f1-4800-ac32-39875f153443",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1275c9cb-79af-494f-9825-4cfa5c3a56e9"
        },
        "item": {
          "id": "50b4a52b-5485-4bfb-b4ef-821644fb1a22",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4b683867-9fea-4f05-a763-f3a594f1bb0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4d96ed-f248-45f5-8ea9-667bed6d0b41",
        "cursor": {
          "ref": "07ee7c6b-4141-4a60-9485-e94cdb9e9770",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2bedd204-6698-4845-acd0-44e94e1ff19f"
        },
        "item": {
          "id": "6f4d96ed-f248-45f5-8ea9-667bed6d0b41",
          "name": "credentials_issue"
        },
        "response": {
          "id": "aa93782e-34b7-473e-bd92-a1e8951dc64f",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "197deded-276c-4440-a417-112b75d5ec5b",
        "cursor": {
          "ref": "50f5adc5-cd0d-4dd9-b0f5-45142393690b",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a0ce19dd-be34-40eb-92ef-8de686829085"
        },
        "item": {
          "id": "197deded-276c-4440-a417-112b75d5ec5b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "815f5844-47a5-4369-ab52-d1bf799d0fbd",
          "status": "Created",
          "code": 201,
          "responseTime": 253,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0200f68d-8e38-46db-98a8-0721bd4329b9",
        "cursor": {
          "ref": "f01b060d-dbc4-4402-b3fd-5bf833917daf",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3bf35c82-663e-4a6e-a314-c252bdb4bdc4"
        },
        "item": {
          "id": "0200f68d-8e38-46db-98a8-0721bd4329b9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3e21d55e-4971-4a78-91d5-989a2dbd903a",
          "status": "Created",
          "code": 201,
          "responseTime": 63,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "26800ef4-0a47-472f-a1f5-bfa6d4035e7c",
        "cursor": {
          "ref": "2f366d73-48c5-4391-95b0-cc749b05c766",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "da71bbb3-5de0-4cad-aabd-a4a5f856cfdc"
        },
        "item": {
          "id": "26800ef4-0a47-472f-a1f5-bfa6d4035e7c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "80c40fcf-3ac2-414e-9e3b-67e9b4ba07ee",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4583346a-7b7a-4efe-bf03-892dc444b981",
        "cursor": {
          "ref": "d4fa5a22-337a-41db-8847-5d8059adcbbd",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c96041ad-4c9e-4606-a1ed-92d059f98c2e"
        },
        "item": {
          "id": "4583346a-7b7a-4efe-bf03-892dc444b981",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "65ed7e76-32ad-4053-bd3e-f09fb8083986",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1dc3a0-effb-404c-a7f7-c21355411cd9",
        "cursor": {
          "ref": "b605fbad-a0b1-4a17-b5eb-5970ad4983fd",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cb4a4616-b991-4f66-a04e-956491a8e4e4"
        },
        "item": {
          "id": "9a1dc3a0-effb-404c-a7f7-c21355411cd9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "dd5ebe02-85ce-46b8-b0a4-2454d45ac864",
          "status": "Created",
          "code": 201,
          "responseTime": 59,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db153ede-61d7-4d32-98f7-f9b6dd1086b8",
        "cursor": {
          "ref": "1ad895b8-721f-4fa6-b4ff-54d95a071a80",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8437060d-31c9-4f29-bdf3-7cd8c6e107aa"
        },
        "item": {
          "id": "db153ede-61d7-4d32-98f7-f9b6dd1086b8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d51d6868-f44a-4960-97e1-48dc1c373796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4b02fd-9cbd-48a3-b265-7f51331097ad",
        "cursor": {
          "ref": "c2b64128-5493-48dc-877b-813c0263cb78",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3190ae8b-1ccf-4c7b-8551-e614782ff733"
        },
        "item": {
          "id": "ff4b02fd-9cbd-48a3-b265-7f51331097ad",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8242a5db-6de4-4e72-91da-b6801694f5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0927de3-bc14-4cdb-8aa8-412695770da8",
        "cursor": {
          "ref": "003ccbd6-e0f4-43cf-9670-b21eb1cc2129",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c137dac1-2109-453c-8109-2ea9a7c8ae08"
        },
        "item": {
          "id": "b0927de3-bc14-4cdb-8aa8-412695770da8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2d0f898d-2b49-454c-baa9-53aa0b03a91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b914e554-94f7-44fe-b0a3-609725be645a",
        "cursor": {
          "ref": "c54a8bef-bda5-4ba8-996d-7f8cc11c9174",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "928ab226-c6cb-4a0c-b273-34992351501a"
        },
        "item": {
          "id": "b914e554-94f7-44fe-b0a3-609725be645a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3bbaecab-1b79-43c7-97d7-f0ae20c79278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f727ac13-6a45-4981-ab02-496588e2428d",
        "cursor": {
          "ref": "6f46f126-5e4d-40c9-9329-62d6c4d25eb3",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "08a2f981-d346-4bdb-a12d-e95bd3cedddc"
        },
        "item": {
          "id": "f727ac13-6a45-4981-ab02-496588e2428d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "abedab3d-e78b-4ceb-880a-eeb575ef774b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267f80ca-963b-49d7-9dda-c068e3b55272",
        "cursor": {
          "ref": "22c702c7-afc4-4272-bfe9-bf60d8785bdb",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c21fcfe0-e054-470c-8a41-5f3bc635758f"
        },
        "item": {
          "id": "267f80ca-963b-49d7-9dda-c068e3b55272",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1dae77f3-2d59-4464-b5db-1520ab044211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdfbe96-b27d-44f3-bc97-64cf235340d4",
        "cursor": {
          "ref": "cf75be36-524f-4fee-9d46-05ef911196d7",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9e2872a2-40ca-4c2e-afe6-975fa0314555"
        },
        "item": {
          "id": "fbdfbe96-b27d-44f3-bc97-64cf235340d4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3bc27c9f-2c14-498e-a34d-4638cc6bd2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf238ab1-165c-4fd2-967c-cae1e3456275",
        "cursor": {
          "ref": "a942e1f3-fd8b-4f47-9a56-08ff2f0d8bac",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b4855c3f-f948-4e2b-b557-5b8782df20c6"
        },
        "item": {
          "id": "bf238ab1-165c-4fd2-967c-cae1e3456275",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "301ce60e-10c7-42b5-8a12-3bedd2aa8e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef5852a-d695-41ac-9999-0e23135ef844",
        "cursor": {
          "ref": "6c9bf7cf-e12e-470c-b229-bc2939bf6031",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bebc208f-4c00-4bd3-a839-d4754b2622ed"
        },
        "item": {
          "id": "bef5852a-d695-41ac-9999-0e23135ef844",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7ede2478-5a5d-46a5-a58c-4f7ac386d94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa0c8a5-a719-4082-b8cf-406b5e0d90e1",
        "cursor": {
          "ref": "7380a952-5827-43ee-bbe3-5f5db4143288",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c6aa401a-099a-4fec-bac8-20173afc6ba5"
        },
        "item": {
          "id": "2aa0c8a5-a719-4082-b8cf-406b5e0d90e1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1d0e7dbe-3d74-4cc4-90a7-a2311ea02ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa905c03-bb3f-4547-9f9c-ece6eb0ca5fa",
        "cursor": {
          "ref": "929ae68e-3410-43df-a9fe-1545c84c7fae",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "984b70c8-050d-4c60-b964-027209936d32"
        },
        "item": {
          "id": "fa905c03-bb3f-4547-9f9c-ece6eb0ca5fa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5e277728-7848-44ce-9529-f91acd36028d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffaa780-83a7-49f8-a3b3-c0753848b801",
        "cursor": {
          "ref": "b776d524-a38e-4417-893e-95bf2479dcbe",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "deb7fe85-d825-444a-a09e-0aa7027969ef"
        },
        "item": {
          "id": "3ffaa780-83a7-49f8-a3b3-c0753848b801",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3c2eff6a-1e61-417a-ac1a-ea7b8d2050b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960dbdae-be61-4878-9e94-17a9392e108e",
        "cursor": {
          "ref": "0a29b295-ccbd-4f79-b095-00dc0ac4dbdf",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4b72069a-ba16-48fa-9b4d-3715cac1790c"
        },
        "item": {
          "id": "960dbdae-be61-4878-9e94-17a9392e108e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "55ef1f6e-6142-4c1d-96c2-21f4dca6b15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6adb6ea-5121-4172-86d7-105f1d7283aa",
        "cursor": {
          "ref": "26b92b86-af0c-48e7-9b3d-2f05e4b5b5c0",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0218b3d6-2c96-4a54-ba24-fa83c8d1fb37"
        },
        "item": {
          "id": "a6adb6ea-5121-4172-86d7-105f1d7283aa",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "699d3f8c-054a-48b9-b752-ed1d593b7a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fbae1a-f446-4c61-9298-aedccb041e19",
        "cursor": {
          "ref": "66b97c78-6f4d-4d6d-9270-0b388b10f64a",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3d000302-47d5-41e1-9b00-891359dc8419"
        },
        "item": {
          "id": "a3fbae1a-f446-4c61-9298-aedccb041e19",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "99326506-fefd-44f8-9cb0-59441566f29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd10c1f-cd94-4df0-8836-caa66ecad320",
        "cursor": {
          "ref": "7620ebc2-7c12-477f-a904-fbe97c7ca728",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1b778340-ce97-40e2-a7e0-a871440b342f"
        },
        "item": {
          "id": "cdd10c1f-cd94-4df0-8836-caa66ecad320",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e1c82e65-3457-491e-8174-6be20cdf38d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e36e945-adf0-4ba8-b8d4-a3bf75dad67e",
        "cursor": {
          "ref": "02e79fa4-4ce2-4f66-9f99-3ba56f084540",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d611b32c-fdb8-4cb1-98e9-896ab7e56c70"
        },
        "item": {
          "id": "4e36e945-adf0-4ba8-b8d4-a3bf75dad67e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c352e800-c4df-47ab-a9b2-9a84f68451cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86886e8f-ac62-4957-9a4b-8f51cc48f816",
        "cursor": {
          "ref": "bcf7294b-3d19-420e-96db-ed4cbd9238e0",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "37957e43-928b-4a42-8695-eb54029c780b"
        },
        "item": {
          "id": "86886e8f-ac62-4957-9a4b-8f51cc48f816",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a627e324-7813-499c-aff8-329ecd902414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7ea176-169b-4cfb-980f-ca89bbb1678e",
        "cursor": {
          "ref": "273e3dc4-05b9-4efa-9a52-e40b80317ea8",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9678c0d9-3cdb-4e12-b2c2-482f463a140e"
        },
        "item": {
          "id": "9c7ea176-169b-4cfb-980f-ca89bbb1678e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c053e7d6-0798-4377-9ea2-8e0982bc1ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbef5942-6cf8-4208-a0d7-26cd5c3a4f07",
        "cursor": {
          "ref": "88e8e3ef-c475-49be-9c02-4d0554db8c89",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b7e6301e-63e7-4ea7-a51a-4edc4bff5f81"
        },
        "item": {
          "id": "bbef5942-6cf8-4208-a0d7-26cd5c3a4f07",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "de701a6b-761f-4750-ab38-2d2a6a4f9610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8e4c74-06e4-40b8-880b-a6f643cc5d23",
        "cursor": {
          "ref": "f87dbfb7-4487-499c-a3a0-3fb3cc50396a",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0b16cb13-c8b5-4dd4-a380-1a5bd9801491"
        },
        "item": {
          "id": "8d8e4c74-06e4-40b8-880b-a6f643cc5d23",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "82611163-3058-4db6-9783-1fd39b3876fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a911a99-b552-4d72-b5ee-559616a2aa2a",
        "cursor": {
          "ref": "518b63f2-4adc-4542-ae17-4a78c11d8d62",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "34999d3e-cff4-4027-babb-1b980f170f99"
        },
        "item": {
          "id": "5a911a99-b552-4d72-b5ee-559616a2aa2a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "193c9636-c687-42f3-8917-881b98b5e621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de87841-0d15-4027-8c2a-885f1f1c6a79",
        "cursor": {
          "ref": "1a1c83f5-7cf3-483f-a64e-dbd36ec88370",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ae3cc160-e01e-4ef4-9339-bb6a290df808"
        },
        "item": {
          "id": "0de87841-0d15-4027-8c2a-885f1f1c6a79",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2d3872f6-ebf6-4207-9398-7f7c170da181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72330b1a-cfaa-4d3f-b0b6-161b1db72ac6",
        "cursor": {
          "ref": "9e7d7184-30cd-4b37-8ba0-81f653b2af5f",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5596d549-63a9-4f50-b684-34af4afaa3d2"
        },
        "item": {
          "id": "72330b1a-cfaa-4d3f-b0b6-161b1db72ac6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "67172e91-4f74-4f56-99a2-43a2e73d7d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294cba0b-cd60-4cf4-bc18-faab6a5b6b30",
        "cursor": {
          "ref": "145147a5-e1ca-4818-8b48-d7004f826b74",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "284e93b2-4be3-48b1-92e9-d78d2ae0e2a5"
        },
        "item": {
          "id": "294cba0b-cd60-4cf4-bc18-faab6a5b6b30",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fd1a834c-924f-4398-98aa-234021f20a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54e6376-4d5b-4efe-89e5-6e447bea5d7d",
        "cursor": {
          "ref": "4d2d8d2c-d24b-439d-b756-77bac35bc731",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4ce3fcdc-46f2-4ded-aab3-70409637316d"
        },
        "item": {
          "id": "f54e6376-4d5b-4efe-89e5-6e447bea5d7d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "90e85b71-104f-4293-aab1-bed37c4a478c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6e0343-ccda-40c6-b70e-f3f06cda9bf4",
        "cursor": {
          "ref": "47349f20-fb99-4f17-90de-3050629d3972",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d4f3e345-71f3-4b16-ae2b-3a3210d47b96"
        },
        "item": {
          "id": "6a6e0343-ccda-40c6-b70e-f3f06cda9bf4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5abcc697-65c6-44c8-905f-f0d78b2aae93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7e9941-e7cf-4ca8-9f6d-a8a3086aec79",
        "cursor": {
          "ref": "59c9a1e2-e9f6-4380-9533-7de527031a5b",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "943e8560-1372-4864-9e86-8eab940e5b2b"
        },
        "item": {
          "id": "6b7e9941-e7cf-4ca8-9f6d-a8a3086aec79",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "817d480b-a7e7-40fb-b24e-353ccec76ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b562626-c8e7-4d10-92af-318f5d2bf32b",
        "cursor": {
          "ref": "fe718a48-c756-46a4-b71e-2c29a7753abf",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4f8bb314-aada-44c9-a9b5-5f7bf0febdf4"
        },
        "item": {
          "id": "2b562626-c8e7-4d10-92af-318f5d2bf32b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "75e38a2b-cb20-4ef4-9904-f299ae8c620e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1daf49f3-facc-4916-85c5-84d250652a76",
        "cursor": {
          "ref": "4e81154a-51df-4c2e-860d-1f914f229bd6",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e0c20c79-36ec-489f-a6d6-721545ca1a61"
        },
        "item": {
          "id": "1daf49f3-facc-4916-85c5-84d250652a76",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f9f9c1a7-de27-4afe-a9ea-1e5de449a153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1233b719-0c67-4df2-9ec3-49f1f57e0cdd",
        "cursor": {
          "ref": "bb038229-f334-45b6-b3e5-b447d9ac1fa2",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "42b78ea3-cf7e-416a-ac0b-01993f0d34ba"
        },
        "item": {
          "id": "1233b719-0c67-4df2-9ec3-49f1f57e0cdd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "757e03bb-1c0f-487d-9fca-e99321eb8083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3cdef9-94bc-40f8-9abd-8a77f7b094b5",
        "cursor": {
          "ref": "0f0afed0-f654-4f1c-b844-83e302e78841",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "856ca160-7633-4d5a-9bbe-ac62b28c6aff"
        },
        "item": {
          "id": "9e3cdef9-94bc-40f8-9abd-8a77f7b094b5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "935146d0-f407-4790-a75c-0437dd3dc1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebcfea9-abd8-4015-b022-7b79cb2de7d1",
        "cursor": {
          "ref": "d938dc7a-1b76-4e63-8497-797ccde46996",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "eedb8830-d3f7-4dd0-9e4e-674cd512c99e"
        },
        "item": {
          "id": "0ebcfea9-abd8-4015-b022-7b79cb2de7d1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "864f499c-4d1e-4703-8b17-06c76ca2c16a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e45ba40-77ac-4acc-9b17-cb3d91cc3b1e",
        "cursor": {
          "ref": "63b5d4d4-1b4f-49bf-a278-c55ceca47963",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "26a6caf3-bd45-4904-8086-951bd7fc5bc4"
        },
        "item": {
          "id": "2e45ba40-77ac-4acc-9b17-cb3d91cc3b1e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5a18baf5-bdfa-4b81-a9ee-bbf90b446621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5065a776-5740-46c0-90fa-3d2eae6d0d62",
        "cursor": {
          "ref": "5138279a-4816-48ee-b338-c92c8adb8612",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c1b0e55d-708e-4e31-9b77-ec34e4125216"
        },
        "item": {
          "id": "5065a776-5740-46c0-90fa-3d2eae6d0d62",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "31e7806b-2e2a-4988-a40d-1a8c987550ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c51af9-4455-45da-b2d5-12bce7b660e6",
        "cursor": {
          "ref": "94df588d-9362-4e5d-9dda-e67e3bb81fcc",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "730fea58-7277-4133-8476-78857861dd4a"
        },
        "item": {
          "id": "e7c51af9-4455-45da-b2d5-12bce7b660e6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7334595d-477d-4156-8ae3-14dcede1ebc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bed661-ec91-475b-b52f-adc42d7b4b39",
        "cursor": {
          "ref": "972787f4-c580-41c7-8e1e-4cd45bdc077e",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "754564e3-7676-4f6a-b0dc-4bc27968f07e"
        },
        "item": {
          "id": "32bed661-ec91-475b-b52f-adc42d7b4b39",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7490913e-8f23-4828-b34a-a94a08df6bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c80c0b-694e-473b-aba8-785d3c7ba46a",
        "cursor": {
          "ref": "a07bd33b-fe61-4d58-be56-6e2b1513d234",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bee933d4-bd36-4e4c-b75e-aa2c145d19ab"
        },
        "item": {
          "id": "36c80c0b-694e-473b-aba8-785d3c7ba46a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "04389d4e-923a-4d01-91d3-7e02e2446922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31724e0-37bd-4a30-8250-a8068acb0a03",
        "cursor": {
          "ref": "a25aa28c-230d-4aa6-9496-cabda0256847",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "39034555-3a05-4045-9630-7f4107934458"
        },
        "item": {
          "id": "d31724e0-37bd-4a30-8250-a8068acb0a03",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8b0b6c97-a6c9-4091-a0e8-c7634bd3fa05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2f102b-eb14-4fb7-8ef7-2712c535e9cd",
        "cursor": {
          "ref": "21bf6f46-a89d-4063-9058-bc220f127104",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "57fb0c19-3939-470e-8ff1-4e660a6463a7"
        },
        "item": {
          "id": "6b2f102b-eb14-4fb7-8ef7-2712c535e9cd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3de2c2b2-49a7-4713-8961-cca490678e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70334ab1-8cd1-4b56-8bf7-718aefd1fab1",
        "cursor": {
          "ref": "28019e8d-216a-4355-a097-bf12e93aaee5",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2f67f4a2-ded0-49e5-9c08-0d3c74c22271"
        },
        "item": {
          "id": "70334ab1-8cd1-4b56-8bf7-718aefd1fab1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3563fccc-f110-4863-8e82-f974c27cd8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0bacde-e0f9-4dc8-9e65-acd27f93e290",
        "cursor": {
          "ref": "0d040cd9-d266-4e6a-a4fa-66a19e2014b3",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9131c6a8-827d-428f-ab91-75e3128c60d9"
        },
        "item": {
          "id": "af0bacde-e0f9-4dc8-9e65-acd27f93e290",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "49fc8113-727d-41b1-a859-b21ef0537416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15470066-f5ad-46f2-9bc5-e63d8a413849",
        "cursor": {
          "ref": "2294487b-b3f0-4815-b6d3-60ad51f01e23",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0585f541-252d-4a2f-97ff-236f601454ae"
        },
        "item": {
          "id": "15470066-f5ad-46f2-9bc5-e63d8a413849",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "61d33533-bf79-4ad9-b29e-ccad4f2fd984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e06a29f-fbe3-4187-a59f-96c018bb9f18",
        "cursor": {
          "ref": "906633a4-8ac6-4698-9c14-1f546f01814e",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "87b3cc50-1614-42ac-af3c-9232c80dc60f"
        },
        "item": {
          "id": "5e06a29f-fbe3-4187-a59f-96c018bb9f18",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1cba158a-f863-44d5-8251-747f8fa1f028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6f2479-cd3c-4d57-a560-2ef4cb62f887",
        "cursor": {
          "ref": "0c9cc346-5465-4df9-912d-b16490fc6083",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "daf20e26-b105-4704-b718-2ed52b17e719"
        },
        "item": {
          "id": "7d6f2479-cd3c-4d57-a560-2ef4cb62f887",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "876e5412-f64f-4484-82ee-bd7d871ec8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b04ad2-074f-4235-9a3a-40bfbb1ea44e",
        "cursor": {
          "ref": "4853a48c-5ff2-4ce7-abae-d20eae0b9efe",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c5fac753-ccd3-4c56-806f-31775a4a314d"
        },
        "item": {
          "id": "23b04ad2-074f-4235-9a3a-40bfbb1ea44e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5c12553b-f097-4b2d-9cb1-2952ee363999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8dd91a-f5b8-42f5-8cd5-e304fd1a4f5c",
        "cursor": {
          "ref": "18d9ed37-3075-45d7-b615-a08ead66e73e",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c194657f-8a53-4f11-8041-05cd94c502f0"
        },
        "item": {
          "id": "6d8dd91a-f5b8-42f5-8cd5-e304fd1a4f5c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5c68e293-7ef0-4587-a83d-61a2a3b184d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd37f37d-71ac-4b98-a287-abd6ac7d5ffd",
        "cursor": {
          "ref": "a0510e27-d15b-4a79-bf76-d524d21169d8",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f74a35c3-4a3e-4ffc-b3b9-9d96cab6d80a"
        },
        "item": {
          "id": "bd37f37d-71ac-4b98-a287-abd6ac7d5ffd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3cfe783f-a1ae-4bf9-b791-1fbd04bef4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8e6104-03de-4709-955e-26e2a4c4a708",
        "cursor": {
          "ref": "4d68b74e-625f-4e96-9215-e93a3a520d86",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "121439ac-30b0-4d76-a181-dd9d0e36efa8"
        },
        "item": {
          "id": "ea8e6104-03de-4709-955e-26e2a4c4a708",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "03b9dd86-9524-45e9-a497-bda7ca7635b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e763ed-722e-4f1a-a3d1-6e42d4bdacb9",
        "cursor": {
          "ref": "bba42a40-adfb-40aa-981c-d6910ffdbed2",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "04d7fd24-def9-468d-ade2-ebe1b7f3cbfe"
        },
        "item": {
          "id": "84e763ed-722e-4f1a-a3d1-6e42d4bdacb9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "23ff76e4-71f4-426d-ac8c-95954a5c7cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d44d3b-74fc-496a-b4fb-361d83cfcff3",
        "cursor": {
          "ref": "5888688f-2e52-4bb9-b135-ab4d4b0a7b53",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "42a28d2a-1712-4825-9b79-bdeaa9aee3d5"
        },
        "item": {
          "id": "d7d44d3b-74fc-496a-b4fb-361d83cfcff3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c21582e3-7d5c-41cb-8a33-b484a45a1443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd65513-6cec-4f92-be8d-45c1213ad013",
        "cursor": {
          "ref": "434e9d58-c767-4837-9e63-a71b34292cfa",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0fc4eb30-84f8-489b-9a1b-cb86cb14e348"
        },
        "item": {
          "id": "2fd65513-6cec-4f92-be8d-45c1213ad013",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d9786f41-0049-486f-8626-78aba792b5fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e1b996-4c2c-4315-87c1-9cd6fd7e87d9",
        "cursor": {
          "ref": "f1c68da7-0d4e-43c5-ad6f-8c6dca86969c",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9dac2850-a779-48b4-9b36-80e03a9ac325"
        },
        "item": {
          "id": "33e1b996-4c2c-4315-87c1-9cd6fd7e87d9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "361955b0-09e5-4e8b-8990-53e564ed20e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13444569-c43f-4fb0-8bf1-0a84e95825a6",
        "cursor": {
          "ref": "415af0b5-e154-4631-9ed8-41d25a928d52",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4419fce4-4a4b-4341-bb02-6d6276ac1f0e"
        },
        "item": {
          "id": "13444569-c43f-4fb0-8bf1-0a84e95825a6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1c2c4b5e-2f14-45a4-b130-ba7e5a371ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de25c704-42fd-4e9c-b84d-5a72f31161fe",
        "cursor": {
          "ref": "b7526e57-711c-40ee-b16d-06bb950ecf14",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "75d03f25-8067-4cce-8968-df4fd16740a6"
        },
        "item": {
          "id": "de25c704-42fd-4e9c-b84d-5a72f31161fe",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "024fb4ab-cc47-45f7-b151-d19eaf7c0395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad82c762-84c2-464a-ae1e-87b94b8cbb38",
        "cursor": {
          "ref": "8f943d4f-d520-4d47-8855-ecf2f4ed7a2e",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6137cc55-3af1-44eb-9290-c39228f5d5e0"
        },
        "item": {
          "id": "ad82c762-84c2-464a-ae1e-87b94b8cbb38",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6563ad9c-24f9-4119-a421-31a01168c2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a33662-84e0-4065-9ec9-4695675ee9db",
        "cursor": {
          "ref": "0fa12459-85c2-4d8f-a382-e9097da857e1",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b46851ad-7dca-4032-9352-96b6e76748c5"
        },
        "item": {
          "id": "66a33662-84e0-4065-9ec9-4695675ee9db",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1db1a4d8-5518-43b5-a5db-04a0786162f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763caee1-7969-416a-8385-f1c1d55f1b53",
        "cursor": {
          "ref": "b3ab4f11-0631-49f6-900e-0baed338def9",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0458fc1b-12ea-47a9-aa65-11cf1a728db1"
        },
        "item": {
          "id": "763caee1-7969-416a-8385-f1c1d55f1b53",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "19281354-6712-4b37-aad1-a667c2a592b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb391fa5-512b-4ca5-994e-dda28307b7b1",
        "cursor": {
          "ref": "cf810893-3b67-4709-95be-e63d496117b6",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c8f177db-c628-4a57-a6f4-64b26ae09e01"
        },
        "item": {
          "id": "cb391fa5-512b-4ca5-994e-dda28307b7b1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ca09739e-aa00-480f-9987-ff39f2c5f513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378ef6a0-0015-4b64-ae68-092dec7e43dd",
        "cursor": {
          "ref": "e898d272-ba2a-4d57-87b1-37e7e125a3d1",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "312843fd-f811-4d3b-b49f-7146ecb78aa3"
        },
        "item": {
          "id": "378ef6a0-0015-4b64-ae68-092dec7e43dd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "82f3cc35-8449-4005-b2b0-e1317ef44f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157a8ae9-31b5-46d2-abbd-28d1b4c01038",
        "cursor": {
          "ref": "df5554f3-84ea-4a1d-9dc5-05ef1065fc15",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "71de94da-542e-4166-a222-71af24383f6a"
        },
        "item": {
          "id": "157a8ae9-31b5-46d2-abbd-28d1b4c01038",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "61fbc2e8-8733-4ea9-933c-90b1e1b0c617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc7876c-8594-44e7-9936-a6439f73ea25",
        "cursor": {
          "ref": "e26500f3-8a94-49b6-84fa-62db0300010c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6520820f-bc9e-441b-972e-1d3c0c67884e"
        },
        "item": {
          "id": "0fc7876c-8594-44e7-9936-a6439f73ea25",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e0333d14-633f-421a-80d4-b16ca69958fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a2cbd7-3b54-4e25-973d-2f07dc8e8dc0",
        "cursor": {
          "ref": "8fe75d09-6115-4029-a272-10f71d341cee",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8ff36a03-87c6-4618-a348-9b33d7dd84a8"
        },
        "item": {
          "id": "b9a2cbd7-3b54-4e25-973d-2f07dc8e8dc0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b17ec695-e24d-4387-adb2-70b0ed0e30a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1249a934-80ac-4b71-94e0-38c32c7e9375",
        "cursor": {
          "ref": "b2e247aa-d357-43bd-85f1-f22bb59ae977",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1996ec3b-c656-4118-923f-c1450aa35751"
        },
        "item": {
          "id": "1249a934-80ac-4b71-94e0-38c32c7e9375",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "38449e0f-92e3-482d-b522-749392e1b0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df68b84d-3df4-445c-92c6-1de8d9409a72",
        "cursor": {
          "ref": "4b968a35-6b59-48ef-843a-b8a49d57f894",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "55169f60-1506-4018-8522-d86725b6ecf6"
        },
        "item": {
          "id": "df68b84d-3df4-445c-92c6-1de8d9409a72",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "05786a93-3913-46c4-b443-cc6afb179d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c392fe98-6909-4d3b-9b07-50cacb71ae2d",
        "cursor": {
          "ref": "e80588af-1bdf-4260-ad36-97c686815b81",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b1110625-b123-4568-bfa7-14062462ee83"
        },
        "item": {
          "id": "c392fe98-6909-4d3b-9b07-50cacb71ae2d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1071cb70-883e-4f66-8809-256c07e3c443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd23e322-57e6-445c-9586-5627ae6be602",
        "cursor": {
          "ref": "cc47f268-c6df-4b46-9440-333bec7333fa",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2dc3058e-43cc-41d9-bd8f-054fb5c4ad1b"
        },
        "item": {
          "id": "bd23e322-57e6-445c-9586-5627ae6be602",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f1dd8ac9-d88c-4e1a-a76d-e6fffc5d916a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc4ce8c-db88-4584-ad18-18ef704bbe9a",
        "cursor": {
          "ref": "8260ea25-d9a2-413a-9ba8-9035be809afe",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "645960d4-3d1a-4307-b899-077c5ff66720"
        },
        "item": {
          "id": "ecc4ce8c-db88-4584-ad18-18ef704bbe9a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a2790290-7fde-4196-8b35-bd6698af8e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbd120c-d29f-47a8-8a91-d8b73102ef89",
        "cursor": {
          "ref": "4853aed2-665a-4f7f-9dd2-26d21e9e6df7",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "00b32c2b-2463-4eec-8899-116680103673"
        },
        "item": {
          "id": "cdbd120c-d29f-47a8-8a91-d8b73102ef89",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0e04042c-d39e-45fe-8a1a-520425681592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4795dcc9-5cbf-4cde-814b-2d4ef43ceadb",
        "cursor": {
          "ref": "44ce3a56-8d52-4575-853a-b66e6d7fd483",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8aa3adcc-57c7-4c20-9cc6-c52a152c17df"
        },
        "item": {
          "id": "4795dcc9-5cbf-4cde-814b-2d4ef43ceadb",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "249f8185-c627-4ea2-aee7-c94fb3962efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f486199-a7e3-4786-8513-4383d2954f13",
        "cursor": {
          "ref": "91eb8ebc-852f-4383-80d5-1cba7e998286",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "99b644c7-e3b6-4e5c-8ac5-77fc2b4e6668"
        },
        "item": {
          "id": "5f486199-a7e3-4786-8513-4383d2954f13",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "eb116cdb-bf12-44b5-8dc7-19b9e306bde8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940a3cea-a110-4a73-b7c5-9eb42d0cd046",
        "cursor": {
          "ref": "4a4257d2-e64f-487c-bfe2-3eefb3017488",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0808ae04-717c-4704-887b-39e14ed34566"
        },
        "item": {
          "id": "940a3cea-a110-4a73-b7c5-9eb42d0cd046",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7526734c-db21-4c06-85bc-2c8a31ce9ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f0f521-4c49-4b85-a585-16daeb46c14e",
        "cursor": {
          "ref": "59ed1d40-e3bd-419c-aab8-4c18ac8f837f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "936c0625-1cf6-4311-a0ce-0496f09133f6"
        },
        "item": {
          "id": "b0f0f521-4c49-4b85-a585-16daeb46c14e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "aacd99d8-52ae-40aa-8b0e-19fc19996690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10752335-5072-4e83-969c-b23feb3f5cbf",
        "cursor": {
          "ref": "6debea49-34db-41fa-bae9-0aec3db57da8",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5a755c29-c818-4b4e-ac7b-a4754931bb7e"
        },
        "item": {
          "id": "10752335-5072-4e83-969c-b23feb3f5cbf",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0bc118cf-c17b-4ef6-96e6-5c729f08551e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebaf3390-0e73-4829-9ac0-fad923b0a73a",
        "cursor": {
          "ref": "9029b694-d6e7-4530-93a2-83aa1c7c1280",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d690a8e5-8162-4c02-b1bc-8eff5b0401de"
        },
        "item": {
          "id": "ebaf3390-0e73-4829-9ac0-fad923b0a73a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8fb3554f-6b58-4865-8037-0832da7974ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6cd14e-f720-45ba-adbb-34c21f83b27f",
        "cursor": {
          "ref": "6b10eb1f-b0b5-4bbc-8d3f-62da4b20d76c",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "337ad664-9182-4031-a34c-b21aeebc74c7"
        },
        "item": {
          "id": "5c6cd14e-f720-45ba-adbb-34c21f83b27f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "02e9d989-2e30-4996-9937-d4438b79b81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844865f6-a9c3-41f8-b3d7-3fd253ab5769",
        "cursor": {
          "ref": "2e4f3cac-ac43-4e74-bd6d-dfdb01414c29",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "209a97e1-aa5b-4be1-855d-ebb2128a60ad"
        },
        "item": {
          "id": "844865f6-a9c3-41f8-b3d7-3fd253ab5769",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ad69d3bc-4e76-4f25-a189-0ee23502f08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938370ec-acf9-41fe-9e7d-b5cd595bbade",
        "cursor": {
          "ref": "074805c2-c91e-415e-b2f3-b6bbc11a1916",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "30892ec5-62cb-4a33-844e-d21b209bb8a6"
        },
        "item": {
          "id": "938370ec-acf9-41fe-9e7d-b5cd595bbade",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "48eab4c1-40bc-4c2f-addb-4c0255e5a83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c479bed5-598b-4565-bef3-24009bbcc463",
        "cursor": {
          "ref": "3cfae557-e910-474a-88e8-fb583b733ffd",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "996d9cfd-0508-4474-b5a2-482a1fccf04d"
        },
        "item": {
          "id": "c479bed5-598b-4565-bef3-24009bbcc463",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "46cecb87-eabe-4058-95f1-e2c41533c8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77939e0-b7c3-475d-88dc-061fd83b7824",
        "cursor": {
          "ref": "43355c2d-3243-4a9f-8240-4398773372dd",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7fa55252-030c-4aac-909a-11a655c8d499"
        },
        "item": {
          "id": "b77939e0-b7c3-475d-88dc-061fd83b7824",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a03f0b52-d9e3-44d0-a5b9-e640b24388ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f6c590-4670-497b-bc2c-a9718a8cbbb5",
        "cursor": {
          "ref": "3f47a10c-3011-47a0-a136-03c39fbf5334",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "af862c26-95e5-4d27-8e5f-adef0c7dd9fc"
        },
        "item": {
          "id": "a8f6c590-4670-497b-bc2c-a9718a8cbbb5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e4562f7a-5a64-43f6-b9a1-3aaf73b73235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff98187-6d51-4003-bf90-a79560237a7c",
        "cursor": {
          "ref": "4c88bee6-d2ac-4fe4-9c1a-804e20c2af2e",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e6dbe13d-68b3-44b4-b283-c6fab1448951"
        },
        "item": {
          "id": "aff98187-6d51-4003-bf90-a79560237a7c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9d830f38-08b0-4059-84ce-afae8a7ac666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a02dc3-abb1-445e-bd2a-bc240d00fc20",
        "cursor": {
          "ref": "3e7aad1d-bbe4-4720-bbf0-a7148a2ba3c3",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "39878d33-cb5e-4450-acfa-0242271f268c"
        },
        "item": {
          "id": "e8a02dc3-abb1-445e-bd2a-bc240d00fc20",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "964ef988-4f9c-461e-aa58-4b69443f9d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed2facd-48c9-46ba-9011-40064a32a259",
        "cursor": {
          "ref": "69e589af-3833-4f48-bf2f-f83c7308abf5",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "28048490-3e66-4214-a70e-fa57f72166d1"
        },
        "item": {
          "id": "1ed2facd-48c9-46ba-9011-40064a32a259",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c1f83e8a-6fb3-49a6-b6a8-fd79b29fc74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef60c983-5d08-48ff-9d16-befa79c158e8",
        "cursor": {
          "ref": "356c8be6-13a2-48f7-91bc-f0a9b988587d",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "23c6d582-647e-4118-9379-06e426df46a9"
        },
        "item": {
          "id": "ef60c983-5d08-48ff-9d16-befa79c158e8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3f68ad19-a519-4bc0-8c56-b4923cf32d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a26894-64d6-421d-9f6e-8cccb6347f7c",
        "cursor": {
          "ref": "ec1174f0-c3b9-4558-89b4-f77160bef01c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5ed496ed-7ab5-4c51-bb6c-cddc6d82f7de"
        },
        "item": {
          "id": "d3a26894-64d6-421d-9f6e-8cccb6347f7c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cf2962fa-f6cd-4e74-8d7d-02bf7670a229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6028960c-de48-4f23-a41d-7c35a2e2fb1f",
        "cursor": {
          "ref": "e3d056fa-5681-4424-a588-4549706aa6ad",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9423ca26-cc61-475a-beb9-12d5ed446bc9"
        },
        "item": {
          "id": "6028960c-de48-4f23-a41d-7c35a2e2fb1f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "242c2d29-2110-413f-975d-f0b69afeab2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4247800d-a14e-4efb-8876-c806220a5196",
        "cursor": {
          "ref": "fcdf6dcd-1395-42ea-8e55-5120d8b5de6e",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "26951e11-a01a-4d4b-9f49-386eebe2943b"
        },
        "item": {
          "id": "4247800d-a14e-4efb-8876-c806220a5196",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "12b6f1aa-91ff-48fc-9884-9034fb46ae23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b360cef-951b-4aba-af67-350149884630",
        "cursor": {
          "ref": "a10131db-df73-42f5-aae4-1b29212ba659",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "65844f8e-aaef-474f-b3bd-fb68b1daa744"
        },
        "item": {
          "id": "8b360cef-951b-4aba-af67-350149884630",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "857568f1-2961-495e-bb2b-e128dddab5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8166f09d-87f1-474f-b06a-726c3c1a1a17",
        "cursor": {
          "ref": "0673e186-96de-4732-8e9b-e196028e1de0",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "dd9b55d8-fd39-45a7-a4ec-ae5aeedeb8d5"
        },
        "item": {
          "id": "8166f09d-87f1-474f-b06a-726c3c1a1a17",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a93d7a3a-ecc2-4819-8deb-53f45cfe0590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0084bf35-4181-421c-9a9e-644af8b49a29",
        "cursor": {
          "ref": "277f964b-7a55-40f6-b467-24ed7843e023",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8a32301d-5d92-493f-9d5b-9dca4f2da7c0"
        },
        "item": {
          "id": "0084bf35-4181-421c-9a9e-644af8b49a29",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "35a2de5a-6c46-49cb-9a85-5a2610204afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72f71f7-17cd-4012-9070-4efa69f79303",
        "cursor": {
          "ref": "46c21971-2911-4fb9-a05d-6576343abb44",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "68ca2023-a422-4bd5-b094-93b735a8a081"
        },
        "item": {
          "id": "d72f71f7-17cd-4012-9070-4efa69f79303",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4e4f0bf9-3032-4998-b047-ce48c9fb4401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e099d048-f977-4207-b98a-9a72b356ec32",
        "cursor": {
          "ref": "bdbfb77d-d41b-4bf8-87dc-d542227ccd86",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9b89e3ac-bc43-4c7f-be64-5a862110f48d"
        },
        "item": {
          "id": "e099d048-f977-4207-b98a-9a72b356ec32",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a69dad6d-2b3c-43c1-9569-24531eb79108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e555f5-fba7-4fe4-b2cf-1720d091ece9",
        "cursor": {
          "ref": "d52063c2-e0ba-4722-9bfe-b89e49637e5c",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "86baf7dd-cfad-4ed7-8078-7dc664fb2f78"
        },
        "item": {
          "id": "b6e555f5-fba7-4fe4-b2cf-1720d091ece9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7ab28418-6494-47aa-8dcc-808a136f826e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b947893-6b6c-4a8b-b129-23aac4da240e",
        "cursor": {
          "ref": "1ef998f4-5d54-4336-badf-3f1ad817c798",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b038f920-ca1b-42b2-821f-ccffb1f6fd76"
        },
        "item": {
          "id": "8b947893-6b6c-4a8b-b129-23aac4da240e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d24e5dd0-2a25-446e-beb8-24c175a763a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1afa19-57f3-4169-87de-616c92b6facc",
        "cursor": {
          "ref": "0abfc4bd-7108-48e2-8dbe-3bc2ac7c80f5",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e9a00b51-3dc1-41c8-90e0-1b8a34fe90e0"
        },
        "item": {
          "id": "cc1afa19-57f3-4169-87de-616c92b6facc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "035a4b58-8a21-4ae2-a825-80d127158822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317fa94c-6069-4d4a-842c-3e1b85c13ef4",
        "cursor": {
          "ref": "c055cc8a-1e96-4054-8082-91511795da2e",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "416baf64-fc04-4167-a39a-0436703735ba"
        },
        "item": {
          "id": "317fa94c-6069-4d4a-842c-3e1b85c13ef4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8cfd00da-1872-4f34-8643-3d040f9af005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b595a9cd-fe5f-4fa3-a116-f95e3b311f94",
        "cursor": {
          "ref": "3ddafcf3-aa84-4e70-af67-704f71ac5849",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4c47b4ff-dfd9-4a81-bebc-5ea40276b258"
        },
        "item": {
          "id": "b595a9cd-fe5f-4fa3-a116-f95e3b311f94",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a05129c1-49bd-4c95-9226-763eabd60d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7b5d11-78fa-4df7-8160-123a29cfe1af",
        "cursor": {
          "ref": "dfe5ec72-4dcc-4f3e-a536-ffb2bfe15c1f",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7f2bb0d5-ac67-4653-8192-1f84c535e3af"
        },
        "item": {
          "id": "7c7b5d11-78fa-4df7-8160-123a29cfe1af",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1a635a88-5303-414b-a3b5-45854dfba3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b939f5-e124-436c-99a4-301c062d8b0a",
        "cursor": {
          "ref": "91388040-3ca9-45f4-a02a-0611f35b7d43",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a1905505-c2e6-4d40-bcdc-2d17640381a0"
        },
        "item": {
          "id": "c6b939f5-e124-436c-99a4-301c062d8b0a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8eea0c04-9359-4bd1-871c-dfa26d8e81fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5d1242-3d40-41c2-b60b-09694a54d04a",
        "cursor": {
          "ref": "5908db3b-c765-4e64-8d4a-40876266d542",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cfe43eee-af67-400d-86dd-ecd4dfd8fd60"
        },
        "item": {
          "id": "1d5d1242-3d40-41c2-b60b-09694a54d04a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e51963fa-080c-4319-95a2-c8e53ea1b729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70dd969b-2013-41a8-b0ff-2efc8809a51d",
        "cursor": {
          "ref": "b62b6745-442d-4274-aab3-19e0c0124ec2",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c4a74f5f-328b-4055-940b-061767997148"
        },
        "item": {
          "id": "70dd969b-2013-41a8-b0ff-2efc8809a51d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b4d45473-773b-43c9-bbe7-338dd926ddb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596132cd-f15d-437c-957f-a6c8ca9d0629",
        "cursor": {
          "ref": "4a53fa8b-6d6e-448b-b319-105b8dc84578",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bed5c920-7e3c-4564-b1ff-bcf185deaef0"
        },
        "item": {
          "id": "596132cd-f15d-437c-957f-a6c8ca9d0629",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2a87a505-d217-471d-ae6e-de083f1b8a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ae727c-adb0-4cc0-a86c-36b7d00b12c9",
        "cursor": {
          "ref": "fa5b27a0-420f-403e-86b5-6490c7da6163",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5233d166-d85d-4400-b434-7a7db96f56c0"
        },
        "item": {
          "id": "d0ae727c-adb0-4cc0-a86c-36b7d00b12c9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "29779277-af70-4736-aa90-cda3229b5965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962d5b6f-b589-4a02-af9a-c1e4546e3d0d",
        "cursor": {
          "ref": "fcffa6e8-a8a6-4688-95fe-8d51408bdff9",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "06ad9545-dbb9-46d1-8213-fcc7a67eb5ba"
        },
        "item": {
          "id": "962d5b6f-b589-4a02-af9a-c1e4546e3d0d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0af39f4c-edbe-41ea-a39f-57fae77689e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa87a7f-a64e-4acb-90dd-74209315d588",
        "cursor": {
          "ref": "7e056997-d5ca-433a-8051-0c03ddcedee9",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a3b725d0-410f-4d4b-bddd-bd05e5883e3b"
        },
        "item": {
          "id": "baa87a7f-a64e-4acb-90dd-74209315d588",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ee9ad9d7-e8fb-401a-9a99-44f17d4f3424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc97a44e-4577-4c08-9486-8c68a0e6029e",
        "cursor": {
          "ref": "1c872557-4618-4bc3-b850-f8f4dd08402f",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "07dc4a74-0982-4c59-8f48-1310fc65ac1e"
        },
        "item": {
          "id": "fc97a44e-4577-4c08-9486-8c68a0e6029e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e258faf9-b0ee-4040-b27c-43a475fcd758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c9b863-2fe3-46e2-8ded-b221d4806b78",
        "cursor": {
          "ref": "e726c6c2-1ba5-4dde-8029-d99a72ca5928",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2de59c21-ab19-4e71-9682-3793205f920e"
        },
        "item": {
          "id": "d0c9b863-2fe3-46e2-8ded-b221d4806b78",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3e0bb326-5561-492e-bc45-dd4c371787b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc35373-0de0-4c8c-a6da-0c1ef999e989",
        "cursor": {
          "ref": "d06b9ba3-2c9f-4098-9cf1-a83b8e4348b6",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4fa704af-f93e-46b5-a7be-11a82c2b214b"
        },
        "item": {
          "id": "3cc35373-0de0-4c8c-a6da-0c1ef999e989",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "32eb1424-b3a0-4e03-a9d8-22604e2d5c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a6bf6b-9044-4d09-a3a7-9ed08e3c1ddb",
        "cursor": {
          "ref": "df71519d-9bdb-4579-a17f-5d8321473755",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "227a9a39-4384-4c16-9975-61832928e45f"
        },
        "item": {
          "id": "25a6bf6b-9044-4d09-a3a7-9ed08e3c1ddb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "73825a85-4bff-41b7-a589-0c9b9151b72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46819a70-8c2d-4beb-a72c-d025cf26874d",
        "cursor": {
          "ref": "dac1c88a-f26a-43ad-b074-3cb207abbfcb",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "467d479d-bf21-4a73-b488-92eaf55d1bac"
        },
        "item": {
          "id": "46819a70-8c2d-4beb-a72c-d025cf26874d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fb263cf5-219e-4d0a-8cbf-164681a60697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344af227-3a0c-4922-b189-3e7ff8626b05",
        "cursor": {
          "ref": "94300067-a1a7-4c0e-a497-4bbbf778e830",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b57a7cf7-c40d-4831-96a9-5ff7bb18ea87"
        },
        "item": {
          "id": "344af227-3a0c-4922-b189-3e7ff8626b05",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "220a9e1a-c6ed-4d28-9fa9-6d77cd0b521a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76181fcb-d0f5-4662-84b1-3ff046d8db06",
        "cursor": {
          "ref": "3efd99c4-c3ea-481b-96c6-f584e7efabc5",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "edb9ac08-84c7-4660-a131-6adeac299395"
        },
        "item": {
          "id": "76181fcb-d0f5-4662-84b1-3ff046d8db06",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "dc656723-5899-4287-b53a-d2f5a1de7934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac62b26-2aec-4a3a-8b57-f4033942aac4",
        "cursor": {
          "ref": "601cc45e-460c-4d90-a2fd-54c1f21e2988",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "401d19eb-1bf4-4bd0-b238-ce6742027d2d"
        },
        "item": {
          "id": "6ac62b26-2aec-4a3a-8b57-f4033942aac4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b3f9e312-c091-416e-aa2b-ac2047148f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c206f0-f1b3-486a-9784-6126b69ccded",
        "cursor": {
          "ref": "147cbc33-54ae-4401-9f99-83dc1cd131f8",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3e90b68a-1784-4442-9e36-ca0120bc552d"
        },
        "item": {
          "id": "80c206f0-f1b3-486a-9784-6126b69ccded",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4e1a4dba-b5d2-447a-a914-ca7d1e8d6a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00974822-9a63-4aa6-8ef6-add73e45e117",
        "cursor": {
          "ref": "ffa52186-5f5f-46c9-b113-1952d634bc18",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ee3aa0f9-5e8e-47d1-81af-694a79e797b8"
        },
        "item": {
          "id": "00974822-9a63-4aa6-8ef6-add73e45e117",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f40cd5e4-460f-4822-b613-3d04460eaccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff78849-e63b-4c80-b0e0-42f2627c9478",
        "cursor": {
          "ref": "dd2bb325-78e3-4e14-8672-7476465cea12",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8148fc05-6998-4d7e-8a83-c9a3b8e6a207"
        },
        "item": {
          "id": "8ff78849-e63b-4c80-b0e0-42f2627c9478",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c4b3a0b6-3442-47ca-8872-73772a1530f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67752aa7-0f80-470f-b1d9-a43185da01ae",
        "cursor": {
          "ref": "b543a1ce-12e0-4187-be32-155a0354a99a",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "33327b1a-a69c-4911-b1be-872fadf29c93"
        },
        "item": {
          "id": "67752aa7-0f80-470f-b1d9-a43185da01ae",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3d5426a6-bacb-41d3-a619-1ff9b369e56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bf0273-5dda-4daa-acfe-0913b5190ace",
        "cursor": {
          "ref": "bce0547c-38cf-468d-8744-63405d79a628",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "93f8b4b4-6fe9-4ed8-8edd-ce8776c1465c"
        },
        "item": {
          "id": "98bf0273-5dda-4daa-acfe-0913b5190ace",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "47fe0f0f-5ea2-4dd2-ab3c-587bf00c1352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a499a47-5b5b-40d8-8dd1-9bff30dfd766",
        "cursor": {
          "ref": "582e1577-c189-466d-8971-13e8f169de8c",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "60f4ff51-d209-4a3d-9ab8-245066dbc278"
        },
        "item": {
          "id": "4a499a47-5b5b-40d8-8dd1-9bff30dfd766",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "dedf4457-4706-40f4-9017-f3d1c71162de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e2719c-aeb8-4eaa-8291-94f39ca52785",
        "cursor": {
          "ref": "3a29dc51-c732-4799-a905-5aba5e5c0b3a",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e1f7eae6-d297-4b3e-b969-7fb1e968d7d2"
        },
        "item": {
          "id": "54e2719c-aeb8-4eaa-8291-94f39ca52785",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2ed6cf5d-cfb3-4e10-9baf-41f063b959ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555b3ada-3be2-40ab-83df-4f963c271eb2",
        "cursor": {
          "ref": "d0231ab1-ba5d-449a-a7f8-448bb09815fc",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4f78f6fa-952b-443e-8ea8-cb93eb58b0ef"
        },
        "item": {
          "id": "555b3ada-3be2-40ab-83df-4f963c271eb2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e25b4cf6-d3a6-4968-b0e3-aa5680897a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda52c37-be2f-4ee9-8fc2-0115201381f9",
        "cursor": {
          "ref": "699e72ab-8b17-4f82-9e26-dd92f0623ce9",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "89c64b06-c5bc-4706-81bc-21b1b93a0ae4"
        },
        "item": {
          "id": "eda52c37-be2f-4ee9-8fc2-0115201381f9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6a61a772-b5cd-42ce-a2ef-b37808a986c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779c497b-d027-4368-bb9e-fd83bf88818b",
        "cursor": {
          "ref": "72ecfcdc-e703-425e-b2ab-96fde14badd0",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "62ce2c4f-f3ac-4682-b637-2d7b05106702"
        },
        "item": {
          "id": "779c497b-d027-4368-bb9e-fd83bf88818b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c01a76ee-00b5-424d-860f-598701365f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5014e349-b0e3-446e-80e0-ee607c191be7",
        "cursor": {
          "ref": "6e9cbdd4-e6a0-4edd-8f04-f1ef073084fd",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fadd9194-372d-46a6-b760-857cca10c17a"
        },
        "item": {
          "id": "5014e349-b0e3-446e-80e0-ee607c191be7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f2c3587a-0819-4fe7-9074-a4cef42fc320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff5484b-116f-4512-af97-37caddb107b0",
        "cursor": {
          "ref": "f561b8c8-b027-4c58-8884-0b476d6ace1a",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "df0e5ec0-675c-47e2-bcc1-d406ad74df63"
        },
        "item": {
          "id": "6ff5484b-116f-4512-af97-37caddb107b0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a73f1dc1-0dac-44e3-8a11-1b5c1cc447b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20411302-fe60-478a-99c0-2d8560a45593",
        "cursor": {
          "ref": "1c66abba-904a-4fc6-83f3-9dc8125c5629",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c056d99c-2ddc-411f-b0b2-48ea549e1e7d"
        },
        "item": {
          "id": "20411302-fe60-478a-99c0-2d8560a45593",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4de4c44c-6837-494b-ad17-4dfd532aca33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5135cdfb-effc-49fc-bbff-b13914f4f3dc",
        "cursor": {
          "ref": "1c662218-34a7-4be7-b03a-e57fee23b51d",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ac2c4196-bbfb-4d8c-accb-a8dd4d6e743b"
        },
        "item": {
          "id": "5135cdfb-effc-49fc-bbff-b13914f4f3dc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ab5fbe6b-1726-48e7-891e-9fce3dee1359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a5bff8-6337-4fd5-bab0-fe19b8987125",
        "cursor": {
          "ref": "54d78a26-38a1-4ed0-9c90-d8ace5e810e8",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "09b2c6f5-9bb7-47c9-827b-19dfaef412b9"
        },
        "item": {
          "id": "04a5bff8-6337-4fd5-bab0-fe19b8987125",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "448ac5cd-c272-4874-a929-e29f117984a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571d4b48-7c54-407d-8fa6-670af4aab497",
        "cursor": {
          "ref": "8dc3930f-07e2-482f-a6e7-dbf5c550f120",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "81d176dd-2f40-44ce-ba62-253dd7cc6706"
        },
        "item": {
          "id": "571d4b48-7c54-407d-8fa6-670af4aab497",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "143b5e56-ce74-4413-bfd9-7787feb97cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e419a30f-ce5a-41cb-9649-238b2f1f7f01",
        "cursor": {
          "ref": "5866a0d6-6315-4961-a10a-64383b87ea56",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5eb61983-c197-4fa3-9185-1bd6d69c16bc"
        },
        "item": {
          "id": "e419a30f-ce5a-41cb-9649-238b2f1f7f01",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ccd884cc-ec83-4c5b-99cf-b2326743d5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d9573d-3909-465c-b694-c7f28575e518",
        "cursor": {
          "ref": "10190e06-7e6a-4283-ad17-629fcb456d9d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d881ebaa-f84b-40c0-aca9-e526427cac03"
        },
        "item": {
          "id": "48d9573d-3909-465c-b694-c7f28575e518",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a8c89665-069f-4ad2-8301-8684413d2437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3698d8a4-4b0a-4505-90d3-4ae0cccd4b63",
        "cursor": {
          "ref": "801a084f-bf45-45c4-8ff4-59e086864af3",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b2fe6e08-97f0-4471-9bfc-97185d8c6d8d"
        },
        "item": {
          "id": "3698d8a4-4b0a-4505-90d3-4ae0cccd4b63",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "95d4253b-801e-4a61-8528-57ca041bb194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e4b34d-f576-4546-b0ab-31798be449cb",
        "cursor": {
          "ref": "f521a939-7389-4d72-919c-872e694b5fac",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6240237a-3e45-4fb0-bfbf-44f7c69727ec"
        },
        "item": {
          "id": "29e4b34d-f576-4546-b0ab-31798be449cb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5ede31e2-1d3c-44a4-8970-f75470ffa3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b07073e-98ec-4db5-b632-a60bcd86eb01",
        "cursor": {
          "ref": "3f216688-4f54-463c-a740-577ece0912c3",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d7b6baf0-0616-4526-8f7c-f708373e0ef4"
        },
        "item": {
          "id": "6b07073e-98ec-4db5-b632-a60bcd86eb01",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8f635265-be9c-4fb7-af2b-80430ca42d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1412e391-cd53-43ee-aef1-8cb3b5d98eb9",
        "cursor": {
          "ref": "1080dca0-8961-4f4a-96ae-d2acc02383d9",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2494b717-7ea8-457a-a961-09cc81397d9a"
        },
        "item": {
          "id": "1412e391-cd53-43ee-aef1-8cb3b5d98eb9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3834915f-708d-4065-9b03-0559cee00ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a5d562-e1c2-43a0-af83-c2c20f72e657",
        "cursor": {
          "ref": "345814d8-c6ad-43b7-996b-12b0ac57eb11",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "27a9c15e-d2c0-4c75-b065-a49e4aa27594"
        },
        "item": {
          "id": "a3a5d562-e1c2-43a0-af83-c2c20f72e657",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "70cdce4f-bfe5-4c2c-9b3e-053804bb916b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f06b45-d552-4608-aaf0-d8fea3a9c7cb",
        "cursor": {
          "ref": "e1da9978-5eed-4f93-bbc2-2a3e768e37e7",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "134833f1-a8a4-4c33-88a6-d01fd601212b"
        },
        "item": {
          "id": "d2f06b45-d552-4608-aaf0-d8fea3a9c7cb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "89217265-ac83-4aba-b6c6-330e01bd22f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccddd2b4-86c5-4cc1-9642-ec419ba4d7ad",
        "cursor": {
          "ref": "a6ca7090-a49d-4f1e-9276-7fe47066ca44",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "83e31208-e071-438a-95c3-3df72aee06ac"
        },
        "item": {
          "id": "ccddd2b4-86c5-4cc1-9642-ec419ba4d7ad",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "72035bd6-547e-4a30-a7c8-86c33cd5a09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765c0eda-740e-4574-9add-89dc9e04e010",
        "cursor": {
          "ref": "68bccbfc-ecfb-4a26-b6da-964cd55ddf19",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "dece51e1-77ef-4a44-8afa-a67bb617326c"
        },
        "item": {
          "id": "765c0eda-740e-4574-9add-89dc9e04e010",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d2076e33-b7d1-49f6-943a-ac11183b2cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5293b9-efeb-471c-878b-44ab095740c7",
        "cursor": {
          "ref": "19b8aa51-2e58-442e-a567-281463baf900",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "033bfa94-ba52-4eae-ab74-a48c44ef5b38"
        },
        "item": {
          "id": "fe5293b9-efeb-471c-878b-44ab095740c7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "82f0d3ee-3b09-48e4-8d81-4a07ab602ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085b244c-ed45-4a27-b83c-482708ca0dc8",
        "cursor": {
          "ref": "ae947d7f-81ad-4925-b6ca-2428d025fd1f",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a9fc7c4f-92a9-42d1-9c3a-4c408bfceb22"
        },
        "item": {
          "id": "085b244c-ed45-4a27-b83c-482708ca0dc8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3189709d-5015-4efb-80a5-a93c9a127dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f0455c-cad7-4495-aacb-bb5d4e459dab",
        "cursor": {
          "ref": "434ab3db-b667-45a2-bb0b-ae22cef170ee",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2554634d-bdbd-407b-aa8a-b00fa4469eb6"
        },
        "item": {
          "id": "e0f0455c-cad7-4495-aacb-bb5d4e459dab",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "68f6f22f-4b48-4c1c-b4db-f89140ac72f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c203f5f2-6b94-4139-87e0-b0a78fde6984",
        "cursor": {
          "ref": "b1196b41-092d-42c2-9e77-d5d95229ee7d",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7a53f267-8072-4ffc-a2da-bcfa7bfbe7ec"
        },
        "item": {
          "id": "c203f5f2-6b94-4139-87e0-b0a78fde6984",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1fc6dd41-f3ac-416d-a68c-c68d0fd5708c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf21ed4-cb1f-4fd9-949b-e150b51f3ee0",
        "cursor": {
          "ref": "542d963d-522a-4c8e-9a68-6ccc6bd89843",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "59678d03-4499-4c90-b143-2b0070429995"
        },
        "item": {
          "id": "2cf21ed4-cb1f-4fd9-949b-e150b51f3ee0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "35636d6c-3bf4-444f-b52f-3eafa4bc6d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e02b0cc-4e37-44ea-9457-9a976afcb8f8",
        "cursor": {
          "ref": "9b524a4d-7daf-4073-8785-3023be2dfb17",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3945f1ef-4a74-4f20-a206-06c0489a7b88"
        },
        "item": {
          "id": "3e02b0cc-4e37-44ea-9457-9a976afcb8f8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2e23dc93-b1cf-4e55-bb1e-f27c1b3109fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24541d43-e04e-4f83-91e9-0030e4babae0",
        "cursor": {
          "ref": "6231a25a-74d1-40dc-abb4-f919769eae1c",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9395554e-0536-4faa-a88c-ea4f9d9fcea7"
        },
        "item": {
          "id": "24541d43-e04e-4f83-91e9-0030e4babae0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "beb3c1e3-0d93-4bc3-ada5-fc81c562dccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ee731a-73a7-4d7f-9cfa-6b427bf7bdc0",
        "cursor": {
          "ref": "04435801-ceea-4466-887d-436c29b27557",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "530495d4-0605-4ae7-a287-a20890d6a894"
        },
        "item": {
          "id": "f7ee731a-73a7-4d7f-9cfa-6b427bf7bdc0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "079154b1-4674-47e8-8d90-8428f733213d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d06997-24b7-4575-83e0-e77caa186974",
        "cursor": {
          "ref": "730bd324-c943-457d-9cd0-635a3f7cc48f",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "35544a42-54c8-4bd2-a317-b1da532e5229"
        },
        "item": {
          "id": "10d06997-24b7-4575-83e0-e77caa186974",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e2bc5bfc-ba08-4ba3-a212-87c1d604976c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4ce1ee-89ea-4635-a995-5197322983c6",
        "cursor": {
          "ref": "a7eb067c-00eb-49f2-a85a-24cf88ba2505",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2cf52c03-2f7a-4e66-af78-95d67592cdbe"
        },
        "item": {
          "id": "8f4ce1ee-89ea-4635-a995-5197322983c6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0748c5be-0d28-4ad9-87d4-79a40800f1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67f7b5d-be18-46c7-9583-2d75555a5dcd",
        "cursor": {
          "ref": "b57406ef-ec03-4ea4-9e3a-2a5d292c2f0f",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2c6fe29b-6c46-4c93-ae69-c35a45eaf8af"
        },
        "item": {
          "id": "d67f7b5d-be18-46c7-9583-2d75555a5dcd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bc561266-d932-4f1c-b638-e59d1e5f0fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe7583e-d85f-42d6-87b5-08ea7106e52d",
        "cursor": {
          "ref": "7fece7bc-7405-45ce-846a-cd3bb278beb3",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "fb7eaf0d-f2dc-405f-b591-6504f4336c3c"
        },
        "item": {
          "id": "6fe7583e-d85f-42d6-87b5-08ea7106e52d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c5efa5aa-014a-474f-81dc-0a1e13490e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a48c3ea-be9f-43d6-9448-6a6969179070",
        "cursor": {
          "ref": "998c38ab-17f8-4616-a36d-74b8486156e2",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "72ddf24c-4a02-4953-99cb-243a526972cf"
        },
        "item": {
          "id": "1a48c3ea-be9f-43d6-9448-6a6969179070",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "18badffd-07fc-4c7f-b806-043237d49b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2309eb32-90ea-4a7b-821f-c739370261db",
        "cursor": {
          "ref": "2af13421-96c2-40b1-9d80-2c79465ff2a9",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "399da795-7c63-4f65-bc92-dbc03236beeb"
        },
        "item": {
          "id": "2309eb32-90ea-4a7b-821f-c739370261db",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9693f01b-8eab-4524-8956-712b1a75bd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47dc0e09-5be1-4367-bbca-262726d5faba",
        "cursor": {
          "ref": "363b66e5-c389-4a99-9780-e82a0ec1a619",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bac7b6e9-1de5-4266-b3a4-d1207fbeece9"
        },
        "item": {
          "id": "47dc0e09-5be1-4367-bbca-262726d5faba",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "90ab94de-b50f-4d87-9ef2-4d5d6407587f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7290d886-dbc9-4fe0-9cbe-98dda760edd9",
        "cursor": {
          "ref": "9475e474-c114-4e5a-9b50-3b4435fefafa",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "49400b1f-5443-4356-9c01-82c598497da7"
        },
        "item": {
          "id": "7290d886-dbc9-4fe0-9cbe-98dda760edd9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "166aff11-24ab-450a-96a7-2937d5f0951f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33c0401-abf1-4db8-bfa7-d8226dbdb7ef",
        "cursor": {
          "ref": "2abaf433-be70-4d27-ba5c-9dedd1c46871",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "251065ab-f14a-48c1-905e-6040b6ec7510"
        },
        "item": {
          "id": "b33c0401-abf1-4db8-bfa7-d8226dbdb7ef",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2d02962d-9794-4e14-878b-1cfbccf2fce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90d81ed-d5f0-4010-bc03-c00ff39817be",
        "cursor": {
          "ref": "639e3641-e44e-42ab-a0ad-9d84da6b3356",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "76f5d86f-2a89-4de9-bb9f-9ce12d44f554"
        },
        "item": {
          "id": "f90d81ed-d5f0-4010-bc03-c00ff39817be",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c9183074-66f6-47c4-bdea-bea6ab40b826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a13e921-b4c2-4284-8252-00d9e67e5a5a",
        "cursor": {
          "ref": "6cfe4d5a-6ceb-4d6a-8ac1-f583336f4969",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5302880b-acdf-4a1c-89c4-7a70c4f61bcf"
        },
        "item": {
          "id": "3a13e921-b4c2-4284-8252-00d9e67e5a5a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8ec59f76-96fb-49bf-a256-1e03a89b8716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd51b1d6-8764-4238-82f7-305e81cae0e0",
        "cursor": {
          "ref": "93ec77cf-6d60-4dde-894d-c39518644a3c",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9601004d-8920-4bb8-8434-a25e94e92a70"
        },
        "item": {
          "id": "cd51b1d6-8764-4238-82f7-305e81cae0e0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9ede720d-9d2a-4148-aea1-9ac26d052827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273ed610-d21d-4936-8fa6-1293aeeb8554",
        "cursor": {
          "ref": "a04a70c0-7be4-44b5-916f-19c7eea35cf5",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d25d5310-341c-4a14-ae4b-f8247b1421bb"
        },
        "item": {
          "id": "273ed610-d21d-4936-8fa6-1293aeeb8554",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "12e1b3c1-3522-4d74-8d2c-99f44b6881f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d63507-00f1-4883-8eb6-4e2ca8333742",
        "cursor": {
          "ref": "4f03d6e2-bd5a-4494-91d3-a50ea2e75a58",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3c0ac090-ce03-4fc0-a39b-6c6840ffddf9"
        },
        "item": {
          "id": "85d63507-00f1-4883-8eb6-4e2ca8333742",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fdd31d92-dc9b-4cb6-894b-4047e00e6f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fd231f-bdaa-4666-8f5d-90a677931c52",
        "cursor": {
          "ref": "96d25eff-551b-4241-828a-3a36817fa3da",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "2368b9c3-a9b7-496b-bac0-32b01c6813ca"
        },
        "item": {
          "id": "48fd231f-bdaa-4666-8f5d-90a677931c52",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "32fe250a-4587-4850-b44a-da319dfe0e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c3b1f1-7af2-42b0-9d58-b46fca5b829f",
        "cursor": {
          "ref": "942f6072-7486-4df6-be9d-8d81ec8ee46c",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2726dc47-6069-4175-ad26-26e0dd2a9cf6"
        },
        "item": {
          "id": "b9c3b1f1-7af2-42b0-9d58-b46fca5b829f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "922ab677-af36-43ac-956c-8650e6cb9986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451cc724-f2a5-4a3a-b1ca-17d626190f23",
        "cursor": {
          "ref": "d41858ca-8d6a-474d-8725-90d028b0a85c",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d739ae21-6bf9-491d-a8b3-55e641bd1dde"
        },
        "item": {
          "id": "451cc724-f2a5-4a3a-b1ca-17d626190f23",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "91246611-01ef-493e-a3ce-1b68783e8e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31a389c-bf76-40cf-9519-925233c2e562",
        "cursor": {
          "ref": "b39d5045-882f-4ec5-8e35-2145864f3c68",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "41bdc5d2-9d61-4fdb-9e72-d71e8f113b3d"
        },
        "item": {
          "id": "d31a389c-bf76-40cf-9519-925233c2e562",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5268f22f-894a-4f15-a241-2deded190227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdda1db-e066-48a2-8971-5a1130a284d9",
        "cursor": {
          "ref": "4c81a6c5-388e-41a8-aff4-e2409e80d97a",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3980732f-a2f1-406e-8273-b3946d78170b"
        },
        "item": {
          "id": "0cdda1db-e066-48a2-8971-5a1130a284d9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "237f4d40-3482-403d-a876-65961e5c86b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0eb6b4-d06d-4393-aa75-dcc0f60b7151",
        "cursor": {
          "ref": "9e630ab1-6512-475e-82c8-5bfe9a96b139",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ff035a1c-7c16-4700-9c66-3c088d754cb7"
        },
        "item": {
          "id": "6a0eb6b4-d06d-4393-aa75-dcc0f60b7151",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7f86edbe-6005-41ff-9fdc-7b7ad7a77594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67cd068-33f1-40f1-af10-05f1f7ac2df3",
        "cursor": {
          "ref": "852d7dfd-7072-4a5b-aaab-0ec28f559940",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3fcd8efa-cd3a-492f-8702-d0bcbe26170c"
        },
        "item": {
          "id": "f67cd068-33f1-40f1-af10-05f1f7ac2df3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e3fe6512-c027-4e9e-9a8a-df19212c9687",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84cc800-ea4d-45a7-bca7-207b04f29b90",
        "cursor": {
          "ref": "5223d97b-b0c9-4e80-8c58-83feb40da254",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a51e82c3-63a8-4a7d-a33b-c728dbb07737"
        },
        "item": {
          "id": "b84cc800-ea4d-45a7-bca7-207b04f29b90",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "22bf0d68-18b3-4e91-8dbb-d563188274f4",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedafc93-1b5c-42b1-baf7-8c955edb50c3",
        "cursor": {
          "ref": "5401250e-3be7-47a2-bcbc-cf5132454e54",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "7e9d3914-4e9e-46d4-b89e-1d48e68de5b2"
        },
        "item": {
          "id": "bedafc93-1b5c-42b1-baf7-8c955edb50c3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a704cf8d-e204-4331-ab71-dec86ebccd5f",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cc134b-2222-44f5-b2cc-ec4467baeb04",
        "cursor": {
          "ref": "bfc829fe-bcc1-41cb-b4a1-8e5ef4855270",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f4425687-1265-4e1e-8dc1-cedccc511a97"
        },
        "item": {
          "id": "b5cc134b-2222-44f5-b2cc-ec4467baeb04",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ec4c1861-f707-4175-8b11-7eaa661b750a",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f567ba8-f4bc-42c3-a6a9-e70565b5ec35",
        "cursor": {
          "ref": "99c9b96e-adab-4a8a-8059-129afe4c0a58",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3127284f-7dda-4610-b05a-bb6246a646ec"
        },
        "item": {
          "id": "8f567ba8-f4bc-42c3-a6a9-e70565b5ec35",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d5b03bf3-18ff-4e7a-b42d-7de8f0b11111",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f567ba8-f4bc-42c3-a6a9-e70565b5ec35",
        "cursor": {
          "ref": "99c9b96e-adab-4a8a-8059-129afe4c0a58",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3127284f-7dda-4610-b05a-bb6246a646ec"
        },
        "item": {
          "id": "8f567ba8-f4bc-42c3-a6a9-e70565b5ec35",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d5b03bf3-18ff-4e7a-b42d-7de8f0b11111",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecc0517-a697-43e7-8dbd-5cffc6e76017",
        "cursor": {
          "ref": "3a9695e6-e2ee-4805-805b-42d1f08a2df4",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bf641611-dc1d-48be-8a6f-22b69350dd0c"
        },
        "item": {
          "id": "0ecc0517-a697-43e7-8dbd-5cffc6e76017",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8f83453a-a541-4b57-b6eb-040a3a878ece",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dea42b9-cbf2-4150-b4e4-96933ce60209",
        "cursor": {
          "ref": "04bb8db8-1889-43e7-bded-42a444fa6365",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "29259696-6bc7-41d8-ae09-97cd213afe33"
        },
        "item": {
          "id": "6dea42b9-cbf2-4150-b4e4-96933ce60209",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "934777ae-3594-45ae-9e04-478afd8ecc69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}