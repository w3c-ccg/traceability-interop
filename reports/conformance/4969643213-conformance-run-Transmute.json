{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "296cab5a-d3bf-457b-90ca-82eab2bf176e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "91a42c3e-0613-4337-a20f-b81b40c9e62c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7555f712-7a53-485e-8d6a-39817d1bbea4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f2c92fc1-aa44-4fd1-9dda-6736b5b576ca"
                }
              }
            ]
          },
          {
            "id": "41a6b072-09ef-4ce1-bfbe-99e458f20fa4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ad9fe8ef-fafd-407c-a28e-b87ec1ca27b9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7172627d-88f3-491e-9cc6-3bd1dbecf38a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7da32731-ea8d-4d6e-a769-9462c583b95b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c9936b54-0659-49be-8204-8f82b31c750c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce9d46f5-270c-4627-b3d3-997b0f895491",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2866eeee-8449-451f-9d7f-037d2bc591b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad467e98-35ef-43cd-8b44-3f7a5462b0fc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "33c1d24d-61e0-4968-8db4-da5bedbdecf7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91ebfb7c-cc71-43a1-b458-4d57de7102c0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ea24c482-9b10-4df7-b09e-c5fff243e2e8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "681951a9-6f4b-4a0c-95f4-aee8a5feb0ec"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eff2a473-29c8-40bf-9b4f-f44dd2e1497d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e574b6da-6a89-4fee-93ca-9e2386ed341a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4eb17f6-8d89-4ac1-8b61-1a166cde25f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8587c985-5599-4350-9002-92260602cfba"
            }
          }
        ]
      },
      {
        "id": "ad0f895a-5146-46ab-abc2-4309b375622b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "50f50255-23a7-473c-baed-5c35fe0b6880",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e5efafcf-d45a-48a5-941f-39e7f6677af0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7324f186-d1f9-4b0e-af04-58a474d69db6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66150770-b951-47b4-b31d-a5b0ac5cea1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d136a140-3e9d-4de1-a6b0-a218d8a2fa2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404991ee-f51b-4d6d-81a5-ccd515b74b80",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f54ca25-17d6-4477-8af4-abdfa2f3107d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c3a83a6-68eb-48bb-adda-5457f9b6a15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045ad37a-563f-4aed-8212-24a75d3c7c35",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa042bfc-08e4-4eb0-ad67-ca77879c787e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0cd3ef3-3b22-49ce-8498-0f2ea4a4b29e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7682e2b8-476d-411f-8c90-59bc4b3f0085",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0a50a53-c384-4161-bb52-844f83bac650",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4138739d-0ad3-471d-aed3-b26be23b6ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2918b054-fc73-4b8f-9759-517ce732805d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5801d5-4aa3-4784-98a0-b715bd78cace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c27abf7-4272-47a3-bafa-0139213a2a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753d1358-f779-4d0c-958c-2e26aac8d2d5",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddf8aeb-baff-4718-bc75-1687e015b14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0eab7a1-c41a-416f-903b-9fe9caef374f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e32ff3e-61ec-40f4-9522-61655cee5f91",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "143484cb-254f-4f3e-9a1f-859746b84197"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "69477813-0060-44a6-b106-c9bdb844f969",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a5eb491-f90d-458f-b0f1-40c9a92a8e3f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa83482e-5451-48ca-9b64-a47b8c95a2c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2bf7ad59-931e-4de9-bf80-861639c0bb29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36742547-27c7-4325-a1f8-05e32ef508b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "133c1ed4-b0ef-4ef6-b35e-57559020e6ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18928e54-8923-4302-8f6d-dec10b520fda",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d33a36e0-81cc-465e-b9f2-00fa5ddfcbfc"
            }
          }
        ]
      },
      {
        "id": "d648d994-53b0-4504-9abf-675adc3b9e40",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d0c5aa7d-4748-473e-9802-0cd14898a440",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71c118f8-fe17-4d6c-ad46-191a578331e3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fc748b42-a3da-47eb-9a02-2e794bde61a6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4aa483f-e530-43a6-aacc-16469d583c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86fa06b-e9fc-46ab-9e96-a796f09e5665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786625df-9047-4953-a7ff-23b7b0e36a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7801906-6a91-4c7c-8604-cdb5d218e70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d63955-084d-48ef-ad77-c2eceedfe51b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f830ff56-8b2e-489a-a047-73c337a44ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7355ab4-b88d-4c93-a162-959088a9951d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c69d423-bfa4-438c-bdf2-e5c68f887941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2b251a6-62a6-4d02-aa2a-69e81316c966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc16b08d-1790-4f18-bb8f-cd6fc6a6ce05",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f02050-25e2-4303-9d0b-be9bb8b8e3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f390bca-3d7a-4055-b419-76ebec4c1bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2055de1-69ee-43dc-9618-2c00e119e3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77eaa5e4-6613-4640-a355-f7922956ccd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93508d64-c79c-4caf-90ed-0578a9d189b4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96d7476-ef4f-4384-82a2-8dae58dce844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2196b351-5811-41e5-9f44-d881e2afc3eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73b0821-4dc9-4680-9f59-2475e6846185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba2ccea4-65ae-4ee8-a582-acd7a1d0ceac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d38931-e734-4931-a105-d5d624efd73f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8ee41c-304b-4deb-ba4c-041783c406ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee7f6ed-526f-40e1-a705-eca8f4e0fc45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca519de6-5d8f-484f-a179-ee5c4608410c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "678cb21e-6110-474d-9c2b-2f490dcf9e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8211346-192a-45d0-9422-72700a694427",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031cde1e-5c23-40d6-929d-d5500abf5ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd69665d-1abf-428c-b45b-2691032e723b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f563e99-7e72-4fae-9215-75fb83eb45de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d38e4b7d-3b82-4d1d-9d5e-d1c3dac9d979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4f2aa8-b801-4da8-a72d-f25e8b31f4af",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c575f93b-0fb8-4b6b-8588-1cee7aa4e9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb87ab81-4389-4592-8a1c-9847b64e72cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99382382-e39f-4b77-9a7c-3abd35fefc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b75e8b2a-2609-4372-a19e-26a80a539e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e465c4-2fe1-4dd7-96b0-af3e2f07714a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e72e21-6a9d-4e8b-8c99-9ab973ee2db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8875733c-8536-4ccc-b29d-ef75a276080d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a015ca68-deb5-4e77-a26b-8a5c6e888f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e7dc05b-856b-4ca2-a218-f785dd2b5451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0c258a-b6bb-4fde-a342-79d641995881",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8625a3ad-d9c3-4f61-b49a-c3431fb13568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5ab093-fcb9-44ba-9144-fea45ef5a69d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5a1826-a6a5-4383-abe5-bc6c10d19681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "733e5e8a-fd5b-4f41-84d2-852e1bb30b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fecb95-9f10-4548-92e9-ad181151f72b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38dcdc83-b4e2-4860-ace5-7b995d421b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017f7cfd-3215-4cda-8fa4-eb12385765e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bae673a-5444-4360-8d6e-1bdb14c24de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "641a5b84-6ce7-425f-9b1b-dfd5361a3066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a386a813-a292-4968-ab44-5a6a8afd23f5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc093da5-b073-4bfd-a46b-aa0bc7718a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb11a58-99ae-4219-b7db-1246b70626d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d149d96c-baaf-4c20-b9d1-54e5d394771f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92dba3e9-0550-49d0-a7cc-8435504e092b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf25d64-6bdd-4c87-9c90-cf067b3cbed8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794f4d0e-57c9-474b-9e62-8573e2d19fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b662e4e-e7c1-4686-b9aa-5b87815bd840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5151abff-b598-44c0-974c-20c2bc4fbf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81e942c1-cbaa-49ce-a1e7-4838af8df1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacf4a0d-45ff-4611-85ac-a83ba9d632c3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418e0da3-28e3-4440-abb9-fb95b1096b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f3d755-4bb7-4fa8-9da8-4164b497bd0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead31637-6a05-4348-9c19-be36d632cdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "932aa303-9417-4f91-aca5-6ca71ebb5341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4db6a1-932c-4cab-9ad6-6006944b5b17",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71304091-c678-482d-8ac4-6edf12cb19dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0292cd-e075-487e-a35a-e6ec53826809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1e7d4f-0bd5-4af1-9df5-8f5027fca586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b78d0038-d16e-4db3-b33c-7a0c9b717847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3964a041-af9c-4dba-93dd-7c608e3e124a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fe9a17-566f-43ac-bd6e-266d0c0fde55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959e2019-3acf-4684-a2df-bbd051898091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660b16e2-b012-45f1-b70b-bac65a1d013f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a14dbad-62a0-486b-956c-5829c1ba6802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58d9f55-e7cd-4236-b3b3-e9f8b8ffd7b7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e628587-6f23-46e4-bd52-6e8b7d5d60de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0481cfd4-0682-4605-abe9-8b7aa47dd7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1635cc8f-e210-4baa-8a0d-a1e222969ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c7db114-c428-4354-9690-5859541e6136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db637dcb-f2b5-4c44-8170-ac968f7c94d6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5d4a78-9ce6-4b2e-80e1-a832b22ba44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b49acf1-e403-4cd3-8623-28d9e98b6acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bb9555-4ffb-411c-9dd5-f084817c5f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "103d9bae-28f4-44ca-9756-1c4053c882a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c57736-57db-4571-a38b-3d89d857fdc3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e9d824-6c6e-4b99-95e8-0aa1ea364fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7f6397-b8e7-4b52-92d8-78b71fa6b22c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19dfed7d-a276-4190-8eb6-fc1896f6a253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a078f8-b213-42d4-931e-b321d72e65a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585500f8-e56e-4018-a807-ff46afcdb5d6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5894f893-8d93-4a59-9952-95d2c2739d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5f59cc-f77d-4442-b195-eda43edf0625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c4c2d3-2848-494b-9051-2863af358108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "914d02d1-5650-4706-a0da-2f9a33b251c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d8f43b-4ef0-475f-8bbd-c2ed44fe0b51",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20784d35-755f-4075-8a21-eda451c8db2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6be0860-a628-4e49-80d3-0dba92afca39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02410f2e-09c1-437c-b420-442438b99135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aedadb1c-7242-40ed-93d7-d0c75ef780a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d97851f-ea3c-4d26-bbe9-2bf176af636b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d3f2d6-4f0e-4cde-a247-c3305401e09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47d2596-bf47-4e6c-bf4d-cbffecb1d8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb334b81-800f-4877-b8e2-8a65d2fab848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb20bba8-db2d-4f98-b6cb-0533831c0535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7163c3b6-732c-4e83-b5bf-2253be09d565",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfc9d56-640a-461f-b266-405820fafaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb54ec7-7dba-419f-8f85-05331b7ed29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ba7d56-df2f-4f81-a0cf-886cbdb6ea3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "efde34a2-7d05-438e-9c32-463e85c675df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bff06e2-f4fd-4e64-9dd5-307e83262bbc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951d58cc-dae8-4049-bb98-36b9486ccd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb82ee9b-3e16-4e02-b2d9-f20f699d17e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864b328c-c25e-478f-b878-1469ff546a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f19042ef-646b-467d-98e8-2da76091cab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff51a00e-a447-474a-8dc6-fef3536f3d83",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23b1d3c-0fc7-44f4-b6c2-c57b5e28eece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1843abf-860b-4946-94fa-405e663c796b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaebef0e-c04c-4f7a-b36a-b7560c99aaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "46c200e2-a0d9-4b3d-a847-c3ff7f1b6363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d10c27-247c-44f4-92a7-b5aedf72736e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8b3336-2f18-4df0-b320-e86a79d527a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b30efa-cad6-4a3d-9ac5-0a1675d366c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af4a97b-afea-4bbd-b40f-1bc7e6716028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "881e9b19-5af4-4ee8-99d9-044b76d4a50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7c463f-9921-47e7-809c-1fa11ad9341f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dfa419-01a9-4764-9e50-90f8d4fa901e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83d0bde-ca33-456f-80a2-cceb7ff46259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4940401a-d107-43c4-aa86-dde0b7b80ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f012375-f598-45db-a5f1-d5a165bbdc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe8fbec-f722-4289-9e3b-0b3a244a5740",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef412a9-1ac4-4a41-8bae-2257c5bf029e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bcc4b42-02dc-4c24-9d35-efb01a1bc78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3332aae7-6226-4df6-bdf2-488eaefd230c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2629b3-3c98-475f-b3bf-081d46f1ca7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b547cdf-d720-4f94-b473-3a63950a1f18",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186460d6-3a57-4c91-9079-1395449aa29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2111ee-d138-4f77-9524-ebc42b757a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee8766b-022c-43e1-852a-1cd43ea2ee2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58b0b998-06a8-4d6a-827a-d4fb0a76921c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b8a449-db05-48e9-988d-64d42a2e9f4a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ac319c-9172-40ca-b9dd-60efa0eb9dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21db1ae-e1c8-4c19-b603-97f34d7c507c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90edcaad-41f2-4fa6-ae4e-ac533b650cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6dcb1c-384e-4397-b80e-42478f853510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fc5dc1-7956-4e2d-85c4-51fcf5a62aa4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abbdb69-4111-471b-92d1-20f4e72639fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de18757d-081e-4c18-94fd-0aa5974a7811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0db1868-d25e-42f2-a285-dbe14403268b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf027d3-e795-40dd-93f2-5d5021291474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb4c8df-472f-4a54-a152-148c4b58a5d4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f276f22-0536-41a5-b311-5e8c34318dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6a4552-b5e9-4d7f-86d9-006fe2967f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f955524-e76b-4141-a436-3b713f7201d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "325e2f98-501e-42ce-8d63-6676d902dbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7afc5ee-65ca-4600-8fcf-39e738e31189",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7330a344-1a59-4392-8197-4964c231d8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5465b909-13cc-49f9-b5ae-3fee912d0987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14de196-def1-49dd-b295-129fac64befd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aebc05f1-a2f8-4c17-b871-ce5da126988f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697144bc-4283-4bcf-b83b-56d12bab452c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18b683c-a2ff-453c-a9b8-6e810901ce39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ecdb7d-d056-445a-a788-064067e65d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59418c72-56f1-46a3-a482-c55ad018aee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d070b99-5359-4488-b75c-7aa63e155d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c6bd16-f745-456d-a7fe-2e4678811bad",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c6745b-9ad4-42d3-a703-acc60fecdd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094bbbc6-25d1-497a-86dd-a492a6440730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aefde9a-2e59-4723-9f44-6358bd526408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80c7bfcd-48d9-445e-aa6b-7fd29a4c870b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847130d9-13d5-47de-bba2-f33c005ecb82",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d07eca4-c76c-41a1-aedf-83b98aa98d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c228a7-4911-4f87-996a-f7fa37ec2449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab826f39-15a7-4d6e-94bc-db6a6b6c2ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bb663911-44da-43bf-a543-a9ee0348665e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbeae3c-153d-4027-8953-18b8187e0ef3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6d7844-2407-48a6-ab44-3a38852038ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f217a17d-a182-4529-843f-69889213b21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9a43dc-4e7d-4940-9f25-1da2737ddbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9031d4a-a0ef-4ca3-b605-8135ee33401f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d46b025-94cd-4b89-a99e-7a815329c011",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e8b1c4-c460-47b2-bd01-aba70559af3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347e937f-8e52-4ac8-adcf-0d801ff1f016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bdfcafa-d7ae-46be-a903-eeb5d8c3cbfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7e05c0-802f-4fbc-be17-44cb26f1f95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d2e79c-aef8-47ea-ad9c-25143d7da603",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94d922c-0650-4208-901a-f6fce47f5440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d76219c-344b-4451-9ee1-5daadef0ef5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98635f2-2254-4474-8e21-846d90cca817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d0bd498-2f1b-4811-a12b-84a8f8f8261c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7968871-45ad-4564-b9a4-3ed81dc40193",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a7fef9-ce81-4c94-a82b-6b5e9b13464f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638d9eb6-d6da-4579-b135-edbb2e89807d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41039ade-b95a-412a-9618-6d68c8729dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5c6620-b4e8-4c29-8537-ab6243a503fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e73200-ebad-42a9-91f2-03288effe3e2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d77b00-a992-4986-878d-4066c557140e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a62204-49f3-43f9-9226-33947be2caf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7f1de1-1ae5-4532-b441-42f6a64a3d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b42a087-b8f5-4bc8-998f-1993855ec96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751d5eb2-19f6-49c5-8e10-eafdf72b10bf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055e9e76-f6f2-4571-9571-eba1bf10c83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4b8694-3cf9-4f42-a82b-36bd192c9605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53d9b3a-70d7-42c2-a2f2-f80bdb09fe07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "064c095b-7055-4ad8-bce8-ed93e04ab269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1305b938-1378-4e00-8370-e9e973ad63b0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511d024a-0d33-4f0b-9e2f-809d2cac98da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6657a63-873a-4f02-a81d-0de987171a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99e9d8f-9a60-4049-be6c-4bfd8d8a504d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "76acf5a5-ab8a-4a2e-94ae-671ad6269479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621f889d-4cc7-4f55-8362-3fbfd983c7ee",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ce01ef-b041-49af-ac2e-a9ed90b09e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eab669f-5169-4ad0-8d58-ec5741d34ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7ea12f-81d0-4220-8476-35cd96381874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b527067-4a63-475c-92cb-25e384f1efb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76e4aa6-2912-44a7-b1ee-22dbea4cc8c8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3ed77b-d78d-4922-b04e-573547a7c1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d4a14c-b8d5-41b2-847b-3714d4262337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1174f1-48b6-4c89-b63d-5e5a9dfe453e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "72d2a42e-bc5e-4ab8-8345-9d17d545828c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b7e198-da6b-4bbd-b165-a8a5531bcde5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8020823e-1a48-4d58-986d-d8aebca0134e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f1e0c5-06cc-4034-81ff-bf2c0f4c84c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efc1fbe-414d-4571-b47c-57a7028975d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0004a42-0c1a-497f-ba78-ea6993c56211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18491f96-99c9-4c09-a991-707a0c24dc0f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98fdc968-9c33-4d04-bd7e-95299578a203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766a944d-bede-4e98-ab80-d0940beee938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54355acb-63d7-4f4b-8811-39aedc62814a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f87f25ac-7130-4416-b9e5-83e3bc9d5ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d91e3c-2478-4671-a820-0e3a438ef0db",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d384f2f6-bcc8-4ef2-a475-3b7a94dfac17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47379479-c458-48b0-ab68-5b1beb40c0be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b919183-6d6f-4fe6-b039-d43b539c546a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83e29f95-9494-44c4-a1f1-0ec19fc5fac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959e78a5-1b4d-469d-bffd-b8bf0f81e16a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d7b69d-a0ea-47b6-9f89-6ab7af182b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90b8e27-bc33-4239-a88f-3b435c6daa82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe78e0d-7d98-439f-84e3-4f6de6743731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d63ce27d-abcd-416f-9c7b-8a03d1b63db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6dfac88-73e3-4a3a-8be8-e19ac19fd8dd",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c79789-7e65-48d6-a5ca-5a568ab0df75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba87054f-e958-4fb2-ac8f-9f56cf37e75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3835f5f-14b8-4aa0-a5a3-abc9a8df6a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed1b43a9-ac1d-4573-a8e0-fe59d35bd354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d5cfd6-5e6b-4e0a-8af7-1e0b655097c4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356b922f-95d6-4df1-b018-17e1a4ea9150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4c7cf5-c2d7-40ff-9f5e-0eee8d5af038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c6ef86-acb2-4d25-b6ff-5f66ecd3b5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37b15eeb-6cfb-418d-aac9-e2a9f35e262c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74d5626-3b78-4d11-b1f3-ff81db7383df",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd044e69-c744-459b-b180-587e3054afb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3abbdd1-4faa-4c3a-b519-6d578328e0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3745a441-a733-4e8a-a03b-baa86fdf668c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddeff265-e367-45ce-986a-41b1cb22e2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56bd379-d404-4cc4-bde4-9549179711a2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d48b322-bfa7-45e5-9285-a2f3ba678d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e05afe-96be-4533-949d-d61bfd7f9570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb8445a-a5a0-4e0e-b380-c6bf89b85a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "820d818e-daac-4f59-8235-51b407bd46e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a36724-b927-4985-b3cf-48888ea5dd88",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a201bd-ef88-448b-adcb-7a2acf7c767f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0721659-edbb-45d4-80fd-0f089ee8616f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a5463c-a71b-46ef-bd1d-08af9e135118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af72c385-649a-4e4f-a932-55fc9c8ee8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c198f773-d638-48c1-8d65-b83cf36e06b2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2127a905-6412-4073-b743-094d567e496e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc5c570-8056-4aad-abd1-22a808a5a87f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82fc2dd-ce8b-4c99-90f3-201da86ad390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7b3ae6-63a0-42ec-88ac-83fd4dea962c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b66d985-6f43-4f6a-9518-8b3c119aa8bb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42e7fd1-8fd9-45d5-9f6a-af8c5946474c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57291750-6070-4ca3-a7f6-413a96a4da41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259e1016-4024-4558-8326-c331b1c91a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "818cdfb4-ca28-46db-977a-b933186e4156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f33208-4a58-45d3-9a30-fe594a5a077b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5640bf9e-cb03-44b7-a8f6-ef2799246863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357da1c7-1f29-4fa8-aec5-2310ebed0d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569e6916-60a9-4747-8c19-8c1c9896d2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "36e12882-7f26-4c65-bd32-52d3c6648387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f332c56-51bf-42f4-b6ca-55ba7f72dc09",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e33cb2-d29a-4a6c-8cf1-65ac2f79c489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679197a1-00d4-4263-a495-3cd528fae1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44ecb16-af60-4a51-ad18-97b26ff58d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "66efe93e-39f7-4056-bc6e-0d8b44500444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d427d508-9eb3-4ea5-bc1b-24b5de8bdfcb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6760c3a6-2827-4e04-9301-137ab6b5ae2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "701922be-d956-46a5-81dc-85f4519314d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567b2e93-a019-4e82-84e9-55fe7201e8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e62a792e-5d12-45b8-9ef2-4cf4ad19f6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69188a3d-59dc-4e88-b1be-3c3e032be308",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb302eb-4828-474c-ad88-568f446fe4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b60a989-9423-4ad0-88da-0dabbe7edd14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb66d65-122a-4d5f-b719-2c7acc23a685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0fbbe6-a61e-4f56-be60-ae77531e340a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277e6405-0a24-47e9-90cd-d0cfaeebce11",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b081f168-cfb9-4d94-8dad-d904748225b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3ba212-9ebf-49f1-a2d4-ab6fe74c069a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9430eb2-7dde-411f-81fe-941b43e854c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e364894-51d2-4b0d-b2a5-975828425af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760f53dc-e13e-4cbc-b9e4-513623eea8b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde22393-7436-40e6-a0b1-e8c3482b4d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d67588-5392-42bb-b608-85b1109caee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163767ab-ea70-4aea-8afd-725698582701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f22b7c-6d16-4d5a-9d10-2d6e504c40ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de305ac0-c6ba-4733-9ee6-4ea322336c65",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233cc4e5-c054-4128-bf1e-43d265d66a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ae81ca-cab9-4a64-ad75-a2fa69197d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a1b35b-3f16-443d-a15b-8d7a685332cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "37be5988-c561-468a-a345-59ab33436eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ba2c44-c832-42e5-ad25-8e772f12911b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac59b32-7921-4674-9e9d-84b9bd8ae16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877a9814-2a44-487a-8513-f1e87d1bbc2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa5ab0a-b95a-4f51-84b8-3d3e6290efb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "69a3a9c2-161b-4632-9cca-bba09f7cf018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f060923b-e7f7-4860-9956-cf60c0db4dfb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249f829b-4767-414c-9f97-d6a06a2afe15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683b1c6f-b9b8-4afe-9bee-2cd856560f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b5bce7-ca24-4506-8a5a-a7bdf9759d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cfae721-7c4c-4fe0-95ad-5b2d25b8c7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0d1d9a-fc1a-490f-a9ca-0ae54e94a0d9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997e8154-fe5f-485b-8cdd-63c39c92782a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e399519-8bba-4702-8a7f-1bf89e193ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837c0580-cb76-445f-a8d5-5a32aa5d6814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abae4209-fae0-47df-a08b-cafa574cf9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6b570e-b436-46bd-918e-50140d416dbd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f006d6b-f515-499c-9a31-1e7a9b3a253f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf91a55-a80f-4588-9181-ce3f4e1ca7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddd657d-4c28-42f5-b80c-70cd2490a73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abcffe76-da73-4e9e-90ab-2da641100f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed82ce6-c335-4eb7-9f35-31ea04e7246c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "907721c6-5699-4964-a290-bae965c7a5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67116875-9878-4ba3-b611-87db4e6fd985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c83629c-a940-49c3-a933-ef9e97351de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2756575-d3c5-4c27-b0a0-2cd30101ac43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a013fb-a197-4e3d-b9d3-8122df9f6614",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed72513-7918-4d9b-853f-ad31374bee5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f41477-6c6f-41fa-a8cf-258392195093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bdddbc-9189-4986-8ad2-96e08a89cda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8be2f92d-0213-4970-937d-fecb2db69b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08fa459-367c-4108-a1d6-4758b5d99065",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a605d0-4d88-44d4-a857-da536c68ed45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e7a61e-c68f-4b21-befd-0eca6492ef51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f847d5-035b-4689-8c3c-82c53bc1d96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "61ed1961-7706-4274-9818-086f6990f5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b974a5-c666-4d18-a0b4-371d57fbd11d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1493079c-830f-42ca-a34a-d14491b70c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cf0f52-86ad-41eb-bbb7-c00d2d04cbf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a734da8e-746b-4091-8643-02053e7791bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "428be481-5c17-421a-b82e-c59d15d5aede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac2cdcb-eb53-4e9c-ba73-fa13afb61cd2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d4f5b8-7e1c-4d69-9b82-f5eb22b36e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a2b222-9e41-42f6-a4dc-497892a8ea59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe62c2a-f2b1-44c0-b6c4-4f28f106e5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8241be1f-0936-434d-a0e7-71698bc2c01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15fceec-0795-48c3-99b4-bdd6ce174460",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d5c20c-71ad-491d-8d60-37675f3a561a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa2813d-b1f3-4b8b-8c80-8ce26752b3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c567cf4-bd33-4764-85d6-a567439f0793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6722546e-3dde-412c-aa99-a3e59c7a5c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb231e1-c38e-4201-9031-9299b783f948",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266f4fa7-0330-49f7-923b-6c315e485ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b372f11-c3f5-4c9a-ac71-03ffa7394ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2fa909-89fe-4d5f-8de0-b8ade5578186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93a374a6-fba9-4e17-b086-80304cbbec82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e053142f-bf57-4d6e-962f-0e957db2014e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06b2f55-650c-4840-a291-80c050a0dd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d028bdb2-6f12-4e9f-ac67-4501f7bc2348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13fe499-a538-40d5-be73-36a5beb123ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "417e9308-50ab-447c-869e-21f43ff2b4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fa3818-c5ff-4886-a553-7809f556fea9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572f11fa-9058-462f-b3d3-44d4e536cb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a018a0-3a63-4abf-b39f-785d118af54c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f09c79-0a56-4939-96bd-13de63f28a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1412a9f-899b-4019-b9ac-3c977eaba4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2d4e48-43c1-4d71-b080-e0a11739ccb9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2880a2e-30e6-40fa-96dd-422a7fb796c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d92e2d-8797-4d7a-9728-d45c5aa32687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b95fa8-69da-4558-819d-981e8beddbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c7c902-9e9f-4945-9e9f-a61a5acda32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41da4c2-fc3a-4f8c-93b5-cc23889ef266",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f66de4f-2910-4f62-90b9-64aa854b8f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2453fd-a50f-4726-be4b-7a1c9be1bd92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae9eddd-d112-4ac9-9c6e-d2964221cd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "674031f3-5efb-4c6a-9e39-a8714b30d078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2491e4c9-1128-4bf0-915a-94017d97e8f1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791a7c11-eeba-4125-ac2b-19b184cf543c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6054c883-3ebf-40c3-b41a-285e0ae933f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9112a09-c209-40d3-ad0a-6cff6ebc8a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4075b40-66f1-48fb-9107-b659c638ce49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed24304-4dfb-4205-888d-e278601c1087",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4d550b-ad1d-4934-8493-f7f3e1a1d179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614d7866-a2a8-4324-8183-0dd2306834b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e25e2df-940d-453e-b6a8-537433a8b246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee6afbe3-b8e5-4716-bcb4-dcc2df80099e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0333baa-61c7-412e-b9c8-08e7cc3066e0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c025c67a-ac7e-4cb1-92c5-c7d7cd7da9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2c4f5a-b53e-46e4-8690-9b188dc974e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495740c8-dad5-4349-908f-8e122b418cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb34b4ed-a603-41b6-939e-813857299494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd77f1c7-81b5-4fd1-ac50-fb3e26d29647",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00141854-49e7-4c76-a65d-e23cfa7c1047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a44cf9-605f-4916-b2dc-40c03cc13288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd9d813-56f0-4bf6-ba84-7716816b7e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "27997e8a-4886-4e98-8b13-73a5989740d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b683c9e1-89c9-42cf-bb3c-394db4afee34",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e042106-ec0a-4aec-b5b8-913dbe8bceb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f611d4db-beab-468e-9841-347d4b62c495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfff0f5-7f32-4d07-8b9c-172ffef0529f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "176f6151-1997-4162-8d30-17a21fb8f699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70d197b-c240-4174-90f4-6ab1d066e6d7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ef6e34-b85d-4a80-9bea-2fa86bef658a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027358cf-bfba-4310-b5d7-23f90528dde4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e07965-e5b5-43a9-af53-09ebe73c6c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "142a013d-4b0c-4a15-b1c8-db28860a58da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8914f7e3-d4a5-40ff-9507-04d3a0c0fbf2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1626d84-e7b2-4ccb-933b-b87aa2929292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed25adc-4bae-48a0-8236-c6560e062b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad90212-8797-4225-8355-fcb7ef794589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ef6f1b-d3d6-4d98-be53-a084e0efe134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff6365d-2c18-47a1-8b6e-06b31abf6c74",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef45c71b-c089-4dc5-8475-6f232260f8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fcf971f-8e86-4a6f-8f86-924671550953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcee0cf2-ec4f-431d-a47d-f6b72be3def3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd396aab-a7e3-4c32-8bcb-804f65e0c00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b525ca55-8416-4a66-8e73-cc1aca700f5c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952afebc-d088-44fb-9b66-a49abaeefb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea8f474-5d2a-476d-a0fa-89fbab7008b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775990e6-8a96-48e3-a642-04dbedcc6a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3db5ec6-2852-44f6-acb7-99980798562d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9a22c9-b828-4b08-9407-c199cee90cdb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de35de9-7979-49cf-8736-4a91afd22824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb5f3de-4e1f-4acd-b99b-923e0e5fa6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fe449b-5fa2-4fea-b348-dc9b8891d8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdacf945-d4ed-4050-82af-360a1f8d15ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a7509c-939b-428d-99d4-9f2337a146a2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3201f716-9df2-486b-847c-ae8b1a2307a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eee7b8a-50d9-4bd2-9df0-7d2797de25aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76dc6bc-5b75-4078-8d5e-0393b64717d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8094e6d4-b60d-41f4-9229-8b432bd1889c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3dcf76-46ca-4c7f-b335-51052a8b12cf",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b02281-9cd6-4f66-be84-c185a35f66c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356d30b7-239a-4cd0-8423-5afeccecb987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e1f96f-5421-4eff-b389-004843c29de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee1b8f6-8a65-4d10-a97a-608bd3ac26a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c661ff9a-8f9e-40a3-9a0f-a92ccdb6fb1f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1935f3-bb3e-4acb-8a75-53dad3e6f253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3efbca-6054-44a7-828c-7048207db8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cfbaa6-d4bd-487a-aaca-aa1c211202c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6b1af7-30e4-4dd1-8a0c-6768be13cfb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53ff85c-ff98-4094-994f-ee502c0a14d0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f75a70-f47b-4233-adbd-a14b83bc9df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65eebe8-93e7-45f6-b743-e6eec901add7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bf12a4-8a89-4952-8038-93f63fa3d3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f44cdbd-bd29-4969-b838-1717594312d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597da7ee-4fbc-4fb7-ba4f-18c2f4413f9d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ba0fdc-5e5c-4f4d-bfd7-2ab84a6ba66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "12e7d798-c381-403b-803a-3fb5aa41e4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f46147-3787-4592-ac89-57b8b274a526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba8c5fd6-b243-4ae8-9666-5ec50f534183"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c87eb9f1-f268-4dec-b781-046f6f51ed05",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ac8afbc-9594-4074-993f-67a002ca8d8d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742cece7-c515-406a-b0d6-0cb0c1497781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f98c0ab-5186-4834-89c9-cc99a668f768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1666b7b-3d76-4185-acd8-ca4a2c23e0ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a1f9eb7-a78d-4b4a-a7f3-d886e5e47489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9d97a7-61ee-4bf5-9f5c-b2d1fb6eefa6",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7664cc4e-9eed-4119-85a8-822af4cd3f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b427f6d7-7497-420a-bd9c-3fc600569d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df96dc33-feeb-49c3-8411-6d0e93b46fa8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21e71a75-9b01-49f3-99d0-49569d98e2e3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bc3c4db-b437-42de-b453-d9a3349f992d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d5b1851-337d-4e33-a9db-115878ee6744"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "baace141-c11d-4462-8b2a-3db5494590c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "140e4b63-9109-4784-bb0b-796aabbbfb1d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "29e1bc8f-6cf4-48c5-be1f-486744b4e844",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1dc9ae9a-e9f5-4cb0-ba74-4a4801d5bc59"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c5068346-7dc4-4c28-9e48-cfd8b037ce7a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "23598e3e-89af-4d67-b0a5-b38135d05482"
                }
              }
            ]
          },
          {
            "id": "872d4898-36a1-435d-a2cf-650f262ca25d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e12ea3a-f456-4e67-a0f2-925a3b8fecd0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a7c7dd8-1792-4fd0-bfbb-d8c735260b63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ae2c46a-1cc2-4a89-a27b-df46ad5dab67"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78cc1913-d903-414f-85ad-d441ee5fdb15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a126c13e-1ba1-43b8-bfce-c46245ce24db"
                    }
                  }
                ]
              },
              {
                "id": "0e5b5eb3-3d63-4582-bcee-307f5064a310",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1516f3f-5290-4a8b-a8c7-044d26e882e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1aaf0226-6829-4387-9a45-546ad0a39179"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70ec8fe2-9bbf-4947-9d16-e50ffe75f2cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7fc777a5-5bda-4627-bb68-7e510a2f2570"
                    }
                  }
                ]
              },
              {
                "id": "f2f1741f-0223-4383-af0d-c978c0075fe7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcdcc10f-0b18-4898-b44d-39841bca15fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f2f7a6a-3952-4aa4-b709-e73a65134000"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d4c084a-2a2c-4fd8-bd2a-0cb5560b6e4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6f87e9be-432f-4245-8d56-143add8bf461"
                    }
                  }
                ]
              },
              {
                "id": "cdc11121-9580-4e44-8567-3d2323416a04",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b17866af-b3c9-4935-8190-9fd875676af4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6bf423ea-aa86-4cc2-b96d-226e94306598"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7467f64-a40f-4760-a6a2-2d42167a7871",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ba393f03-571f-4ee9-ab34-d7acffde1809"
                    }
                  }
                ]
              },
              {
                "id": "a40ca8d1-a4f4-4050-abe5-e8f99cf03fab",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9927201-6cf6-4326-860e-c7519751eba1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29de1f57-740d-4fd1-acf9-bb8b2a233066"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1da1a50b-d983-4eaf-9789-919ed3b0707e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "57606ce8-a478-4f97-956a-aa0cbab72bd7"
                    }
                  }
                ]
              },
              {
                "id": "8abb020c-3eed-45b7-9fb5-6a3e7a0bb5bd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a82ac13-edde-4209-93b9-a41e65c26a97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac46c70d-53d7-4da5-a143-4ed963f43413"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2b875c7-7be6-4790-9382-cfbbfe8c745f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1718f79e-e89e-4b8f-954d-f85f0492c014"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48f6df91-97b4-4b00-8e69-7b76ea43f05a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7973ec81-d129-4804-beea-fa085513722d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9402b2e4-0164-443c-9497-fef2e9c6262a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec43bbcf-d94f-44f9-a295-47db2fcd6ab3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2314125a-9bd0-423b-88c9-8789c0ff3b46",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f94a92f3-246a-4eca-9942-e987d778a19d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd67e057-e36f-41aa-8461-f6a5bbd1430c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80de3c1b-48c7-4f49-8c2c-691624ebd259"
            }
          }
        ]
      },
      {
        "id": "a4627e14-6739-43bb-b90e-f852c9adbfb1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2c33a7b8-2b56-4d58-b0f2-715226fdbd78",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5da93b86-bc93-46bb-b4b2-a5d98b43af20",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "245a9d2f-5057-4fcf-8ae3-74c5b95661ae",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a604fd6-21e0-47dd-807d-350a0509dd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d91f910-8233-42c4-998e-7432fadb38ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f396968b-107a-4811-a914-30ac816efb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "743ccbfd-77f3-4253-917c-57b9747c5dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62a66fc-6188-4595-8cdf-6cece6d4038e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1712c862-41e0-4334-b6c5-6b1e48903ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe64b671-9506-4823-b5d6-6f53dc78f96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c59d9c-37b3-424e-aa08-950e68dc0157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "767fd738-2f93-4f8a-a9fb-116c7bd8d402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359d6924-5b55-4b73-921c-e37a9b4bebdf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5867a8-32fd-40ff-92b7-8e6ae34239d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace5c45a-41e3-46dc-8434-f9f4915833f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f44429-58c4-454b-98aa-3260a7bc9e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f99361d5-01da-4c84-a242-68e28200f0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1d84b2-24c5-4286-88f1-b75519b6036a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c392df3-7035-4cf6-bb44-e882591dbb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851e2776-d570-49de-8819-3eb086e2a42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0402455-f7ff-4973-8e63-216e59cc334c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef5f018-b2dd-4987-bf4c-4a2961c149c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96b4781-4f0c-4b6c-8f8c-017de9617460",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b96dee-3ff3-498f-a03f-7a21f7ab7f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574ddc6e-893d-4774-940d-6b9b66a38c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0ac259-98c0-4b1f-bb89-41ddb9b414eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eabf88bc-4f94-4ae6-96ff-9fa735e7b026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b6bfd1-0732-4f2c-baf6-256f6521c7ff",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd1f601-8c4f-4e85-bbc5-a53de54fb396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda4985a-e8cf-44a0-8140-2f7e691493ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3da984d-b750-4af1-b2f4-f0ebaaecaf48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7b81eb-48ca-4f0f-8937-8021acd6e5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa8f980-0569-4bf5-948b-f79f624fc8a0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491823db-7336-48eb-b04f-a833968759d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90972b9c-524a-437b-998f-10a68c1449f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8608035e-47ac-4254-83a8-cc9662bd77d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "518192b7-9e3e-4995-a134-f758a26d7cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b43d4af-4e42-4d11-b754-53f1060a48db",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbda55c9-1ef0-4be2-a094-869a7a02da5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4978ff55-c3e0-49bf-aae6-e9d434115bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53078f75-98a6-4965-a5fc-c8c09f096039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efb99655-bbdb-4603-97cd-a2cc4abde24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5227758-7cbf-44d6-bad1-e4e1e050799e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f71fac3-1b65-47b6-a603-3cbcc817d017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a298406-076b-473d-82c6-1baeef6647d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcfee40-be2c-4ae6-98e9-23eb607ac12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6504d3c9-4cfe-41d2-a43b-d89ad676068c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e2d8c1-c5ef-45c8-bd69-7dd77285c45d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b470665b-d2c3-46ee-a60f-64eef67d7aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da6f1e6-dfbf-403c-81ed-21083c14bc17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3804e4a0-d3b1-40e8-8f8b-6d4f6ac13e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c16f4696-2e1b-4ab1-bd5a-90c849eea795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de40a7f2-2013-4ee9-8dc8-43e2b115dcf3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8115fa-1be1-46f0-b0e0-387d8ce88b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4152a19d-f856-4a9a-b435-f18723e19024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96badd5e-8d86-48c9-a486-39f4abc6a6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d7d747-017c-4964-913f-dd8e62e26e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4aafd79-0b52-4c60-b97f-67b2d298f6d5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14e13e8-dc76-473a-b174-6d53181351b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079312cf-eff3-43ef-8d3c-2560d2662df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cbace5-7c92-4857-b9f8-1eb5bf8a6d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e87675-7090-4671-9c57-fe3e0d55df2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90de386-2a9e-4e95-b4e1-8ddf75935ee1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0cff09-6a45-4b4e-81e8-f50b482df584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0465d2b5-b38a-4459-b328-8c82ae8cb6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee39acc5-6158-406e-9c7b-893ae750f2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0aeb5a-2f4b-47c1-80c9-8487387acd78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779ce2e0-ae63-4302-bc0b-7a17d8ad52d5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b42f90-1ea4-463b-abcb-d64d392d9235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90568fb1-1576-4dd2-97a6-cd66bbf0c7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0b81ac-88d1-4542-bc78-75600d1387bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "832dc9d4-0c7c-49df-be24-d80c8cbb9f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5c8874-9087-4c83-91a5-b28d1a119d66",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c21b2c3-988e-4936-9fe1-f7475382cdc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5eb8d3e-d1c1-44e3-9ca5-ba56e2d0f409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2a21df-67ad-4564-944a-552431771048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6564bde8-bfc7-4206-970c-46e73ad79db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa735494-caad-4eef-9ca3-a7afaf7c5062",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f99f603-ddeb-4580-9917-156e804292c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84cd757b-6634-4fb4-90e9-d6db1a1a92f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fdd6d3-74cf-4cbd-9fbd-1b9e994189fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f9ace98-9d50-4f6b-827e-45791ddde731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0810a8c-952f-455a-9f6b-b9eb3c879bf4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bc8aa4-63f0-459b-86d0-54b62f664ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbd9636-3474-432c-954b-39ffee117537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a2d5e2-c1e4-4c18-8ea0-8b1595686718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "65a22684-939c-4361-8721-e11b4872e5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3676bab3-b4e8-4258-a5d0-c2d39d330e0f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31e9be9-1895-41e6-af7b-3c08605e641f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467a4a4e-0d47-4400-89f3-7849b59bc985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f7a540-a936-4310-8a1c-45c636837ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cef63b-dfcb-4ccf-a704-bbc273ecb1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb060b6d-b02a-456c-9860-c7102fb45c5d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347c0fce-ac8f-48c1-92ae-1157f92062cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c260e7ff-93ce-4ba0-9f0d-752da8a42e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abc8aef-e654-43c0-be30-4dfc0c7fce49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b210218-d4a8-465b-910c-79940cae041d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42823a37-ea46-4847-b279-208190a295b8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea7aa00-9f4c-4348-9125-eb38f73defef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414fe845-9ea7-406e-9d12-b8767a98b2f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3eab207-4c43-4b29-b681-699fd9f6a771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54a110ab-f029-4536-8ab8-e2df85710ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254df84d-6f32-4bcc-968a-54869680a01b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f1b2e2-9552-467a-a208-1fb322499bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3486b69-d4e9-4b62-8248-c6b7cf161808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e7a024-970e-4fd5-92ce-ddfecbce5be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81d1912e-6687-4148-8b20-da2cb730bb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfd62c6-7dcc-4fce-a841-0ee897b0bc5a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8433fad-7fbe-4614-ac19-4b983f252f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4deea87-fa1f-4599-9d0d-80c63fd866ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc5dffd-f202-48e8-9e33-d4b60e176abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8466a8e-b8e9-44cc-bfff-17793487e30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb92fc2c-a296-4037-85c9-f82c8e8e8131",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf036d0-8609-48c7-a3f9-1ffd86a6a7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4fd636-dfb3-4ca4-a31b-abe89789f4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667fc664-b7ea-451c-874e-3d4eed7e0a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff70028d-682d-4270-ba38-2db397b0a672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9922083b-f9a6-49b0-b1a9-cb25e9d216f2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7a45c3-cfe3-4b3c-9802-15bd9c89b9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2614b4-78c1-494e-ab07-6fdb1cfa3610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18edfd37-9a8b-4bf3-a8e4-00f0ab0fb60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f268e2b-a687-4840-9b62-77efc091bd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c8e92c-9b3a-4ff7-a2ae-c6ac0f40dfab",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcf67bd-3e00-4efd-835d-945da006f94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65467bb3-864d-486b-b225-ded2c84689f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99ef391-524b-4a22-8d6b-148fed43046d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "670b81f9-4e1a-490e-a245-d20a6945747b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f1f3b0-e696-4907-8f6c-2d28e9b5aed5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98060f4c-888a-42d6-90e2-269a2c2dbc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c54226-fe4a-48b5-8443-7e0330a3d836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcbaa78-949a-4ad5-b188-7bab79dae6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e82e6edb-eea8-4496-aade-e87fa3da0f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d36e2f-0621-4508-8034-a4054b0b937c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb200561-d30a-42e1-b384-b21736dd9bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee7df66-db2d-4f65-b341-7db5fb68ed98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84da7c05-06a0-4f5c-88fb-e119c5a16603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb38ae8d-f383-4393-bc05-175852ed6465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1deb71-0fb2-4cbd-adbb-b7815390c774",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db0aa57-a71c-4363-8d6e-541d6e20882e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0b82ae-ea68-4985-bfec-ba30ea0c1f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960d6c1f-66d9-4ba4-98d0-5c363499ae59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0303d5d-29b1-4c57-bce2-223549b2c489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba979b3-2f5c-4115-b6dc-f9a8cc77f4a4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179fd3ce-e6a2-4124-b7fe-7f0bf13f512b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26c953c-ec10-4da3-9fc6-70873383ffb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f054cd9-6979-460e-97ad-46b6b843acba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc91d94-a3ab-4c36-a2a9-04ce45bb055d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7e5767-533b-47b4-9d1a-64d3cecbb2a4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec4c107-6ec3-4316-8307-9271a3335dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32db78ac-388c-45e6-87ad-72d909e33e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3787c08e-765e-4167-9f62-dadc86b37929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9b9e60-abcc-40b9-a6d8-145f1e54b933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3075de7-cbf2-489a-9b86-5738fa6aeb38",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0eb466-0dc7-4888-b9f7-25c332c30f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f0ac5c-2e2f-4d45-8b7a-af0cc3076a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9582b652-561e-4da1-aa8a-b263230694e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "204b7618-5de0-4b80-b77d-c72944494037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee6ea67-cfe4-4618-9753-4e001201eabd",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8289197b-4048-499e-acab-1f193997ca8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1892b717-f9b6-4231-942b-5fb4b3b525c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9244d75e-dc0e-4698-b53c-eaafcb94109d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4a8f39-2156-4cfe-807b-668ba1c59f09"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1296eebe-cf33-42de-9cd9-c76955eccc0e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "edcbd7cd-4a7e-485e-9ebf-93d9f5db864e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94402621-6e47-459c-a9d5-9acb41c9272b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4e8364d0-9031-4eb6-9bcd-b7b22d7aa267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfc29d5-544d-435f-888a-0354c55a5671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe1540a2-8b27-4fff-8b7d-e2305ec03b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bd7555-f6b2-4929-832f-339f243c99c2",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b80ac79-95cb-46ff-b56e-ed2f09b46e40",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "749d5558-c8a0-4d1d-8b68-cc3cebdff09e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe66870a-c1b8-4151-bfed-c96141a937ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bfbbb22-b54b-463f-8854-163105a20360"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4051451f-f8b0-4b5e-b576-bd6627955b69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cd62c0c-fe63-416e-bbe2-d7389acbb17c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ec4a185-52f9-4d14-bb94-6a2903dbb99f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbd11202-b83b-454f-8233-6f6c848b181f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6737f9b3-408f-409c-b904-7e5abfc62da8",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3ae69ecd-de67-444d-becf-1d6ceedf4315"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ea3a749-4552-4225-9adf-f6690139d6c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec7aa98f-71a5-4c6a-be2d-58ec5c96ea89"
            }
          }
        ]
      },
      {
        "id": "29b63276-5d2d-44dd-977a-94b5c8111ed5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e08d1c6c-f365-4647-8dac-c926a617387d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f655ca6-dd25-4615-b2dd-d4e3d572b834",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "23779eb7-899d-42b4-9b42-ef53b9303b21",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011d784e-1668-400f-a461-451f261f44e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0135973f-3ff2-4f84-a0d5-c7288bb5e268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becfd36e-1211-437f-a5c2-26b50614bab2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db56df4-6e3e-49be-acfa-4daae8a2ab98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318771ed-d90d-4573-adfe-02e575a834d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbebe9b8-9de7-4dc7-85da-e4d6845aa44b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c3b9cc-09e5-41d0-bd71-025284562d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30942e27-1b83-406e-bcba-2b41d952f382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b752383-bcee-4e53-9f75-055a90c194ed",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7741de-31a4-45bb-b860-ce1a5d15552c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8621be-9b65-4486-92e8-2ffa7cbd5a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268d04c1-f237-4040-bdfe-c4859b296cb5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864c926e-4fbd-4d1d-956e-c49186311948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b845d162-4251-43d2-b841-24f1c7655cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96a7b80-46d0-478f-b68b-5d6e4b730155",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea440ab-7148-4b27-99b0-a5f5cb7d0e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca7bdae-836b-4512-b253-2dfda139be22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10140458-373d-472b-adbe-79ba1f526d2d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542f2bd9-38ce-46f5-9cc5-25dd8b7a3ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3e8935-118c-481a-9191-cd7bcd184fec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed92dd27-b34f-4424-accc-bbf043dcf1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d141435d-3ff3-42d5-88db-db1f9dd7f9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4d7c56-1189-4497-8c93-154ce36f7d8a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e00dcf4-67a7-4ccd-b767-b00427512183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33b7a9ee-9ce8-4d06-adf0-89fc608f14a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "857a41f0-63e5-4c72-b8cf-b7c42ec2eae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7538954-c5cd-4997-8e8f-5baca031ab7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced92b48-e00e-4ace-b357-8ccc913d41fc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9b558c-3940-4883-90e8-8e354ed42f90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac89bea8-35fb-410f-84e8-9d462af69b8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb300149-6149-430a-8848-c7ac3b309804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c610dc0-6311-4cac-9c5b-7cb3d9d7af40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c068238a-2a9f-4453-9467-d186c4541ebf",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c85cd3a-5518-490a-9bd4-f2df6ae63f9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b538c6bf-ef4e-4b0c-8e3f-0a0155f6c221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a678d5-ee72-4414-a518-05539748cae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d81501-8e63-429c-a890-7479b7bd92d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f41f07-a66b-4572-8550-38f01ae17b34",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96553ae7-3a17-4226-8985-fe2f13f83904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ea37df-5507-4f84-a90a-ece5c17b4b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2990e507-7193-43df-ab12-e05ad35fbced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68102d4-faea-4013-955b-b41d9b7e1b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94a2394-844f-4b41-94fc-876fb7af1486",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5460e47-d789-4944-975c-7eb6f374dd75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654b8683-8c8f-4387-8780-e67ad72d8f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f970c64-eba4-4563-86c9-56a9521a5a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4fdf356-9c53-4c0e-be5c-f2b979b31725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6978ba53-2323-418b-b832-c2315b560289",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee514ec-e716-4018-9b8c-3fb5a1a5fdc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce5bd411-9f93-4247-9bd4-02e79fc6a454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c13265f-bee2-4b03-80e3-c70ff8a6daee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c43ca30c-047d-4f27-92ff-6126a922e8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b41138b-9a38-4c6e-9591-e84e0b4062dc",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8cb7e2-450f-475e-8e58-8626d74b9c59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0262461-3290-4031-930a-2bd016fdf981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e1bde0-4376-4d93-95e2-908c6154787f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f51cee1-3f7c-4015-8e78-15860d6095df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2d0afd-80bc-4b78-bfa6-6cba3c5974bd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af00303-9aa5-4063-a624-59454e9a2f78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc5e0c80-7793-4957-9a59-cde6769b4d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22002e6b-28d6-4be5-8ce1-d67e89ff4159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36bf7e79-f81f-43fb-9584-2640fb99e751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b5b5b7-db5b-4aaf-9d1e-66779eb993ca",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7d558b-48bb-41e8-a2ef-cbd2c0855961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9951ad9e-9774-4e25-a13a-31a600a23692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359263b8-7498-43f8-b84c-1ea0d6736bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1b5f74-6276-47c9-a2b2-e75323fecaf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203dd880-209f-46bb-9d84-5aee27e1d5cb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5034e37c-a916-4de7-b730-e9a78ba88f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41628be-f84f-4ade-8725-fdfc87aabee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "868f1f4a-8637-4cfd-94cb-1bff97031fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73ceebb-3d25-4d58-9f09-39e80bc22097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05566e9-7bd5-431d-a60d-13032fb107f2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf845e3-9dc9-4761-a708-15401ebc0e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32708007-fea9-4815-8d7f-e510d74acdad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8012d3e1-b3e4-40f7-91a3-7696c3cf359f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a20eac-84c3-4c60-b029-9e474e57a54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de8378c-fc26-4b2d-a64c-eea2bab0249f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c44a8f-37ac-4179-8d02-0dca18332e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "737f0e88-8db1-4f0c-8b6f-842b2166cf16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54854cc-4c51-4054-a5cf-f01f2286aab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bb0f0d-e5fc-47da-ad30-044eedc9b00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836ee27c-f0fe-4297-9ffe-842e7911b363",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe6d19e-6dac-4a45-a2c3-b3654fea7d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc69b591-13f8-4258-b8f8-ce0231798508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "804fbc50-3e24-4a04-bb6b-9ab5a1ac3306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f32607-7a56-47ff-b2b6-8792d3409607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0183dc44-ec2b-4379-8d5a-7db51cd61b27",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0fe076-7314-42d1-b0f8-3685cb5e4317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc1e129-7094-4a22-9fd0-0a93601d2ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5600ccbb-12a1-4c67-8539-1eaad04353f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d53efa3-0add-49ef-a866-8d0f406df2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bcba02-bc75-4e67-b929-8dccb43332d4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8caf31d3-7ba8-4797-b602-06e9b2bc28f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c588b31e-7ce1-44f8-ae0a-2f93c25d79a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20806df4-0cee-4654-9f1d-7ecda759c5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20d5d84-7e76-442f-af63-381df03b0bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c71f322-d667-4a24-ad88-3a9aff30fc30",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393cd9b4-757a-429c-8f1e-e9243467ca2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef9d5b6-2ca8-4c03-86a5-a3f9012678a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ed21b9-e9c4-47e4-9efc-e621dc4e224d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1a71d9-bc80-43dc-90f1-6a4f3e58d715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221e8e53-dd02-4639-b1e8-45eef61968cf",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24042c9c-7f84-499b-80ca-24055da9e34a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c121486-285a-4ea4-8810-9b0d4e210cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f696cf0-b67e-49f5-993d-bd1159107274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4745e27f-abb9-48d3-ad59-6c18ff5ed87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cda72b-c98b-4a9c-ad5d-bc5480cb6e14",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2a6c92-13fb-42cd-8159-48bd5923b842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9159dd56-6527-4559-8009-30366d697ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44c3f8d-ead8-44af-b46a-d13d49efc744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1d49a4-548d-4e2d-a628-ba1492310f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debc7c4d-1a29-4350-8990-d1260692c441",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98b8d82-7966-4ebc-aee5-82de2aef46f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6452306-91c0-493a-a653-20f831674a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "078a8586-94ab-4849-ae59-25659951a13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94b2330-b9ee-4220-b86f-de031688a66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22110ee9-767d-417c-93b9-70f8baa6be08",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6de54c2-7c29-479c-8744-e7d05393bca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6346eaa-bbc2-4367-aae8-819658671a9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f3a13a-d40c-45fa-8186-98a322426da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bef7b43-b30e-4a91-9cdd-2f7a842aac29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff96c113-810a-451f-a73b-36a51d31d64c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03e7c7e-d592-4116-bc76-f1dde854e241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3304bf9-80d3-47f3-9d33-969f6ace1f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f056ecf5-9678-47c5-8797-fb2980f468aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49d9679-b171-4d56-a9a2-d6a10d99f82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e35f7fd-0b31-4b45-a062-0b9f5bf9c465",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4812232b-c226-44cf-92aa-b4ab947349c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d18190c4-3938-464b-aad4-cfd4823bbac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80efedcf-b818-4863-8932-c8a269fb3dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7edc91e2-e9ee-4c9c-8242-9f06c7f4e20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46db96b2-b6f3-49c0-a265-43d2ba209e74",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7677b28a-bd26-4eff-9853-28fab557fe6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b814dccb-b8ec-48da-84d0-8801e34074c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b64587-a57f-4abd-813b-05d21051d65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25126191-4d39-49c9-aeb6-6f7684fb5a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0ab518-f28a-4f24-b55e-b094bb5c4e13",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b578940-76bf-48b0-9c0a-8c6570297363",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c8d1ec8-4291-4227-893e-343338807aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "214f1663-377e-44f0-bd4f-eec6b091a01c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33354ce-24f1-4d7e-adc4-f4d22a87539a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b881865e-3fa0-4c7a-bd78-beacd8f4d577",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f2e3b5-b14a-44a6-8e1e-cd9fc4464a00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22c2ad81-a5e8-426f-a6b9-668533a3d4d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c813404-6a46-452d-82f6-84411efac4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f3812b-a3c2-4a33-a08d-a1b906285c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f72a8b-b3ea-4996-b9ef-9b4958d05e24",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d957914c-937a-4473-a057-6e3385a234d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75c6e854-9529-4292-af09-f8c474dcd15f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1139669-97f1-420f-9ebd-f75e0731687a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d518b0-069d-40ae-8b03-67513e9a4487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bb436a-e9b9-4646-b71b-d0e59e6f6a53",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c68d71-7ec0-4796-9551-d21b93e45cce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d223bdc8-87b4-4460-befb-0e74270434a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c5ab0b-fdb0-4cc1-b3d0-0a63183d160c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02cbec1d-bb32-4f84-91b0-ba894b201ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627fe063-70fc-4197-8560-cbfd717b16a2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e94f1dd-9201-4370-bdc4-f80753eb337f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247fc9fe-4e50-4b08-9a38-61d676709739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cccd806-bc85-43d2-8963-32b8b1a3332c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2845aa5c-7dfb-49c9-821d-11ff2b293baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ecdf24-9ea3-4232-96f4-511163c83de5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72100a18-702e-47a7-881d-160bed34665a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b0902f-f58a-4b9d-a4cb-339261664839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7035ce4-96e2-4384-8cac-1da44be8bd33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43d690a-b4ac-4d0d-839b-e848c93dc651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88d6a12-c094-4011-a978-ea8761ac21b8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1842442f-8228-4382-890e-8d64efd2101e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430484cc-a504-46f9-9841-dbfacba606ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa4d2f5-3d06-4ec6-bf2b-c53c2583bc8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b19108a-f818-4cf8-8232-5ad28019d109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0f337e-0326-437c-a4aa-0e17bcd49631",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07f85f1-eadf-4446-98c0-ba190ceebda2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a65f500-7244-4607-8b03-0db7ecd12be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a809688-2995-4028-8b5f-9b9c67fa040b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b48ff49-3052-43c7-8261-e08f98635fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a33856d-298d-4c90-9116-1c013c7b85b1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd9bbce-8564-4df0-a050-c701cb6f2e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8888863-bc3a-4f90-8c7b-5c977d1e6516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad9dc6b-7f6b-4713-9a7f-bb61dafb606b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbb4c84-1a8b-4912-8f01-a0aae7c49784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a379ab-6544-458e-97b0-3c72605d41ee",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd29524a-d167-4340-9951-954aad143821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152afc56-8ad8-4d5c-8826-9f01a54a9a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3533dd28-3649-4f49-b247-2a8723aae211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7a65b9-037f-4a52-ab15-6e5a13f1647a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91bbc85-9ce9-4f13-97ab-e5481d7993d3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e06c412-440c-45cf-9eef-0f4e921b7366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9b3e49-b3be-45dd-9a23-e9a9ea9dce2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "934b3cf5-9730-4164-b592-4549e0cc27a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e97bd5-20aa-406c-adf3-fbbaad7a417d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881e964b-78ab-43a8-a8e5-e05606e66625",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf12ae7e-1844-4bd8-907c-ee970cf61414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa47950e-cec9-4247-9afa-fc922cc24b7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5faff65-4627-4d79-ac10-f4b8dd95d599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6c0de6-943c-4a99-8fde-7d03a080a136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45a613d-e58d-42f6-b4d1-ab3a3ecbb9d9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0ec3f9-21b0-478f-a186-17928c82be3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb7f71a-a109-4dd1-9135-6c00e84fcc11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17de31f6-25d1-4ce3-b7d1-aca9fa847171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854005ca-2da0-48ec-9cdc-24419dacb1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1fc0ad-dd7a-4728-9852-544645e532ca",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065dd578-b7c5-4e22-86c1-980f9d95181d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c601a8b-882e-416b-9414-17eb8c77b14d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5c88ae-77d5-4d75-8705-f46ec93e2ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4340e649-e2f0-457d-8062-9179a423e36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77a6d7e-db1e-4631-b194-2fc21c28aea7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa43ba0c-f848-4a8b-b385-d707aa429489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a88243-f9bb-45cb-b49c-7a2c3418c3c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049be7b1-b10e-4a26-8bac-f083a357b93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47a3930-fd6a-4dd4-a3ea-84ea38b333af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db047a9-50e1-4371-89ca-8fa8fc0bcc78",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63ce78c-f724-4d13-8c2a-548065ef65d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3023df-a30a-4408-a94b-825677919fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5e5471-09e5-4007-a07d-7331771e44fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae5255c-f32b-4673-a354-ea9bc43effd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd640c45-e66a-456a-817b-0a9a6633c0ed",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb675d01-4dd6-4af3-8fb2-95a651b393cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b158fc-521c-4788-9987-62ea51faa83e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a31b6c-66e7-407d-a6fd-a0b9bf0031eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13472e32-aa8c-4842-8bae-921df8b281ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f71444c-2949-418c-8ba0-bd63d9f6251f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee255ed7-0450-4e03-bee0-24f286479c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de480bd-a0e8-47c0-bd07-fe3034ff08c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "656e39f1-55b8-46e8-8aa4-c65251e09071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7187d58e-e941-4df4-9cda-00f6695f768c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03735ee1-21d9-482e-a532-73cdc32ff871",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a848590e-a5a6-4f86-ae30-0dcbb23cab2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58b39bc-0238-4f57-ba57-1bc389d07fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46e018a-7940-411a-9b9b-2ca3a4ababdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9960ed70-2d90-41cf-95af-beb9615eba19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30273dd-8669-4a91-8f02-d22b269ad68d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825df407-d5bc-4812-a025-156c90ee4f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68dbfc6-6c9a-429d-9996-bf7a96309705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d34c49-2ec3-4476-8777-268bd3120799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1992dae4-5066-4a8e-856f-af1296758f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74420ad0-aa75-46b8-a6dc-798fd4b2d98d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bbc995-ecf5-4e40-b426-35b65aa7b6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bdb417a-6dbe-4169-a81e-2fad063d6972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "105b385b-ecb6-4715-8a27-b30d088e3853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae6fc21-b665-443c-a445-4b7571c9e1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7783d5-d775-4760-af8e-c71183c627cf",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14208cef-38ac-4ad9-95ed-d3928be87fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01414679-9401-4f8c-899e-c6154617c222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f494bde5-e989-4fe7-8ff7-5223ded4a0b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fcb7330-7028-4b9c-88f1-2bbcc2467d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaeeaa7f-9f6f-42b3-ac71-7ff5cb16d9f6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854dc4b9-7f9a-4e29-b492-baa4912ff2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0591ac04-60bc-4e13-910e-05f3d297be8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "185f7e02-38b4-481d-96d5-1a3fe3ac19f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60f9545-5ce5-4b17-b304-352d55413483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f06e1b-5e08-4e3b-bc63-75d6e804ddef",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c709cd-254c-4bab-b691-6cf8b445cf03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fe2aab-bc12-47ff-a94d-b7e9b22b6d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b35b275-e618-4284-a1d6-52af6b94e522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7669733-0e73-4bf1-aa28-b5ddd3ed2b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89113442-f369-4efa-a8a1-1bf945c7e027",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bfaeb0-42dd-4b7b-afd1-08ab82838182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a9d65c-c92b-4cb4-b5e6-487a9f603014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4985b5-526e-4bc5-bed4-e9b88792216a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9915c358-2d53-4504-bd8b-8c5a7a25285d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffcc2ac-dc41-44cd-9865-d0586cbacbd4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7283502a-d2a1-4516-98ce-0ce60f237621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af709fb-d409-4288-bfdc-b9b95e8768e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9d3968-00f6-4c65-86f7-7d2d176a4832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3353239e-4e2a-4974-875a-8e88d85a3bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8119c0-4796-4b1a-a7bd-edabe7a18dda",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43c73ab-034b-4f76-97de-95fb6244835e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c665e11-7273-45ab-a6a1-610677cde5b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4ac73e-370e-45ea-984b-7247499676cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcdc08eb-d090-450e-af89-177890df668d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f852d5ef-9dad-4d3e-8eeb-a06c2a7a4019",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea9dbbd-cc8e-4503-a726-daded905eb0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83577c02-8d78-4424-8719-cb9ce9871a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1a699a-fef7-4fca-989a-499682607ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed0b4a0-2e8d-4a27-a6b8-5d7ab19fd4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b23ac2-fc48-4525-8c13-357fb17632de",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3e6494-f895-43fa-8229-cbcd3839524f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110bbb4d-e347-43b6-abec-3847c8968f9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac3109e-2422-4789-9a3c-c5b97d55deb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20eaf5b8-252b-4cb3-bb8b-b8bb01c7dbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407602f8-5f86-4c88-aeff-f6b72154cb46",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6c8328-8d3c-457c-a748-f68b808e14c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d654849-ebad-4214-8640-04c3588e1834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc3d69f-fb53-4216-8b8d-783896c14b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbf5af7-b289-40d3-b89e-ac6b6ff966c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cffeb5-8ee1-4e7d-b98f-bfc9e11224b6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8ef8f4-ffd2-4896-93f3-2a2f1a6c8b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bde0fa2-5559-4818-ba89-b992bb55e94a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3830e2f-dc50-41a7-8087-c58d5ff40281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afbd69ac-fe8f-4906-951f-bb11ce0fa795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee0333e-f6cd-4d6a-86d9-9aa1ed167e89",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5fcb88-0c11-4a5e-9299-27023c66112a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a09dbf4-db35-42b6-9362-919817a42c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2783be-db40-4af8-9d18-7fbb743c2d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856e9bdc-6c32-4c9c-b768-b5c328ca3a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d335e0-de72-4e8c-bd1c-dbe2dfe7f9a2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51475788-7488-46bd-bfce-43ff8392dc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76686dc-3ad7-4d59-a480-b8ccb4c43858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f092eb-0fc8-4ca4-b91a-fb55fd5bb974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82813983-8ff0-4705-ab3f-1a89c07daeac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22073d03-9724-443c-b783-5ec8e4e41e52",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d18a230-1b14-4546-8fbd-8993efa04081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6507e75-c4b1-4efc-9c48-e644affc3cbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a64ba59-bfae-41ec-9dba-30b6c1429d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b174d40-ec4c-4430-9c20-7182c3247f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abf91c7-8d7b-4c17-b541-8fd1e2a3a28e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62377109-a8d8-4217-b614-f1fc2f05aa1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9ff5665-a7ef-48b5-959e-797c66dd08d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5766f169-bed5-40c5-a32e-0aee4f1dfa04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3fdcc7-6ff1-4a1c-aa24-cefa58690763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc70655-4444-4b44-8084-82153c38f82f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ffff66d-4121-4a2b-a996-db228c6ccdd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9177ecc-a01e-4c73-97dc-c0652bc0ec31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e99e6e9-9daf-4a7b-8fd1-5213496ba9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054c6837-b783-4c94-81d4-f5780fa57c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43e6544-e7ed-426c-8917-f46a6c7b9116",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e2eec7-2b08-4bab-9008-95c331260af5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "815a6481-8d84-4b4f-8d9e-8d25cda484ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6332dba-0fbf-4145-885a-f606ddfc245c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "882dacd4-92ce-4799-9170-9380abae4782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe1f842-e794-40bd-9d41-3cb98eefc5ae",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7937b4-d478-4891-8740-b719af94baf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b60541eb-61d8-4f1b-b7c5-b4e39f58fe35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12401ff-0fd6-4eb8-ad90-7a5fa2a8ee68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573a346e-5287-4526-87f3-9e4f76ffb928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af9df7c-b8d2-43aa-9a23-94b78474eacd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df57b63-ca50-4e0b-99de-93bf6465645e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34064271-d8a3-4f3d-968f-c98672070a9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "497c45a4-8910-4277-8522-b1b03260b940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769ef81d-8d62-43df-98c4-aeded8d956d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ba79fe-a01c-4ba3-bf17-1982e1f47f4a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5283207b-1ada-444f-a480-2e3e16420536",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15966394-248b-4db6-8d33-10a2a0058bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f98b8e-b9bd-45f0-a21e-3e0f393daa51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e364f0-d705-4766-ad4b-b7cc5cdf40b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b38e61-d1a3-4591-86d6-6d76361fa6f8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b507c7f5-6f70-411e-9fbb-3d6c5e9bbce3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6475b382-ab56-4815-ac0e-51edfc6fd47f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1eabc2-7e04-4be0-b6ea-9048f9e43126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6b30f6-57ab-4764-9b0c-c6a90be5fd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd955f2-7ed1-45fa-b325-217949912ab7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0f384c-a217-4d3c-904e-c9320d536a07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b533f424-9625-462d-8595-38093f9635c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79b0de0-2662-40e1-960f-b00bed0cd840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f657fc5-1346-4073-b958-ba457a019750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b52092-b9a7-4f6a-93f4-a218b8b74cc4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670aaf30-07f8-48a1-9b14-e49dc1d62741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3076f567-5fab-4ec0-98b8-64045f9b66c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7132ef56-52d2-4f84-8d3a-a47da9163ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225c01de-6ef6-4992-8cb1-7de096c1e8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b52d1d7-045e-4f8b-a6b8-b2e05de035aa",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823a3998-3bf8-4960-9459-516bfb63a3e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b278ba36-4998-4f3c-9b1c-2e3d2dbb028d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3276ba1f-214b-4a74-a417-b96178f94f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd168cf8-1f8e-4dc6-a114-153f9496830a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3aaf1b-fc0e-40cf-acf7-705a2a40fb45",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b185156-90d7-455e-a3f2-7efd2878d572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93d9d027-3e71-418c-bbb3-f9cd0e8d4696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "344d499f-e069-4e8e-8ed8-4c09704488a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9af6e4-0c67-4365-88c3-1a90818cbccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854cebfa-8999-4099-9645-033a927a91a1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aae31bf-4fca-4ae6-b7e0-cbc8cfef276f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "711675be-e3e4-4f41-9337-9a0f2a8b8719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9b1571-8383-4335-96d6-f443e01d6fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff34dd6-cd6e-4322-ac87-30084d527c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b067a89-18f2-4ec9-9e03-aace69b76625",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103c83ee-b57b-4a69-8fe1-a0b564d4a05e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39590bec-4d10-4d95-b4df-a3e6d07074d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffea256-2077-4ea4-8083-d3ae6ecdd10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3db8b3a-6059-4727-8350-f06ca660da52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb55d90-4dc0-4102-bec9-968802bf72b1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47e4a67-cd20-4c8f-b3f6-137e133b74f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73c7fdbd-51d1-47a8-8b7c-357c84fddda5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e5eba7-9567-4d71-a782-c0f5c29d6e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0fc51c-93d5-4696-9040-c3eb767c4c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51964d2e-5725-4a83-87de-a21ca0640729",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37857a17-80e5-4196-8c7a-ef6481d1e651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdff4a90-5193-40b5-b09c-79608eceafdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc6574f-00fe-43c8-8f67-59d55ec393ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fdc69f3-ace7-4ebf-a409-5aae240c7b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786d9be1-1d83-4edc-bc13-d53d181f6908",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732496d7-4317-453e-9b3e-756a5f43b81e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "463e38f9-c4b2-46c8-a4aa-1b2f749b068f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8187e9-e4c9-4511-b326-6f5af527bfdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241b5007-e4ef-4ffa-aaf3-3ffc26f8ca86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81e7a93-fc61-4b5e-973f-24253435ac47",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54dd3809-2ec7-4966-8b84-8a85d47222b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0332814c-b83b-4b1b-896e-1d21b6b29aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78fa6a1-9859-4283-a0a0-ed088b362100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2fd1bc-01c9-453c-b39e-69f895e849f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208f733e-16db-4991-8962-64953eefb698",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2b86c8-9a77-4fcb-96c8-08f8e9f04e09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3aed509-39ac-4b54-9457-c14952d00d02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2121a9ae-c749-4c8c-ad1a-eb7713d8eb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a27209-ff78-480b-bcb9-3ad85670f75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8534d664-2b0b-462d-9e10-f4511fdc3185",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c285ff69-5249-4d9c-a5f4-f8fa52fde793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c4ffc97-e751-41d4-9d2f-e059db6a55fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6144987-dacd-42f5-afb2-a2b4d0b0373d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be68ffa9-7f79-430b-b001-5276f16cd4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebd9748-e97d-494d-98ba-80c9fc670427",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd20ae3-0f3e-41f9-814b-fe75ba04b5be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60c177bb-7d2e-47f4-b2d4-d487a9dc9c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25d981a-512f-4a37-a36a-2425b21384ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a59542-113a-4cca-8efa-aa8fb792528a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4e4e33-c3dd-4c86-af5e-1f124f877721",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4be446f-5f7c-4337-8616-c993d1ab837c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6d419f5-e829-4d47-9fc7-7f770ca2288b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af225d82-1db3-4d6d-bd1b-341d74c4cb31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a9301f-d40b-46f0-939b-c8d503583710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9290c224-71b0-47f9-ac73-e7e84d9fc5f9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d3180a-40b2-41e0-912f-ed186be8200f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50b988cd-818b-47fb-81d7-120c289e4cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d13403d-293b-4fb4-8310-0899564b938d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0396de34-1a3a-493c-ba05-32489f286ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e9aed8-4cd2-4200-ad79-9285cfe187a0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc217db-d59a-4941-830a-c91cc309d94f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e90fdd5d-5179-4010-a633-436a2516dcbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6cb89c-f777-4a44-a903-e868215fe99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82de61fd-7eb8-46c2-9602-3272108ca3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b010e7b5-38c5-4802-b72c-75a9d6233346",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950e10c7-9c13-4e0a-85ec-f453c25ae842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c279dc64-8b4f-4cc1-a2ea-0b55f8e5eb83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "892df269-eedd-49eb-bf9f-1827f5b3fb5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c610c7-ccde-4278-8c3a-e715057e8132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1e7219-cde4-4d79-ac2e-e243fd9e339d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c0bc33-1955-43de-93c9-b1565bdaec70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "579dca86-4219-47a8-9523-2fba3051fcb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38950543-2cb5-421e-9360-4ce9e680bb59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6822027-86b5-4b24-adf6-965aefe750ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b755f6a-7389-4906-a396-af89a3f9e882",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb03017-2dc0-44e7-8314-70cc976f0164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df47022e-7dd7-47fa-81ff-c859827adc45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d72736-d21f-4f3b-9b1e-182c9656b9b5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb28ae5f-31ad-4871-9743-e8327480ac72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff45e22-fde1-4239-9474-c3e370774207",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2494d44-c8e6-4840-9bb2-cf2bea48b734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6766d039-c065-4995-a910-7bbc074eca94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f026e479-5f44-422e-a567-74490065171a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e2c474-297d-4735-9830-730690f0291b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30692967-d714-4fcd-8ac2-819d86904d99",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71137682-cfb4-47ff-8614-f155b63d77bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a63d62d-5e95-4454-a418-bdedcfa88539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddb36d2-f86d-4ac7-a103-d52b9580d174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd0ccab-7ca6-43e8-a000-510a879c52db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf704d2d-c563-4d46-af89-50b63288e7b9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079bf17f-6b6f-4797-b80e-2f01be8af1b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91845d84-302d-4249-8da5-8b46583d7e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55c2641-a18f-4936-bb46-8507ec362252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a20ef8-5cac-4664-af50-8b26135720de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95dc1531-85bf-4cb9-863f-90de7da20838",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c48621-97d1-4fc0-982f-5aef36c8a76a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80c064bf-7c81-4e8c-a218-060db86de067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d659b1-a9ac-47c6-8890-7242776bc800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1154b6d-eb7a-49d7-94cd-d03a0a22c92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b339573c-d1a0-47c5-94e4-f726b90bd898",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f11a49a-658e-4196-96d7-ea1dbc8ff235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c06d044-4559-40fd-b854-c7ce0712fe42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9878a6-b724-43f1-8f53-427687546489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2abddf-db3f-4dcb-98d3-920f9552571d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568b1552-6a67-4824-9e77-290b7d89ff69",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d0bc36-3b79-4b68-bc07-253a46c5027a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0edb3435-f0fd-4d37-b13b-dc0dbe60d25a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45734ce-83ee-4128-8d55-9b76b442fb05",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64e88eb-08de-46df-9698-49042866fee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0a24df-c127-4b9a-8908-93692b864652",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e143fa-63c2-4b03-8c77-1c9cd73de494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e2e8be1-29e3-40e1-8c5b-a789f16f08e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da59e8a2-471b-4f9d-aa3b-8eff8eef84e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b866c7-fb99-460d-a431-9e05ed367356"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7968f421-89f2-46c2-b2e7-127dbdf744e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65bcf68e-a76c-41a3-bc24-814bf4d9ec0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e7f6c5e-9b20-4cfc-b108-16e048058fe3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5cb77100-6971-416e-aa5f-df3e4c3d400d"
                    }
                  }
                ]
              },
              {
                "id": "13c31a94-2b3f-4d23-bb0b-a8872c629f7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f6f3365-a2f5-4ac6-a0dd-0d26f34cfca0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70131a99-8200-4505-9308-0492a30a5c4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "782f3246-8d3c-442c-bc6c-e0ada10d2cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7205f82-9728-49c3-860b-3531939d23b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b67e94e-712c-4d3d-ae93-fae0e27ed58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf1c818-82ec-4ddb-9f43-aaab830d8de4",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162d9862-da13-4ed4-a037-75724c71ee64",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "34571daf-2ec8-431d-b2a9-54519faad458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a70750-7a23-406b-9647-3ecae894e78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85825a11-7d4b-4fbb-a629-8575cf208375"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "177132f6-0ce6-4173-8e12-e1df4c4746bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75e82d97-2773-4eca-928f-f30a3320f067"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84f6b38e-8992-4e62-8f15-8ba79ca68a64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "152abb6e-3dab-433f-900d-863d10b6ab1b"
                    }
                  }
                ]
              },
              {
                "id": "5ccc4859-a978-49be-ba33-b6e099596086",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c64fbe14-a811-4789-8b6a-90c60d9b6e01",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28e0bda-b9b9-4b6c-9ac1-8e6865d165f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "79a85a6e-d1d9-4248-b8c8-9f5424bb9bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace043ad-041f-4599-8796-59d5518e1900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f811d1c-bb01-443d-a974-916cbb3e5c79"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "efc0d174-4e4f-478e-89b8-3b8febd328de",
            "name": "Positive Testing",
            "item": [
              {
                "id": "219285a2-ebd2-496e-b3b2-46d45381c826",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "828d8c07-bd2e-496b-a81e-0ee5c9df3dc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "10e2cc6d-fab4-4145-909f-1c7cac7c67b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16bd638e-41f3-4c53-9fac-f85833fe13e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8e7321b-c654-4d71-b9b7-ea00a21b722a"
                    }
                  }
                ]
              },
              {
                "id": "f43e02a4-e3fb-4c7b-9bfa-91687a33cf60",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8554906-36c3-4022-a31e-117309c94a3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3f4cc265-3f4a-496f-8b76-ad02accf83ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6bf86a0-84ff-4159-8845-5bcb7a5dead5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f88b08da-c3ca-4c05-afa8-a8db7fce24e6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2f7ad5d-a39a-4ccd-833a-3aea336e3497",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4d645c6f-43ac-4a5a-a6ce-c4022fb2ba84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0256fe97-7c9b-4e0f-baa1-e706069f5d6e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6025ccd4-476d-4b0b-86c5-fc9002b6179a"
            }
          }
        ]
      },
      {
        "id": "14c566a8-b70b-4139-af88-8f55cd30ac85",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2a58978f-f8b3-4df7-8693-49304ecb8269",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23452e04-923d-4703-a1f6-9b5ec30fe663",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e8240a3-a24a-48be-92e8-f6bc6de27bf9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315b12ae-6567-4b70-9708-678440415ae0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d8396fca-e48e-45c8-aaf7-2ff2217ad5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bbdda8-3c97-4662-a615-253aaae484fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a811af0-d0ad-4570-9db5-1c74b2c17dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79c0ab1-4b4f-45a2-b1ca-6014b9c500f2",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff421ccf-ad1c-4b8e-bce7-a86755d7e856",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a35a0f63-6a8c-4a4e-8fd7-947bddf4ad5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e1e877-57ed-4c03-9462-353a5d5af3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad03848e-fd26-4b34-b8cf-7fd550b4d81c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e3cac56-b4c5-4cf1-b40f-30ef63437bb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "833f7e87-9b01-4f2d-bd4f-859185cf12f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d353d949-8a64-480f-933f-ddffbefdf9eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2c7f0e6-da93-4f25-a7ea-59f90d21b295"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3cc7ab72-81a7-41c2-ae42-e52605681f6e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6afdf340-e7a9-4d52-8123-26883dfa5fe6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b540ccd5-9a8c-405a-9f3a-21963ed405ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c077db4-b0bc-41a7-a39e-d1df1f1a0b2b"
            }
          }
        ]
      },
      {
        "id": "da0d406d-9828-4ee6-b8ca-f3007d921247",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "daa9d1b2-a606-4d03-b812-22b6111263c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68a56f73-73ba-4b3c-8c40-3e018345aa80",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "823d919e-49ce-4284-ba66-957bbb4fa2b9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5b6b66-079d-43d4-ba71-fe133a6b6c4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da839cc8-c6a4-44de-8f0f-3e2c19920550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db489fce-283b-4d89-bd96-672834885086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7efeb55-c503-444b-836a-806800ffe4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cc2b8b-a981-427c-b07d-06cc141dd3de",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725b2022-a263-4531-94af-63cb6f04bf78",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2e597e-f907-4269-8c2b-2e7d8eaf0b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fecc06-3e71-4850-8408-dbe8fbf28fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dbbe8cb3-a492-4290-9fea-414f75fa0cf3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94c87a6f-e196-49b4-a844-6963082ce7f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0eac6e55-6cf8-42f7-a85d-9c6bbe61a998"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9de7b3b9-248c-4428-bdbd-5a172109c859",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "259ca698-a634-43a0-a0df-30b9320c6e7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4af68a4f-6c78-4066-a7da-e80e48d45ca0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eee8e6e9-743e-426a-8629-9cfbfc947cde"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67e970c5-0f85-4a02-a262-234a3244cfc7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f8bf098-0708-4af5-881d-aa14a52d3039"
            }
          }
        ]
      },
      {
        "id": "7f0a6cc3-86ab-4f19-9eca-ff226b0794a6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "121dc25f-8215-4218-ba10-dc7cdc890afd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6189f93c-5893-467c-bf30-05629acc3a7d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e93fc37-4f8b-473a-987f-d7970f155d33",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e3f7a8-2529-4bfc-ac4b-e990f69af34f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78bc482a-1384-4a1e-abfd-0d91452cccc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20259b6b-6656-4a70-ab3e-0607c82e0dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aac634c3-6c84-4fcf-b558-0a217e23465d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a912277-19d2-42dc-9f28-06d082186f63",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49941ce-f21d-4877-b6aa-3a4d9b1a26e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "56003376-0fcc-4429-9c14-8ae66fb1501a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e3597e-535d-4dd8-98e8-13f9ff1aafb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23e6c98b-ff6d-4817-b386-4409e5d80f0b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eaf2eae3-55c3-4202-a971-760adf8a2ad8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba2e04d8-d62f-4fea-a46f-87b56f11a6cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f0991c2-bc2e-4e42-ae41-0cc0e6d3a119",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2315f07-ac44-4045-9bce-0708a4608a2a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f046eee-554c-433e-9453-8c4a4fdbeaf5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dca0813e-4eb5-4e72-8afd-d96072a12263"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b46625ed-4a61-4e00-8e67-a97d119e8eaa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8129351-4b12-4b6e-908f-37497fcb9aef"
            }
          }
        ]
      },
      {
        "id": "3c5d702b-0b8d-4e57-af0e-f5001abdc116",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e364e34f-547f-405c-bee9-dfc89e0c748d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7d1119b-ae28-4000-9dc2-2d6543762264",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "082e96f0-e96a-42dc-a7be-e8cee201ff2e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8984be8-a981-4eab-80e7-af765181956f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0417212a-90ec-4fe8-97f9-4ef160d45fe4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 1031.7346153846145,
      "responseMin": 19,
      "responseMax": 13658,
      "responseSd": 1261.089438493044,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684024731184,
      "completed": 1684025010117
    },
    "executions": [
      {
        "id": "91a42c3e-0613-4337-a20f-b81b40c9e62c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "df046861-8e7a-4e82-9043-ecd6ed62bf17",
          "httpRequestId": "8e2a76cf-41db-496f-a312-127b7e426838"
        },
        "item": {
          "id": "91a42c3e-0613-4337-a20f-b81b40c9e62c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d2e1691e-11f7-46c1-b197-270742df5113",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 0
        }
      },
      {
        "id": "41a6b072-09ef-4ce1-bfbe-99e458f20fa4",
        "cursor": {
          "ref": "6e963861-f98c-4f42-9824-8e6145bf847f",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "54174534-c18e-4173-9cf4-9a10c9d24484"
        },
        "item": {
          "id": "41a6b072-09ef-4ce1-bfbe-99e458f20fa4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b226a23e-5d37-4b8a-8dd0-8cc970561b7d",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "ce9d46f5-270c-4627-b3d3-997b0f895491",
        "cursor": {
          "ref": "fb7bf182-4b6c-4f43-b70b-4f8ab843a9b6",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cfebf651-b853-4d62-821e-c3b2bebaf5cc"
        },
        "item": {
          "id": "ce9d46f5-270c-4627-b3d3-997b0f895491",
          "name": "did_json"
        },
        "response": {
          "id": "4e402822-1934-462f-bbab-d9bc00978c85",
          "status": "OK",
          "code": 200,
          "responseTime": 2217,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7324f186-d1f9-4b0e-af04-58a474d69db6",
        "cursor": {
          "ref": "9f073bb3-b87b-4403-ac36-1f8e67390a59",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5ed4a53c-a771-4919-aab0-4e42b629e488"
        },
        "item": {
          "id": "7324f186-d1f9-4b0e-af04-58a474d69db6",
          "name": "did:invalid"
        },
        "response": {
          "id": "843ebe35-a201-4171-8726-370a67697274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 945,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7324f186-d1f9-4b0e-af04-58a474d69db6",
        "cursor": {
          "ref": "9f073bb3-b87b-4403-ac36-1f8e67390a59",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5ed4a53c-a771-4919-aab0-4e42b629e488"
        },
        "item": {
          "id": "7324f186-d1f9-4b0e-af04-58a474d69db6",
          "name": "did:invalid"
        },
        "response": {
          "id": "843ebe35-a201-4171-8726-370a67697274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 945,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404991ee-f51b-4d6d-81a5-ccd515b74b80",
        "cursor": {
          "ref": "3fa50640-0cfd-479c-8d69-23d7f44d9132",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ea2a37e6-29a3-4698-99c2-47c7c43ac72e"
        },
        "item": {
          "id": "404991ee-f51b-4d6d-81a5-ccd515b74b80",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5b7b1027-70a3-4807-a1b2-eb796b62ae8a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 976,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045ad37a-563f-4aed-8212-24a75d3c7c35",
        "cursor": {
          "ref": "800f8157-23db-405e-89f1-3c60d4d998e5",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a2eafe13-ed54-4ac3-9ede-49c4f8b4000e"
        },
        "item": {
          "id": "045ad37a-563f-4aed-8212-24a75d3c7c35",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bffc23c7-a4be-4612-bb08-ff03584590da",
          "status": "Not Found",
          "code": 404,
          "responseTime": 830,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a50a53-c384-4161-bb52-844f83bac650",
        "cursor": {
          "ref": "162dbfef-63c0-4087-8de0-41b76567514b",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0fbdbfd9-f02d-4278-8319-f660f538fd62"
        },
        "item": {
          "id": "a0a50a53-c384-4161-bb52-844f83bac650",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "aa40c78f-57af-4e91-972a-d68543389ce6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753d1358-f779-4d0c-958c-2e26aac8d2d5",
        "cursor": {
          "ref": "00974ed2-61dd-400e-9257-0b5c1217d3aa",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c341e7bb-64ea-4754-8b3e-aad724a19cf0"
        },
        "item": {
          "id": "753d1358-f779-4d0c-958c-2e26aac8d2d5",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "13ac3eb5-7556-4b2c-9742-60ccf055030e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 784,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753d1358-f779-4d0c-958c-2e26aac8d2d5",
        "cursor": {
          "ref": "00974ed2-61dd-400e-9257-0b5c1217d3aa",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c341e7bb-64ea-4754-8b3e-aad724a19cf0"
        },
        "item": {
          "id": "753d1358-f779-4d0c-958c-2e26aac8d2d5",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "13ac3eb5-7556-4b2c-9742-60ccf055030e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 784,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5eb491-f90d-458f-b0f1-40c9a92a8e3f",
        "cursor": {
          "ref": "3d1935a9-0e04-4909-8d41-34b0efe604f5",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "10c81ac8-40be-4615-b721-0b49a18947b8"
        },
        "item": {
          "id": "6a5eb491-f90d-458f-b0f1-40c9a92a8e3f",
          "name": "identifiers"
        },
        "response": {
          "id": "a70a0f8e-1f1d-4f03-aeec-b0b7e9c941a2",
          "status": "OK",
          "code": 200,
          "responseTime": 1499,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc748b42-a3da-47eb-9a02-2e794bde61a6",
        "cursor": {
          "ref": "56e6a0f1-8a1f-4d0c-89d3-615d0e2f7388",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a4082051-9f8c-459e-bfae-26339a4261a3"
        },
        "item": {
          "id": "fc748b42-a3da-47eb-9a02-2e794bde61a6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b634de7f-f6ea-4c88-a482-2c316d18080c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc748b42-a3da-47eb-9a02-2e794bde61a6",
        "cursor": {
          "ref": "56e6a0f1-8a1f-4d0c-89d3-615d0e2f7388",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a4082051-9f8c-459e-bfae-26339a4261a3"
        },
        "item": {
          "id": "fc748b42-a3da-47eb-9a02-2e794bde61a6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b634de7f-f6ea-4c88-a482-2c316d18080c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d63955-084d-48ef-ad77-c2eceedfe51b",
        "cursor": {
          "ref": "b58d8c25-cfb7-4eb2-8a30-3bffa53824c3",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3ac1b82b-b967-4a2c-9111-46d032603075"
        },
        "item": {
          "id": "91d63955-084d-48ef-ad77-c2eceedfe51b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "365f9e1b-812b-47a0-9cd3-0c515abddfa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc16b08d-1790-4f18-bb8f-cd6fc6a6ce05",
        "cursor": {
          "ref": "87877145-dc0d-4e98-b716-3460b1605b8b",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "582bf0d8-9f38-4b88-8f45-636a8fed2cf6"
        },
        "item": {
          "id": "cc16b08d-1790-4f18-bb8f-cd6fc6a6ce05",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ec2ed3ab-13a5-4dd6-a152-5b03c3b39ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93508d64-c79c-4caf-90ed-0578a9d189b4",
        "cursor": {
          "ref": "7455ceb5-8a18-402e-b5c6-5abc247361a5",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b95930b5-41f9-4b80-9744-2d65fd697eba"
        },
        "item": {
          "id": "93508d64-c79c-4caf-90ed-0578a9d189b4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f33f23ec-b876-447e-94fa-5db42943b204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d38931-e734-4931-a105-d5d624efd73f",
        "cursor": {
          "ref": "7fde4dec-72b8-41f9-9d29-c654259df8e5",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ac727cc8-b03f-4c18-bd60-c629a2d63cd9"
        },
        "item": {
          "id": "16d38931-e734-4931-a105-d5d624efd73f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a6757275-d55b-41a9-a704-571b47bf5d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8211346-192a-45d0-9422-72700a694427",
        "cursor": {
          "ref": "61870107-4c85-4635-8f5e-6b62f6896462",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e3f30461-6f27-41c7-befc-4d5aacbc11fb"
        },
        "item": {
          "id": "a8211346-192a-45d0-9422-72700a694427",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4d7601be-a596-4e74-8768-518caa6f9678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1013,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4f2aa8-b801-4da8-a72d-f25e8b31f4af",
        "cursor": {
          "ref": "097d99b2-62c2-410d-b712-b5727106070e",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "513ca0b5-237d-477b-96fd-b0a7f5d493ea"
        },
        "item": {
          "id": "3d4f2aa8-b801-4da8-a72d-f25e8b31f4af",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dee0390d-3095-49f7-a554-7917702ade6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1505,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e465c4-2fe1-4dd7-96b0-af3e2f07714a",
        "cursor": {
          "ref": "9b8459e9-87bf-4cee-9af1-5a22bf32bb31",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "65c2b2b7-8bbc-4853-a3ea-e99d20b3b669"
        },
        "item": {
          "id": "57e465c4-2fe1-4dd7-96b0-af3e2f07714a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6472cec8-e3e1-4a19-a342-6629e57b3258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1487,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0c258a-b6bb-4fde-a342-79d641995881",
        "cursor": {
          "ref": "e26bc5ba-6241-42b8-9c86-2cfa61ff7cf7",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "53d6069d-4c7a-492f-af4f-d185e1427478"
        },
        "item": {
          "id": "cf0c258a-b6bb-4fde-a342-79d641995881",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4b78f513-fd7c-4798-b7dc-855896259ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1278,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fecb95-9f10-4548-92e9-ad181151f72b",
        "cursor": {
          "ref": "90766c52-f59e-4893-9493-582261c62478",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e7628c21-da4a-48be-a395-049841788e6c"
        },
        "item": {
          "id": "11fecb95-9f10-4548-92e9-ad181151f72b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3e9361ca-ad92-4797-a5f5-5667f8b83a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a386a813-a292-4968-ab44-5a6a8afd23f5",
        "cursor": {
          "ref": "ebdd1fa9-f29c-4357-836c-34c6bf5823fe",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1a585be3-7933-46c8-ba6a-b8254d8985ca"
        },
        "item": {
          "id": "a386a813-a292-4968-ab44-5a6a8afd23f5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "afb9ae06-4f1e-4eb6-958b-b6cf62fbebab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf25d64-6bdd-4c87-9c90-cf067b3cbed8",
        "cursor": {
          "ref": "e2d5a0db-d904-4d68-a152-26392b92f448",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a09f0642-206f-409b-9aad-9243436282c9"
        },
        "item": {
          "id": "dbf25d64-6bdd-4c87-9c90-cf067b3cbed8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1840c988-46ce-476d-b679-cc398fdfe825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacf4a0d-45ff-4611-85ac-a83ba9d632c3",
        "cursor": {
          "ref": "0696767d-edf9-4b36-be04-4b792a33a949",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5d9b851f-3acb-40a4-a3f1-2c640b83109b"
        },
        "item": {
          "id": "dacf4a0d-45ff-4611-85ac-a83ba9d632c3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "baf56440-8c66-4615-8b50-85780aa9a0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4db6a1-932c-4cab-9ad6-6006944b5b17",
        "cursor": {
          "ref": "3d237fde-b70d-4ea8-87d9-2047e9b7ccf2",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7f069278-2429-4090-98c4-a3c323f22238"
        },
        "item": {
          "id": "8e4db6a1-932c-4cab-9ad6-6006944b5b17",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5efe5911-6cc9-4a83-a43c-71e8b29dda2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3964a041-af9c-4dba-93dd-7c608e3e124a",
        "cursor": {
          "ref": "33a789f1-e467-4f41-b93b-283e5ac449ab",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d146cdb1-ee18-4f4f-80f3-099d5f967eb5"
        },
        "item": {
          "id": "3964a041-af9c-4dba-93dd-7c608e3e124a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "388374d5-e888-4aef-a9ef-bbf2f710187c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58d9f55-e7cd-4236-b3b3-e9f8b8ffd7b7",
        "cursor": {
          "ref": "f839fe7b-4bcf-4c38-bc28-d797e5295362",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "94f310d3-b9ff-4e1e-831d-d9ed8d278db5"
        },
        "item": {
          "id": "c58d9f55-e7cd-4236-b3b3-e9f8b8ffd7b7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "37ff3a2b-0687-4cf6-9c00-0f81f20f4f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db637dcb-f2b5-4c44-8170-ac968f7c94d6",
        "cursor": {
          "ref": "e8534374-b040-4a72-8287-baf7fd1f077f",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8abf2461-e2e3-4583-96da-8ef75fa7ee57"
        },
        "item": {
          "id": "db637dcb-f2b5-4c44-8170-ac968f7c94d6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "452dfc76-2b68-4647-98e8-27d7fb762562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c57736-57db-4571-a38b-3d89d857fdc3",
        "cursor": {
          "ref": "1cdfa2ef-f0da-4a9e-9909-13c802c489e3",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7363d01c-5e39-4e9a-81c1-e52a51e05d35"
        },
        "item": {
          "id": "87c57736-57db-4571-a38b-3d89d857fdc3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0afed200-d9f3-40e3-9cec-309f07a19572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585500f8-e56e-4018-a807-ff46afcdb5d6",
        "cursor": {
          "ref": "e8c53cef-f803-48cf-99af-3bd843ddd1c3",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4fb90c89-d0a1-4fc2-9555-c4fc2d576432"
        },
        "item": {
          "id": "585500f8-e56e-4018-a807-ff46afcdb5d6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "485f5a79-a291-40ed-b504-9fc3beed0c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d8f43b-4ef0-475f-8bbd-c2ed44fe0b51",
        "cursor": {
          "ref": "f1c90e47-d089-4390-959a-ff9136c9fabd",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b71e5920-2276-476c-bce3-0c1ad6ef86b8"
        },
        "item": {
          "id": "c3d8f43b-4ef0-475f-8bbd-c2ed44fe0b51",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "cfdb2992-4f1f-4aab-b018-cc93e3c87862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d97851f-ea3c-4d26-bbe9-2bf176af636b",
        "cursor": {
          "ref": "0eb7415d-51ab-4798-bea1-a1865cbf63f9",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e9cf2d49-bdff-4c97-b1cb-dea43ff49ce1"
        },
        "item": {
          "id": "1d97851f-ea3c-4d26-bbe9-2bf176af636b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3177cdae-8564-40f1-b8e3-cff6e99997f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7163c3b6-732c-4e83-b5bf-2253be09d565",
        "cursor": {
          "ref": "00033072-7361-4b2e-9eb5-75da30ce649e",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b7c0e476-9afd-473e-82f5-9ba73fe8f7ea"
        },
        "item": {
          "id": "7163c3b6-732c-4e83-b5bf-2253be09d565",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e882f910-ee11-4506-816b-6177c39eb61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bff06e2-f4fd-4e64-9dd5-307e83262bbc",
        "cursor": {
          "ref": "0d53de0d-f0b4-42ec-a271-189a0fc85d59",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "dee40082-3d07-4fa0-b39b-17eb33a31edb"
        },
        "item": {
          "id": "6bff06e2-f4fd-4e64-9dd5-307e83262bbc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9ad7a91e-9404-4266-9232-beaac4c6126a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff51a00e-a447-474a-8dc6-fef3536f3d83",
        "cursor": {
          "ref": "77b52e5e-3caf-4a84-8efb-86785ced6a7d",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9242c51c-5be3-40a2-8e43-7383f5d082d2"
        },
        "item": {
          "id": "ff51a00e-a447-474a-8dc6-fef3536f3d83",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "70eacf02-5292-453c-ad20-6f3b1ef1ff65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d10c27-247c-44f4-92a7-b5aedf72736e",
        "cursor": {
          "ref": "58a7891a-bf3f-4562-95fe-f3073fafd66a",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "895e8c1f-b899-4255-aea8-cf3cbacdb628"
        },
        "item": {
          "id": "e5d10c27-247c-44f4-92a7-b5aedf72736e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a3291162-5b8b-48e3-a147-52198873177e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7c463f-9921-47e7-809c-1fa11ad9341f",
        "cursor": {
          "ref": "672775c7-976d-442c-81d4-d9a9490e8eb2",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0837179a-eaa6-4f5a-be3e-ccb2e7ba8812"
        },
        "item": {
          "id": "2e7c463f-9921-47e7-809c-1fa11ad9341f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f1ce23a4-573a-4d7a-b352-58d63170fff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe8fbec-f722-4289-9e3b-0b3a244a5740",
        "cursor": {
          "ref": "6914df76-03d4-4f75-b973-f2254c083560",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b36b71b5-04a6-4144-b201-c8c93d99f428"
        },
        "item": {
          "id": "1fe8fbec-f722-4289-9e3b-0b3a244a5740",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9e161612-324d-4fff-b3ac-125a41d7cfd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b547cdf-d720-4f94-b473-3a63950a1f18",
        "cursor": {
          "ref": "a83ff6a8-68f6-4dab-b582-427a90e81b00",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a7c4e69c-1c4e-4662-998a-2567c0e60d5a"
        },
        "item": {
          "id": "9b547cdf-d720-4f94-b473-3a63950a1f18",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a77a24e1-f72e-4180-8dda-79514cd11b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 897,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b8a449-db05-48e9-988d-64d42a2e9f4a",
        "cursor": {
          "ref": "274f75c6-3800-4475-96f8-2698de6b5a0f",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "751c9ebb-024c-48cc-9971-ecf37f245c0b"
        },
        "item": {
          "id": "56b8a449-db05-48e9-988d-64d42a2e9f4a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5600c810-b924-465a-8f35-c2aea5702855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1059,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fc5dc1-7956-4e2d-85c4-51fcf5a62aa4",
        "cursor": {
          "ref": "a816ea7b-5f80-44c8-ba0f-ab0954190589",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ea028d59-21e7-41c3-b2f6-746c56e38293"
        },
        "item": {
          "id": "d2fc5dc1-7956-4e2d-85c4-51fcf5a62aa4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8b742d82-6640-4432-a130-dedb7c574985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1098,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb4c8df-472f-4a54-a152-148c4b58a5d4",
        "cursor": {
          "ref": "08801768-7d05-46f6-bf97-8882b4216830",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "753c4965-0104-4fd4-911c-7399e77bd2f4"
        },
        "item": {
          "id": "0cb4c8df-472f-4a54-a152-148c4b58a5d4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a10b60a7-7c4d-4f67-912a-faf1d022f973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1151,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7afc5ee-65ca-4600-8fcf-39e738e31189",
        "cursor": {
          "ref": "4def4526-8917-46a9-985e-c63fd49035af",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a8af0e03-ead1-4e2b-9850-890c2bd583c4"
        },
        "item": {
          "id": "a7afc5ee-65ca-4600-8fcf-39e738e31189",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "aab8742e-b012-424e-9db1-9b3db8ceea0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 880,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697144bc-4283-4bcf-b83b-56d12bab452c",
        "cursor": {
          "ref": "20cea938-6024-4c77-9ef6-fa683ea671aa",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d2209e98-7817-4120-8061-776fd36dd1ef"
        },
        "item": {
          "id": "697144bc-4283-4bcf-b83b-56d12bab452c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bed100cc-e160-4f62-b225-27630d41df9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1117,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c6bd16-f745-456d-a7fe-2e4678811bad",
        "cursor": {
          "ref": "ab4d7b23-3401-4e30-b95a-9e64e6dbe5fb",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "356f0021-088f-444d-8418-2582abbc2935"
        },
        "item": {
          "id": "f2c6bd16-f745-456d-a7fe-2e4678811bad",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "415e08f4-a8df-406c-90df-67678bb98ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1158,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847130d9-13d5-47de-bba2-f33c005ecb82",
        "cursor": {
          "ref": "1bba5d4b-9499-4893-87e2-f5bea79a21ea",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "23b7f944-dc1e-4e88-88c5-c67e499467ff"
        },
        "item": {
          "id": "847130d9-13d5-47de-bba2-f33c005ecb82",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e08a5945-2a2e-4b9d-9dda-f32fdb9999c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1010,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbeae3c-153d-4027-8953-18b8187e0ef3",
        "cursor": {
          "ref": "af36903a-17b5-4d1c-b6ae-2c236f47ae6a",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c1197a20-84a0-4e8b-bcc7-8f5b30de0f02"
        },
        "item": {
          "id": "adbeae3c-153d-4027-8953-18b8187e0ef3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2ed46c69-7168-4043-b2dc-f4c0d415091f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1325,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d46b025-94cd-4b89-a99e-7a815329c011",
        "cursor": {
          "ref": "f517eefb-f20a-4d71-bc4a-1ab97ad21582",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "67914d26-6373-49ed-8777-413d566d4ab1"
        },
        "item": {
          "id": "4d46b025-94cd-4b89-a99e-7a815329c011",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fe0ca707-fa87-4d4a-8510-fb9704cee721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 983,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d2e79c-aef8-47ea-ad9c-25143d7da603",
        "cursor": {
          "ref": "41949409-38ab-4418-a03f-bc9e67323223",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "be487869-df87-483a-b818-1d17b1e48a23"
        },
        "item": {
          "id": "86d2e79c-aef8-47ea-ad9c-25143d7da603",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "375cb6f3-d7d9-48df-b85b-4556e197f8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1069,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7968871-45ad-4564-b9a4-3ed81dc40193",
        "cursor": {
          "ref": "85a9290f-cccb-4eb3-810f-29885afb1afc",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3ff682a9-8aef-4bcc-8c85-959fb8bea7f3"
        },
        "item": {
          "id": "f7968871-45ad-4564-b9a4-3ed81dc40193",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7908223d-3887-4a9f-a1f0-3c5fa54c7e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1049,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e73200-ebad-42a9-91f2-03288effe3e2",
        "cursor": {
          "ref": "9b175754-54bf-435c-a096-e2ada34e04d2",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "63b01a62-fa9d-42ed-80f4-445f3ec9b4fe"
        },
        "item": {
          "id": "e9e73200-ebad-42a9-91f2-03288effe3e2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b15fc32b-01e1-45af-ac52-4f379d59c4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1161,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751d5eb2-19f6-49c5-8e10-eafdf72b10bf",
        "cursor": {
          "ref": "3ebe5730-cd0d-4fff-9abe-0d600b717518",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3fb896f2-1087-4b34-a65c-431568f62617"
        },
        "item": {
          "id": "751d5eb2-19f6-49c5-8e10-eafdf72b10bf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8c427c3e-236f-4f2c-b999-cb5c7ccd36ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1011,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1305b938-1378-4e00-8370-e9e973ad63b0",
        "cursor": {
          "ref": "ca3e14b5-670a-4997-8a5d-5bcf69efe0ce",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6e488dae-94c5-4fe4-ae6a-0a20d5441cae"
        },
        "item": {
          "id": "1305b938-1378-4e00-8370-e9e973ad63b0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5e564244-0212-4746-8745-5cc9eb3c32b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 975,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621f889d-4cc7-4f55-8362-3fbfd983c7ee",
        "cursor": {
          "ref": "c0b8b760-01b1-4ec3-a62c-8aa97a5fa369",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9d585ca9-8ac1-4a32-b8b6-eeb68c3a47e6"
        },
        "item": {
          "id": "621f889d-4cc7-4f55-8362-3fbfd983c7ee",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bee7b95a-8fdc-45c7-8482-3b613b3f73d0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1184,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76e4aa6-2912-44a7-b1ee-22dbea4cc8c8",
        "cursor": {
          "ref": "2a2e2175-d741-458e-8c0e-49d9cee5ffb8",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ecaa9980-e5a0-49e3-be1c-b30bea03280b"
        },
        "item": {
          "id": "b76e4aa6-2912-44a7-b1ee-22dbea4cc8c8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5832c21a-e577-43a3-96b3-6fad92ca0cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1058,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b7e198-da6b-4bbd-b165-a8a5531bcde5",
        "cursor": {
          "ref": "e8e717c0-ff57-43cf-ace3-ca84971dc31d",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3cc7ab78-a94a-44fb-875b-99c7bede30b5"
        },
        "item": {
          "id": "b6b7e198-da6b-4bbd-b165-a8a5531bcde5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "15e58133-3fd5-42d4-a3e9-911447b9d8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 999,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18491f96-99c9-4c09-a991-707a0c24dc0f",
        "cursor": {
          "ref": "e62fb5bd-6d93-4ccc-835a-d11c949b780d",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7260928a-cb5d-466a-bede-4bbcbb3aea06"
        },
        "item": {
          "id": "18491f96-99c9-4c09-a991-707a0c24dc0f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a2ed6908-7756-43ae-b7e9-25108c0906c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 969,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d91e3c-2478-4671-a820-0e3a438ef0db",
        "cursor": {
          "ref": "55532a2b-9337-46bd-a73f-78289696e18a",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5266dcc0-0b03-45e3-8177-73a2994d8a8b"
        },
        "item": {
          "id": "83d91e3c-2478-4671-a820-0e3a438ef0db",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "39722cf1-2e22-48e0-bc14-24b527aeb2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1053,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959e78a5-1b4d-469d-bffd-b8bf0f81e16a",
        "cursor": {
          "ref": "aabcd38a-a54b-4467-9c1f-0aa1dbb59415",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8f20b6ad-595f-4134-84df-4fe899e6063e"
        },
        "item": {
          "id": "959e78a5-1b4d-469d-bffd-b8bf0f81e16a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c94f019a-d962-4423-9438-a745c4603dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1042,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6dfac88-73e3-4a3a-8be8-e19ac19fd8dd",
        "cursor": {
          "ref": "e9635701-47c5-4b43-8cd9-d4cd9dcdd112",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1135d85f-7dc2-4278-bdd7-a64e42ba3ddd"
        },
        "item": {
          "id": "d6dfac88-73e3-4a3a-8be8-e19ac19fd8dd",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2d322be7-481e-43c5-abd5-d7c94391c62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1867,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d5cfd6-5e6b-4e0a-8af7-1e0b655097c4",
        "cursor": {
          "ref": "f282be97-4327-4c0f-bfaa-eadb0cbe5eb2",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ac7159e5-c019-482f-b437-a6877fc83875"
        },
        "item": {
          "id": "f9d5cfd6-5e6b-4e0a-8af7-1e0b655097c4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3fde5a4e-739f-46dd-8bf3-b44097419d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4086,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74d5626-3b78-4d11-b1f3-ff81db7383df",
        "cursor": {
          "ref": "c97e624c-5d12-4649-b5c4-66e7cee11167",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f79d2d24-4ead-4d77-ba97-4d2527b25d2a"
        },
        "item": {
          "id": "c74d5626-3b78-4d11-b1f3-ff81db7383df",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c7c5658b-3d37-4312-8a65-0d9fc50a005b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2240,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56bd379-d404-4cc4-bde4-9549179711a2",
        "cursor": {
          "ref": "00c3ad3c-bc61-4550-bcdd-e3ac28b374b3",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6f3bcaac-1877-4af2-9ced-b3b448dcac01"
        },
        "item": {
          "id": "c56bd379-d404-4cc4-bde4-9549179711a2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "48777c91-2b09-42f8-adba-363fe30c3f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1536,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a36724-b927-4985-b3cf-48888ea5dd88",
        "cursor": {
          "ref": "01a2f6e6-6931-4cbb-ba09-b763ba456ed4",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c73dc47d-2d22-43ab-8305-9a01cf550d3d"
        },
        "item": {
          "id": "44a36724-b927-4985-b3cf-48888ea5dd88",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "29c8cf1f-4a0e-4666-b471-215e02d5f93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 948,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c198f773-d638-48c1-8d65-b83cf36e06b2",
        "cursor": {
          "ref": "5f2ef93b-42c4-4858-b0a6-becc5bad3b1a",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5f11c568-2e10-4d82-8459-3f0b9df2d795"
        },
        "item": {
          "id": "c198f773-d638-48c1-8d65-b83cf36e06b2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e008823c-1119-41d7-98c2-6b49cf129772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1476,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b66d985-6f43-4f6a-9518-8b3c119aa8bb",
        "cursor": {
          "ref": "325620df-e1c2-43da-aca8-a31ac21e3c47",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ed2b422c-0f56-474d-b110-b4cd8aa377af"
        },
        "item": {
          "id": "3b66d985-6f43-4f6a-9518-8b3c119aa8bb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1555a418-116b-4568-8712-5a08f242195e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1438,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f33208-4a58-45d3-9a30-fe594a5a077b",
        "cursor": {
          "ref": "4f5994c1-ba04-40dc-96a4-9bf039fc8b5b",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "320ec8e4-dfd4-494b-8359-dbb5ffb9cf1b"
        },
        "item": {
          "id": "15f33208-4a58-45d3-9a30-fe594a5a077b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cd85b672-ab94-4b0d-98aa-8bf587dd6aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1392,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f332c56-51bf-42f4-b6ca-55ba7f72dc09",
        "cursor": {
          "ref": "d9ea718b-9e73-47bf-b324-ca51929264f4",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d663a8a3-f478-4630-a8ef-1a16a7133c6e"
        },
        "item": {
          "id": "4f332c56-51bf-42f4-b6ca-55ba7f72dc09",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "25902931-b963-4cff-9bb8-22a17842babc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1588,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d427d508-9eb3-4ea5-bc1b-24b5de8bdfcb",
        "cursor": {
          "ref": "56ec01f4-e91a-4fcd-84c9-c26c7bb9de6e",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "750c34eb-5b5f-43a9-9eed-a56efd1f2f71"
        },
        "item": {
          "id": "d427d508-9eb3-4ea5-bc1b-24b5de8bdfcb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fdc6e517-dd19-42c5-a523-2a3a91162323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2191,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69188a3d-59dc-4e88-b1be-3c3e032be308",
        "cursor": {
          "ref": "be43940d-46ca-4fa9-868d-d3a64092839e",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "746a3ccd-43be-4202-a5e2-96e6815cf83f"
        },
        "item": {
          "id": "69188a3d-59dc-4e88-b1be-3c3e032be308",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "550ee38e-b9b6-498f-a80a-eee1a9936760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2325,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277e6405-0a24-47e9-90cd-d0cfaeebce11",
        "cursor": {
          "ref": "cc22d912-d737-404a-86ad-cfbbdcfdcc6c",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6f740ff0-9fcf-4304-9a0b-2d5e7a80954d"
        },
        "item": {
          "id": "277e6405-0a24-47e9-90cd-d0cfaeebce11",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "05ade719-f009-4b83-b20b-6be2a25052b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2272,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760f53dc-e13e-4cbc-b9e4-513623eea8b7",
        "cursor": {
          "ref": "5865ca23-f4a4-447e-ae38-5648df66716a",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4641ec27-f849-42aa-90f9-4d71eea5b0ad"
        },
        "item": {
          "id": "760f53dc-e13e-4cbc-b9e4-513623eea8b7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4a151a72-aea3-4986-af65-bbc41a783fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1539,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de305ac0-c6ba-4733-9ee6-4ea322336c65",
        "cursor": {
          "ref": "600a9ff3-9075-4aa9-92f9-df1694425ce6",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d9dca10f-5354-4491-b41e-b57c615f3720"
        },
        "item": {
          "id": "de305ac0-c6ba-4733-9ee6-4ea322336c65",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "15f33830-41ba-4f54-99b5-1648fc9750e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ba2c44-c832-42e5-ad25-8e772f12911b",
        "cursor": {
          "ref": "8b6697f1-63ba-4142-9970-0dcdf1914429",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1ec83390-6719-4fb4-9c9d-5e6ee62350ab"
        },
        "item": {
          "id": "39ba2c44-c832-42e5-ad25-8e772f12911b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "55b810cc-ec7c-4278-948c-5d0bdc588a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f060923b-e7f7-4860-9956-cf60c0db4dfb",
        "cursor": {
          "ref": "cadea411-75d4-4a34-9d3f-04863dc00927",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2313140b-2b37-45c9-8ef6-891ad4a13a84"
        },
        "item": {
          "id": "f060923b-e7f7-4860-9956-cf60c0db4dfb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6122a2eb-3162-4ac5-a953-2125e63ae05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 861,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0d1d9a-fc1a-490f-a9ca-0ae54e94a0d9",
        "cursor": {
          "ref": "f99a59a0-3e66-4b30-b26a-28169412f855",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6d7aecb7-4732-4017-8017-a500d808982e"
        },
        "item": {
          "id": "7c0d1d9a-fc1a-490f-a9ca-0ae54e94a0d9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2b2b14ab-b321-433b-9f12-1be2de1bca21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6b570e-b436-46bd-918e-50140d416dbd",
        "cursor": {
          "ref": "3520fe18-f282-4ef2-a30e-e9f8792e6c71",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3049f463-8f99-4394-b544-7f6a651b819a"
        },
        "item": {
          "id": "8d6b570e-b436-46bd-918e-50140d416dbd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cecd6973-9416-4591-9a65-3403aec04f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed82ce6-c335-4eb7-9f35-31ea04e7246c",
        "cursor": {
          "ref": "31919a71-ce80-43ff-96be-e03f2f37b298",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b4744c0f-d273-41c1-8f13-f61e2787454e"
        },
        "item": {
          "id": "2ed82ce6-c335-4eb7-9f35-31ea04e7246c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "dcb57001-8022-4d01-8955-1a195832a710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a013fb-a197-4e3d-b9d3-8122df9f6614",
        "cursor": {
          "ref": "3a3b5bf9-ecbc-4e36-9fbf-1886b2cc6e62",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "774d8d00-b8c1-47ba-8c63-dd66a36113ac"
        },
        "item": {
          "id": "41a013fb-a197-4e3d-b9d3-8122df9f6614",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "323dc4b3-481d-492b-9ad5-d4fccf479e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1075,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08fa459-367c-4108-a1d6-4758b5d99065",
        "cursor": {
          "ref": "05ce33d5-6eee-4eac-886e-e97600d06f48",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5d6523aa-786f-419c-ace4-63d6756b3ec9"
        },
        "item": {
          "id": "a08fa459-367c-4108-a1d6-4758b5d99065",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5b341b45-dde5-4513-a425-1d2d0a7bb6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 976,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b974a5-c666-4d18-a0b4-371d57fbd11d",
        "cursor": {
          "ref": "de811287-aac3-4e68-9fe3-545a98cccd52",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c438665a-69ff-423e-bbe9-089b208c3f9a"
        },
        "item": {
          "id": "96b974a5-c666-4d18-a0b4-371d57fbd11d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ce6304b1-fea1-4e8b-b0ea-d51496e33bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac2cdcb-eb53-4e9c-ba73-fa13afb61cd2",
        "cursor": {
          "ref": "49903c7b-8ab3-4386-b67e-abe2ac1e7dec",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b59483a9-8e19-40a3-8950-6f04cfc0d46f"
        },
        "item": {
          "id": "2ac2cdcb-eb53-4e9c-ba73-fa13afb61cd2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "220a9655-e9e5-42af-8e73-b53ddd3eeea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15fceec-0795-48c3-99b4-bdd6ce174460",
        "cursor": {
          "ref": "b08632cc-b50c-4b70-84f8-e6799cf21278",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "295b5037-e3d6-4084-a3e6-725aa6ebce46"
        },
        "item": {
          "id": "e15fceec-0795-48c3-99b4-bdd6ce174460",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "88f516dd-0d6c-4988-a817-a84dc0953544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 863,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb231e1-c38e-4201-9031-9299b783f948",
        "cursor": {
          "ref": "60c56120-3612-42fd-9a88-2a1d4dc5dd48",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "63311891-1745-4ecf-9041-1d6743a84772"
        },
        "item": {
          "id": "8fb231e1-c38e-4201-9031-9299b783f948",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0b6b7d7e-cd0b-4d1e-9d14-767e1f191fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e053142f-bf57-4d6e-962f-0e957db2014e",
        "cursor": {
          "ref": "60cefdbf-283f-40f1-9ea8-0f39dc6d4a8a",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a0e6db7b-6632-4064-852b-fa886611f531"
        },
        "item": {
          "id": "e053142f-bf57-4d6e-962f-0e957db2014e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "db79c353-9565-4026-af2b-c7f98342e7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fa3818-c5ff-4886-a553-7809f556fea9",
        "cursor": {
          "ref": "3d7e5a41-d539-4714-84d2-4ca8281b7357",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ff781de5-6750-4a89-a618-e18752725433"
        },
        "item": {
          "id": "00fa3818-c5ff-4886-a553-7809f556fea9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "994c0995-34dc-4fdd-b62e-46072ffabbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2d4e48-43c1-4d71-b080-e0a11739ccb9",
        "cursor": {
          "ref": "1953fcb0-4750-41b9-9f72-89e6ce02938e",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "723ecba4-2751-4314-b34f-06072d8c54ae"
        },
        "item": {
          "id": "3d2d4e48-43c1-4d71-b080-e0a11739ccb9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f7b7f6ec-acc0-4301-a347-98c63b5fad0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41da4c2-fc3a-4f8c-93b5-cc23889ef266",
        "cursor": {
          "ref": "92e84985-14c0-4226-bd6c-2bdaa4e6d920",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4d8d9c28-ff11-49e8-809a-3f4c344887c5"
        },
        "item": {
          "id": "e41da4c2-fc3a-4f8c-93b5-cc23889ef266",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6258ea21-584a-401b-bba4-702c78f23b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2491e4c9-1128-4bf0-915a-94017d97e8f1",
        "cursor": {
          "ref": "e689cec7-8347-4d7b-942d-6db9095e0004",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "590ac150-059a-4f2d-9ae3-467988cbc037"
        },
        "item": {
          "id": "2491e4c9-1128-4bf0-915a-94017d97e8f1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c60a1c5f-c5ca-402d-80cd-b287a1655c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed24304-4dfb-4205-888d-e278601c1087",
        "cursor": {
          "ref": "8e3de433-4ae2-438d-b007-13db5f24beab",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d92d8cc1-d84c-4c91-a1ae-9133013c8779"
        },
        "item": {
          "id": "6ed24304-4dfb-4205-888d-e278601c1087",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1c33fd98-d1b3-49f5-9918-f4e5fa0d51f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0333baa-61c7-412e-b9c8-08e7cc3066e0",
        "cursor": {
          "ref": "06e59c11-7764-4c29-b4ce-8c1388273748",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7a5decf1-1d9d-4a26-9139-fc633686a87b"
        },
        "item": {
          "id": "d0333baa-61c7-412e-b9c8-08e7cc3066e0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9197a704-5b95-4c98-b8a4-176a902695b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd77f1c7-81b5-4fd1-ac50-fb3e26d29647",
        "cursor": {
          "ref": "4770dbac-285d-4497-86d6-5bf809d6e800",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ef3904fa-637f-4bfc-b0be-737c0f5baa6a"
        },
        "item": {
          "id": "cd77f1c7-81b5-4fd1-ac50-fb3e26d29647",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5803125e-60f3-45ac-af66-2c997c47bbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b683c9e1-89c9-42cf-bb3c-394db4afee34",
        "cursor": {
          "ref": "d2bac407-81b6-4b17-a6e3-f30df19a6ea2",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fc64d45a-b9d5-438a-8f65-02233b3adf1d"
        },
        "item": {
          "id": "b683c9e1-89c9-42cf-bb3c-394db4afee34",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "fd912b0d-6af2-49f9-b129-5aa8ea849a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70d197b-c240-4174-90f4-6ab1d066e6d7",
        "cursor": {
          "ref": "0fad617b-a723-4e1f-b4bb-cf065ef8292a",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "53963c8f-9d9c-401f-a308-ea44ebcb6af1"
        },
        "item": {
          "id": "a70d197b-c240-4174-90f4-6ab1d066e6d7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1f65033e-0b57-4466-b37a-7e7324f833df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8914f7e3-d4a5-40ff-9507-04d3a0c0fbf2",
        "cursor": {
          "ref": "9ce19f44-310f-48cd-a044-a84d1e2c1ce0",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "36e57047-16b6-4bb7-bfc6-f35ee33158d1"
        },
        "item": {
          "id": "8914f7e3-d4a5-40ff-9507-04d3a0c0fbf2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "908f3302-e690-4659-8f93-0671c3a98cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff6365d-2c18-47a1-8b6e-06b31abf6c74",
        "cursor": {
          "ref": "2472dbe3-8cdc-474a-8643-78a7656c2d84",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4210aee5-5056-48b4-bb97-46c299f3ee30"
        },
        "item": {
          "id": "eff6365d-2c18-47a1-8b6e-06b31abf6c74",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f52311c7-de3b-46b8-9c90-40f7d6184587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b525ca55-8416-4a66-8e73-cc1aca700f5c",
        "cursor": {
          "ref": "4c5d2902-8360-4bb1-abc3-7c54aa2b0e16",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a2057490-c9e3-418c-95df-87cbf47b20fa"
        },
        "item": {
          "id": "b525ca55-8416-4a66-8e73-cc1aca700f5c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "431a0136-1c5e-4eb1-9c82-6396c27941e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9a22c9-b828-4b08-9407-c199cee90cdb",
        "cursor": {
          "ref": "bc4e78a0-10d8-45d4-8aa2-feca94bd6404",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7d5dd260-a29a-45c1-ba1f-ad0f9482003a"
        },
        "item": {
          "id": "2a9a22c9-b828-4b08-9407-c199cee90cdb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "094a5810-8408-4084-b7cf-74c50c703025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a7509c-939b-428d-99d4-9f2337a146a2",
        "cursor": {
          "ref": "d9b97537-fd66-422e-9579-977548f64bfa",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4ddbeffa-ba8f-4c66-a072-21a5826189a7"
        },
        "item": {
          "id": "e7a7509c-939b-428d-99d4-9f2337a146a2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6540e393-1dad-4f85-b292-687e5eaafa9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3dcf76-46ca-4c7f-b335-51052a8b12cf",
        "cursor": {
          "ref": "e07e4b9e-69da-43f4-9119-d8db7dc35cb7",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9afb6dcf-4150-408d-af54-eb7dd7d0504b"
        },
        "item": {
          "id": "cc3dcf76-46ca-4c7f-b335-51052a8b12cf",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e47e9287-86ae-4e16-af2c-a10d37901b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c661ff9a-8f9e-40a3-9a0f-a92ccdb6fb1f",
        "cursor": {
          "ref": "242d62c4-cbdc-4cfc-979c-b792bbca7f1c",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7ea70f30-18af-4e29-ac35-8fa5743d8ce8"
        },
        "item": {
          "id": "c661ff9a-8f9e-40a3-9a0f-a92ccdb6fb1f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b90e533a-c144-4882-8753-be090d08f42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53ff85c-ff98-4094-994f-ee502c0a14d0",
        "cursor": {
          "ref": "63350326-b43f-4742-99a6-50dc314632fd",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "be8375cc-546f-4416-9af1-a826249f4131"
        },
        "item": {
          "id": "b53ff85c-ff98-4094-994f-ee502c0a14d0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d51536b1-7106-4d41-b873-fe556f1406a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597da7ee-4fbc-4fb7-ba4f-18c2f4413f9d",
        "cursor": {
          "ref": "da9ff070-4f43-45c9-b8e7-07f80e36e080",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0d3a2715-50c6-4a13-b601-1173ea073449"
        },
        "item": {
          "id": "597da7ee-4fbc-4fb7-ba4f-18c2f4413f9d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7a76a157-0931-4fdd-9c97-50b57eac5add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac8afbc-9594-4074-993f-67a002ca8d8d",
        "cursor": {
          "ref": "0139caf2-eb20-4ce0-ba0c-bc5c7197413b",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ec4faaa2-f3a8-4a7b-aa64-d3d6de4fc241"
        },
        "item": {
          "id": "9ac8afbc-9594-4074-993f-67a002ca8d8d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0f97cb17-c882-49cc-9350-f9c0302033b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9d97a7-61ee-4bf5-9f5c-b2d1fb6eefa6",
        "cursor": {
          "ref": "ea62e67d-5d24-4604-a3e1-bd761b0abb40",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9b626f0e-4e6e-446d-8dcf-b56011bbd3e8"
        },
        "item": {
          "id": "8d9d97a7-61ee-4bf5-9f5c-b2d1fb6eefa6",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "58a0613f-d9b4-43b9-bb40-550db1ee7f22",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 817,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e12ea3a-f456-4e67-a0f2-925a3b8fecd0",
        "cursor": {
          "ref": "dceeb2d4-2fcf-4cf2-94d2-882e3860cdb8",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4314989d-84a8-4269-bc29-5f3026ab931b"
        },
        "item": {
          "id": "3e12ea3a-f456-4e67-a0f2-925a3b8fecd0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f3873abe-3f9f-49a0-bd1a-0123b6193b3c",
          "status": "Created",
          "code": 201,
          "responseTime": 7196,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5b5eb3-3d63-4582-bcee-307f5064a310",
        "cursor": {
          "ref": "6673ca49-ab23-40bf-9b76-d2e1ef5ab9f0",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "414eaeed-70ee-4f6d-a936-07852941ea8f"
        },
        "item": {
          "id": "0e5b5eb3-3d63-4582-bcee-307f5064a310",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "60b6713c-4bea-4fbd-900c-00713cdb7d8e",
          "status": "Created",
          "code": 201,
          "responseTime": 6436,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f1741f-0223-4383-af0d-c978c0075fe7",
        "cursor": {
          "ref": "eca2feac-fe9e-4c5d-a9d4-8507ec099abc",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "858bfb25-372f-4bd1-83d7-b9da31fd2029"
        },
        "item": {
          "id": "f2f1741f-0223-4383-af0d-c978c0075fe7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0f1f2c31-88d4-478e-a299-a98685435074",
          "status": "Created",
          "code": 201,
          "responseTime": 6754,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc11121-9580-4e44-8567-3d2323416a04",
        "cursor": {
          "ref": "09317f09-a60d-46db-b421-bfb30053538e",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "58fcd515-cdd4-4b09-b19f-39f210b600fb"
        },
        "item": {
          "id": "cdc11121-9580-4e44-8567-3d2323416a04",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6a840bb8-fb64-4048-87b3-c0eb9641bc5c",
          "status": "Created",
          "code": 201,
          "responseTime": 13658,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40ca8d1-a4f4-4050-abe5-e8f99cf03fab",
        "cursor": {
          "ref": "27c123d2-3375-48e5-ab12-761f54158dc9",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "dc209e62-929f-494a-9f2c-60fbf3a794bb"
        },
        "item": {
          "id": "a40ca8d1-a4f4-4050-abe5-e8f99cf03fab",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4cb09251-f8db-4e5d-bb51-f748cd662ac6",
          "status": "Created",
          "code": 201,
          "responseTime": 7942,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abb020c-3eed-45b7-9fb5-6a3e7a0bb5bd",
        "cursor": {
          "ref": "473649b3-5be9-49e5-810e-b9ab3a97242e",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c5b7605a-30c4-464e-bf6c-c701f296d29e"
        },
        "item": {
          "id": "8abb020c-3eed-45b7-9fb5-6a3e7a0bb5bd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7f7a0d39-3745-4362-842c-a75c8e89800b",
          "status": "Created",
          "code": 201,
          "responseTime": 8294,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245a9d2f-5057-4fcf-8ae3-74c5b95661ae",
        "cursor": {
          "ref": "21c9aedc-0a9d-4990-b27b-fc905b19449c",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6f454832-6bf3-446e-9aee-5beaf2fabba4"
        },
        "item": {
          "id": "245a9d2f-5057-4fcf-8ae3-74c5b95661ae",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6467762b-4e1d-4a69-a7c5-c397ea4fd314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245a9d2f-5057-4fcf-8ae3-74c5b95661ae",
        "cursor": {
          "ref": "21c9aedc-0a9d-4990-b27b-fc905b19449c",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6f454832-6bf3-446e-9aee-5beaf2fabba4"
        },
        "item": {
          "id": "245a9d2f-5057-4fcf-8ae3-74c5b95661ae",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6467762b-4e1d-4a69-a7c5-c397ea4fd314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62a66fc-6188-4595-8cdf-6cece6d4038e",
        "cursor": {
          "ref": "2fcf52bf-40d3-471f-9ab1-52415a7107df",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "961973b7-8654-4ff1-998b-e9693ec691c9"
        },
        "item": {
          "id": "c62a66fc-6188-4595-8cdf-6cece6d4038e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "932bdd9c-26ab-48ed-aefc-7b62c39bf61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359d6924-5b55-4b73-921c-e37a9b4bebdf",
        "cursor": {
          "ref": "e3bf3d14-89cb-4b8a-b86f-7677ac223534",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6cbeeb26-08e1-46e1-a2f5-ba2b18a3ba19"
        },
        "item": {
          "id": "359d6924-5b55-4b73-921c-e37a9b4bebdf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "96fc6f27-9abe-467d-9344-4bfff181c528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1d84b2-24c5-4286-88f1-b75519b6036a",
        "cursor": {
          "ref": "70377e59-033d-427d-b714-6e6956f98672",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e1cb3bb4-3226-4bc5-a2eb-efd372cbbdd1"
        },
        "item": {
          "id": "2b1d84b2-24c5-4286-88f1-b75519b6036a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "13a7ba8e-8890-4b06-bd51-a8c2325bfcda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96b4781-4f0c-4b6c-8f8c-017de9617460",
        "cursor": {
          "ref": "bd7b826b-6780-4112-874d-4d5fb12cfb96",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4bef1027-a0b0-4b61-9ca9-e27b876b513d"
        },
        "item": {
          "id": "d96b4781-4f0c-4b6c-8f8c-017de9617460",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "44390626-39cd-41cf-a90a-ee3b37b922d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b6bfd1-0732-4f2c-baf6-256f6521c7ff",
        "cursor": {
          "ref": "05a94a01-278d-48e4-bbf8-a357acdf9b45",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "eddeeeca-4583-4114-9cae-ff6e801a0b4b"
        },
        "item": {
          "id": "52b6bfd1-0732-4f2c-baf6-256f6521c7ff",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b8f61655-ac64-4909-a781-4aa4b9f02089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa8f980-0569-4bf5-948b-f79f624fc8a0",
        "cursor": {
          "ref": "fd7cdd04-e2c2-44e2-b903-9cc3a7e0334a",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3c52a50d-0f71-47c4-85c6-addc407b6c4e"
        },
        "item": {
          "id": "1aa8f980-0569-4bf5-948b-f79f624fc8a0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c3413a95-e923-439d-8a5c-5cf882f7e5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b43d4af-4e42-4d11-b754-53f1060a48db",
        "cursor": {
          "ref": "be563e9d-fd9e-43f1-bd9b-98d75f66614b",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "892796e8-dbb6-4c9a-936b-b76301ef8275"
        },
        "item": {
          "id": "3b43d4af-4e42-4d11-b754-53f1060a48db",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7f3f1da3-dda0-421b-b8c3-7671f8d5930e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5227758-7cbf-44d6-bad1-e4e1e050799e",
        "cursor": {
          "ref": "517020d8-488a-4f09-b268-a441fcc9d277",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "133c960a-41e9-45b8-ab7f-7498077b32ee"
        },
        "item": {
          "id": "d5227758-7cbf-44d6-bad1-e4e1e050799e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9e9ffebe-d427-4a6a-a11c-6b659885d9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e2d8c1-c5ef-45c8-bd69-7dd77285c45d",
        "cursor": {
          "ref": "89c5f5d8-9940-4eb3-b6bc-39fe02bf4c4d",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "677b92d2-5654-4d0a-8173-2047e65846ec"
        },
        "item": {
          "id": "45e2d8c1-c5ef-45c8-bd69-7dd77285c45d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a6048c91-b9fa-421f-b8e3-e8f85551b02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de40a7f2-2013-4ee9-8dc8-43e2b115dcf3",
        "cursor": {
          "ref": "523a6212-ba3e-4dc6-8d40-18d359edfacb",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "288450a4-cbfe-43a2-a8b2-7bf135f535be"
        },
        "item": {
          "id": "de40a7f2-2013-4ee9-8dc8-43e2b115dcf3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bb2c6d8d-70fa-423b-8bfe-6fe3e7145b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4aafd79-0b52-4c60-b97f-67b2d298f6d5",
        "cursor": {
          "ref": "1adcd0d2-59a4-40c7-99f2-b23cdec4734d",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8152adcd-5adf-44d2-81b9-1c08917795db"
        },
        "item": {
          "id": "c4aafd79-0b52-4c60-b97f-67b2d298f6d5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d935dd67-5faa-4ae0-994a-329be123a67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90de386-2a9e-4e95-b4e1-8ddf75935ee1",
        "cursor": {
          "ref": "a8e61e14-961c-435e-a9cb-d1a5174fa4a3",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e81e25e1-2a82-4c96-95ab-82b322ad82bf"
        },
        "item": {
          "id": "d90de386-2a9e-4e95-b4e1-8ddf75935ee1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9b903769-4395-415f-80fe-ad8b6567ae9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779ce2e0-ae63-4302-bc0b-7a17d8ad52d5",
        "cursor": {
          "ref": "2853172f-7484-498d-843f-b91320f16b2e",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1aa3bb7f-d5b9-4c26-8614-6baf18a6c936"
        },
        "item": {
          "id": "779ce2e0-ae63-4302-bc0b-7a17d8ad52d5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "61fbba2a-37c6-4760-8ba2-4542add1d01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5c8874-9087-4c83-91a5-b28d1a119d66",
        "cursor": {
          "ref": "b5f73869-a783-4b40-a95c-7a3da6e7a51a",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "33ca93ad-865a-490b-8d87-0974aaccc1de"
        },
        "item": {
          "id": "9b5c8874-9087-4c83-91a5-b28d1a119d66",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "43c6283d-374c-4ba6-9480-9f8fb47282d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa735494-caad-4eef-9ca3-a7afaf7c5062",
        "cursor": {
          "ref": "152717f2-9d70-422a-bad7-8b9bda8bd256",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "729747f7-e932-4c06-b5a5-8a357ca8582c"
        },
        "item": {
          "id": "aa735494-caad-4eef-9ca3-a7afaf7c5062",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0cc0201d-efe9-4fda-b19b-67f5106c72f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0810a8c-952f-455a-9f6b-b9eb3c879bf4",
        "cursor": {
          "ref": "f73e21ba-d0e1-4b9c-abda-520756171c8d",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c71ea181-e266-4f4e-a619-670e7442da9b"
        },
        "item": {
          "id": "b0810a8c-952f-455a-9f6b-b9eb3c879bf4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e8c6954f-1091-4e81-87cb-c6d6d95027c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3676bab3-b4e8-4258-a5d0-c2d39d330e0f",
        "cursor": {
          "ref": "52db3a36-edd9-48c9-8dc9-d96a5a16d499",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "58087cd1-0036-4402-90e5-64b6b17298e2"
        },
        "item": {
          "id": "3676bab3-b4e8-4258-a5d0-c2d39d330e0f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d5c1cc57-f0d2-433c-a735-fdb9df339455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb060b6d-b02a-456c-9860-c7102fb45c5d",
        "cursor": {
          "ref": "5309a27c-da8f-44cf-9464-e57f6dd676eb",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "841149a3-1018-40d5-8891-cc88be3b5c34"
        },
        "item": {
          "id": "eb060b6d-b02a-456c-9860-c7102fb45c5d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9ad69ad7-f4f4-47fa-af21-55464452f930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42823a37-ea46-4847-b279-208190a295b8",
        "cursor": {
          "ref": "8cd2efb6-f514-410a-b777-ab9ba1952632",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b36d8fb3-339f-4f76-99d1-4e1a4baf2d04"
        },
        "item": {
          "id": "42823a37-ea46-4847-b279-208190a295b8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fd71f723-59f0-4765-8629-0c4e70c33f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254df84d-6f32-4bcc-968a-54869680a01b",
        "cursor": {
          "ref": "e65fde86-2ab5-40b9-8284-4db6f2c92348",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d78d91fd-43f6-41eb-b52b-ead7a43d95fa"
        },
        "item": {
          "id": "254df84d-6f32-4bcc-968a-54869680a01b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "09123c8b-09a3-4ad8-bca0-8f4952083fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfd62c6-7dcc-4fce-a841-0ee897b0bc5a",
        "cursor": {
          "ref": "aeb90857-435b-4ad5-adbe-dbcbf2bf274a",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a4d31c23-bf5a-4a5c-8b2f-23e222cd645c"
        },
        "item": {
          "id": "9cfd62c6-7dcc-4fce-a841-0ee897b0bc5a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "532b9453-2140-496d-a35f-335704a9a0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb92fc2c-a296-4037-85c9-f82c8e8e8131",
        "cursor": {
          "ref": "b78f9e9c-ea3b-4e81-af0e-18fb0fe753aa",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1c4e0556-fe09-4ea4-a344-ba4aa7735844"
        },
        "item": {
          "id": "bb92fc2c-a296-4037-85c9-f82c8e8e8131",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "44216270-9051-4506-a36d-a0a638b8f614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9922083b-f9a6-49b0-b1a9-cb25e9d216f2",
        "cursor": {
          "ref": "c6639036-5e78-4645-845f-3cd7c6f13fde",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f325ec4e-3c69-4e38-a882-d51da5f72ef5"
        },
        "item": {
          "id": "9922083b-f9a6-49b0-b1a9-cb25e9d216f2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "825aaed6-572a-4875-bfcc-9701c3b8fa8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c8e92c-9b3a-4ff7-a2ae-c6ac0f40dfab",
        "cursor": {
          "ref": "0c580814-d6a8-4ebd-9ad7-105eb60fd51f",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9804deb3-0819-49b5-b018-6066144363d1"
        },
        "item": {
          "id": "e6c8e92c-9b3a-4ff7-a2ae-c6ac0f40dfab",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "03e30251-309b-4618-9209-7a04a420037c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f1f3b0-e696-4907-8f6c-2d28e9b5aed5",
        "cursor": {
          "ref": "c5e3ffd6-c27e-424d-9d0c-119d332615d3",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c0d650a8-073c-4c75-a58b-2999186940c2"
        },
        "item": {
          "id": "53f1f3b0-e696-4907-8f6c-2d28e9b5aed5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2c1a0cc8-d3b2-40b2-a566-c457ba5e473d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d36e2f-0621-4508-8034-a4054b0b937c",
        "cursor": {
          "ref": "ffe84f4a-851d-4904-b766-5ae34057b83a",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4700418d-4dbe-4afd-9a2a-4c4ce520309b"
        },
        "item": {
          "id": "f8d36e2f-0621-4508-8034-a4054b0b937c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9ddcb614-7349-4180-a19f-63a75f5c66ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1deb71-0fb2-4cbd-adbb-b7815390c774",
        "cursor": {
          "ref": "85c2401c-491c-454a-b78d-9215273ec688",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b1067b05-a97d-4cb3-b70b-abe3b6fb2145"
        },
        "item": {
          "id": "ae1deb71-0fb2-4cbd-adbb-b7815390c774",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1f9aba89-23d3-4d06-ae6f-4e739eff6b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba979b3-2f5c-4115-b6dc-f9a8cc77f4a4",
        "cursor": {
          "ref": "edfb8a1f-6e15-41ab-b304-f7feb73b10bc",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4b819c7e-3051-40f7-b3b0-826b14cc802e"
        },
        "item": {
          "id": "8ba979b3-2f5c-4115-b6dc-f9a8cc77f4a4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "375817c7-229c-4ba8-96b7-9b02909b6d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7e5767-533b-47b4-9d1a-64d3cecbb2a4",
        "cursor": {
          "ref": "ba7a6b9f-b431-4dd9-bb53-3d4183a49c29",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e7ba732b-efcc-47bd-996c-b8293d52681c"
        },
        "item": {
          "id": "5e7e5767-533b-47b4-9d1a-64d3cecbb2a4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fc63d4ad-c558-46f3-906e-591cac5a0b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3075de7-cbf2-489a-9b86-5738fa6aeb38",
        "cursor": {
          "ref": "e2372988-4de3-4abc-b2bc-0d6e84d9cb4b",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "84a39700-3b34-4021-8d19-c8e25defae8d"
        },
        "item": {
          "id": "a3075de7-cbf2-489a-9b86-5738fa6aeb38",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "268e9971-f6ca-45d5-a3cb-e0531791849d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee6ea67-cfe4-4618-9753-4e001201eabd",
        "cursor": {
          "ref": "e515e312-f661-4f00-a628-5bb2eb0fdce8",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "42ab62f6-cc80-48b7-be4b-9b1ca6fb4103"
        },
        "item": {
          "id": "0ee6ea67-cfe4-4618-9753-4e001201eabd",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d004aa6d-9d97-44c2-86f7-d1030ee6a448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 938,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcbd7cd-4a7e-485e-9ebf-93d9f5db864e",
        "cursor": {
          "ref": "203576ce-8591-485b-9d1d-b0f68fe1adcb",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d3e0909e-abf0-481c-8258-0aa8190063da"
        },
        "item": {
          "id": "edcbd7cd-4a7e-485e-9ebf-93d9f5db864e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "df9a922c-71b4-4b07-af0c-5877194b1558",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bd7555-f6b2-4929-832f-339f243c99c2",
        "cursor": {
          "ref": "f24885dc-5857-4341-928f-ecda00c09640",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fe082357-8910-44ad-8872-090a54f65f87"
        },
        "item": {
          "id": "02bd7555-f6b2-4929-832f-339f243c99c2",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "0789dc8b-cc6b-4ec8-b706-d05110610007",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1464,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23779eb7-899d-42b4-9b42-ef53b9303b21",
        "cursor": {
          "ref": "21e14e37-400d-48ca-83d2-b67bba55a5a9",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "693d8ebe-f48f-46ef-a602-0403508e4f2b"
        },
        "item": {
          "id": "23779eb7-899d-42b4-9b42-ef53b9303b21",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "98fdaa21-9b1f-4197-a057-94e656c3d7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1154,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23779eb7-899d-42b4-9b42-ef53b9303b21",
        "cursor": {
          "ref": "21e14e37-400d-48ca-83d2-b67bba55a5a9",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "693d8ebe-f48f-46ef-a602-0403508e4f2b"
        },
        "item": {
          "id": "23779eb7-899d-42b4-9b42-ef53b9303b21",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "98fdaa21-9b1f-4197-a057-94e656c3d7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1154,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becfd36e-1211-437f-a5c2-26b50614bab2",
        "cursor": {
          "ref": "2beb23aa-b7d7-4336-9afa-b72d7f112417",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "66de5312-5fd9-4f73-b53f-38856867682e"
        },
        "item": {
          "id": "becfd36e-1211-437f-a5c2-26b50614bab2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8b6c076b-2285-4cca-b227-315dc7d77ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1446,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbebe9b8-9de7-4dc7-85da-e4d6845aa44b",
        "cursor": {
          "ref": "a5149156-d038-405e-aea4-17dae4fd6c66",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "65d0892e-21de-4b57-b6de-7a1faa959762"
        },
        "item": {
          "id": "cbebe9b8-9de7-4dc7-85da-e4d6845aa44b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1c60e201-e84e-437e-bc02-1426b7aff742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b752383-bcee-4e53-9f75-055a90c194ed",
        "cursor": {
          "ref": "6aa8af9f-641a-4f80-9f2e-0526d8dedd5a",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2544fa23-dbaa-4cfe-9c3d-8e29f9967829"
        },
        "item": {
          "id": "7b752383-bcee-4e53-9f75-055a90c194ed",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2e6c5f00-b63b-4c73-a296-30ac451496b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1110,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268d04c1-f237-4040-bdfe-c4859b296cb5",
        "cursor": {
          "ref": "e5759d59-31a0-4976-b0c1-5b27a421d001",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b0e718de-fff2-4a38-b76d-abaaa029368f"
        },
        "item": {
          "id": "268d04c1-f237-4040-bdfe-c4859b296cb5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4486f098-4312-4529-a530-adef9c1c255d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1250,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96a7b80-46d0-478f-b68b-5d6e4b730155",
        "cursor": {
          "ref": "413fd2d1-b0cf-4cb1-9e98-beb9e50abb49",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d5ef5413-121e-4027-9f38-3ca6b8b5a382"
        },
        "item": {
          "id": "f96a7b80-46d0-478f-b68b-5d6e4b730155",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0a782555-0b27-4a0a-a0ac-4a0a33a05a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1000,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10140458-373d-472b-adbe-79ba1f526d2d",
        "cursor": {
          "ref": "efff6f56-a3d0-4078-bae1-60ef15dcb248",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7b2362e9-ed44-4cb5-9ab0-9ea3eeb20b7d"
        },
        "item": {
          "id": "10140458-373d-472b-adbe-79ba1f526d2d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "98f1804c-aa24-475a-9103-d6d203b684f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 895,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4d7c56-1189-4497-8c93-154ce36f7d8a",
        "cursor": {
          "ref": "f9ba28c2-db46-47ec-b8e5-499d10012de9",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "21c1991a-947c-4c25-bc7c-7542fc246faa"
        },
        "item": {
          "id": "7c4d7c56-1189-4497-8c93-154ce36f7d8a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1b8d17bc-3377-4021-8542-eccf8d175df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced92b48-e00e-4ace-b357-8ccc913d41fc",
        "cursor": {
          "ref": "80e718cb-0cb1-4458-b194-e4e080f5776b",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b76b99e4-609f-4653-9cde-3d6cc9e33c12"
        },
        "item": {
          "id": "ced92b48-e00e-4ace-b357-8ccc913d41fc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e7631733-9b2a-4b01-b7dc-a63803a868ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c068238a-2a9f-4453-9467-d186c4541ebf",
        "cursor": {
          "ref": "ca4042f8-e88d-4ce2-9b12-8b31d8416e10",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "79e46095-2ca9-4b3d-a6d8-c7c5595aef30"
        },
        "item": {
          "id": "c068238a-2a9f-4453-9467-d186c4541ebf",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3b8970dd-6938-49f8-b9db-0e12da6805d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f41f07-a66b-4572-8550-38f01ae17b34",
        "cursor": {
          "ref": "246d3bc3-9357-4ea1-a728-481283605b70",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4d93b5ba-a56f-4f60-ba3d-b19a2d94be4b"
        },
        "item": {
          "id": "d4f41f07-a66b-4572-8550-38f01ae17b34",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5b5877a7-5ad7-42ac-952b-19bf263ce81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1279,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94a2394-844f-4b41-94fc-876fb7af1486",
        "cursor": {
          "ref": "8b1f813d-fc51-4c88-82ba-052d6344f428",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "db36762b-73da-4423-969c-c51a4f91f56c"
        },
        "item": {
          "id": "c94a2394-844f-4b41-94fc-876fb7af1486",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ff7db63b-f6a8-45d4-8cd9-1dc811395908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1305,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6978ba53-2323-418b-b832-c2315b560289",
        "cursor": {
          "ref": "a43aacf4-ae91-41f3-8b23-e208b2166bfd",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0da48d86-ebf9-4232-9bb3-f0ce964e979d"
        },
        "item": {
          "id": "6978ba53-2323-418b-b832-c2315b560289",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "365fbd5a-d3fc-4c53-94cd-8b6202a6e104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1041,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b41138b-9a38-4c6e-9591-e84e0b4062dc",
        "cursor": {
          "ref": "6e6a1aac-e670-4883-b5cc-399a30271789",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "92ce24fe-cc4a-4561-a013-5f4662f5d24a"
        },
        "item": {
          "id": "7b41138b-9a38-4c6e-9591-e84e0b4062dc",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5ed64388-f1f2-488e-8a0d-b5c19e6dbb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1110,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2d0afd-80bc-4b78-bfa6-6cba3c5974bd",
        "cursor": {
          "ref": "c5b1642e-096d-42a7-87e7-b60358a5b408",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "97c3aaa1-b2f3-411c-a660-9b698b99382f"
        },
        "item": {
          "id": "8e2d0afd-80bc-4b78-bfa6-6cba3c5974bd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "381a6d51-788b-4c62-919d-bb9c0d5b00ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1051,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b5b5b7-db5b-4aaf-9d1e-66779eb993ca",
        "cursor": {
          "ref": "cad1dce1-ff5b-417e-83cf-c5ad958555f2",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0f7f2043-b396-467e-83d5-e8171851ff7e"
        },
        "item": {
          "id": "05b5b5b7-db5b-4aaf-9d1e-66779eb993ca",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d9e5231a-e33d-43a0-89be-33f0b7a7a586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203dd880-209f-46bb-9d84-5aee27e1d5cb",
        "cursor": {
          "ref": "a6a988de-9abc-4c58-8622-71989b6a6f87",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "df5ae986-f3f1-4162-91af-f6e43ae46eb6"
        },
        "item": {
          "id": "203dd880-209f-46bb-9d84-5aee27e1d5cb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "82fa61b3-76db-4eb7-9d4b-bb60f5c1ee2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05566e9-7bd5-431d-a60d-13032fb107f2",
        "cursor": {
          "ref": "f016403b-c339-4842-88a7-f7fbacd99e21",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e5134b64-57bc-413e-b96b-2d91731eeb75"
        },
        "item": {
          "id": "e05566e9-7bd5-431d-a60d-13032fb107f2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "66f4dfd0-044e-4575-85e4-51216eca146a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de8378c-fc26-4b2d-a64c-eea2bab0249f",
        "cursor": {
          "ref": "8962d1de-1001-4e87-b50a-def1e8f61c29",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "59c4ff64-c9ef-4190-8f4c-91bf8974542e"
        },
        "item": {
          "id": "7de8378c-fc26-4b2d-a64c-eea2bab0249f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a6d8e383-6f3a-43f5-88cf-d0da61377663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1308,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836ee27c-f0fe-4297-9ffe-842e7911b363",
        "cursor": {
          "ref": "e29f074f-b2af-4706-984d-a3d8c76289da",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "efd88b70-2911-4345-a411-f00e5374fdd1"
        },
        "item": {
          "id": "836ee27c-f0fe-4297-9ffe-842e7911b363",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d34ad66e-dec7-4eef-ae1e-5514605faa3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1410,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0183dc44-ec2b-4379-8d5a-7db51cd61b27",
        "cursor": {
          "ref": "4d3e5fec-83cb-4096-86d5-078d4898789b",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "abfce537-d14f-4dcc-bc7c-7f6cc2c0ee76"
        },
        "item": {
          "id": "0183dc44-ec2b-4379-8d5a-7db51cd61b27",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "370e2043-1768-4baa-8e83-f5916e444d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1796,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bcba02-bc75-4e67-b929-8dccb43332d4",
        "cursor": {
          "ref": "07b2a063-812d-482b-95f9-a4cde925d4e0",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f91a3d81-4126-4c87-8b4c-3eae9e0be231"
        },
        "item": {
          "id": "72bcba02-bc75-4e67-b929-8dccb43332d4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a8de0517-f272-4aca-983d-2d4cfa871533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2083,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c71f322-d667-4a24-ad88-3a9aff30fc30",
        "cursor": {
          "ref": "2ac33309-364f-498f-801d-5b8fdefb2f8f",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4c7fd5d2-7499-4a82-a7bd-67359ec6aa6a"
        },
        "item": {
          "id": "6c71f322-d667-4a24-ad88-3a9aff30fc30",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0b04ce5f-c6bd-4d96-b8ed-2120a0c11d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1155,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221e8e53-dd02-4639-b1e8-45eef61968cf",
        "cursor": {
          "ref": "3f503ddb-c8e4-4dbc-900f-20391e6f86c6",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "50f54ebe-cf8f-47be-8db4-e5b5df580f71"
        },
        "item": {
          "id": "221e8e53-dd02-4639-b1e8-45eef61968cf",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9338804d-2a99-4926-89d8-0dafaab20c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1169,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cda72b-c98b-4a9c-ad5d-bc5480cb6e14",
        "cursor": {
          "ref": "b5bcca0f-21e8-454d-b605-6c8a72126b48",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "48e373af-1a43-4c57-b121-2511c50750f1"
        },
        "item": {
          "id": "78cda72b-c98b-4a9c-ad5d-bc5480cb6e14",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b205c410-e90f-4ddd-80e5-e3fb46da1e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1113,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debc7c4d-1a29-4350-8990-d1260692c441",
        "cursor": {
          "ref": "672629bb-56cf-4cf7-8ad4-83eac61a6a6d",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "411c768f-ed17-4d42-bcd9-a8b37da6c5f7"
        },
        "item": {
          "id": "debc7c4d-1a29-4350-8990-d1260692c441",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "202bc689-6c33-4c27-b29a-2bf24189bb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22110ee9-767d-417c-93b9-70f8baa6be08",
        "cursor": {
          "ref": "250e8b0c-166f-4856-a9a9-736d3bb9d2a2",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "925169f8-2772-4c9d-b926-18c8d81505b0"
        },
        "item": {
          "id": "22110ee9-767d-417c-93b9-70f8baa6be08",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ed9a249c-8f9b-4e18-be05-477f98bcca4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff96c113-810a-451f-a73b-36a51d31d64c",
        "cursor": {
          "ref": "8d933d25-c856-4faa-b5e9-8a68028d1ff6",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "11d83359-4b86-4d51-9d5a-886b6d7103e2"
        },
        "item": {
          "id": "ff96c113-810a-451f-a73b-36a51d31d64c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d9adaba5-1cf6-4cfa-b37a-e297e929236a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e35f7fd-0b31-4b45-a062-0b9f5bf9c465",
        "cursor": {
          "ref": "05579f7f-e7c1-4d04-bdfc-ea3b865bdbfb",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "50a44880-919d-4934-9bf6-6b53f5f6aa48"
        },
        "item": {
          "id": "1e35f7fd-0b31-4b45-a062-0b9f5bf9c465",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8037cb75-1326-450c-be80-9ca2d243e654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46db96b2-b6f3-49c0-a265-43d2ba209e74",
        "cursor": {
          "ref": "90e9d86a-1216-4c0c-ab74-3524d03985ab",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8adacb87-1bb6-4486-be58-c11a1c1c93cc"
        },
        "item": {
          "id": "46db96b2-b6f3-49c0-a265-43d2ba209e74",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ed8dc066-0916-42f0-b64d-2c777da1a587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0ab518-f28a-4f24-b55e-b094bb5c4e13",
        "cursor": {
          "ref": "fc2c3234-6b73-4966-ad14-7bc2249e9513",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bad17abb-9c6e-456d-b15e-a94c3b42c7f5"
        },
        "item": {
          "id": "4a0ab518-f28a-4f24-b55e-b094bb5c4e13",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6d9a7136-11df-49ae-aae0-0052d01ff638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b881865e-3fa0-4c7a-bd78-beacd8f4d577",
        "cursor": {
          "ref": "e561862a-8831-4b59-a810-8909dbf1a326",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cf9bb75b-c60b-4e66-aa82-57cb820e9297"
        },
        "item": {
          "id": "b881865e-3fa0-4c7a-bd78-beacd8f4d577",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7350cb3a-5950-4562-82c7-93046c948725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f72a8b-b3ea-4996-b9ef-9b4958d05e24",
        "cursor": {
          "ref": "9033ef2a-0fe3-45b3-aa22-16cb96288b84",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d1f177ca-6c1d-48c0-820c-335155936dcf"
        },
        "item": {
          "id": "15f72a8b-b3ea-4996-b9ef-9b4958d05e24",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9431495d-1cf2-44a8-a23b-f68a85c4370b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bb436a-e9b9-4646-b71b-d0e59e6f6a53",
        "cursor": {
          "ref": "6f7f8182-499a-479a-b6ce-74a7bc8a4af6",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "20c6d2a4-ff3b-427c-9b90-139d3a5ca6ce"
        },
        "item": {
          "id": "61bb436a-e9b9-4646-b71b-d0e59e6f6a53",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e8d2554d-aa17-4278-9ea8-30311b961bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627fe063-70fc-4197-8560-cbfd717b16a2",
        "cursor": {
          "ref": "82969946-6f40-47fd-8a13-42e6dfee83fe",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4ad3b443-c63d-4fde-89c5-5868ace4f4a7"
        },
        "item": {
          "id": "627fe063-70fc-4197-8560-cbfd717b16a2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "02fdea65-c1d3-4b8f-afda-fd2fa4523ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ecdf24-9ea3-4232-96f4-511163c83de5",
        "cursor": {
          "ref": "16c16bc3-50e5-45c4-983f-36bbbaa5205c",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "dca72600-4a6f-4324-a7a0-afee058eb26c"
        },
        "item": {
          "id": "40ecdf24-9ea3-4232-96f4-511163c83de5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b8740949-cd3f-4395-8e7d-b27e4f65e55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88d6a12-c094-4011-a978-ea8761ac21b8",
        "cursor": {
          "ref": "a1fb7fcc-0d1e-4552-9c86-a40f3e4042be",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "caa829ff-8c0f-4813-baf9-0403bee12572"
        },
        "item": {
          "id": "c88d6a12-c094-4011-a978-ea8761ac21b8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1bf3708c-d33e-4d08-b80f-eff15f1799b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0f337e-0326-437c-a4aa-0e17bcd49631",
        "cursor": {
          "ref": "99424a6f-7857-4c4e-a523-d8a5f5b3c0a4",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "19c4b816-2a48-4600-b9aa-7dc696e328d3"
        },
        "item": {
          "id": "6c0f337e-0326-437c-a4aa-0e17bcd49631",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6cd095f3-ed8b-48c6-b73b-ffa94824fbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a33856d-298d-4c90-9116-1c013c7b85b1",
        "cursor": {
          "ref": "811d758e-cf93-4402-bbce-7fdadb4ccdf0",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "25cc89a7-e5e9-40f4-9f60-04c1702b6a59"
        },
        "item": {
          "id": "6a33856d-298d-4c90-9116-1c013c7b85b1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ad9f955d-2afd-4119-b19f-86b377ec11b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a379ab-6544-458e-97b0-3c72605d41ee",
        "cursor": {
          "ref": "7a44d874-bdb0-43e1-af55-aa528ae4fd2f",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d39b7989-91f0-45d7-8fbe-34b062adcf87"
        },
        "item": {
          "id": "13a379ab-6544-458e-97b0-3c72605d41ee",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "69186905-de0f-45d3-b1da-1939ffe54265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91bbc85-9ce9-4f13-97ab-e5481d7993d3",
        "cursor": {
          "ref": "bd9459ad-64cd-4452-93ec-ff40c4eadd70",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2c6dd4a6-082a-4cfc-8b9d-461488f5a38f"
        },
        "item": {
          "id": "a91bbc85-9ce9-4f13-97ab-e5481d7993d3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a6fc7402-db59-4d3a-9dca-3707faffcbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881e964b-78ab-43a8-a8e5-e05606e66625",
        "cursor": {
          "ref": "99e86f1c-dfc5-48e9-b0e9-088c99c94978",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "92fadfb1-89aa-4d4d-9a28-e61b3fdd9743"
        },
        "item": {
          "id": "881e964b-78ab-43a8-a8e5-e05606e66625",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "87c55900-d906-4c80-a4ed-d1fda58bacee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45a613d-e58d-42f6-b4d1-ab3a3ecbb9d9",
        "cursor": {
          "ref": "d8f1c268-c440-4253-90ae-a235dbf39195",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2f919d2b-ec27-4ad5-87e2-ba9009e43889"
        },
        "item": {
          "id": "f45a613d-e58d-42f6-b4d1-ab3a3ecbb9d9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9afd9bf5-60a6-4ebb-99fd-35c2f91ba0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1fc0ad-dd7a-4728-9852-544645e532ca",
        "cursor": {
          "ref": "7f3189a2-c2f1-4b07-bbed-ef11d35c2372",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b7f632ce-e878-46d3-a82e-65d2ccd65c11"
        },
        "item": {
          "id": "bb1fc0ad-dd7a-4728-9852-544645e532ca",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "98473956-80be-493a-babe-1b8efb834bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77a6d7e-db1e-4631-b194-2fc21c28aea7",
        "cursor": {
          "ref": "e69b828d-6dd7-400e-8a3d-deaddb5ae260",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "06038fd0-0861-4928-ac17-325fc4f6376f"
        },
        "item": {
          "id": "f77a6d7e-db1e-4631-b194-2fc21c28aea7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a7b4438c-96df-446c-9076-581142b46ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db047a9-50e1-4371-89ca-8fa8fc0bcc78",
        "cursor": {
          "ref": "18650918-a22d-4703-a160-3215955fee50",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2d60cf4b-1c91-42ba-928c-591121c416b5"
        },
        "item": {
          "id": "4db047a9-50e1-4371-89ca-8fa8fc0bcc78",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "673f3395-135b-4094-afb8-69862682ef73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd640c45-e66a-456a-817b-0a9a6633c0ed",
        "cursor": {
          "ref": "0fd15ee4-5366-488a-b608-cb1218634eb7",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "35c5d18a-7673-4206-898c-2e82f375e65a"
        },
        "item": {
          "id": "fd640c45-e66a-456a-817b-0a9a6633c0ed",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6e8d04fa-fd3b-4acb-8ede-9cbbd189b93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f71444c-2949-418c-8ba0-bd63d9f6251f",
        "cursor": {
          "ref": "ff3490f1-e72d-44cb-9708-8435f2c8c0a5",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6bda70fe-8c18-42df-bec7-47f3c789f40c"
        },
        "item": {
          "id": "5f71444c-2949-418c-8ba0-bd63d9f6251f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8c86368a-008b-44ad-a155-795cff3d4e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03735ee1-21d9-482e-a532-73cdc32ff871",
        "cursor": {
          "ref": "a5633da3-9f5f-46bd-92a7-d5e62e04d5d3",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f63f835e-15bd-4e25-9270-bc04b885cfcf"
        },
        "item": {
          "id": "03735ee1-21d9-482e-a532-73cdc32ff871",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c746ecee-f7c1-4377-99cb-66c132aca0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30273dd-8669-4a91-8f02-d22b269ad68d",
        "cursor": {
          "ref": "a1ac35c5-977f-44eb-bd9e-371e93430cca",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "083c92ba-373b-423d-bde3-ed9ec40e60c7"
        },
        "item": {
          "id": "d30273dd-8669-4a91-8f02-d22b269ad68d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ac11b2b1-ed8a-4616-842d-487c6217b218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74420ad0-aa75-46b8-a6dc-798fd4b2d98d",
        "cursor": {
          "ref": "0beb6951-6332-48de-9b02-eba43bf6210c",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9e957b6c-1a03-48b8-903a-30d08e4a9bd0"
        },
        "item": {
          "id": "74420ad0-aa75-46b8-a6dc-798fd4b2d98d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f54c56e9-fc29-4ed0-80ca-cd4fdc630060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7783d5-d775-4760-af8e-c71183c627cf",
        "cursor": {
          "ref": "baff2205-0151-4acb-9cbe-c1a751ef935d",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "89f8a446-2078-4bec-a5c8-0a88b0ecde41"
        },
        "item": {
          "id": "db7783d5-d775-4760-af8e-c71183c627cf",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9642035d-a7cb-4d2d-8d59-ab82fab80a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaeeaa7f-9f6f-42b3-ac71-7ff5cb16d9f6",
        "cursor": {
          "ref": "cd4293f1-579f-4872-97c1-450856a228d1",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "07208aa1-f7df-4e0c-a907-2137b4c88a0c"
        },
        "item": {
          "id": "aaeeaa7f-9f6f-42b3-ac71-7ff5cb16d9f6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "07a418f7-1c25-4e7c-a493-636a8be7af72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f06e1b-5e08-4e3b-bc63-75d6e804ddef",
        "cursor": {
          "ref": "92e4a836-3f9d-4b1a-8de2-fd065d5a116c",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "78c2f60c-fb4b-49f8-a80c-7efc5e86f92a"
        },
        "item": {
          "id": "11f06e1b-5e08-4e3b-bc63-75d6e804ddef",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8dbe90ef-368e-49d5-9089-9646e37905a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89113442-f369-4efa-a8a1-1bf945c7e027",
        "cursor": {
          "ref": "dae0200d-9c31-4d37-87f5-e0b1cb9d5df6",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "746b9810-07c0-4668-961a-e13214b7aa8f"
        },
        "item": {
          "id": "89113442-f369-4efa-a8a1-1bf945c7e027",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2a1493cc-415a-48fc-aba4-5228ec02ba99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffcc2ac-dc41-44cd-9865-d0586cbacbd4",
        "cursor": {
          "ref": "72c4ff42-1e0a-4491-9b34-c5583b801f25",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b89e1f53-47bc-4da1-9aac-febae278647f"
        },
        "item": {
          "id": "4ffcc2ac-dc41-44cd-9865-d0586cbacbd4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "66fbd80e-edb5-42a4-a4ac-f676309a31a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8119c0-4796-4b1a-a7bd-edabe7a18dda",
        "cursor": {
          "ref": "71b022df-c099-4589-b37c-eb2a2052ed24",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9d8f8458-416e-44fe-8da7-1486347a1bf4"
        },
        "item": {
          "id": "ae8119c0-4796-4b1a-a7bd-edabe7a18dda",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "60ca1366-da5c-48b0-834f-743272dc66ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f852d5ef-9dad-4d3e-8eeb-a06c2a7a4019",
        "cursor": {
          "ref": "cd216bcd-39d6-4249-a13d-b9253da795db",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d22f3e15-acec-4e2e-a5d3-204e75f74d60"
        },
        "item": {
          "id": "f852d5ef-9dad-4d3e-8eeb-a06c2a7a4019",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9b370bb5-3286-4fc4-98de-7ccce3ab2277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b23ac2-fc48-4525-8c13-357fb17632de",
        "cursor": {
          "ref": "c5303e36-a09e-4b89-bda1-fa989edec076",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e3bc807e-f28c-4185-a4d8-fe18267dc272"
        },
        "item": {
          "id": "23b23ac2-fc48-4525-8c13-357fb17632de",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8e09bfcc-402f-43bc-b7ef-5be457a9ae5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407602f8-5f86-4c88-aeff-f6b72154cb46",
        "cursor": {
          "ref": "15ce2ee4-43ec-4d0a-9312-32f05e1ba6cd",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c87fe020-6ae8-436f-9d65-21da823e83f6"
        },
        "item": {
          "id": "407602f8-5f86-4c88-aeff-f6b72154cb46",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5704309d-f619-4cab-9c88-8ce33793a408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cffeb5-8ee1-4e7d-b98f-bfc9e11224b6",
        "cursor": {
          "ref": "4e690c26-81b8-429f-bb13-a68db2972747",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6c206c1c-363a-49b2-9b06-0bb2098bcbb3"
        },
        "item": {
          "id": "64cffeb5-8ee1-4e7d-b98f-bfc9e11224b6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8fcd5459-f9b4-4101-98e6-77ea77c10611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee0333e-f6cd-4d6a-86d9-9aa1ed167e89",
        "cursor": {
          "ref": "2fafc83b-5dd6-4cd3-99f7-ae9ebfbe7901",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0815be2c-279f-45b9-b2ec-2dcd4c24efff"
        },
        "item": {
          "id": "eee0333e-f6cd-4d6a-86d9-9aa1ed167e89",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b641c03c-7fed-4e80-8ebf-5b8fe708ea02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d335e0-de72-4e8c-bd1c-dbe2dfe7f9a2",
        "cursor": {
          "ref": "e9b542bd-0bb0-4364-bfb8-b03025e392e8",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a8806817-11d0-4637-8b0f-8b1e90aacfe5"
        },
        "item": {
          "id": "67d335e0-de72-4e8c-bd1c-dbe2dfe7f9a2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "81df257e-b8b9-40ae-b2d3-508894552a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22073d03-9724-443c-b783-5ec8e4e41e52",
        "cursor": {
          "ref": "b6da058f-f279-4eb6-beff-d13a388a6fcb",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f9bbb6ab-de58-4a1d-88f7-8e56811bf90b"
        },
        "item": {
          "id": "22073d03-9724-443c-b783-5ec8e4e41e52",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ea66353d-6c66-4f06-a930-4f3c54c52eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abf91c7-8d7b-4c17-b541-8fd1e2a3a28e",
        "cursor": {
          "ref": "78240ae0-4b64-45e2-b217-73ef04359bf5",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "54b6c402-ae58-4d82-9af1-1c2951035861"
        },
        "item": {
          "id": "7abf91c7-8d7b-4c17-b541-8fd1e2a3a28e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "554952de-fce5-4c50-966d-dba92de3558f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc70655-4444-4b44-8084-82153c38f82f",
        "cursor": {
          "ref": "269aa030-bf13-444d-8ae1-171810070ee8",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e8152d96-28b4-4621-be15-52698303b470"
        },
        "item": {
          "id": "1bc70655-4444-4b44-8084-82153c38f82f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b96e7c0f-9896-456d-b04a-d31eb016b206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43e6544-e7ed-426c-8917-f46a6c7b9116",
        "cursor": {
          "ref": "8b853df3-8728-46ba-a4c7-e897c04d7d88",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ba77eb89-6a92-4e91-9dd2-6a7c2ca43a0c"
        },
        "item": {
          "id": "a43e6544-e7ed-426c-8917-f46a6c7b9116",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fd5bf814-eafc-405f-9888-9fb2bfad991d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe1f842-e794-40bd-9d41-3cb98eefc5ae",
        "cursor": {
          "ref": "9f16cedb-bc32-489b-9197-debc134fca85",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b59d7600-89b9-4fde-8e65-9963a0f5887b"
        },
        "item": {
          "id": "4fe1f842-e794-40bd-9d41-3cb98eefc5ae",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7cf83969-80c3-4e1c-b8c0-10757a9935e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af9df7c-b8d2-43aa-9a23-94b78474eacd",
        "cursor": {
          "ref": "263736bb-a7f0-49d1-9da9-819e65d336ed",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "18144c29-60fe-4eda-b246-acc6801c6bdc"
        },
        "item": {
          "id": "5af9df7c-b8d2-43aa-9a23-94b78474eacd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9fa6a265-92db-4cc8-9599-95e433197f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ba79fe-a01c-4ba3-bf17-1982e1f47f4a",
        "cursor": {
          "ref": "4e68b9eb-006e-4e63-af7c-18c34db7ef9d",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "997fd7d7-c686-4a69-bf54-f6ec08df289c"
        },
        "item": {
          "id": "32ba79fe-a01c-4ba3-bf17-1982e1f47f4a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "769a2fa3-9a26-4cbb-b013-1303727e03ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b38e61-d1a3-4591-86d6-6d76361fa6f8",
        "cursor": {
          "ref": "0fdad651-20e5-4416-81e3-59ae3f6a303c",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "38d34cab-6f53-4e61-8e5d-8365779d6774"
        },
        "item": {
          "id": "72b38e61-d1a3-4591-86d6-6d76361fa6f8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4318136c-254b-4de6-a35e-c9713143ff07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd955f2-7ed1-45fa-b325-217949912ab7",
        "cursor": {
          "ref": "0d06c088-0258-4073-b82d-44c5e4d0aba0",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4c062e08-3ed6-45aa-b506-cb2ca53ed3e0"
        },
        "item": {
          "id": "7bd955f2-7ed1-45fa-b325-217949912ab7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e0398080-062e-446e-a842-aa56c97753c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b52092-b9a7-4f6a-93f4-a218b8b74cc4",
        "cursor": {
          "ref": "6da0057c-7837-40c3-b933-82c5eb03a493",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "57d6619e-f1de-400f-b5be-f0735af40efb"
        },
        "item": {
          "id": "36b52092-b9a7-4f6a-93f4-a218b8b74cc4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b7323cbb-2520-48a9-ad15-f039f8a1423e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b52d1d7-045e-4f8b-a6b8-b2e05de035aa",
        "cursor": {
          "ref": "62f0c5e1-2665-4424-9cc5-e3deeb0cd2bf",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d4ca5916-fa43-4959-b33d-9c09ae4956cc"
        },
        "item": {
          "id": "8b52d1d7-045e-4f8b-a6b8-b2e05de035aa",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7708f4f1-2550-4568-add0-8343dee6cb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3aaf1b-fc0e-40cf-acf7-705a2a40fb45",
        "cursor": {
          "ref": "f2fdbed6-c9f8-4799-8741-e5d5b072e14d",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c1851af3-fda6-415e-8a6c-ecb5ce51ab03"
        },
        "item": {
          "id": "5b3aaf1b-fc0e-40cf-acf7-705a2a40fb45",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d7dfa638-16d2-47f0-beb5-060dba44fce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854cebfa-8999-4099-9645-033a927a91a1",
        "cursor": {
          "ref": "da47bf2d-a316-45ba-8a9c-3bd9bcca3ac7",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e24ae444-8d4f-4bc7-9158-dcbcd09668ce"
        },
        "item": {
          "id": "854cebfa-8999-4099-9645-033a927a91a1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2f7499fe-442c-4c53-a00a-f26d3aabef84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b067a89-18f2-4ec9-9e03-aace69b76625",
        "cursor": {
          "ref": "516c60e9-21a4-425b-971a-ca3358c1df32",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "252c59ec-39d2-4d71-bbb1-59cccecf13cc"
        },
        "item": {
          "id": "6b067a89-18f2-4ec9-9e03-aace69b76625",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "645b3413-5017-47de-8634-814b406a1ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb55d90-4dc0-4102-bec9-968802bf72b1",
        "cursor": {
          "ref": "3fa036bd-243d-4fcd-badb-44c52f1ba44e",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6e32dc23-94d4-4bf2-8311-ad7084682d5f"
        },
        "item": {
          "id": "5fb55d90-4dc0-4102-bec9-968802bf72b1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a337a443-d8cf-4404-bd4d-45833f652814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51964d2e-5725-4a83-87de-a21ca0640729",
        "cursor": {
          "ref": "55d675a5-c00a-459c-a0ef-428057f58c35",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "540c5e25-2d9b-4251-9ae9-e79f7d770846"
        },
        "item": {
          "id": "51964d2e-5725-4a83-87de-a21ca0640729",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1324244f-8772-4e33-9cbe-ad83aaaca45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786d9be1-1d83-4edc-bc13-d53d181f6908",
        "cursor": {
          "ref": "9741b20e-508f-4439-9871-2d855c51279e",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7734279c-12c8-41cf-a9fa-841e83883876"
        },
        "item": {
          "id": "786d9be1-1d83-4edc-bc13-d53d181f6908",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "968391b7-17e2-410d-bee8-86ae117c2ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 991,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81e7a93-fc61-4b5e-973f-24253435ac47",
        "cursor": {
          "ref": "a5867f6a-c23f-4e66-b60a-576901a33e04",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "229020ff-f1c0-404c-9d1a-edb0252da391"
        },
        "item": {
          "id": "e81e7a93-fc61-4b5e-973f-24253435ac47",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a090f8f1-e0d2-404c-9aa1-8f352406adc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1137,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208f733e-16db-4991-8962-64953eefb698",
        "cursor": {
          "ref": "9566c45b-a86c-477d-ab87-2ed4c8c28bb6",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8299a5bd-3073-4376-844d-acff12fa2645"
        },
        "item": {
          "id": "208f733e-16db-4991-8962-64953eefb698",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b8b265b5-4fce-48b3-b396-df451cdd77da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 997,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8534d664-2b0b-462d-9e10-f4511fdc3185",
        "cursor": {
          "ref": "30f303e1-d6ff-4151-a28b-8a12156bb305",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "14b4c6a8-093f-4c60-a8f6-d2db5eabb172"
        },
        "item": {
          "id": "8534d664-2b0b-462d-9e10-f4511fdc3185",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a6b2293a-de53-496e-9a97-5ff55c5ac335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 891,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebd9748-e97d-494d-98ba-80c9fc670427",
        "cursor": {
          "ref": "7be5ed65-968b-4dc7-8eaa-3b58164ec335",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1a1d4501-eb40-4b1e-9dff-6b77f60d6499"
        },
        "item": {
          "id": "5ebd9748-e97d-494d-98ba-80c9fc670427",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7d8090a6-726b-4332-9cb1-acc7f36ff97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4e4e33-c3dd-4c86-af5e-1f124f877721",
        "cursor": {
          "ref": "cf4a38b1-0e40-4f5c-81b5-e685328d57b3",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f24f587c-dd0d-431b-ba6c-0aedcec80059"
        },
        "item": {
          "id": "fc4e4e33-c3dd-4c86-af5e-1f124f877721",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b6e59e71-6578-4fc1-abdb-bb586c739613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9290c224-71b0-47f9-ac73-e7e84d9fc5f9",
        "cursor": {
          "ref": "2578a6af-c456-4612-83e0-422163531186",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e1085051-5a25-4d59-9704-8eced2bfe74c"
        },
        "item": {
          "id": "9290c224-71b0-47f9-ac73-e7e84d9fc5f9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "84253111-23e9-48e4-aeb4-b5436302547e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e9aed8-4cd2-4200-ad79-9285cfe187a0",
        "cursor": {
          "ref": "a2d1251a-ae5b-446e-928f-866d256d2af6",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "20346033-5db3-44e6-9531-f1904aa4d2da"
        },
        "item": {
          "id": "d6e9aed8-4cd2-4200-ad79-9285cfe187a0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "59ac9349-3f89-4fea-aa70-2dcd7fbeeb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b010e7b5-38c5-4802-b72c-75a9d6233346",
        "cursor": {
          "ref": "2fbbb65c-c0a7-4826-8c11-a2ac1d46aa0d",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9e60e371-6728-42e2-91b9-a9059e9a9009"
        },
        "item": {
          "id": "b010e7b5-38c5-4802-b72c-75a9d6233346",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6389079d-2738-4536-9f53-94314d92bfa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1e7219-cde4-4d79-ac2e-e243fd9e339d",
        "cursor": {
          "ref": "811f32b6-536e-4caf-add8-78ab7c225bf6",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cb9bb9f7-9cd4-4ddb-bcf1-9ec1b927497f"
        },
        "item": {
          "id": "7e1e7219-cde4-4d79-ac2e-e243fd9e339d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "10246b31-15ad-4813-8371-6e124e68695b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b755f6a-7389-4906-a396-af89a3f9e882",
        "cursor": {
          "ref": "a5b02580-1b99-423f-853c-b29bede4d9ed",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "37e408c9-b45c-4405-ab2b-90f8ce9976f5"
        },
        "item": {
          "id": "6b755f6a-7389-4906-a396-af89a3f9e882",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ae9fdd42-7ef8-4294-9e99-9ac350c1f38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff45e22-fde1-4239-9474-c3e370774207",
        "cursor": {
          "ref": "87124da3-c6c8-49e3-a6c1-ecd2c19e6b23",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f9fe167a-d75a-4094-9a72-4230555c33f5"
        },
        "item": {
          "id": "3ff45e22-fde1-4239-9474-c3e370774207",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "65f6f5d6-ef09-40fd-8f28-fd89e55df19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30692967-d714-4fcd-8ac2-819d86904d99",
        "cursor": {
          "ref": "d73e55e8-6e09-4981-b447-cde240e6c6f5",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "80628daa-7e9f-476c-9ab1-1cde7864055b"
        },
        "item": {
          "id": "30692967-d714-4fcd-8ac2-819d86904d99",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a72c102e-1f24-4f2d-914b-550a36739407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf704d2d-c563-4d46-af89-50b63288e7b9",
        "cursor": {
          "ref": "02b4d1cc-69a1-4350-b16e-6684d607b5ef",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "69700a24-8088-492b-8f8b-751ef500185c"
        },
        "item": {
          "id": "bf704d2d-c563-4d46-af89-50b63288e7b9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "76a49d05-a2a1-49a2-9741-340690d8b843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95dc1531-85bf-4cb9-863f-90de7da20838",
        "cursor": {
          "ref": "82025f8e-d8be-404f-86a6-717ba0a9537d",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "85450d99-3db9-4578-a797-b2e9269cb957"
        },
        "item": {
          "id": "95dc1531-85bf-4cb9-863f-90de7da20838",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "10a57a7b-51de-4c7d-a620-455fffbf774c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b339573c-d1a0-47c5-94e4-f726b90bd898",
        "cursor": {
          "ref": "ef0ecc81-93fa-4508-9bc0-4d6cf0923368",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c8d8158e-b9e3-4302-aa5c-5c27e74ba237"
        },
        "item": {
          "id": "b339573c-d1a0-47c5-94e4-f726b90bd898",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0bf0795f-b1a8-4a26-9da3-451be5d0015b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568b1552-6a67-4824-9e77-290b7d89ff69",
        "cursor": {
          "ref": "ded07c15-0bdd-4ede-8e96-eb61042f31ec",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2eb7fb7c-6beb-426b-97b5-379f242df34f"
        },
        "item": {
          "id": "568b1552-6a67-4824-9e77-290b7d89ff69",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9bb7adbc-19c9-40ce-93e6-9abed9308930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0a24df-c127-4b9a-8908-93692b864652",
        "cursor": {
          "ref": "4f69e21c-1bfc-438c-a292-b72790684a54",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ba38f5aa-c1c8-4f1f-9713-d43247630280"
        },
        "item": {
          "id": "8f0a24df-c127-4b9a-8908-93692b864652",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0e25d130-8370-4f2a-b93e-548c80a11113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6f3365-a2f5-4ac6-a0dd-0d26f34cfca0",
        "cursor": {
          "ref": "5ce854fe-cfb2-4b87-babc-7119ddb1e01e",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "55d6af8c-f56e-4293-a563-ec2846725ee8"
        },
        "item": {
          "id": "7f6f3365-a2f5-4ac6-a0dd-0d26f34cfca0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7b0f180f-18bf-49b4-8d79-b0e107c89b14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf1c818-82ec-4ddb-9f43-aaab830d8de4",
        "cursor": {
          "ref": "3e145cd2-9f2f-4d87-a773-4edd1abc860f",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "02a89f96-970f-40d6-9f3a-2a8afb1699ff"
        },
        "item": {
          "id": "5bf1c818-82ec-4ddb-9f43-aaab830d8de4",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "d82df256-3a96-43aa-8c9a-7e44c1ba32ca",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 610,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64fbe14-a811-4789-8b6a-90c60d9b6e01",
        "cursor": {
          "ref": "6510c56e-7bd7-4e3a-98f2-4415ba1d96b3",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cc800de8-3290-463f-9ff6-5d8d4245d9ea"
        },
        "item": {
          "id": "c64fbe14-a811-4789-8b6a-90c60d9b6e01",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "01028b13-7a3a-4439-8b5c-ae9c3add92fb",
          "status": "OK",
          "code": 200,
          "responseTime": 689,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "219285a2-ebd2-496e-b3b2-46d45381c826",
        "cursor": {
          "ref": "2a6dfa00-1669-47a0-9a6d-28a61571e578",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1d8eafdc-81d3-4133-8dd3-435ccf6cc836"
        },
        "item": {
          "id": "219285a2-ebd2-496e-b3b2-46d45381c826",
          "name": "credentials_verify"
        },
        "response": {
          "id": "35035733-947f-4ff9-ac55-aa8e96434675",
          "status": "OK",
          "code": 200,
          "responseTime": 1791,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43e02a4-e3fb-4c7b-9bfa-91687a33cf60",
        "cursor": {
          "ref": "15110488-8bc2-456b-8402-233ba8dd2522",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b907f533-a6fa-4a3e-baa4-4fffdcc6b4a4"
        },
        "item": {
          "id": "f43e02a4-e3fb-4c7b-9bfa-91687a33cf60",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cf821d99-9d88-4297-9faf-5ee11e589c2d",
          "status": "OK",
          "code": 200,
          "responseTime": 1853,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8240a3-a24a-48be-92e8-f6bc6de27bf9",
        "cursor": {
          "ref": "87a725d2-4493-41d4-9927-8f9ab995022c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b42e3ac5-5a76-439c-ad29-a69de36e87b8"
        },
        "item": {
          "id": "2e8240a3-a24a-48be-92e8-f6bc6de27bf9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7ec84525-0f15-40c0-aa39-c1555466dd7a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8240a3-a24a-48be-92e8-f6bc6de27bf9",
        "cursor": {
          "ref": "87a725d2-4493-41d4-9927-8f9ab995022c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b42e3ac5-5a76-439c-ad29-a69de36e87b8"
        },
        "item": {
          "id": "2e8240a3-a24a-48be-92e8-f6bc6de27bf9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7ec84525-0f15-40c0-aa39-c1555466dd7a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8240a3-a24a-48be-92e8-f6bc6de27bf9",
        "cursor": {
          "ref": "87a725d2-4493-41d4-9927-8f9ab995022c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b42e3ac5-5a76-439c-ad29-a69de36e87b8"
        },
        "item": {
          "id": "2e8240a3-a24a-48be-92e8-f6bc6de27bf9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7ec84525-0f15-40c0-aa39-c1555466dd7a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79c0ab1-4b4f-45a2-b1ca-6014b9c500f2",
        "cursor": {
          "ref": "ba8c8678-7ddf-4ee9-9c02-a51893c6f922",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ec521513-edbb-4895-badc-7ae7e96aac7c"
        },
        "item": {
          "id": "f79c0ab1-4b4f-45a2-b1ca-6014b9c500f2",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "a4f0338d-af2b-455f-8ee2-72cafa8066e5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 570,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823d919e-49ce-4284-ba66-957bbb4fa2b9",
        "cursor": {
          "ref": "e33ad10a-1cbd-440a-9d3a-da1ceb77af50",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5d14a696-bd45-49af-bf85-96993ce707e4"
        },
        "item": {
          "id": "823d919e-49ce-4284-ba66-957bbb4fa2b9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b2bd0d60-e8d1-46a3-b206-55b22782f487",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823d919e-49ce-4284-ba66-957bbb4fa2b9",
        "cursor": {
          "ref": "e33ad10a-1cbd-440a-9d3a-da1ceb77af50",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5d14a696-bd45-49af-bf85-96993ce707e4"
        },
        "item": {
          "id": "823d919e-49ce-4284-ba66-957bbb4fa2b9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b2bd0d60-e8d1-46a3-b206-55b22782f487",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cc2b8b-a981-427c-b07d-06cc141dd3de",
        "cursor": {
          "ref": "9ab8b416-c2cf-41c4-8954-1c6508245544",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c08381e3-a918-4387-899e-cd730be3f538"
        },
        "item": {
          "id": "c4cc2b8b-a981-427c-b07d-06cc141dd3de",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "1e868b29-45d7-4dee-99cf-de648bbe25af",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 880,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e93fc37-4f8b-473a-987f-d7970f155d33",
        "cursor": {
          "ref": "59c82d3e-265d-41de-a4fb-bab7b585b14d",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1fec965a-585d-4901-ae32-4e2d8a6deabf"
        },
        "item": {
          "id": "8e93fc37-4f8b-473a-987f-d7970f155d33",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "779a6146-7379-4f04-b83f-0a41c4b8e09d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e93fc37-4f8b-473a-987f-d7970f155d33",
        "cursor": {
          "ref": "59c82d3e-265d-41de-a4fb-bab7b585b14d",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1fec965a-585d-4901-ae32-4e2d8a6deabf"
        },
        "item": {
          "id": "8e93fc37-4f8b-473a-987f-d7970f155d33",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "779a6146-7379-4f04-b83f-0a41c4b8e09d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a912277-19d2-42dc-9f28-06d082186f63",
        "cursor": {
          "ref": "ffcad434-7070-405b-b978-8cfd28a7e36f",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8a281558-a8ef-4995-a7d7-447525d650da"
        },
        "item": {
          "id": "4a912277-19d2-42dc-9f28-06d082186f63",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "3faa9188-610a-434b-b5d3-2e14cad47ffe",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 916,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}