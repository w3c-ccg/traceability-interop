{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "771aac08-ab91-4698-8569-91bbcd0fa81f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "057ea541-3d02-43a6-afed-27924bd261bc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "81b19abe-a888-4d3d-b095-80619a894ede",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c5e22ed7-2d35-4d5e-8ce2-a2ee7b5ab4a2"
                }
              }
            ]
          },
          {
            "id": "20d459c6-30f1-440d-8441-cf067bb887d6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cec15bbd-77bf-4987-9b5b-5ea9c5d99708",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6df0b928-58a9-4cef-a493-cf617193fbed"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "64d4bfac-a3fe-4942-9c57-894905aa1af0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b5fc31ee-f48f-4b10-accc-e18914a5206a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4070ffe2-34bb-40ce-ad7b-c5bacd730c2b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b64d1028-a472-40c4-bf01-81d088b635f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3f27d42-8cb2-4fdc-9494-bb0cb9f0a1a5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3012a56-9cfe-47d5-84e5-5de476fcdd4e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84d005eb-4ba0-43db-8af6-de49956f4eaf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8a9f0474-1ca0-4b03-a672-1d40a31c6bd5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "150a3108-574e-47b6-b9a3-5eac913f3372"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "604dd253-d961-475d-9d4d-3508aafdc1df",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1b3464e1-d74b-49f5-975d-bf73f6050f15"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b9b500c-f5e7-4e19-8ebf-154fac49c987",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71a8fbd7-381d-4b2f-9df2-6d2be8e4f504"
            }
          }
        ]
      },
      {
        "id": "e18b153d-8a47-4fdd-a5f2-94168dba1805",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5e3c4d01-6165-4607-b7c7-c9505896ad96",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ac7010b-4e15-42f8-a84e-75ad0a17df5b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c70909d4-bbda-4d20-829d-7a80eba66e80",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4012bb3-2549-4016-9b0d-e2174e74e34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58793ab0-2017-4edf-9d2d-8695f9fafd74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472496c7-9b9e-41d8-822b-3dd9795ae63d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea48b28e-4252-4543-b0dc-fb98729aedae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d218a4e-787f-4789-a55d-70e85517535f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615653ee-9a67-4875-8c2a-7cebef6c8ece",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbeed5c9-5e4d-4647-a592-e20753af0cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb4e0033-fd76-4fbc-9d4b-1922bdb0f64e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7c01516c-4824-4a78-9dad-30b9aa47df38",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ec4230c-c4e8-483d-a03e-c0b93357376a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a142b6-1706-4350-a80f-cce40cc9e3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7302ecd7-7fdf-4f3c-b383-bbfcaa64c5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ccd5bd-6d7f-4fdc-a396-863bd905043b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b330f97-e81e-4545-822e-2f653b2940eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "de813bb8-03b8-4771-9d2b-f488d14786f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "49d84ea8-5146-43a2-943d-7e12a73dfcd3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e447adc7-62b6-4a0e-84c9-ca57aa890b5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9be47d85-2da2-4000-b2d4-65f4afdef62c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc34bc8a-0968-4297-abb1-86bd57db36db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "169e6e92-d22d-4f3d-af13-a7184714fb2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62c806b3-2e8f-48fd-b751-51ed469403d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cad355c3-58dd-4e32-9b5d-e6bb194e9d5c"
            }
          }
        ]
      },
      {
        "id": "f479b54c-038e-474c-982d-b05c3ceede53",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4d7b9bbc-092c-46e6-bb8e-bdae6e9e73f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d59c4263-6023-4825-88d2-dab0a42fb9ed",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "762bc3ef-d874-410c-a38a-421a9c91f8a4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4688ed-fdbf-499f-ac4b-66ee7639e859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ebfbd3-3346-4c0b-8876-a01f17268636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8aa83b-f2c5-4d01-897e-78c6c83d00e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "599ba7cd-9172-4d49-996e-ab7f9d76a248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402a238b-c2d7-46e8-b0f0-af736c21da58",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e407e931-cb12-4eff-b312-4d24b3c3f339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a3db11-e181-4ca8-92ea-2e90c85e873b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb2302e-2c40-44cb-8caa-f333c398d832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7897942-3f53-4619-ab89-1741c83c42e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075ad5fc-bf33-48fc-93ec-947e74438d21",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c6eb4f-f97d-4a9e-8cc6-b076aecf2a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3343b00e-d329-41df-a361-a5bc1dc47b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1692460b-9594-4e27-a0be-8cf22d41332b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3b9a1b4-e3b2-4b2d-83eb-bb11b15016b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f80e7e4-ca3a-47c3-a00a-ca68aadc580d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6a2581-6023-4744-84be-50f0a3b5e20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d02bdda-f874-4395-a57d-126f64299349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de5dabe-d04b-4b21-9b7a-0acbae384040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1aa5efc3-29fe-485a-ac94-f70f1d164abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cad5be-74b4-424c-94cf-0ca644a07ca3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5290c29-490f-4579-90e9-53ea4a8df546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8c88a0-9a35-42ec-8c88-ec7d21d58409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3111066b-ef5b-47f0-9635-0020701c2822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eaca8f31-859b-4ef9-8b43-73f49977bc33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e873a3-01a8-4498-91c6-72e4013c4f11",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d97b9c7-46c0-464e-b98f-ae170ac37488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9734d301-1eed-4323-91e1-42f30e3d44cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cd482f-acc9-440e-a528-94506f07fd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eae64862-4479-4048-b06a-f65895a6dda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff102a9-2dae-4a95-a228-818b1f8b24cb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d43f9f-90a3-4f2f-9a37-aca8d42e23b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398e2bbf-406f-4186-9929-a77f7f1a6d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b529542-3910-4871-8636-bf4e31b26e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f67a705e-b368-47f2-b791-9cb2b0ac5c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdaa7bbb-a7f1-4c45-b27b-ae3de5654725",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c673d7-d720-4bb2-af2b-1d5bbf97b6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2efbe1-ea77-4dd5-9481-9c1429f679b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecd87bd-744f-4b0e-b1f0-dec68b5e62f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40b9b0b9-b17c-4681-ac7b-88de06846c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290646be-6f85-49d5-a9fb-86e3c36f5570",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78106dd-9c9b-4087-a8bf-154452a8a4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2748bbba-f9c7-4f81-af3e-e795c2bbd818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835b3aeb-2ee8-4973-afcc-78fae0ddb21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07258b68-76bb-4bdb-bd05-61c8e6866d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345a8fc9-ef44-43db-bd40-12f1d9929f9f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8b73f3-809e-4bc8-a5a5-d869d3afe780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8d28d7-7348-4efd-898b-8394420e733c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587eddae-2c9b-45a1-886d-f919e86b4297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68e5a52d-d6dc-4b7d-98b9-9c7437c4de2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086ff4a0-2f72-4887-b09c-dc930a9cb8d8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf97f17-0233-4be8-9aba-59e02ce96c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa51cda2-4b4a-42cd-82e8-32c74a38e478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167ec414-5607-4152-a134-7c3271bd26c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ab4b8a2-2afe-434e-bce9-b68169619fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ca1616-7abf-4d18-acfc-7b5b78616350",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0895d3de-8b14-4399-98ed-daeca066d3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b844525-63f7-4c6f-9ee7-4ee2f81a58a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07732d4f-fbd8-41f6-aa95-0b30d0dfc750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b9ca934-5b78-43ba-8288-27780404c811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f350ad-bde8-44c4-943a-ef37c5a02bb4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce35e18-aa51-4b03-8da4-3f0c8745f643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542fbcfb-f292-4db8-8150-270de57324fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141bc94e-e2e5-48ac-9713-8d9ff8e20a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "baaaea2c-d0cb-4f1e-8dfa-85640d5754f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552de3c2-96cd-4271-9bd9-abe1bf061f19",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe635f8-0a13-4ea8-974b-5fc093585c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3f810d-197b-41c0-827b-94e83e5476ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de6f3e9-c327-44d4-9629-3a9f128a68cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "864b6494-a420-4906-8792-2eca742e59e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481aa07d-a379-4194-90c1-c00a4f0f69f6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5870d7c1-b3e1-4d68-a2b8-fbd896cdd826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44486bf2-79ae-4b84-9de3-ab000e244586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c92ac6-21c7-4e57-ae8a-32ca32489975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6bc944f-8152-40ec-909d-005a70d105c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acff6d75-f3c2-449b-8f1d-613042625f07",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb7d4e9-7902-4e14-8de8-1be94741f421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0035f92-58e5-483f-8789-f763a1a0891f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5554b0a-b3ce-4dca-855e-2ac1921004d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b4dc3f4-2a30-4287-9aab-7bf3cfcbecd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03059848-bbc2-4be4-8f2e-3fb789c9542d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4916de82-a9b8-4092-aa2a-636e05dd6a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a16099c-8395-4e53-8be9-52cf81fff04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a097a7-ce85-4e7a-af86-2075db39ef28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b02c7ef5-eec6-48ea-84cb-84992c2794b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f1d579-e3d9-4eb4-abe4-e8b88369617e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cb1079-8018-4b37-8d7d-922bac41106d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "620ae8da-f3a7-4832-b38f-07dd004d5664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c756b1c2-8ad4-4892-ad13-ca5573355fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "76d6238b-2259-4e1f-b889-8a7f64f358a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1f8d3b-aa3d-42de-aee2-94f6aed1d0c7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab9ef06-e059-48d7-a3e8-3ef8cb6cf6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aefb456-4369-4ad0-bf23-81d0262c22d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8101b1d0-8b7a-4991-9e29-a4322e8e3a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4130818d-a967-474e-930a-eb9f9c746690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90f02c6-c809-41c7-9bb8-a5194725c105",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef62324-9913-4df6-b6fc-03d5426c656c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b1ac40-0de2-4ac4-830e-0ef2298f0ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d46ee2-0cc9-4d3c-99d6-374c60f59994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05b0854b-0131-4cf0-9f18-6146d66d3988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c287e2e-4149-4bb6-a444-49cfb83f7893",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c292ed45-dcd0-4e05-a88c-45c2e99b79fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95171a2d-5b1d-4ded-b9f6-0b868cf25744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902489a7-b567-4cbc-813d-c914aad6b1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aecd5a4e-09d1-47e6-a277-a1058e7de02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3638039-7fd7-424a-959c-8fab903816e5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90488ed6-f993-4635-be84-8196a9792222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ddcb9e-f444-4d80-b829-84522bad20cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5e8b8c-a672-4f66-b9c3-6edeb77af2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce456d31-328e-4a81-a07f-0cce9277e98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11dd7bc-f265-4c72-8d32-3aafff7d7df9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17cd706-c87c-4c5b-bc75-be261eda12e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86eb795b-d4df-4bab-8f1a-f6664d3cae87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d388ced-6f4a-4620-b290-7d73ce3e5294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c46e45a9-138e-476b-bc3c-fe6b3eb5357c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd11f9de-f4e7-41f7-a6b8-735dacc703d5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2714980e-a49e-4234-a6ad-ac8b2197b6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7831ab5a-1a91-4c54-ba63-811e9e0de5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4974055-cab3-4df6-b762-68c8db01fe1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7c2a8f-784a-4a61-86ca-9bc117c452a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476045f1-588e-4120-93c5-381efd037cdd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fadef25-0a52-4c4a-8623-725315665ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b18a448-c5a2-4781-9540-037fd02d7532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee63bb0-31c0-4567-9c65-977c5b543463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecacc2b8-2315-4ac3-aa4b-30ba4529566e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63f2ef4-b412-444b-bf96-c8a6160432f1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a663a479-1f22-4c77-a664-3130bc6ef23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7bfabe1-4450-4751-a071-201dd75654df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1485a3b4-fc27-4c4a-8ea7-c0c1a7f5bbc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "60deec0c-f8c3-4c63-a69b-938db38960ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59f5a5e-3313-4cdf-877c-b0bf22fa3ec5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c98be37-fc91-411f-a4cf-449a1145ed4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086bad89-4b8e-4488-b603-ab2169275fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a272e584-c5f8-4207-ac2d-7711d701639e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e42d680-4849-49be-a5ae-6412e904dc0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59149be6-a2ee-4abb-a04b-1440ade9bb17",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8101277d-f28a-474d-8c00-b32de2ded9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2e76c1-3e2a-4862-8c4c-104543ac4f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0742ae67-2eef-4d1e-ba83-c56931cd73be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2219b4b5-e71c-4eb7-8f88-145ced70a232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbe6659-5811-4240-9457-a88d66290058",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19e5f72-10a3-4ed6-b993-dfbd4dda1d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "130691e7-ad05-4846-93a6-80d81dcb7634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141f87c1-96c1-48d2-856b-939c7f5fd7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33e4d28a-0531-41d4-b96c-d6fe56b9952e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7172a8c-9a08-4127-9d8e-efced6780a8f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53c016b-c0d1-420b-85ef-6b38e6e83692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b047697-c825-4cb5-9d78-7320acad11ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c533d9a-ae63-48ee-bffa-6c8e9229bc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "13daf887-eb0d-4010-838c-1517914383f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d5c5a8-5832-4650-89b3-2018c04a10ef",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "971c4fc7-b391-474a-8187-2d11afb918be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6aed079-2bb7-48f3-b813-a1788821c282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544fa814-c984-49d1-8be2-1c31c4adf673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee35ffc2-9616-4045-95f6-fcfbcf904e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c568c7d-a939-4f91-8847-9ca4ca7f7f87",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced51c59-5951-4e91-9926-598fddaee45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f12244-4db2-442f-990c-ea3172311bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ca9f85-abf3-4e13-a963-c430f955207d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b417cb4-0e44-4546-9b1a-2b2cf8307e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3007da9-e51a-4205-8642-5e9d135f2a7e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e12169-2142-4d3f-a516-7ba49aa99c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3dd5804-4040-431c-8882-9d21bdc37325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c493e477-708f-42e8-926e-186c908fd8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63bfc0df-95a6-459e-af92-a06ceb8990dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef21c864-b425-4da3-9db9-c895feae6e79",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e95099b-bd50-4aeb-89db-54e5af805517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a16118-f93c-4407-b08e-695496707cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcf1748-2be3-4d4d-ba7b-9161bf654c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc9c448-a0e5-42a0-831f-7b2ec780cc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56b2a91-0777-4374-8ef1-873b36fe4f50",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2b5c66-250e-4269-9e83-de17e25508f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dafde547-2847-4c01-b01a-06174fd1e1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c380d5-9f2f-4d2e-a953-28e86d1fb55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "90da86d7-03e1-49f8-b9d5-267f028bf42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fbfc9e-1dd1-49f4-b977-53759575b5fe",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dac444-3d52-4fe0-8b46-d180d145ea3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6111fe3a-cd9b-4f0b-936d-d8aa35d1622a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b8c2fb-0034-4503-aa5e-216ade57f972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd16aa1-5bc2-4c94-89bc-14892606e4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8beed5-40e9-4e3a-bc7f-01078142b5c5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058a91e0-7466-4347-bd82-91dcffaf26b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f90dfc4-a7f0-43f9-8095-38dde1cf8cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e7ce97-91e3-48f9-84fc-8e98194176c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "448409cb-849c-4d0f-bf45-16353ee0bde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cec351c-5b7c-4943-865c-8eda0bb7e910",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db4aefc-c35c-4de4-996e-82d47607fc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54449d7f-eae7-4aad-be7f-6bda7da43492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35197d9a-c02c-4f85-a78d-0cbd1caff82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4cdaa8f-d068-470f-b6f9-6c2d2e3bc670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3424f043-2718-493f-b353-aebd8bcf5a7e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951eb09e-9bb0-4715-9953-54488ef1277b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f6453f-b652-49ff-b7ba-ea55d6d7848d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5ae742-899a-41ce-b2d8-c86a23bd2924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf32f76-d3c8-4069-acdb-a093c05a136f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b922841-eac0-4148-9fdb-d51ce472281f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b59b46-6e0f-429d-a31a-43e66e0feb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd48f70-b3db-4fdf-880d-2e50800c412f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09523603-cd1a-42e9-9af7-276ba26d8cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "120c3f02-eb16-425c-b66d-94409939cd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cfd005-b999-42c1-b4ae-cfcdcc0abba7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc11759-8b42-46a6-b716-9bb842d067c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc990208-2b60-46d7-b353-8162713bdbbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf7bcf5-e616-42df-a80e-ad35f97412ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b670c9-fb5c-4b1d-8b8e-25db172b5c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23441bed-a224-46cf-bb8b-76d8d81c38f4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa91088-ff82-434e-a833-972b6fa59a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d99c2f-78d1-4996-87ac-e39e0e8abc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef4d913-ac37-44d9-82e0-090d0fb90b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7b33890e-a507-4ae9-adfd-a356dedb94b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793ca7cf-6385-429c-9ee7-cfe81cca89e0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e251dd-8722-4dfe-a86d-c3d521a0a12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071aa0b5-d37b-48a8-bf43-fe36f86dbc53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817f8e5a-33af-43ab-9b50-3b68f048cec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "24e56eef-97fb-4204-9600-0eb6766eba6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3521d9f9-25f0-421a-8abc-330f0382e5bc",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3beaa8-9bf2-4037-884b-582687c89cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb37d213-d981-43e5-a64a-60926c27cff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2a1b7c-9e86-4680-a9b8-4b81ee823268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1f5dbe-8fe6-404c-a759-ef10e7b68c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a77095c-3fa1-4135-bfd7-3b43c0213438",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b73ac3-9e94-4d07-ada3-ea0907858bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe86b5b-eb1e-4396-bf13-aef63404cb8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c6ecf1-1a0f-479e-9e56-de77a8c719ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be3110dd-68b6-4f64-9de5-3ffbd1c22ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d236f19d-24c5-480d-827b-f3c889117c1f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136a57e1-7a30-4860-ad3f-3295c69a2ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb944471-57d7-41ad-8e64-1ce0efad3c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f65b99e-17e8-43fb-b1ff-fc83e2a7737c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0301ead6-286b-417c-831f-53d1bcb1dea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6e51ca-024f-475c-840b-67c13977871f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c272541d-176b-4971-ac9a-affa87e1fd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7811a946-c62b-4183-a849-457b29282bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45208531-5a6e-49e1-92c5-31afdd0d145d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb07b5c0-af7f-4221-b115-67ab1e82964c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc42c43-eb72-46ff-987e-a39321e01f4b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06aa380-8e28-4da7-9604-fc98db2245e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ef56a1-eb7d-4e09-9711-709e4c66b999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296802c3-8807-4130-8ff7-381133eebbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b02658a-1e29-4341-a381-52fe102f048a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf13ba9-67a4-41b1-8a18-2df09ac4ef59",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7ee778-005b-42f7-a732-a920f22675a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fc056a-a339-45bc-af9d-327e7b7bc5b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f806722-7420-4a33-a57f-b03aed255746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "36fdc06d-883a-4288-91ba-d57a55e93055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d7d544-1971-4025-94c5-c129fd047d7a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b975d0a2-074e-4cf4-97ee-ed8206b0e4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef909fdd-f6da-4fe5-ad60-0c44d926b244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3ca151-bc54-4630-b993-9c012b0a154b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c209f843-fdcb-4586-9ebe-cbd04770f519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25de0fa3-66af-4516-8c2b-474abef47465",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252bb310-3a1c-4e19-9747-8ac508a33f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9b906e-822c-4719-8fb4-fb52101957ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1537a923-ac13-42af-8e17-a35afe0f1beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a833b2-168f-4332-a0fe-af2bbcbe6737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0d7d4b-1f38-44bf-ad86-2c0daf4b3dcd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98b4b32-4db9-4c72-885c-dcbd8e9c831e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf6764b-d859-49a4-b320-fe9b220088c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d218734a-990e-4f36-9637-b3e26840f225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cba27cbd-bd85-4dc2-a6cd-c4aa7b964832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6df998-6d36-45a1-9e36-b5e358d9888b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b928cb7-6c7b-44eb-ae88-ef551d93eaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d45226-3cff-40b1-b9b8-bc674439c718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb3ffa0-b311-493d-be70-13d3fbe8c553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03b96eb3-fa33-4984-b305-8bb695bc73cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3d7e4b-8bc5-44aa-9f5d-9f09fcc57949",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa57a9e-3f44-4ccd-bc79-6d9299dd19b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce8ea74-e8b2-4a54-ac65-0b59ecdd8f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205d2097-6438-44cb-9bcc-112cc43a3128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd9958f-b432-42ec-9396-054744560470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6eed69-6854-44dd-916f-7b9bf6ca5008",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1580b0ae-3952-4252-84fb-b0db04bfcc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096c30b8-ca22-4f08-ab95-01a23aaf93a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed553080-8183-4f9f-ba22-278062c97509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5804b191-1359-4f40-929d-f5a60d2deffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c067c3-f83b-41b8-9657-3f3b27b5d3a7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8f3f32-2ce9-4d0c-a183-d3ba1258a798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9596c77d-8bd1-4807-ac36-7adaae064e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccefdab-9449-4f64-8bc8-dd8beff010d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ce727f5c-20bc-4594-8ea9-61a3891a3c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e237fc4-8d15-43a1-a2c9-a6bddad915da",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690469ba-c521-411d-8170-bea0f766fdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54264e89-5b9b-4530-96a1-9a6c2165e129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ef8fbb-201a-41c6-a95c-8d85161d7257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2840bd5c-9548-49e7-9d67-2e565361935b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d96717d-1d89-418f-81a4-7e3696e9bb9d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44931cb5-433c-41bc-aea5-f1b54da505c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7ec418-a59c-45a8-88b8-03a8a9f35134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d04cba-5731-42a1-8e08-c40e6a71e04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7f672c-cc2f-4671-96f9-66ced5767801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97beacc5-0eee-4539-93c0-c6a7b5557b2c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f70ff1-1d01-47c9-841c-09b09b17b708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a8e7e4-da6b-4f5e-b82d-2bf6056566d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f89097d-0646-4313-b82a-c048e524a2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9df9619a-35c2-4cf9-b084-6097b954ba6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c87c767-5d07-4489-8941-badaa5a4a3c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7daf5e74-b366-452f-a699-27941809174c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dec9d3b-ed75-490b-871d-d26df91de5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79e1629-c79e-4794-96ec-5c1f00bf975f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "81ab77cb-fedc-4a5e-9b9f-c3f85f31bc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d3952b-8e91-428f-afb2-7f24fe849496",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e209be-b4f9-48c6-a01d-98d38f69e06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9c1450-f5e1-47a2-adf0-226ab5a2f136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a178c4-f342-4d9e-9236-4b3a06941026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4202cba-86cb-4f09-be7d-833f7e9b3a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193774f6-e2e5-4ba3-a7f8-625835aff05e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f036a1-9fe6-40fd-8438-3dd7e65ec1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b00ceb3-d5d4-4760-b679-2c314a233628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bc58cc-01f1-48d8-bed4-75196d8bbf30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "832f2c66-9c0a-4660-9fc9-e8c6c3da2a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976e4523-d425-4672-9a97-ff4b1dc711c8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532bac4a-87f5-4618-a81c-3d96c3422d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfe5c2b-e58e-459e-b9d9-086494d526d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39877874-c428-4e14-95e1-4e8413c59b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "17dc4050-ae29-4875-9027-9269f22c2997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6172e92f-36a1-4b20-9e93-3618fd66d236",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dfe49c-d4eb-4a50-8a79-5fe403041429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c89ca2-6959-4d25-98d6-95dca459103a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bf79f0-774d-48a0-ba10-65187d57332d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e33e5312-44fc-4770-b132-0c1cc5e61b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdfaec7-b3e1-47f6-950f-bc2774878eab",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2193bece-0404-4ea3-849e-a25af860e8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3e2fec-76e5-4849-8368-3d065a4c79ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14522870-905e-4cd1-a73c-cebab65fc3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0783a6-de29-4b61-874e-1aaf09525405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0088f72-1900-49be-af24-c228fae4885b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7089aaaa-cde2-4b1f-af8c-291f8d312251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b2fe2c-31fa-43db-a9c4-4e8c3dec765d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0665a359-a829-403d-be70-c76a567d4768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21b89914-802e-4643-85c8-c3074d158c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1dcfeb-277c-4872-936a-e67cc627cbc2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fb4b90-61e9-4f82-b832-177e9a6581ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa08c2eb-26f8-4eee-9866-2da0dab50fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a9e481-47df-46c2-b4d6-11c7f5cf1130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "336be59a-aab0-4762-8a88-dca7d43da043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c46eec4-ddde-4479-8c47-e93f269e396b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8514e5-da21-4698-9c2e-815da9426484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec5b2e4-c388-4e15-93f3-755aec6a0a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e162e673-801b-4bb7-829d-b1012ff5e377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a316708-f56d-4f03-9636-08fe75ba8f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b83bbe9-93fe-42bb-ac4a-246c3c13bc7e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a890d8d-00e2-40bb-a9d9-5f8835ef32d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e06db9-3392-44ee-b2b6-e0cacccb2c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92463d53-90d0-4767-bbda-f69679d1be64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e72d0580-3899-4bba-a9d0-fd3814671d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a869bdbe-bc52-44e5-8b56-51890861c195",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658e8832-ae6e-4044-9941-f917d03b1f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df70d147-27bf-49f3-9076-66df9b4131b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad8c1e2-b82f-4583-bc5c-abed930b2f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37a81e83-0c14-4782-89c9-6d3d48189423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebbad6e-fa39-485c-849e-e0d24620eced",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7532b764-2e7a-4ab7-903a-70e569bf09f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0a24d2-f4c7-4d8c-8c0c-13c976841c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24177f0c-f513-47f9-aab8-f011fd62d704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a06ba835-fd81-4d4e-be6c-caa42c5d242a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacef1b2-2feb-4719-8662-e5482b7c5b68",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662258bc-76a3-4a22-b0ad-f7c937f9561a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c289b8-00d6-437d-ac3a-ee4aa7f0b88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbf69df-c2c4-405c-a31d-50caf7eab61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fed0ec5d-bcf1-46e0-80b8-9c256631def5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e12bcad-5d64-460d-ad37-29ad944c7095",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0262b4-2aa1-4ef5-b252-5c584ee9922a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eeeb367-ce09-411b-9f22-790493ab983a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea6e27b-d058-4f83-9dbc-c16f42396222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3250377c-3514-43c4-b561-a3be99c219c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d25530-c925-46ae-9007-f9d739415d61",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f150ddc-5eb6-4a0b-ac4a-4832cf9e7585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c4e45b-eacf-433d-9595-62c27aa72b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3680f6f-523c-4640-8809-78de7f6241c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "acdd1c33-1a45-40c2-9da7-a7263a322e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d8c2aa-37d4-458a-9127-9d417ca05f04",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ac00eb-f848-4d5d-939e-4799c16da310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8dc2eee-e833-4d25-8c3b-286528d77ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e86519-e4b3-4eda-a29e-b9343a3e7580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e905c749-73b7-4815-b972-cbdba31c335f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd3326b-0388-47ed-8739-369a9623efee",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858e985f-2e40-4a05-8ee3-5c4a914bd475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef09cff-bacb-474a-a4d5-fd6309d3b7e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b9831a-6d3f-4be6-8f99-a1b6d781f195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37e6d9fa-20e6-494b-b0c1-19df1c6ef353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af28ba1-de57-44e4-9345-e2c2a0dded8b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece05a40-c35b-427c-9440-83cb809e0004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00ad328-2562-4a59-84e7-84cf8ac3c73a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf56ffb9-363d-4022-b292-bfd0cac17bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee93a66-683d-4a26-9700-02bc2eaf023b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403a1ed2-3e5b-406d-9a0e-0af02b9e75c3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a82dfeb-218c-43e0-b2c2-01d1eba0d9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66eee065-5ed9-4330-893d-fb7c379a591a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe36b068-deac-4373-9048-1dce0359c045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1be5476d-95a3-4bff-b044-b06b7f6cb5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bb9f41-f05d-45eb-ba65-af66993db39c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d49215e-08cb-43e9-bd5c-3fee9ed32a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8fbcef0-a50f-46cb-bfea-473241df7082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166be1ea-6639-4d45-b3f1-5486de9552d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1666e839-6a0c-44ba-8a85-07f339808306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c802f619-242b-4778-9398-d9e413611fa0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a809185-8a27-44ce-8234-0332019215e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f5206c-7946-4882-9ab4-8868f66d735f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5f9457-105f-4c88-aa5b-c10d0b700e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd290c5b-0e20-4f30-82a5-d4ac193d573b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abbd159-00e3-4753-ba7d-d049fb7ed734",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433cbbc0-980b-4d7c-8f4e-72a25f91fa0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963ce3dc-cc42-4eec-bbed-5b4244ecb8d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469967a8-9749-40e8-a80e-f7fa36921388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba44c683-0926-49d9-89fe-e6bd174652b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4da8037-f23e-40ae-994d-5ee32c422275",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846089f6-c3a9-4ff5-9951-6d9ee7720abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb933cf-7401-4ebf-95a0-68724bf982fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cd7a89-0706-47d0-8944-195e60e48995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "256f105d-919d-4265-9841-197899a17f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201a77fe-fa5d-4e9e-8ef2-bbc1aa1904bc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccdb96d-dc96-4bde-a87d-37bbe334faf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd444948-9476-4136-a518-42fdbaf99131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714397e9-5833-45b9-8df2-d6ed69ec88fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92cb9a22-1eab-4d25-a68f-800648b76533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d675c75-418f-4a82-9651-6414f69c4c6c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7eec1cf-9880-4311-a4c1-88b16ea0aeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "826e2dc7-50a6-4e15-8fc4-84756702a54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159ab753-67f6-41d5-8969-a057f6181608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3344a2c-0acc-4f52-8098-3bc8d60a6574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b7099c-c4d4-492a-a550-a3f3b6d42319",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b207437-62e2-4dd0-b566-85602fd558af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e82030-64fb-4593-b908-703a93669495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d770439-149b-421b-a4ea-88793f242f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ede658-9f9a-40d6-bb82-8217064c271f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba474f9f-45c5-4ed5-89b4-d7e8419bba6f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f7a3d6-da9c-4bc8-b01d-f03817a78de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cdcf87f-8032-490e-98bc-45ba133aacbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa0061d-0ae7-4431-8015-24a9eac51c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9fb320-97a9-41fc-9e74-f398aec16e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe601f4-2943-4015-a7cc-6c4500add211",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e6787a-c6e4-42f0-be75-b934b9ab3355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dae1ce6-f327-4cc2-a4fd-40532688526c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682eca2a-38a9-4ddd-b5c3-21a229c004c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f93829-42bb-4db5-b517-6042a9a8fd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4940481-ee04-4b4f-afde-55b4eefa318f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4629c7d-57f7-42e5-9d82-b985e7d98c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6918b44-6287-4d5f-b6ce-0d73c429fdcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770ab840-4f7e-45de-8f62-e03ef74e3e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d921aee1-a5bd-4205-b2fe-9e93f9840ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895d8b8a-bb27-42e5-b0f1-9db79d0fb8fd",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b22edb-aa05-4a57-9875-8e3e2c8a6362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c2f6c0-6bd2-432a-9331-332d2e527780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefb5e3a-ca9a-49f4-843a-30d76ebb77d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "810ef3b2-c49f-439f-9e29-71a628cc9434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2fcf0a-c275-4723-a393-1522faaa9e79",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b93bb1d-dee2-4674-be3b-4880aa1ac79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c148ba48-10e4-4b41-8841-0933975c6089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd279d10-7c77-4e61-bfba-e145352e90e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f173787d-94f3-4762-8c81-a1a7308aa219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429aff9b-3c3d-40ca-a8a3-f23c94a5bf65",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c391ba0-88fb-487b-8e67-10feb472a6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7269229-c728-4435-b2f8-0978356a0b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5f160c-6ece-4276-87fb-fb8663a9cb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "090ce54a-e1c3-4ab4-b9ae-521c14093991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50df372-d8ee-4308-9db9-e22a1eb8ba11",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154a358d-ca2f-498a-9e06-ad99a29b06cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9c076d5e-0e7d-4f08-86f6-69d4c785f541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfb4f09-88ac-4724-b952-3da0e7578cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e10a39ac-0766-4738-9d90-1ea644095c0d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d6f238a0-5377-4925-a5f0-6884a62cb1e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7ff7f85-9f6e-43d4-b470-31d057f410a3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9415f64c-9885-486c-b98a-8a9bd27b85c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1a30a2d-9b94-4ca5-89e4-7db0e84aebe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b0a727-5e72-436f-8d46-5c85c714d5c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a4ac28d-0185-4955-8d93-eb9cfbe578aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1f5ef73-d828-4252-828d-6425efaf7258",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f5a3607-40fb-4f5a-ae94-e1367b363ce2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0678d81-32ff-4352-a065-63d56e767510",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d39b66f7-bb90-4cbd-9973-4831ba175ade"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4c753f83-5a15-4107-adba-1428e607528f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3e648c4-a66f-470b-846b-e65e6afe3baa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "83d9b709-375d-4703-a0da-fca01c60308a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d90f1d79-db3e-4fd8-b5f2-62f6d97e622a"
                }
              }
            ]
          },
          {
            "id": "7ccbc7bb-1572-4406-af75-4911810c4067",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8f2736c5-01b0-4bdf-9aba-30ef6ce5a7ed",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4f8bf53a-b282-45ef-b1e7-68797e6f2dd3",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a0a114-eead-4910-9d21-51acd701599f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "92f07718-1418-4b32-bb3a-33c49afdf6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27139dfc-c0b6-4872-841e-7251247f1377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be030604-c139-4d77-98f1-f456d33a0297"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1bcc21fb-45c3-4d20-b47e-7d643719834f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c97ab8d-a5bc-4dd1-9f1e-146fa0165f9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7c2b848-712c-40e0-8fb2-85dbaafbd7c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6811e7b-c9da-4b6e-8865-5eb05db38000",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f4803b6b-7c34-4a18-bbcf-3779f2556d72"
                    }
                  }
                ]
              },
              {
                "id": "183d527a-b09c-4423-a2a0-cf94ab685547",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f33a99e9-da53-49fb-9d7b-a4a3204989e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3fe0070-fbd6-4bfa-943d-21f408ac514d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eab6a657-ff3a-4f4c-9f02-32243dc87180",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dbec331f-b0c2-43c8-8cf9-d4dc1d70ecf7"
                    }
                  }
                ]
              },
              {
                "id": "1b118c53-3319-43ff-8c91-42f1a330414b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04bcbd9c-e347-47dc-8fac-e1aae929591d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80e3b6cf-fd08-4e65-8b81-52fbc5487d58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7526dd1a-5566-49f3-b61c-678311a262bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca2c9b10-a928-496b-891c-5c4d27ac244d"
                    }
                  }
                ]
              },
              {
                "id": "e5287656-ee3c-48d8-aac3-035387121250",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a585e3a8-fa7a-4229-aace-1b088dfc3046",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c3ea411-265e-468e-8813-d8fb8e6aad45"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70b4af8e-16a5-4f2f-9c7c-666476f99b2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "665d37f2-b61a-4fb7-983d-a60ba6f35c66"
                    }
                  }
                ]
              },
              {
                "id": "c2e997b7-fad3-4663-bac5-2c679d64c9a5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb931cb5-ba09-49b9-aed7-1bad2b3b0a17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebe13b1d-f17d-4309-9c26-b8e0e91453c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50956166-c95a-41c4-b21f-aa62236a4e5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7068ddab-ac4f-4328-8da3-fee324d01f0f"
                    }
                  }
                ]
              },
              {
                "id": "61312b8c-3ed7-4d69-9553-a740168172e4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f07671c7-d505-4170-ab9b-48bdbc97534c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38d8a4e2-ca37-4c02-bb95-39384e9b9e82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe313f28-da49-4e33-ba3f-f895365e909c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9f95932f-1649-460d-88de-b311ed6ff7ad"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f9f33f0-38f0-4df4-ad9d-38ee2985ed57",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7735dc1f-9e6e-43be-a981-8c7c08e4ef74"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "08d46428-325d-4639-81b2-ecd2ae283abf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6d2b2ec-0780-4041-acfb-88fbfded3c04"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69eacc57-007b-4d57-97d9-8009783853c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2f39f609-0f9e-4abd-85ff-77b3c30fadde"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "832189b4-a9d5-4a77-bfee-8c65208e26ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c23e4a24-3857-4cad-ac83-df17f27da060"
            }
          }
        ]
      },
      {
        "id": "442054fa-604f-4393-89fc-b3e6909d4d12",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ca46a184-12eb-4bc5-95d0-b75fb85eed2c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6dda4b2-a4f1-49bd-9d3f-431a2885d36c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a8ded45e-5415-483d-9a31-27e93e03ba68",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82023065-818f-415e-8fa8-ce3439eb6b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03edec10-3c39-4c8c-98b9-e79076a4e9bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d8cd45-71e8-480b-8179-23aaf625ee96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f894f4-f9b4-4369-9df4-5b0b21f6420c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036a6385-ad70-4c7a-a964-8bc47bf11417",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c9487d-a41d-4a38-95a3-13aeb8770e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7474b77d-b436-4a60-85e2-9f2561114f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6159e070-c885-41db-ae76-98300041d5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "816e9b38-f755-4782-9a3b-7e50dfd51477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3e463b-4816-494c-b4ef-bfe789990071",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86231a98-9f02-4586-9e57-fce8a94be85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24545f69-deb2-45bc-aadf-388e0f94b49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff1a173-c229-4570-a7ed-68adeb5a6ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d633540-f288-43a9-b19f-28228d348a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e92cbb0-1d40-4b00-8803-bb52d75f6bb1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34e30e9-dca8-48c3-9e16-cd1a640ad74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a31af6f-4c70-43e6-983c-cef15da65213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce5b26b-1796-4b18-ac52-c655345e7844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "488b4d83-41e0-4d1d-bbf8-b2ced1505b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bf9bec-cad3-47ae-9585-3971fc277b04",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a231b6cd-8288-4960-9f13-1292261ab373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c65359b-19b5-41f2-abd0-962bb7d9653d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5067c0-b625-437d-aa8d-f7a6bb05f708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa8530c-1f9a-4e85-b0d8-13ea5f298114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75792588-8346-4a60-b1ee-f971b2e2e3f5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53f14cc-74a0-46b7-a3a0-6d5aa902f2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0722a1b9-276f-4815-a6ae-feb92bc62de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97080f4b-0e6c-4425-b9db-e9cc924a3923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "edd36185-859f-48b8-869f-5a58182ad9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30690fde-85da-4b95-9308-1e0647d97ddd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c653a1e-d5de-4f40-8530-86848cacabd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d67b38-4472-4727-9c4c-3d9d550dcef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0fb407-5f16-416e-be4c-c81940c948be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "752f9218-057b-4d06-8afb-3fdc565c26c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3459a614-6b89-4b9b-b87d-a2e55214af06",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934d60b3-4e20-4278-b29d-1f813c980ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc7a787-b7df-4eda-b21b-bd3226b1db00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88076dc8-6386-418e-bc77-316175e6f699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf12a02-933f-4446-901f-236f53105ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b86705-6779-4993-bb99-ad3a20690cb4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f483fa-628c-42cf-99d8-3faed1c8b6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7152257-4226-487f-aab5-c468a266e9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbd05f7-0afb-4049-ac75-92f7a54e6c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ba58c5-24cb-4e12-a9fd-b92d14919c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdf423a-084c-4de5-8f1a-1888aa7692f3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45222baa-e739-4344-be75-294bac8f3c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229d7016-a523-4892-9897-b8abfff8bfc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653274de-a4e2-479d-b677-aa9feb85b4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ac8a50-93fa-434d-9260-cbb53018a55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adc03da-1c58-4342-973a-698edfb6fca3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9c06a5-a1cd-4666-bf14-fc9b335073fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475dae8a-ef85-4127-8f45-643d5992bdb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb1dd88-d724-466e-b030-1aea742be7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "38ab3369-f2e1-4a10-b53a-4325efb82c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c8e172-eff7-45c8-a7c2-c06e73509589",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600a10bd-fd6c-442b-9ef1-90100a0e503f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0d835e-c887-4797-bc1d-f37d506f847e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765655f8-b3a9-4c0b-bed3-55a155ddd45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c526ee40-d448-4a5b-9c8e-6c49b96102cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d41c0e-3715-4c9f-b16f-b922606fcea7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c187cf9e-2b8e-4860-afa2-ead78070dd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995acd5d-762c-4baf-b48e-a645c12c222e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f66d7f-7451-4222-8ef5-8d0f02221dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c92301-a91f-4597-9646-14db54d2d039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4bec49-68a7-40ca-aae4-350ed7d503cf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef68554-fd1e-4fad-873e-be5031c4f970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab7023d-644d-44f1-824f-fa726ccab5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efb0575-322c-43c8-855e-45c6a07f6e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcae7149-d4bb-489b-8366-6a83205ecb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84712cf-b0f7-4879-a289-ab837094448d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e460d5-3ae1-42f0-b219-4cb88f5bae6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2a2f02-1aee-44c1-86e8-ee2dec8ac5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4061aa31-af41-451a-9e56-ed2e8ace77f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e13a4d8-88b9-4260-9b03-cb897bb07da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66188e8a-a48f-4a66-9652-cc133191c25e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68cd307-ca98-47a3-8ef7-a869630b89b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe9b4d9e-a7fc-4c89-8b56-e288de279dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1645553d-943c-4844-8885-88364c4c780f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f35ecebe-2e95-40c9-b722-953198dc7b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23830f2-8d10-40ac-9663-588e90e8daab",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be24606-3607-45e0-a052-e7e3be208648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e995e757-2cf2-437c-ba4e-17f98760cfd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3405151a-22a1-4e13-af42-7565a34628f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b068efa1-a760-4734-bb26-d7e1506aff1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f12944a-1ef4-429e-9e65-4fcd78cb7373",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a29e44e-5119-4b8e-8d8d-327125800d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38554235-ee08-4564-aae0-4f6e1c564ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79f3cf1-6f70-4123-b951-6833d5eb27b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f25509d-4e50-4240-ab7f-93c0a50f804c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc020a1-6ae2-4c05-8261-c6ed2e5666a7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8dbe3b-2f00-4f33-a542-343443e7324b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb95a3f-b5e6-4450-beab-7dae4a97c183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071e127b-4c24-4e40-ae13-1f39f99bbd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a06ef82d-137c-42e3-846e-7206d28f7418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33ee03d-afed-4cb7-9209-6a840e579f21",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ffa58c-d441-45a3-85d6-a79318088f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767880f0-952c-4fb2-b7b4-f1316bb9ac7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad202745-c433-4fe0-a011-06b065889939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5865d276-75e8-4051-8198-bc5d53743e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb17034-3b65-4a7e-9fd7-0b4024eb45a0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cfd5c2-09d5-4b76-bacf-979420d0d1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93dfb175-4273-4e64-883d-719fa67bf87f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766c2c48-46bb-44cd-b82d-efbfd93f826e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7c6f74-1ffd-4234-aae6-739d93267a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4c7e0d-82b6-40b9-9a3e-5772987df12c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c460bc-75e1-4ab5-a177-b4d42e9beffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969b211f-07cb-4749-b0be-8b705af651f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4d8a8a-bc03-4269-89b7-2bb72f3f4d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1320781-34fc-4bdd-a891-251a499d767e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e19ba31-8352-48fd-8baa-44e212193fed",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b05111a-8900-4e7f-80a9-f6f57194acbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a3d781-fb88-4845-aa09-6d3b2a0ebe52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5d8ae1-58e9-48a1-aa4f-02589f96f79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb49d94-544e-4062-be2f-b8b93b3f620b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34986676-7ec2-4e36-8909-e41fefedb72b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0da015-2c6d-4f2e-9e84-0065eba2743c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc726a3-83c0-4568-b77c-cc02d62cf35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a443b124-6731-4cd8-90d8-397f9e4c824e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc221cb1-6424-4716-9940-451f7b0c4912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bba46db-d692-499a-9fec-0ad521c2981e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97e836d-ef36-4b4f-aced-15b6bb964a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3699a5-d385-421d-a688-fe8c9259c821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacfdaa3-3e75-4598-ad72-581311dfd966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04759519-d2eb-4744-86b9-285f41183e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80677eca-02e1-4407-aa4d-6dc7e0e75ee6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5aba3f-f470-4e2d-8bfd-baafeee16e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d613738-5bc7-4104-9106-b44a1138cc61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed090e3f-ef2e-4718-9118-eb2b7edc8a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "031de6eb-aa8f-4685-a1ed-1becf5e17463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e116a9-d476-4745-bc2f-b8dc374a878d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2a100f-72fb-4e2b-bc45-85bd2e9efab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c75004-c71e-4fdf-ad5c-6e1ba961426d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2f2f20-bb0a-4a26-9b3a-2ee1fb0299ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc5a63b-f9e4-4bcb-b1d1-5bde56355270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd33b4d-5fa9-4bba-b403-2bd60ff3c896",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b545d32a-1354-4586-86c8-26861e90a2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f22d2f-4e5e-42f7-b627-9cea51eb1186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9213faa-ef81-470b-92d8-9f28e206fd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8272bf95-554d-4d15-a9b8-612b8ba2faaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acecb248-cc43-46d5-8897-745230557009",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d2301e-0ef5-4226-90e8-e74574bbee76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a19437-25c2-4264-8249-3ad8e89a2555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc751c13-050f-4336-abad-f0061824bdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a031920e-bbf3-4b6f-bc54-0ef1d7708a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7de4aa-1d18-437a-aca9-b7940bc2bdee",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8c60b3-ce2f-4fd1-9d02-de476f4159e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b0ab96-5ae4-4aa5-bcc6-8fd5dad74624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ae815b-328a-47d5-93ae-454c2f2272e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7305a72e-f1ec-4b8c-8db3-2610dcc807c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ef0c7d-78bf-4aae-bf2c-5379b06e4895",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68558f01-c40d-4c30-8349-68c72d6cd683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a1756d-16e0-4e79-8764-49ebc57e0902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fb4ab3-2fb8-4814-adc7-10bedbdc81d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9676a12-5eab-4f92-bc9b-75eccb0f5971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0294fe1e-866a-4f50-85e0-629df35ae04d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41544d0e-fc84-48e0-8667-48a1eb6dc145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491ea059-6778-4b24-9adb-d6bd0fe1fd47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82476eba-075b-4fa7-a52d-2dc2458a92ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a61e220e-8764-4d7c-8248-000973828dd8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b55a22c9-3a2e-4081-bd5f-b5cf51a83b47",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74f15d97-c056-47f5-8cfc-fa544bedbc78",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe04819-2b5d-4249-b510-cb2de5b0a934",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d3fd7881-b419-4daf-a09c-2925e433025c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80293f91-8ec0-4ed8-8d38-c3263f7539ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "275bdccc-1c28-46d9-b74d-4ccf65f406b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2491b78-647a-4243-82f9-db6d4c3d09d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "660a7f20-ce88-4b8c-9c3b-bb8b206b7251"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "868a2e10-c4db-492c-9df2-a80ddb7206cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43c175a2-22de-4552-bcb5-d9f58cd9eaee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f11db24-0eb5-4ed9-8f2a-4d2347d9ee54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f921d666-783b-4d90-8b20-78751d35c976"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e308d04e-3eb5-4ecb-8c41-6ed4e15a080a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63551740-8652-486a-919b-28d7ac940180"
            }
          }
        ]
      },
      {
        "id": "9c3f37e4-6e1c-4372-9bd5-d9f14b0fe2a2",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "60ec4652-5b01-4441-a6c1-711ebc640c69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28458cbe-894c-4a72-841d-7bfcd7bbb961",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8a91fc3-96d4-4bf5-b1bc-3e218aaf1e31",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e77ebc5-c551-4f98-a391-89ec03efbd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50472a3f-6a4f-4408-8b0d-a96244ba1fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f6b9d9-4270-48aa-b3e9-4a7f7bfeb8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0276bf1c-dd27-408f-91e4-9ddd35f5f59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47ea828-ec6e-4fd6-a694-6d0c6db281f5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6fb3ff-6719-485b-9458-03444a315308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2cf975-5d1f-41d3-b799-5d1602129347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4283dee-93ae-4b36-b08f-7559b3809dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "911a863b-c6d0-4fe0-a52a-3e926d8bf06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158b16f2-b790-495b-a6a8-46efc7d2bfdd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fe6b1a-c47e-43d1-8786-e794aaf434dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46a0e0a-ed94-468b-b458-e586623693fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbf3f9d-2663-443d-908e-7c1114d6a5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0bbe31-74df-43f8-a514-9cc59fa1c713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16180fe8-3221-49ba-997e-dea9866cf51c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01693a78-bf30-477f-878e-f9258f075acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf6a135-332f-4e94-9379-abe48f075c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aace6397-f8fc-43e8-ae19-9c8e9ba5873d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aad198f1-5a10-4902-a805-d2c80557eaf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c1a237-2e68-4c94-8f24-212d1b2ade5f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f537a41-22c2-4829-b481-ea13fadb78f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb7851e-5718-4030-b4f6-615553f8201b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc86be6-5caa-430e-bff2-63a685c7ffef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6925e04a-9fdb-4487-9896-e8658b44ef44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4544630d-23c7-4f2b-9cea-bea5763246d7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3928c141-8d59-4b8a-8c84-4dd5bfdf121d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e9bde9-62de-449f-b4ab-faa36e26d9bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6090b41-ce12-47ac-bce7-3849356460a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66769d60-3a2e-4d2a-9303-9a04009f5000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6d5752-2508-477f-9017-cbe4eb01c90d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c99591-6bda-42b1-91e7-7fa98aaa0c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f72cef9a-8a4d-4b89-afb9-343f7862105d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebf2e00-9144-40c6-94df-838fa7954b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0def3195-56f8-4844-a11a-bbebce79b762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8fc880-a152-453d-9976-1d0706630f3d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afd37f9-0881-496c-825c-4d8d4d947619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553d4376-69f9-49c1-a661-4c0c80c63a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d9d6e5-e80b-46be-8f7f-d8ca1c14ae92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c1b4e4-6d62-4626-9c82-2be4d92da1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace7ffec-e437-47c7-93e7-4fb4c9bb49df",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ce83cc-e17b-4c95-abe7-58aa5767135b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706684b1-b988-44f7-8473-c448034c1486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8182ee8d-263e-450c-b65b-b9b5da16361b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb4ee77-44aa-4034-9ac6-4ac96d5c5c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06476cc0-7c13-431f-8ce7-e40cd91fd2a7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90b12ef-6037-417e-9736-55fee7b40433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d42802a-a1dd-4b2b-b0f3-1f8fd45bf79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2c8471-ca71-4b49-bdfb-7c0ab3ea1f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65c56e23-b181-46bd-9d66-50bfc68adffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050d4a18-0a5d-461e-9c50-9ea243b21c5d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7b0051-bc21-495e-9ce1-b3f084155384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfc03b4-db48-422f-8657-f74c0bb36d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c25969-c2bd-432b-a9f3-a93ab8665bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "05cbfcd7-f844-41ce-b421-eb8dbf1d0a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268fd489-868e-4b99-a496-65c6ce40ca8d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5cee9b-0d53-4f1a-88a2-6d3a18126e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae8b226-deb1-4627-bae9-cfbc6bd0394a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34a7674-b957-45af-917e-bcbaa7dcaa3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74aa882e-635d-4b6f-8b60-8570ed92de1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d1f392-b469-4e83-aca2-4b131b34ed62",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddc0cc8-34d4-4d5a-a8ac-ae5bd85e0c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9f5b1f-7366-430c-b8bc-d5bfafb20aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a84dcc-cade-4550-a03e-f81aaab8eaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef63278-24f9-4104-9ab4-0f8fcbf53c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5690698f-edfa-4bdc-ab7f-f5b799066d44",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a044f6-52ab-4806-b483-7e52ca3df22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4444ae22-1cf4-4f56-8b21-2a794fedf2d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd8a20f-3f89-4f66-8afb-408d49a3155d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8afae12-7ca2-403e-8e7b-97f651f5ea6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d05f51-f35e-48dc-8171-deeee19ee0ed",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8139fb7a-46f3-476c-81ae-38d7708fd522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04459956-bc6d-4b07-9066-20c52b2617b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545c0367-228d-471c-96f0-8cfeb053a808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "761f397c-b2ee-4c9b-8bc9-14085d0e94fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb54f03-98ea-4fbe-90c3-80f36e06f979",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760297b3-09e9-4ac8-b5fb-d48d3b1c55ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b74ffe4-cf99-4d68-be88-0cfcd1248ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32193764-42e5-4fcc-b61f-9f9bda8828ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "30721671-db0b-4967-8b65-011cbdf1372b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e13902-2fcb-4c15-898e-fa36f3b60c3d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00b615a-87b7-4305-a73d-73e8b5d2b169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2489caab-dbc4-4b39-874d-f00f1aed307c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a938841-c2fc-48ca-8bce-76919e921333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aac67984-4b32-43d8-8624-eae3792c6fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68ee4a0-1b1c-4bc9-b738-9b96bae08355",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d774724e-d2f4-47a2-91f0-ceb5f049684c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b91270-a746-49b9-8ebc-2352896d49ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadd6d87-fae6-4c29-856f-b88e2cccfa09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "20cf59a7-054c-4ae6-8a90-ca8c6963293a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3258563-ef10-41d4-aed5-a2bab67ba6b1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d995433f-16f8-422d-959f-b1caf06b1973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0bb3c43-09b9-49fa-b4d1-099dcf12e564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e25d958-ab2e-445b-902b-1c4b424348cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d693299-a6ab-492d-bb54-98ed3da4addb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886e0eaa-a02e-4372-9bc1-15d0b5156e6f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72ef130-2efe-4fcc-8395-499932b993d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678a6d97-1e4d-45a4-b0cc-5730ffbf9c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a942eb3-e769-4f34-95d6-5d2238373f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "526ae0c6-34f0-4dd2-a6ee-625a11f673cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f1c678-5069-4db8-a89d-d01f64e75a37",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175945f1-7bed-45ac-93ba-8aa417de7d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d8bde1-c2fc-4646-b5ef-2da6cfb691dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdfb1ab-52e4-4f06-bd30-a85ba5b2de9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28745a63-1666-41e5-b70e-9b19d5106b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee9e218-2a42-4e21-8cb7-faf4fe01c9ab",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad10080-ddf1-4b27-97bf-77435c482a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523ca936-0a4c-400d-b570-5d69957e0351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6933fd8c-3846-4379-9740-61b66297679c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bbc5dae-367b-4da4-a96e-60cb4f1a834f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7772fae6-46c7-4ce8-9d7d-f99f058d1f22",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cbc3ff-50a4-4925-ab56-ce5f293683c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514a2782-6a14-422f-9bd8-ccb2d4b78518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acfe26e-2566-48e2-871d-3c37b001a99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c889776-f34e-4cc2-9f0a-c9bf22fb07d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d28d49d-ea71-4d97-b1e7-1d38d827a305",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc4d55d-a4bd-40db-aea6-84d248840daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfddfe4-beaa-4245-8f5f-9e2fc96bbd1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535997af-a56b-4a11-aaf9-b511ee6712a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6bed0d1-b253-4328-8531-d9a2fb0fa045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5e6149-1df9-4a98-8448-49decafbd7b7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c399d1-93e4-461f-aa52-068e87bc620d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb7a281-cdd9-43c4-99b1-2d46d0c5055d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12725fd0-c5c3-4b90-b07f-30206ce52a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cba9dba4-a05f-4d67-9915-de6398857cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133ab44b-778b-423c-8bf3-1a8576c992a4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3d204f-067d-4782-8793-95f387eb58ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbb6679-3aeb-4fea-a1a3-1bfbf151cf6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2035c2e-8338-40b2-aee3-bd12692ffb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f30c7e2e-6f6c-4671-84fe-66067471f52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe0912b-c374-451a-a45c-896b16f4ed82",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a0041f-dc51-4052-880f-bcb5c92b46b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9c7a30-5a10-4e59-96eb-fed1862400b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f60b980-f353-4724-8e44-8402001f599a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7a01b9-4616-476a-b6a5-9ae3753cb511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2bb6a6-a77a-4db8-9cb5-cbf81c6c86a8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0fd9ba-0b75-4734-8235-2bcb700dd833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b333e0-91df-48df-9608-1ef662f4b4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44059a7-3ce9-4735-b383-26a578ed55ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa814d7d-6a9a-4608-8a12-85ce8ed77c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85453a4-d6c5-4da2-863b-7a21a9040096",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8584a54-de68-426d-ba5c-e884496d9ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d57984-0355-4abe-b39a-48dac240aa6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5523b44-df44-4b87-84ed-c89f6f1cf4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f78d910e-bd40-447b-aa8c-ae9a984c0f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ead85c-e1e1-4e66-b54d-cfa49902cb7f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197e9955-af53-43c1-93be-12ce8a4524d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b15137c-1391-4492-853c-665e1cde52e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9715d7a-d85b-4be8-98b6-01689188f642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6220caa-65e9-47c2-a00a-6e880004d120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97642190-2c00-4321-9552-d10380415b71",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f05a22e-916c-4a79-9a19-3bcc04fefe97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4fc2a1-d439-4b7f-ab8d-2caf37c65a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f76adc7-d9d3-4e1a-a6bd-253f8611c3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9333a4-bdfe-4b48-bab3-9224e7ddbc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d8934c-e587-45bc-90bf-5c8445e6013e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d717a4dd-bc01-4655-b1a7-5fd18007b20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b012d3e2-7bc1-404e-b80c-692c83a4e06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76b2fd6-8048-4baa-9da6-a82d84b99703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29e9b982-aa1f-4770-bccb-60dcab457010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1224dd-479e-4050-ad07-6aa8c2a0e9e4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddaa073-5404-4b80-b31e-a1a24008ffc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a87fa0-5a2d-4a76-af00-f365ebf4771b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77441b2c-1fce-423c-adc1-8c0457b3ce4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14efa8be-59e7-48bc-b524-b64b67554639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7a1908-e93c-4a21-8196-e167ca7fbe7a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e30f157-1166-4a6d-966c-6dddf9287971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba226183-c26e-4b01-8a19-aa9f81d6c8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3c5d90-e9df-4cd7-83e4-dc2483dbc4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04004ac2-f6fe-4344-853d-e612b1356218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ab8c5b-9bea-4525-a847-325ea3853780",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231e3a0f-1678-423b-8c67-acdd974e3985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36324f59-8129-44b4-b7d1-3a8f2703c7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3779479b-e0b8-4ff5-9e9e-07b8ad5fa692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca406a94-c170-45cf-9e45-064d62ccd35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2d8a1f-1bb1-425d-83cf-4e674b27b1c0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f69502-35af-4191-a223-37770fb4a758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2efc28-2f42-4a8d-b4fb-24fd92bfb655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ff4025-d836-49b2-aff7-11578d414280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8b54ce-0658-439d-96a8-df60ebfb806f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc14794d-804c-48a7-9d07-0cb580bb0825",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a347777d-aee8-4af5-a3e8-b6426a30da88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c33d01-a681-435b-abd8-e6f0f2c6e0a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0838353c-535f-4b3b-b636-42bf020119e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6701b83-9648-4a63-b76e-f97b7c5bd394"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5d0dedcc-f1dd-4c74-9a7f-3bb3cefecba8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af852dc5-9702-4c24-9858-ca3e27b105c3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be045ec-ce7e-4d19-8d74-e630b2a26f4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "33166e9a-497a-4e22-9647-fe7dbf6ad4e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef2cc14-c8ae-4a27-80e7-59073b1914c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fcc94bd-3eb1-400f-a47a-58ff276c2474"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2ee8f96-8f88-4046-b86c-159208bd9930",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46286712-1d86-468f-ac24-cc52c7452b6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e05a13b-cae0-46a8-aac8-67b8dfc91c4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84742818-e6b4-408f-85ad-4384f5334764"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abfd4965-4872-46ef-bdf0-b1c63fb02266",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3c1d46c1-8145-4525-a4d2-19c6d22cc67c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60f074db-bd19-4b1c-a12b-25b069919244",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8698a0e7-c8c5-433c-a870-0d2f9f7b8a88"
            }
          }
        ]
      },
      {
        "id": "f093053a-a01f-473b-a2a1-1d7599f10940",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fbc45392-462e-4c6a-a7c8-0d05bedc6073",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a27981bb-fbbd-40c6-804f-b71f1fc97d16",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e4a22320-61e2-47f1-9277-d9bce2120358",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b856b0-e595-498d-b6c2-04427f0214ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad155585-da02-4c77-bbb4-c125e3629386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b702dae-de1c-4318-9313-bb7ee830313f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb303f82-f7cf-4678-aabb-22dde8d103fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94a368c-7b41-48ce-85c5-c9f29ad2c03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde8d842-443c-4267-95ad-8f5bb0a1dcc2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0e9f4b-6313-43f3-81d1-a8d40cc762f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d48f1a6b-ea96-45da-b373-594dea1ad44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a4548f-a6f0-4f6c-8a19-7d1ca085c1fa",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315603b2-e602-4233-bacc-2245ca5fe1e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889d80df-7576-4dc2-949b-5eb395cec42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463095ce-074a-4273-a730-ac2e2dca1893",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff61121-078b-4ae3-8f3a-4cdd5e549aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6180dfa0-9b82-49fb-9553-45a099d546a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ef24e3-bcbe-4d1b-b046-43b6a30776f0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e91224-3aee-4bae-94e6-fcddcb130369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2899ba82-a500-43f5-a779-d09bbff8420b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f70a54-70dc-4a1d-8507-54c2a892b466",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e58c99c-14a6-464a-8880-e81060d580d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8692138-50e8-451e-8df7-4b79f53cea71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab5d372-5fd9-4ab8-a8bc-b91c1c42d9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b64bfd5a-e6b7-4707-88de-d34ad1e77603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916d1670-f1e4-4179-8def-c8538e0adafd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd297c6-8d95-4977-8e1b-89982692d247",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3f5e2c8-3f64-48b0-bc2d-bb09cde8ce57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f966b8-871d-41e7-b145-d1aac4c90692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a9a13c-271a-47be-a8ab-72d9ec1d3233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19775cdc-81b2-49c3-8037-ee51015099a6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f33236-7c4c-49fa-aaed-b2f591c54e68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d92031e-c775-4636-97ef-ab6c8a35e3ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9933e434-d3e7-402b-9f73-1900790ae27d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ef2176-0c60-4d5b-8696-94069a39e158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465c5a6d-d3bc-47c0-be1d-4120c81ba288",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea288fd-9e44-406a-a3b8-9898bb7ce8c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ee2caaa-6e47-426d-b09f-88f3453b3586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "723a7c05-5430-4a84-a074-512b691d1f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7c707d-ee4e-4ff6-ab12-adaced1467be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ee0790-0cc1-47a8-b280-472a21508a1f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082c95aa-95e5-4624-8fb7-386e00ef2251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b87f71d-133f-4ec9-b71e-d6e160e1c07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257e6521-017e-454c-a640-bfc79279fd90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7f8585-2f15-4d62-94c9-fa813571c07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d65ac9-2c6b-491b-958a-618747c0b94c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294ec7bc-1a98-42e5-8390-a9476e5037a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922011d1-0c36-4225-a122-3e2c231a2da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "275c992b-aec0-4ebd-8241-ca9aaf569b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0c7942-5e0f-44b5-89f8-35bdc2c1f851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424572a0-f991-4d44-aaac-27b449970627",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433e7520-725d-41c7-bd41-3e07603f32ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "749ee53f-18c7-4631-8b86-5c6a1bcc69d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c5f456-c3fd-4568-b923-3d1d2da6e6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7b484d-0f28-4583-9f44-03968aa3dbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1340e7-fd5b-4931-bc4f-a42ada0414b8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7795b378-43f7-4431-8630-69f700f2c473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aff174b2-c322-47e5-b6e9-ee8e1ceebf04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa25a66-01a8-4c4b-af85-94e979954539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86434524-990d-44e8-be03-2010f6be624c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b75829-faa7-4c34-9d70-17ccbf5b0cb9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f476245-d643-4083-8b25-9fc6fa5d4da7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9621ddbf-ee98-4e3d-a0cb-5fc96218488d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3156ccd1-33d6-4a38-a5c6-216ae6739df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c138ff-b9b1-4a38-bc06-8ca153393b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bc1cee-0f77-417c-bf76-c6ccbad2ea2c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469126ad-8c65-4525-935a-56bb5dcc2ced",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f77ba20-0f82-4b90-ba48-cf96a88f115e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b5563f-f91d-41b5-b11f-0f58d68c8964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce686d3-6d92-482c-b60e-44298259f3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db5e9c6-78ff-436a-ba56-9779bd3730ef",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbf1b5c-a1a0-4111-9cf9-b1af567ddf3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa4cede-6343-4d2f-922a-21439e8b2981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ca9875-22e2-4930-ad63-0129dd24c0e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37fea81a-535a-426f-826b-e8974b62d42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4952f1-0d59-4341-9475-453897273fa5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced3782a-817a-47cc-8ff0-61c5ce9f71bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee85465-3a56-46ee-b0ef-4b450fc49f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ff38a0-c578-4b36-91b8-03def4cc452e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b8274d-99e7-498e-a010-a4d85b96f1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d8e48a-589e-4ba7-a957-0fe962c5ca02",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eea6b98-1748-4c06-8e30-b1b8e5ac7529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ae836c-038e-4100-8a54-f39207172ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d017387f-24f9-44b4-a3cb-e87ade6dfed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4e18ab-664d-4106-ada6-d2b027f1e26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b98408-4804-4192-8df8-73c78db335b8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d14a58-f494-4ba0-b51c-ea84b0983392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b6c2ce-dda5-4863-a824-b4aca87a1523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7733d24-531a-4472-8945-f7f7e902a1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820e2721-bb12-4a03-ba33-ee6a0365d734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb90510e-27c0-4cb8-b37a-31114c0d0523",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2396ca-1aab-44b0-b66a-8a7942896cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d826e7b-8d9c-45f8-bc0f-456018df1ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f946b0-25c7-44c2-bb15-935c8ba9af50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31905afb-c572-459d-9a73-074b4394bd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e751789-d8b2-4101-a4ee-a8c49b367df3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10e6f06-68da-498d-8c23-cd320d1c07d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb77090-e2ea-41e1-8537-e3582cbe6354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedf1390-1563-419e-82b9-ea37c7ebae7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec0cc8d-9183-4b65-b102-06117045962a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a7d5ba-fc91-42b3-ac2d-9f7129cd7f10",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe7f067-f10d-4c89-a982-2d551a2b408b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a640f86b-9247-4d0a-bfff-87d29949213a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "516d14a5-01e9-4750-8fc9-8830e207604c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75953bf8-8900-4809-9c2e-fdbc3f771f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316cf559-0556-4ecf-929e-a430d490d3e9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab5b0ea-7530-4e99-90ed-f1973f7646eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1641dde9-48d1-463b-bcea-35febb879f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b111daf6-9402-4412-9dee-a7857a77c6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5b9c52-649b-4196-a59a-0ca0204fa3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f55b62-e487-4334-a3a4-6640ce77bb16",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8713fdd7-7b5f-45eb-a0d3-19a8840d0c9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec0f26ab-a727-4249-a5b2-a1aa7d3b235a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d0ca91-3fb3-4f23-a061-be3c84ff4cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c4a25e3-fdf1-4fbb-9c78-6989318fac04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08aa59d-153c-42d1-8425-0c803792a9ce",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd94df3-125f-485d-9231-499070f1458f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e435262-e6a8-4e04-b351-2c72a8b99251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a81294-4722-40e8-aeca-0184c42850d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349de8fd-1c71-4125-8694-8d8ebcf9bdf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636e4e2d-fbe8-4521-9f01-7c96ec0981ee",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1623e758-a295-43d2-b891-d1e6455ac6a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58f22e90-432b-4a61-b2f8-82af4721ac58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db073d3e-4a7f-4e82-88f3-904544f9b2e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c57da67-8038-42b1-948b-61abfaf77b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9641c5-5df6-4f10-9334-33e7a90cd335",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab51e8f-013f-4d85-b176-24bec71eac1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad702c5-d6de-4f3a-a8cb-2b16e209d347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24199e6-2204-4658-b122-d195a7e894ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c26035-caec-40c5-94ee-28897b6be403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370f7975-c1f3-4b98-a4ce-aebebab325ab",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5d8105-0e3b-4c9f-a0a4-7b7e29724969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b767b4d-09a8-447f-b3b5-5ebca13dfb93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af9b386-5e84-4324-93de-ca3a61d86774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241b946c-1a5e-4cec-8ab3-15cda5325e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb716de-dbf6-4458-b677-c1b221129b83",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db5d85a-601f-482b-8a21-ef4b85b8ebbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5167e003-9f22-4939-b4a8-0ede29ec9323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71578e3-5ce7-40ad-8277-f0fe45cf346c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5849309-1d8d-46da-a4f9-8b548dfd34af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b48f860-22c0-4772-b192-aac1ff15095f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1e4508-39d9-4c71-9dd0-60f655222999",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d403020-9e77-4b02-810d-35d1c0a2867e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151b09f8-3487-485b-844b-1165fa1b4ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c0e71e-597b-4735-b372-43fce8ffc2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d7fae3-bb94-471f-be2a-7eb9e4935ff6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c87969-003a-478e-aec3-577b24abc865",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b50044d0-7a51-454f-a193-9d815275b512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7530ce-ed51-4697-ae49-7c8ede96f2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8624812d-1c1d-490f-9676-d5697f08bd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0692ec-a548-49dc-9581-7516ecc308f0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4553d8-5954-4873-bcab-a85404a584d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c6f4ea0-e23c-479c-811d-77729902dbfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5e001e-ed73-439f-b7f4-587a32ddfef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf27a053-50c2-46fb-ad9f-b73af8a877dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7d8b30-06be-45e1-926d-0b72f6feff0f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa8c7f6-3336-4cba-a43b-0662b2e592c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "650b464d-68c3-425a-aeb5-bff54384a828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fb1229-8fa7-4230-a9fb-4ffeef7a7315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86527dd1-9880-489b-b3e5-e69930f3f7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7b8161-273a-4bc2-8f4a-70805710a41b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b99a0d6-25e9-4f91-9f09-8d054870dda7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa8571c-bc53-436f-a7b6-4ef6488efc47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05be8197-422f-468e-8eb0-fb742adb79a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b365a47-f529-454c-89c3-be937409e442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f667f6b9-1bb2-4ea2-8522-cadc38e4ebd9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9144d3-4559-4007-be26-d25863ae021d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b309fea9-4f3d-4237-b737-ea8d9ba3904e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa35e006-59c1-464c-b8ba-1ba44e5cb8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4df7c3-ec12-4719-88ca-cae2203249e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df895780-4b11-4bc6-810c-7c8808a5d82e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b45cbfb-dcb1-407c-a59b-c57719dcfdfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3db24a0-c877-4813-a1a4-1f34d961f72d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c517a8f4-ad10-4845-99d0-d6fcdab9af9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03148093-dd73-46f6-9d5a-c0f0a343be72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c797dca-2024-4206-b477-ffc6a76abaff",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0cbec7-0717-4b40-b52e-9a048d44a292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af30b4b-3743-480d-b236-0658031b02cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151d78f9-da51-4825-80cb-80a32772f606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e576082-a604-431f-a5ac-666ebed157ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03453765-a4fc-424b-89ce-8bb082c7ef72",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cfbb951-184d-4ba8-ae28-2834d25d7abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3311d71f-2a83-4217-9fa5-c189098f23a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58df244-38e0-4224-bc8f-d46af4538ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e76ac5a-dce0-4943-aade-6166fd29894f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc0d2c2-3ae9-42b3-b362-209762614042",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7d8866-fba6-462b-ac30-b85a37b63c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fdd724d-defb-4680-84e0-b2ab5035fbfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da73ec6-fe03-461e-85b0-c751d1ea60aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "789c64eb-ff93-46c1-9caf-dfa9be1cbf2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455aed97-f6e0-436c-9c2e-fa97eb4b0554",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210cec1b-a6cc-4e0b-986a-95fb5c3be3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c58838-8fdf-4115-b20c-6239e72bb96f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3116f84-87f5-416d-a895-5e97094fbd0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788e05fa-2c0d-40ca-8f86-3a1be50472ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9658b56-9e30-49d8-bc99-58110dc26259",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74756dd-2ada-407c-a8e6-eff9c7d20d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8dca5d-3583-4c98-9777-cd53c84afea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1816f92c-6fe1-469a-83d8-32016e8cd41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1358f5-ad12-47c4-8abb-682fe6109f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640813b2-9911-4ab6-950a-4317f7b449ba",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28c8dcc-3ed4-4754-aae7-c88b309acbe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5497f90-7749-47f1-b0ab-b3496f4c9c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8947f69f-8773-4bc8-aae8-279ac08a5068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e7ff4d-e4db-438e-95f0-80f34833cfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9761c262-0438-424b-8de7-2e92acb3201a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42da99a9-a2fd-4d14-9fa4-bccab2743bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a97046-365e-4c84-a922-05ca16fd074d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3778cb3c-79c1-44b3-833c-7708d2a9fa62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f8f7a7-c993-49b4-947d-b59d54e6640a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41942f31-b80a-4055-98cd-1d816f493d5c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f61578-15f9-49ef-8b24-1a316db7f706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f999bd8-a5bd-444f-998d-bacf29547c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebb2017-1fac-4987-83ab-8797dcca38b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f460b2c-dba7-47dd-8428-0c573c1912ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778653a4-5c07-4504-a100-962d26fd4059",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0e243e-3bfc-41b8-8ec2-bbb523fdd6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4474920-8118-4689-886e-e2909d3b5ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda04d4b-0882-42cb-a25d-e73c4dd8d813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29300a92-e2db-4aef-a0b4-3ea12afd21a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe69e92-e1d6-4bd7-8e75-38b24f54a61b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76407d0e-3dd2-4c16-9921-24936effa53c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b3c150-3d63-4933-b89e-8d382a93ec8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0305c2b1-f3af-4ae0-aea6-c7ec9fdff0a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3063094f-937b-40f1-b1ba-1875658a8185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7f9b0a-5d02-48e0-8fc7-8a29aefd259f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cdb068-6fc9-4402-b843-278b4334263e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed7e39f-96a2-40c5-a439-4f9e301c9fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2bd37d-6d93-4662-b400-452016f8bde4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8742ae1f-7fc0-4a19-ae3c-2372821e1c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b808d82-92cf-4af7-9f08-d33674dd381e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cd3013-eb49-4915-a7de-ad8bd7a91816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2468ed9-569c-4ce7-b89b-23475c958106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64bd5e2-d322-40cb-b5f1-933ee50f357f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45e6cc5-e7a8-4636-92e2-58c71329d82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e583799-7a63-4d81-9ef1-2d9669694856",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64b1a3b-89d4-48ba-b2e8-38f5532fe479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd444eb3-d409-4d8c-9339-bb44fe85b6cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93f6073-72a9-4015-88bc-ff43d4bcbe44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4d9e45-6a9b-45cd-9b03-151135776a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7072716-9097-4182-a272-5e90996867f4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc1e217-4730-4c52-9550-9303f56f8063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf784f6-b59a-4cfb-8a60-26c70efb9984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c11c8a-3ecd-4de8-a4dc-7ece41da3abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f616ea2a-68a0-4d40-bac6-759ded561543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32e28be-e3e6-4b25-abba-06410f011e0c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964a1411-a244-4abc-bc7a-0ea54f9f21a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00868eef-490c-430b-a3b7-bbbc48a79ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c91b04-3338-419d-a53d-84bc27c587da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b7dceb-1bed-4975-aa7e-2e8fa390aae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ee965e-e30e-450a-92f5-78c1924a3abd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42918ed-644d-4db8-b8a5-b33fa64e8a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e313f417-237b-4d9f-a143-5e54f84c313a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce70369-1d0c-4416-aef2-a3fc19d1a29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f95a3b28-b76b-4618-8f17-b666fcc7d023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca00d747-9bf9-4e62-a643-5fa4fed81dc7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b50262-5512-4124-9b83-edf2d8b7fa3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c987c8-f697-40f1-8147-12cdb8d12071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "586281d4-562f-4f05-8382-4bbd519a004a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6efd5473-88cb-4c93-862c-d66a5233c425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebe64cd-a8de-4b1d-bdfa-243746797655",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9543619-4a89-477b-b148-97fe404c1af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31880059-8152-482e-8396-90a3bd38f549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "810ae916-2874-40cd-bc05-37a2fff7d439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce32414d-9ce9-4444-8f20-79ccef36865f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b480a501-e2b8-4c01-8a61-86e7148299f6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9686eee7-6a92-4917-b236-ea8078395533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5782afbb-d8a0-47d6-b7a0-159f1c4372fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6384eb73-5485-4f1e-b364-32591e172fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b68118-cd2b-4faf-8ebb-cb60dd45cdcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06e463d-0ca4-4094-ae99-82610820c4ca",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6462f397-340b-4ee1-825f-ba25a989822d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41735f5-6473-45cb-b42d-93a455a9c362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c7a4b7-a06a-4fff-a363-5d0abf0f22aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee27627-fde8-4878-9d7f-f915a40f25f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f2da22-8269-4666-98e4-d32efc5b44b5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3189ce9-e695-4d45-846e-5b750309b21b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0805cc6b-afd3-4026-b427-39cba8045c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7645694-41f1-4242-be80-6944067d5509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce7b88f1-b63b-4ab9-b1cd-3ab6a317ab35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4c64c4-001c-4954-9bd2-17844486f355",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ff45ac-a960-4f36-9dd6-8fcc369149ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04aa48f-3253-4e94-9867-ed61998a77b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd39bcce-526a-44a2-a5a3-74520339d94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac629041-c5c5-4ab6-89e4-b396c1c77a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8463a7-6b27-44c2-b443-c89e79d1fa66",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2892dfd-734f-4fff-9690-50473e821c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f401d14-5666-4b31-88a7-d280be25cdc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84b5da9-5527-4e2b-a315-f1e74ef41e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb55a9fd-3495-4afd-b436-d075a7c610b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516269a9-e216-4da7-9591-ad07df9a3aef",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d56d1f6-619b-4783-94a2-9815d8e85aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b20e74-de0e-447c-a29f-6924df2e192a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "985b81ff-e9ca-4931-8374-38182d721aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9d7aed-a5d8-4a0b-8282-f48341338b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88202c1d-e1ff-4fcc-bf4c-de631e91beaa",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6ca59a-90f9-4d8b-90e3-a9a1cf58b452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb7bf8b-7661-4cd2-97f9-74df0ce7b1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de6eb45-cb16-4154-b040-fb7d91a045e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0cb44b6-88c0-4572-88f6-e62a27bb52e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de34f91-932e-4784-b27d-f1c0a9d3a5ef",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbca24d6-a85d-45bb-91d8-f41f3e655fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e9789d-0992-471e-929e-57b3b5e34f2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbe5d04-6706-4e9a-8405-c4c81dc4904f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c6c389-b84b-41f4-bda7-4db47f5f5956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230ed1f8-f3ed-44ca-b373-276fb10887d1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bc7862-f0df-42a4-a15d-c9f76d9062c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a04b34b6-082b-4ade-a380-ad9b3ca43e9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d477e1-6ee9-40d1-815a-2a4bc6acc89a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e0160b-5178-4efb-90e4-6c61af305d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d21bed-3e1b-4016-b130-91aecc0a53aa",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613f5118-dcb2-44dd-a75c-939690538c46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "613fd7e1-497c-46be-a108-a51346f4aefa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a449096-a5d9-474f-b6e7-2dd1deeeb78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42026cc-677a-4cb1-8dd2-506a4682fac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3df9e7e-f28b-4d8f-82a3-a47b932a2681",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24e7829-c21f-4cd1-a4ed-1ce6f9305c02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05eb9120-1fff-4784-8c7b-b64d77c0dc18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "060ae227-2555-4f74-9060-f7b7057f45a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65635527-d415-4ade-9846-e37f26aae330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91042167-c180-4694-aaca-d208ab8ec514",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4e3a57-6cad-4e66-a60c-e05e727a785a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1762e8fb-8b04-4bde-824e-215af40ef900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a8d4f6-79f7-4f8b-9a89-c88fdd33bf9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc9c5da-2b7e-4ada-beaa-dfc38bf9cbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f726bc91-157b-4b66-94c4-8fd864501dd3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a194b40c-6282-42e2-9500-4674a7a83b3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb7c0554-ffbb-44ec-b4c7-af17ea82c266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0873fb5-1965-47e5-8481-dc7c3a92a143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44885471-e7c3-4eaf-bc9f-9ad2ab954eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89f3260-7cd7-4b67-9b6d-b690e9c74451",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69170480-fcb7-461d-98af-ec0f4855c7d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "713a0e43-dcf4-487f-a3c3-93fa9accfca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0353358-5dd4-4167-89b5-d116a06546fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "992c1d23-fd79-4ed4-bd3a-0a35ce2b7d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b563ba-e9bf-4ee9-b8ef-808b540496cc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2dc975-83bd-4330-96a4-23d54c1d3d0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46d25d2d-6627-405f-ba51-14908e2be6af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eaec911-294e-425f-9895-6a5789d1e2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49eb1bf9-2251-4c9e-ab89-d9e707e7e3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c1ece9-8b31-4a90-9be5-3652b91d7c44",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e208b68-3fd3-499e-9945-c10e1c623736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "943eb34e-d7cc-43cd-adf9-a3ece7cf2aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51523691-d727-4c5a-a7a1-8ccbcdd6e56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b523fbb0-5466-499f-b959-d846854f278f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e4e795-ce1e-47c0-b336-96660ab19a96",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031f02ca-12b8-4f38-8e60-5000078fb795",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6daf2810-d3e5-4845-a019-23d06218a596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d18245f-dcf8-4221-b813-eeec02582496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235c467d-2c49-4fd6-9c08-61b0d9894cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d354169-60e9-40df-910b-7244bf888ee0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a071a6-cd34-4ed2-a782-a4e3d8940ae4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3198b1b4-25ba-4548-bccf-bd10a8871e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff7f378-4bf7-4456-bf3b-70be6e69497d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dbcfe97-7f6b-423d-a5df-5ac4a7a2dcf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb8b595-fa58-40d1-add3-2b7574088ea5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b14ac8-ffdc-421d-8330-0e134007c08e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "711db26b-ad23-4d93-8745-155b458941e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e13277c-556b-4b01-bc7e-54d0c7a1b99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532e0f5c-8fe8-4385-9614-73a2180d9ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0b78f2-3b4d-4bb1-8d88-b9354464790a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c124fa16-1963-4a66-a40e-921de52f301a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "646a9dc1-358c-4b24-b8ae-d90b444341ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d17b32-d4ee-47a5-9ec4-d6064c0abe49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0bdfae-fc1b-4216-ac95-4b1d8a51c47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b79226-1f80-426b-b295-0b18da89db70",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4cd69f-1b7f-461d-ade5-51d4db532afa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d6435f2-308a-4081-8c31-db9384e26701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56dd6bf-0324-47e5-ba90-2b9e3b3b8a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa06fa05-b1ce-4afc-abbe-1e65ce832be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b416e90-4ec1-4d86-a6e5-e20953bad6cc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4f79a3-4790-4414-9a18-652b8746df18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "733c3de3-4fed-4118-88a2-3ff24f944df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8dcefe-82dd-40f2-8572-52d62a9ee05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6165498c-219e-4128-8e63-fc1d8058bb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed5f0ea-4770-4593-990d-966e3c54d4d7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5c6933-632e-4da1-8f79-09a9bcf42d19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a450fe2-2f6f-484a-830a-726c9d14dcbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb92d6f2-d94c-456f-98b7-1d43a9c58b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0882f54a-9ed9-47e1-8cb9-e83c367af97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d24187d-e5ea-46e3-8282-1cd82322a5b1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01550fe-6473-4a82-9640-056c58182924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "185a898c-d66c-4709-a495-46cbde950460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ff0ac8-f6bd-433d-a9ed-6377ec37ac26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f588769b-a911-46eb-b6a1-d7bd3813fe2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8659cc1b-d5a5-49ce-b0a8-242f6e03a7fd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec81f29-598d-41fa-9156-da7549fe14a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01310848-c4fc-4d36-9aee-ca77ad05ea95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d77e1b-bb44-4e82-b191-8c0370570f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecba2bc5-c6b7-4ef0-a17c-23f80859a05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fff22c-5464-4123-a448-0ed140519fe2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117074da-131a-47e6-a866-ed736a3bc191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a4fe366-eb64-4a38-8c60-086195babfaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a015f3d-9120-48cd-96d1-32f52b234fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75fdeb2d-3f7b-4f91-8935-245ec2e95d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1fabf4-bff9-4150-b72e-cbf8f91c152c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2bca12-838b-403c-ad0c-b0ab35230675",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1d44e34-6a28-41ca-aff3-db7204a8fda2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2930be60-ac18-44e8-b6db-f1d417d8d8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e4de6e3-1413-40a8-837b-a481565869d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d818f03b-3c40-4ef4-ab15-03b82bf7fc6c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f455a0e-3a00-4f62-8be4-ecd881fc3509",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3637e189-310c-4164-be41-df80a621b695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab0111b-f936-4ef4-b922-da14650a6d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d1753e-3466-4fc7-9f37-28337836babb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde4f465-edff-4829-8071-ae60abf29f3a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6245da2-e196-4419-808a-51ec51476766",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7adfc38b-0c7c-4fb9-81f3-e639bbc7696b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fd666d-b6d4-4550-bbf7-4e3fb07a93c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d404c4-bd7e-41b3-a226-1b028fd41baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38061822-7ec3-4a71-9025-36d5c8d645bc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e055214-9521-49e5-acb7-c117f00985e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50ba28e0-3c46-4508-a679-c004a16e9b50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfbca37-d882-41a9-9993-c4e6fa9b192b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f100f48-67e1-4aec-8b72-837852f8371a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b11535-ff14-4b21-9147-a18b193e0771",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f02aead-7723-4e3d-ba97-cbeaa5742f6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edc72e1e-f644-430c-9c74-517ab230ddc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d544856-0388-49b9-b635-3592dd19fdf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1ebc39-6059-4911-a295-c25ec20c8118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8ea39f-9c9d-4605-a4ce-160a23af0974",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cfbd74-e60b-4879-8083-5b19bbe2dfee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef57a659-c855-4192-b4be-e08a9999e615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42edf5ad-d084-461b-804b-e3af4df100d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf0a8e29-67a5-47db-90cf-56e72075b9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8378f6-f7f0-481a-96da-1bf1e93eff48",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbc8e72-8cc2-4ca8-ae7a-67fce4ec422b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2bf50f8-5db3-42d1-9a0b-a83cb24fb771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd789444-9163-4819-8010-770a2266bc10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d66f7a6-a9c5-45e7-8225-5d7764bc4684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8ff02d-1178-486c-9db6-6226666c41d8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb9fad6-4918-4dfb-ad9c-5d72bbe09597",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63ac51fa-afc0-4fbf-88ea-94aaf589da17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7bd780-56d0-441a-91bb-ebc0c4b999ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6eb5392-bfe6-4ebb-a38a-c61b065f80d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1cfef81-f4f1-40b1-a343-7846c0a655fa",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09012022-931e-478d-984a-a46b6d0a75da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44abcf8b-4f73-4407-8c90-361b25116a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13dbe76-1b7d-429f-b572-924477954bb0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67b93ef-d3b1-4535-968c-05dc74b0a700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989160a8-9608-463d-b89f-e1aaaa1b141d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed6d808-6df6-442f-a0c5-83096cc958ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "691d6ac7-adf0-4db0-9e95-a8cfd9537c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b8040c-8001-45fa-aae7-127f21a4b7f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0302c408-3d2a-4dc8-a12e-fea941bd1ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a37c1c-64ad-4e2a-935f-e7728884b186",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e4d30c-4584-44a1-90af-42f41200c30d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9817adce-24ae-4c4c-b3e6-88c796fd5b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44a06d9-5c0c-4d06-8882-74ef3e30e2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9b2244-002a-427f-8349-e7c8c609be11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672ca7db-3cf2-4aed-8792-9ed487b0d45c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ae0306-ccad-4b6c-a638-fe041b0bcd46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e96a00a-fa88-4df3-a19c-347b4b9b110a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29db1947-272e-44e3-9502-62dc2468afaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d89cc7-60ad-4163-a488-c69f1e7b8b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43afa054-7ffc-451b-8326-36c8f5d5e9d0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d7e788-63d6-458d-8053-02fefaacc695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "870a99c3-4314-4f06-8f28-cf2b20da48ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf833c0-9d16-4342-a34d-58d961e632a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6e535e-c626-4bf6-9fac-980771d79141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d8f25c-7bc3-477a-b79a-4161c2cda5f2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631267fe-24d1-4a79-83ea-26f76486c9f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2014cada-4c5f-43ea-8a44-b55ad76623f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "097191e7-8e44-48ea-bce4-57f5ef43a0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc4a9a2-1d53-4a90-8e15-404d2e16c02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5348c741-d6b0-4dfa-a8ad-c9807f4cc0ff",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fccd7c1-29db-4bbd-8cb7-633d819457de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0695e531-485e-4f56-80b3-b72e2b8102a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3848d5-375a-4250-847b-8528fc5d23e9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4b3a16-f74d-43e3-9559-138f47cedf3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb3048d-0b08-4770-827d-30c9ae0e2208",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f02e614-b434-49f6-b291-8832dc97b5b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "416c6297-addf-461e-a4a1-736b11f9ca3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d539eb3-c035-4f3e-b269-89cd7cde3694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98142c25-4e0d-4c6f-8d1e-07518dafea64"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67226fff-85fc-43b4-a934-bbe516d1895d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0515e7b7-eeab-47dd-b68b-ee28d1fecf6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80e3716f-c410-4dc2-86eb-2518db8c127a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63ebc8bf-a203-4cb0-981b-15f75ce594b7"
                    }
                  }
                ]
              },
              {
                "id": "c844de1b-0bbe-4cf5-9947-6e4f341cf930",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "594bb112-52ef-406e-b35b-f52ade7db494",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cb2370-b613-4cfd-99d2-7b631d32e0ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0c828ce7-0574-4aa8-a7a1-437262598a36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b2b671-c22f-4a20-b128-e486a1643581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cb4fbe6-02aa-4e90-a11f-219a6476cb0b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a890e27-bed4-4bb3-b00f-58dc824823f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4b2f91e-dcfb-4b4a-8fe6-152a39e33e4c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4545d93b-276c-4d90-b1e5-6c4ad72801b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53406ff0-ed7f-4ed9-a2d8-2586abfa8e0b"
                    }
                  }
                ]
              },
              {
                "id": "412ea867-b3b6-487d-a359-b8ba20fe7e04",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "eb342b8f-b28b-4c22-bbc1-f359ba5a0761",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e50622a-f7a2-4c0c-98e8-57e1c2acffd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "45afd871-ad1e-41c3-b036-90340751cc39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadda928-65a6-476c-a4c9-8522a2a35ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed363121-baa3-4120-9b55-aee6d06c2e6e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "993828a7-3c1b-4ab4-8092-2a72c699bd62",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3dfe58d0-7db1-4a90-aa02-c0d73729ba31",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f50a470-6633-4d32-98ab-dc2148d2ef1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b0184d70-4fdb-4945-baaa-e85ddbf65701"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7e93a19-52bd-43e8-bcb2-c11f01335292",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab15c5d0-bf45-4a4c-8b93-784301f0178b"
                    }
                  }
                ]
              },
              {
                "id": "f7655bf8-a91f-4754-acb3-46191e8aaef9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "911b73ef-930a-485c-8629-8cf24755736a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8ad0cb83-0848-452f-80eb-7b5cf73229f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac7163d9-bdd7-4077-9520-21691ffd51a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e248818e-2157-4ca0-94b7-80b8c7f62cba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "903793e3-9ba0-43c7-a0d6-1b516f124f75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0f606e5e-aa69-4434-b68d-206556df5a26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38a1f4cd-2804-4777-8c76-bb6567eeaa41",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b2f109e-1d02-4a2b-a469-661cc9a4956f"
            }
          }
        ]
      },
      {
        "id": "26348bb1-b22f-4138-ad9a-b477fb9e6358",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4e4f2d7a-742e-418d-9c46-ebd4b42eaf2e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "addae2fa-5d97-4842-8d61-0f2f627036af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5adac616-ae6d-40d2-b667-7417fc0b018d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982fd5c3-c0ee-4a3d-9d17-803537a65d77",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "792db102-056c-4312-a435-13e3db9f429d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6924170-0b84-42ec-ad4e-ad695c415837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ba3296f-5fdf-4d8d-a300-cb7fbb1a7f20"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24b925d5-5857-49c2-8dad-9fa83e1f2da9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32744079-c4da-40d5-8a0b-56ef28aa236a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4ab3528-a058-465c-9c0d-bb19a357bc1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2d0ae38-792e-4f88-8aa7-493e3e50476b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af1049f1-ff87-446c-8a1b-cd558bee4b5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d44c3846-3c63-4736-9a4b-7442c6956982"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04049359-8fc6-47be-9c37-72a29bbf0cf5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59ffe0f2-3895-46a0-b4c2-1ff0a465ce42"
            }
          }
        ]
      },
      {
        "id": "3a471d24-c370-4ad3-a7d3-ecbd330de14e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1cebf44d-a563-4896-943e-f3b446d7dd0f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35caf38a-ce63-460f-9a37-13f76ca86007",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b1bdc98-ccc1-4429-b792-1c38a340be3a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f93a74f-f1ff-4a95-bfe9-d130e3611b9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04a97850-25f2-4264-9bf0-6d76a18f7f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d953808b-4b42-4a3e-8176-fc3645839318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a4cc48c-c064-4e7c-bd53-f96f66290561"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b472f95-704b-4422-bdea-b09938e7f6a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35c86492-9835-4cc1-9262-f8db631c4da6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "90cb6fc8-f164-4fde-a26c-95b45ddaf44e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6602397-56e4-4db4-a40e-48279b6e90f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07d76da7-4bfb-41c6-b42d-57098e0fd555",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "caaa3930-b607-4a00-a2de-56738571289e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3bdd9634-16bf-48d0-a6f8-c55ede64f5cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ca16575-5aa7-4235-a7f7-9288bd5cee0c"
            }
          }
        ]
      },
      {
        "id": "1ab10f13-2b6f-498c-90e6-adf4e25bb2e9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a0d3bb6a-ed40-4842-b1b3-6d6c459917cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a18979a4-a344-402e-8533-4219c37101b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a95cfa40-2b1e-41b9-8c35-1318154328f4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8968f6f9-108e-45af-9b98-adc58e755c1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0625949f-9767-46f4-bd5d-3777ba48d693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e390f2-7fb4-4cbe-bc60-e5e2707b51a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fd94b16-2b1f-4bcd-89c0-fb1b91ac2e3b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10efee3a-9e69-4b1b-8f06-d50a6f0a5938",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9537912-ef3b-4646-8e7b-ce54990baca2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "388afca2-0588-445c-bc54-0786c39edad2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4efb44b6-6c9d-4079-b03f-5ea976c985b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cab26e1d-071f-413d-9a31-6035bc8f9284",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9890a56f-ac77-498d-b2d4-64ecdbbd3b38"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "504ef5b6-6630-481d-bd6a-6f2f0ae54f87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71f64c57-dfa2-4350-9448-4ae5f856b164"
            }
          }
        ]
      },
      {
        "id": "e47ab31d-b267-41a5-b841-6151f5e4be70",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40f88d25-aa4b-42a0-944f-65af0fd141f9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c303db98-66e6-4d25-87f0-7012e42444c2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ef601600-37e0-42b9-97ff-0036dd429766",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a42e61f3-45a6-44d7-9f88-022c6457f3bd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ed6cb32-a316-4a10-8ae7-ab63ce77d481",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 14.003508771929832,
      "responseMin": 7,
      "responseMax": 273,
      "responseSd": 20.434318956042805,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697675618390,
      "completed": 1697675635710
    },
    "executions": [
      {
        "id": "057ea541-3d02-43a6-afed-27924bd261bc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b820a303-a574-4e53-8bf5-dc2f41b9f1e9",
          "httpRequestId": "e5a5cf19-2f43-4033-af5d-fa3bb72f97fb"
        },
        "item": {
          "id": "057ea541-3d02-43a6-afed-27924bd261bc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "028dec0a-054f-4700-94ce-94aa125cdbb7",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "20d459c6-30f1-440d-8441-cf067bb887d6",
        "cursor": {
          "ref": "625c0b89-c363-428b-9a3d-25ba131115a7",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5112ea75-8260-40b7-a489-155833b35aa3"
        },
        "item": {
          "id": "20d459c6-30f1-440d-8441-cf067bb887d6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d9558105-7faa-4114-b44a-d3302f9549d7",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "4070ffe2-34bb-40ce-ad7b-c5bacd730c2b",
        "cursor": {
          "ref": "c98835e5-cb2b-4b9b-8aea-e4fbd4219958",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "537987b6-788f-4232-9f23-1f307cfec199"
        },
        "item": {
          "id": "4070ffe2-34bb-40ce-ad7b-c5bacd730c2b",
          "name": "did_json"
        },
        "response": {
          "id": "7cccaa16-2603-4b10-8323-4b9b02c54d82",
          "status": "OK",
          "code": 200,
          "responseTime": 164,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70909d4-bbda-4d20-829d-7a80eba66e80",
        "cursor": {
          "ref": "ce540a81-cefd-4257-8a9a-fdd440a1742f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ce7cf171-cdb7-4b60-8cb8-fc4a1990dacd"
        },
        "item": {
          "id": "c70909d4-bbda-4d20-829d-7a80eba66e80",
          "name": "did:invalid"
        },
        "response": {
          "id": "4500dee6-34aa-4b00-9956-5ff6b2962e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70909d4-bbda-4d20-829d-7a80eba66e80",
        "cursor": {
          "ref": "ce540a81-cefd-4257-8a9a-fdd440a1742f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ce7cf171-cdb7-4b60-8cb8-fc4a1990dacd"
        },
        "item": {
          "id": "c70909d4-bbda-4d20-829d-7a80eba66e80",
          "name": "did:invalid"
        },
        "response": {
          "id": "4500dee6-34aa-4b00-9956-5ff6b2962e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472496c7-9b9e-41d8-822b-3dd9795ae63d",
        "cursor": {
          "ref": "169a11e1-2d6e-48b8-932a-65aa24c9ac57",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "13816c0a-9d5c-47d9-854a-917cd0329b80"
        },
        "item": {
          "id": "472496c7-9b9e-41d8-822b-3dd9795ae63d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "05de7c6b-3cd1-40cc-bc6d-c277f8facab2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 52,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615653ee-9a67-4875-8c2a-7cebef6c8ece",
        "cursor": {
          "ref": "bafeb95f-0cf8-4042-b557-f2e2b8765670",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "da04e547-6533-49d1-acfe-e2934003181d"
        },
        "item": {
          "id": "615653ee-9a67-4875-8c2a-7cebef6c8ece",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1c8ddf6c-00ca-41cb-9521-e0a67a6faeec",
          "status": "Not Found",
          "code": 404,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec4230c-c4e8-483d-a03e-c0b93357376a",
        "cursor": {
          "ref": "122ae768-c4b9-4f94-bb1f-01b8d162cc67",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a25cd8a9-ce6a-44ec-9eee-173ab7b3a490"
        },
        "item": {
          "id": "3ec4230c-c4e8-483d-a03e-c0b93357376a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c0364e47-6b76-4d25-b14b-c23eb9acdde5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d84ea8-5146-43a2-943d-7e12a73dfcd3",
        "cursor": {
          "ref": "476684d0-f165-40d3-8ab3-90e9e0ac5f26",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b06848e0-3f54-45fa-a1db-055722081112"
        },
        "item": {
          "id": "49d84ea8-5146-43a2-943d-7e12a73dfcd3",
          "name": "identifiers"
        },
        "response": {
          "id": "99fde03f-804a-4817-9178-6b557915c865",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762bc3ef-d874-410c-a38a-421a9c91f8a4",
        "cursor": {
          "ref": "812740f1-9c78-4e43-b897-176e39c0cbbe",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "687d6a2e-5f9e-46e4-81b0-ff747f14f3a1"
        },
        "item": {
          "id": "762bc3ef-d874-410c-a38a-421a9c91f8a4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d6cbce21-1755-46ac-96de-71ed67d7278a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402a238b-c2d7-46e8-b0f0-af736c21da58",
        "cursor": {
          "ref": "2e5c9337-37ac-4a7a-b92d-c8bc59089f9f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a1daf14c-c51b-401d-86fb-c469619418db"
        },
        "item": {
          "id": "402a238b-c2d7-46e8-b0f0-af736c21da58",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a99d52c1-8042-4f5b-94f6-d1e078a1e0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075ad5fc-bf33-48fc-93ec-947e74438d21",
        "cursor": {
          "ref": "d8831f4e-b0d9-4f37-9b92-f6714b3836d8",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d40d8289-bd16-4434-9d92-5545b66c0b35"
        },
        "item": {
          "id": "075ad5fc-bf33-48fc-93ec-947e74438d21",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bdb2f6fb-9b69-4e55-b092-a7394cd68779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f80e7e4-ca3a-47c3-a00a-ca68aadc580d",
        "cursor": {
          "ref": "033468ae-6ec7-4d69-999b-fde738027e8d",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9b602317-6b23-4435-b74d-cb23621d9bf3"
        },
        "item": {
          "id": "5f80e7e4-ca3a-47c3-a00a-ca68aadc580d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "49cfaa0c-e037-4d0b-8aec-b1ad55396db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cad5be-74b4-424c-94cf-0ca644a07ca3",
        "cursor": {
          "ref": "e4a1b087-08e6-4774-8d5b-fae31caa3035",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2dbecd99-c66e-447f-bda2-3384daa8fd30"
        },
        "item": {
          "id": "03cad5be-74b4-424c-94cf-0ca644a07ca3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ef2ede5c-981f-4203-8b22-63ae53feee6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e873a3-01a8-4498-91c6-72e4013c4f11",
        "cursor": {
          "ref": "d49d5f10-d49e-4af5-a3a8-ef10c7a4b5d8",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "25479d93-22bf-4ded-99ef-7679fe98defb"
        },
        "item": {
          "id": "37e873a3-01a8-4498-91c6-72e4013c4f11",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6be942d7-2681-48ee-ba82-5799e2df98c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff102a9-2dae-4a95-a228-818b1f8b24cb",
        "cursor": {
          "ref": "975fd2b3-6b12-4b73-883d-85c1e35c495b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fae2b516-9980-408e-930d-f3525b43f5c0"
        },
        "item": {
          "id": "7ff102a9-2dae-4a95-a228-818b1f8b24cb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e348dcc7-a3e1-4987-9992-236211d3aaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdaa7bbb-a7f1-4c45-b27b-ae3de5654725",
        "cursor": {
          "ref": "f4385ae7-a482-4941-8a6b-929db257353e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cd89f128-f135-41b5-8027-93d1e5945e22"
        },
        "item": {
          "id": "fdaa7bbb-a7f1-4c45-b27b-ae3de5654725",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "56ef7d10-d2b4-4ffb-93ad-d44927a6de37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290646be-6f85-49d5-a9fb-86e3c36f5570",
        "cursor": {
          "ref": "81a598ae-70df-42c4-8732-7293d2a42419",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5d05ea16-6fbd-437e-bf02-c59b2f0d0e33"
        },
        "item": {
          "id": "290646be-6f85-49d5-a9fb-86e3c36f5570",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4ea46d9f-1750-4e81-86eb-5f017d3b9d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345a8fc9-ef44-43db-bd40-12f1d9929f9f",
        "cursor": {
          "ref": "68418c09-4878-4d3f-b609-303234ec0712",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ec0303aa-f7fb-422b-ab0d-581c07af66a1"
        },
        "item": {
          "id": "345a8fc9-ef44-43db-bd40-12f1d9929f9f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6a0868fc-76f4-4c60-ad2c-143a38c1e63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086ff4a0-2f72-4887-b09c-dc930a9cb8d8",
        "cursor": {
          "ref": "f0502852-42c8-4b29-84af-08c860852c70",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5d955025-fb42-427c-9a91-e9ff2b603fe9"
        },
        "item": {
          "id": "086ff4a0-2f72-4887-b09c-dc930a9cb8d8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "01ef7171-8b31-4f0b-ab48-bc5ef8dc2926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ca1616-7abf-4d18-acfc-7b5b78616350",
        "cursor": {
          "ref": "f0e56aa6-872e-4cd1-9d5e-013e863e69d4",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e61c38b6-332c-482e-bcb5-3122046ae542"
        },
        "item": {
          "id": "37ca1616-7abf-4d18-acfc-7b5b78616350",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "aa15fcd7-4aa9-49d5-b96f-7a3ba39792bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f350ad-bde8-44c4-943a-ef37c5a02bb4",
        "cursor": {
          "ref": "3413616f-81bc-4f20-9b14-43d37d835125",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "55c881f4-1e59-4ac6-8bf8-2fd9c278d5f7"
        },
        "item": {
          "id": "02f350ad-bde8-44c4-943a-ef37c5a02bb4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9627b31c-dfcb-41cf-95e8-55f009f35862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552de3c2-96cd-4271-9bd9-abe1bf061f19",
        "cursor": {
          "ref": "9f0ea73f-af34-4a96-afa5-514340481e8a",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bb089fa3-de68-448b-aa01-13b3513ae352"
        },
        "item": {
          "id": "552de3c2-96cd-4271-9bd9-abe1bf061f19",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "48a5df58-722a-43db-8d69-36ce7d4bffab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481aa07d-a379-4194-90c1-c00a4f0f69f6",
        "cursor": {
          "ref": "a527e9c6-1ee8-463a-8b9c-f5309507a4bb",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5c17da01-47a3-4c6f-92dd-bdaa1275c1c6"
        },
        "item": {
          "id": "481aa07d-a379-4194-90c1-c00a4f0f69f6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9bf6f089-c098-4f23-8d58-67de0bbfbbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acff6d75-f3c2-449b-8f1d-613042625f07",
        "cursor": {
          "ref": "c56cd233-1aba-4724-a4a1-35399cc6c48c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c0b95f4f-cd15-4760-9100-0ab0fb9b44d8"
        },
        "item": {
          "id": "acff6d75-f3c2-449b-8f1d-613042625f07",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5d912e06-bb0c-4197-9141-05a4d21d3cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03059848-bbc2-4be4-8f2e-3fb789c9542d",
        "cursor": {
          "ref": "3071eb2d-fd27-4f51-83ca-19eb150a47d6",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6d916dfb-5fdb-486c-8e02-a881989e7175"
        },
        "item": {
          "id": "03059848-bbc2-4be4-8f2e-3fb789c9542d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "709f4863-cf3a-4ff8-84af-5b7a4f04a0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f1d579-e3d9-4eb4-abe4-e8b88369617e",
        "cursor": {
          "ref": "62f617ea-5a89-4d27-8859-b3100b1a3cb7",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "79434e9a-7c3f-4141-9867-ae1232248dcd"
        },
        "item": {
          "id": "63f1d579-e3d9-4eb4-abe4-e8b88369617e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "614fc70b-d5e9-45bf-90a5-30c6af7b29f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1f8d3b-aa3d-42de-aee2-94f6aed1d0c7",
        "cursor": {
          "ref": "cb5b2b26-f573-48b0-9edd-b929c4ed9d5f",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "263f2b6e-9078-475a-9b8d-176c092d591b"
        },
        "item": {
          "id": "af1f8d3b-aa3d-42de-aee2-94f6aed1d0c7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c6affec0-864a-4e64-9a8b-5232f0bea56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90f02c6-c809-41c7-9bb8-a5194725c105",
        "cursor": {
          "ref": "6dc12004-66a6-4891-a0a1-1aa7555af0c7",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3314c6f6-79c1-4747-8cea-b8587c937d1b"
        },
        "item": {
          "id": "a90f02c6-c809-41c7-9bb8-a5194725c105",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "935fa839-4ba2-4e00-9159-1bf4c892880a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c287e2e-4149-4bb6-a444-49cfb83f7893",
        "cursor": {
          "ref": "d4348afc-84ea-4f01-9be0-15c1b60b3060",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a3d0fafa-c58a-4ca4-a62c-27ca3919fde2"
        },
        "item": {
          "id": "4c287e2e-4149-4bb6-a444-49cfb83f7893",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5f5bab33-2c44-4ebb-928d-726239099d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3638039-7fd7-424a-959c-8fab903816e5",
        "cursor": {
          "ref": "30d61af8-eb61-4cd9-b040-f290c95f8c80",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1214ec19-00c7-4b67-ac8e-7ce4c5fe15f5"
        },
        "item": {
          "id": "d3638039-7fd7-424a-959c-8fab903816e5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c084be46-1c7f-47ca-935b-c6029fd16310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11dd7bc-f265-4c72-8d32-3aafff7d7df9",
        "cursor": {
          "ref": "ca9de83c-eaae-4c59-9450-9a56fd71d680",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "58b4289f-dccd-4982-abfe-b89f3ba38899"
        },
        "item": {
          "id": "c11dd7bc-f265-4c72-8d32-3aafff7d7df9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2f6b9ad4-affb-4703-9602-87150b6483e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd11f9de-f4e7-41f7-a6b8-735dacc703d5",
        "cursor": {
          "ref": "ece1a19c-58e6-482f-97b8-6e535e74a5fe",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a5495bec-daa2-43d2-9302-f58a9640a521"
        },
        "item": {
          "id": "bd11f9de-f4e7-41f7-a6b8-735dacc703d5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6937dd04-135d-4d95-856f-31f5f5cf16b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476045f1-588e-4120-93c5-381efd037cdd",
        "cursor": {
          "ref": "d803a66e-71cb-4ce0-aa06-e7e242366d86",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "76c5d6ed-350a-43cd-ad23-86c365a60b00"
        },
        "item": {
          "id": "476045f1-588e-4120-93c5-381efd037cdd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f993748b-f633-4c06-89ca-ac3539a5b61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63f2ef4-b412-444b-bf96-c8a6160432f1",
        "cursor": {
          "ref": "0a530242-6cc6-409d-a732-d16a80811b00",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "edb2ad37-a263-4a43-8cb9-f7d64bb8eec6"
        },
        "item": {
          "id": "e63f2ef4-b412-444b-bf96-c8a6160432f1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0e54bcbc-2f0c-4f13-9255-88329f34f19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59f5a5e-3313-4cdf-877c-b0bf22fa3ec5",
        "cursor": {
          "ref": "c8c5a0df-ab14-42c9-8453-48ec17762f55",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "346388e0-e65f-42de-8e42-e59db208810b"
        },
        "item": {
          "id": "b59f5a5e-3313-4cdf-877c-b0bf22fa3ec5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f601270f-acc7-4105-a6e4-efb884530bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59149be6-a2ee-4abb-a04b-1440ade9bb17",
        "cursor": {
          "ref": "1b154a57-e707-42cd-ab42-a5ad3544a2b4",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f167da7f-7376-4e4e-8d68-c44d028448ed"
        },
        "item": {
          "id": "59149be6-a2ee-4abb-a04b-1440ade9bb17",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d57c7b58-3609-470c-bf9b-accb74de2906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbe6659-5811-4240-9457-a88d66290058",
        "cursor": {
          "ref": "52f94be7-6701-47db-8f34-8af02d358800",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "18d2aa42-32a9-4fb1-954a-78d665e5bff3"
        },
        "item": {
          "id": "5cbe6659-5811-4240-9457-a88d66290058",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e31c4ece-2748-4a05-81cc-1db4e6d23ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7172a8c-9a08-4127-9d8e-efced6780a8f",
        "cursor": {
          "ref": "dc8f553d-b75d-4297-b82b-c77e7dae7dcf",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d77cadd2-cb59-4199-87af-bb8162ce2130"
        },
        "item": {
          "id": "f7172a8c-9a08-4127-9d8e-efced6780a8f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0966b60b-9550-44d4-90a7-d1ae19bf1b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d5c5a8-5832-4650-89b3-2018c04a10ef",
        "cursor": {
          "ref": "82c17e7c-f99e-49ac-8931-d14bb7799fec",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f0ca338f-80a8-4c2c-b7f5-47bc1a0ee5be"
        },
        "item": {
          "id": "a3d5c5a8-5832-4650-89b3-2018c04a10ef",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ba2f1fad-73da-41c4-bb35-d74d10033995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c568c7d-a939-4f91-8847-9ca4ca7f7f87",
        "cursor": {
          "ref": "1c2283a1-cbb1-43a7-9304-ba6912b81bec",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "465875c2-1793-432e-a6b7-d6e2bbe027d2"
        },
        "item": {
          "id": "3c568c7d-a939-4f91-8847-9ca4ca7f7f87",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d2505d7d-da0c-4a81-bcf5-82f2c2cd4927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3007da9-e51a-4205-8642-5e9d135f2a7e",
        "cursor": {
          "ref": "ff603792-3129-470e-ada5-63cc5dfc306c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d0fed073-1533-46bd-80e3-695885213dd8"
        },
        "item": {
          "id": "f3007da9-e51a-4205-8642-5e9d135f2a7e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "53d77cd3-2b59-4100-a0ac-deac31afcaaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef21c864-b425-4da3-9db9-c895feae6e79",
        "cursor": {
          "ref": "4e0b1c55-5864-40cf-ba18-b557801b2fb8",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "28b9af7b-9cfa-458e-bd18-699c1268454f"
        },
        "item": {
          "id": "ef21c864-b425-4da3-9db9-c895feae6e79",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "df27dfef-8937-4ba6-b00c-7c2881977948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56b2a91-0777-4374-8ef1-873b36fe4f50",
        "cursor": {
          "ref": "7d988963-0daf-46bf-a976-5ab1c06d7fdf",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "95869c2d-56a6-4274-9cef-80b3b3c52f28"
        },
        "item": {
          "id": "d56b2a91-0777-4374-8ef1-873b36fe4f50",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "aacf21bb-2288-4af4-b369-5b44c310c3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fbfc9e-1dd1-49f4-b977-53759575b5fe",
        "cursor": {
          "ref": "3734ecac-995d-41b3-8880-686d6f05f119",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4eb38a48-4861-42cd-b146-53616c6546d3"
        },
        "item": {
          "id": "22fbfc9e-1dd1-49f4-b977-53759575b5fe",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "87cdc1fc-2d08-40cc-9a3e-79a23a2b911e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 25,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8beed5-40e9-4e3a-bc7f-01078142b5c5",
        "cursor": {
          "ref": "50a2633a-f2b4-480d-ab9c-64ff93239812",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8c01dd04-a776-4799-91f1-23a91c0361fc"
        },
        "item": {
          "id": "7d8beed5-40e9-4e3a-bc7f-01078142b5c5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "dcee60be-6954-4e87-b93e-8061dbd8e98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cec351c-5b7c-4943-865c-8eda0bb7e910",
        "cursor": {
          "ref": "393fa199-d22c-4af4-9806-fbbcb8539f5d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8df011b7-719e-4a80-9523-639e56cc3f43"
        },
        "item": {
          "id": "2cec351c-5b7c-4943-865c-8eda0bb7e910",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8a5d05e7-fefb-464a-9ffe-495080efb311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3424f043-2718-493f-b353-aebd8bcf5a7e",
        "cursor": {
          "ref": "e39cd259-42eb-4977-ab5d-b04f3faaaf7e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7c7cf27c-7dcc-4cd1-9a53-24221e5e2363"
        },
        "item": {
          "id": "3424f043-2718-493f-b353-aebd8bcf5a7e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6f372037-9e4f-4227-a12d-c0ef62ae9422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b922841-eac0-4148-9fdb-d51ce472281f",
        "cursor": {
          "ref": "6cb0f2a0-6f11-4ca2-9789-ed8267791833",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "774e1227-490b-4223-81cb-a1b5c52bd594"
        },
        "item": {
          "id": "7b922841-eac0-4148-9fdb-d51ce472281f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cbc15d59-321a-4c72-81d8-0453f8eb1891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cfd005-b999-42c1-b4ae-cfcdcc0abba7",
        "cursor": {
          "ref": "d74433d1-33c9-4c10-afc5-a150ffd60c89",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5d09c26f-eb0b-4dff-8c8d-173eb02ef5d6"
        },
        "item": {
          "id": "b0cfd005-b999-42c1-b4ae-cfcdcc0abba7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b1539a10-34f8-4672-aef3-e19be359719a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23441bed-a224-46cf-bb8b-76d8d81c38f4",
        "cursor": {
          "ref": "5b4a1cee-3962-4f2f-9592-8e2c2b54a49e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "82e698b4-21f1-40dc-bb90-33b2312d2158"
        },
        "item": {
          "id": "23441bed-a224-46cf-bb8b-76d8d81c38f4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ad15d9b8-6d21-4263-b563-e7e545a98d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793ca7cf-6385-429c-9ee7-cfe81cca89e0",
        "cursor": {
          "ref": "20b7a272-8550-442d-98ce-2e61b5505223",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4bf9eb33-cc1b-4a6e-8f75-64122942b8ab"
        },
        "item": {
          "id": "793ca7cf-6385-429c-9ee7-cfe81cca89e0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "642d91f9-d347-4b6c-b5d3-41c9080d3bd7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 27,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3521d9f9-25f0-421a-8abc-330f0382e5bc",
        "cursor": {
          "ref": "f30fa49c-ccbb-4423-bc6f-088832b31214",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d8334b2a-57b4-4f00-b96c-44f83f8ef564"
        },
        "item": {
          "id": "3521d9f9-25f0-421a-8abc-330f0382e5bc",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "23ab6896-95b6-49ec-a72e-612fecc2a31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a77095c-3fa1-4135-bfd7-3b43c0213438",
        "cursor": {
          "ref": "82dd57fe-cedd-476e-9bd9-288d32fd22c3",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2e4bd74b-f98e-4a43-b65e-953829e8d032"
        },
        "item": {
          "id": "1a77095c-3fa1-4135-bfd7-3b43c0213438",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a55aad10-967b-40d3-b663-d941df6f262a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d236f19d-24c5-480d-827b-f3c889117c1f",
        "cursor": {
          "ref": "0e720a07-a802-424b-ac39-744587a679c3",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d413d0dd-e091-4c26-bddb-379a4e07fd2a"
        },
        "item": {
          "id": "d236f19d-24c5-480d-827b-f3c889117c1f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "97e8c221-2b28-4274-b1e9-a3082b1a271c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6e51ca-024f-475c-840b-67c13977871f",
        "cursor": {
          "ref": "2605cf9d-58ca-4082-a84f-ea9241862570",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c60936e6-ddca-42b9-b881-23d5e91186c2"
        },
        "item": {
          "id": "9b6e51ca-024f-475c-840b-67c13977871f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7cb50b6e-47f9-4a9c-8cae-3cabc00646b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc42c43-eb72-46ff-987e-a39321e01f4b",
        "cursor": {
          "ref": "54e4cc52-0036-4e2a-91b4-375c1b7bb0db",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3beaaeea-0d1d-4a36-91d7-89490431b880"
        },
        "item": {
          "id": "4cc42c43-eb72-46ff-987e-a39321e01f4b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "48b2e11d-7549-4093-8293-cac44d55b087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf13ba9-67a4-41b1-8a18-2df09ac4ef59",
        "cursor": {
          "ref": "cbc18fd8-fac7-4877-8e9f-412ed8dcaa01",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "eda1ff49-ceca-488d-876c-9727f7d25ba6"
        },
        "item": {
          "id": "ccf13ba9-67a4-41b1-8a18-2df09ac4ef59",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "94041725-057e-4032-8747-9f0a7fb2aff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d7d544-1971-4025-94c5-c129fd047d7a",
        "cursor": {
          "ref": "cf761b7c-ca7f-46c7-bd5c-32091f38dbd0",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ffdc457c-db13-44aa-8f0f-25e5d4f125b6"
        },
        "item": {
          "id": "52d7d544-1971-4025-94c5-c129fd047d7a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "696e1bc6-6745-44fd-bb2b-3bda5a915bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25de0fa3-66af-4516-8c2b-474abef47465",
        "cursor": {
          "ref": "078795f2-1b9e-494e-9159-c4106afc81c4",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0b54537b-140e-4448-be34-17005d5f2dd3"
        },
        "item": {
          "id": "25de0fa3-66af-4516-8c2b-474abef47465",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d6af9682-40cb-4771-84e3-d35ae0bcfa3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0d7d4b-1f38-44bf-ad86-2c0daf4b3dcd",
        "cursor": {
          "ref": "6401b790-8c61-44da-894e-635b5463590e",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d985ea75-efd9-4774-9621-84f8c6403573"
        },
        "item": {
          "id": "ad0d7d4b-1f38-44bf-ad86-2c0daf4b3dcd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6d55f453-8b19-4e01-bd15-60a062aaac9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6df998-6d36-45a1-9e36-b5e358d9888b",
        "cursor": {
          "ref": "a807859b-1d66-45bb-9b95-7273498a98f1",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f207b667-8f4a-4d29-ae8e-1fa9bd9663dd"
        },
        "item": {
          "id": "fe6df998-6d36-45a1-9e36-b5e358d9888b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8c16d8ab-4f60-41a0-a70a-b2ae364db39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3d7e4b-8bc5-44aa-9f5d-9f09fcc57949",
        "cursor": {
          "ref": "2324e060-d40c-4948-a49f-b6d9e119ddbd",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "94748b80-0a5f-4d81-bc0d-5da934d23126"
        },
        "item": {
          "id": "1b3d7e4b-8bc5-44aa-9f5d-9f09fcc57949",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ce7f4c2f-1bcb-428e-b228-f04d951422b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6eed69-6854-44dd-916f-7b9bf6ca5008",
        "cursor": {
          "ref": "4b82f6bb-f259-4218-8292-64dfa44daad9",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c4638135-2816-499b-8c1a-bda261bea6f2"
        },
        "item": {
          "id": "3c6eed69-6854-44dd-916f-7b9bf6ca5008",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d151fb42-fcb2-4c0c-873c-db6d0dd848ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c067c3-f83b-41b8-9657-3f3b27b5d3a7",
        "cursor": {
          "ref": "dec23498-e735-4e72-8c47-668b8a318ab8",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ae867ea6-f405-4c93-ac91-9e065a2bcce8"
        },
        "item": {
          "id": "59c067c3-f83b-41b8-9657-3f3b27b5d3a7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b9f9d63e-ab93-4971-aab2-95a6aa168fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e237fc4-8d15-43a1-a2c9-a6bddad915da",
        "cursor": {
          "ref": "09fb1af3-b795-40e0-a0bc-5378a474e7bb",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1b5f212e-ea11-4200-ba3b-1da7d74eb6dd"
        },
        "item": {
          "id": "9e237fc4-8d15-43a1-a2c9-a6bddad915da",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d2d9bffd-28ee-4039-9e9a-bf44973a5939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d96717d-1d89-418f-81a4-7e3696e9bb9d",
        "cursor": {
          "ref": "11a7292a-a455-4d0f-9f4b-6bcbf3f40407",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a0ffee1d-8efa-4fce-8ef8-d6acaeeab91b"
        },
        "item": {
          "id": "0d96717d-1d89-418f-81a4-7e3696e9bb9d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "92c36e1a-9214-43cd-a68f-c72a9eefc425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97beacc5-0eee-4539-93c0-c6a7b5557b2c",
        "cursor": {
          "ref": "8749ec11-ddc8-4f38-932a-1501cd9566d7",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8fb255a5-802e-4066-8610-9daf685c9ca3"
        },
        "item": {
          "id": "97beacc5-0eee-4539-93c0-c6a7b5557b2c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "49fa4a60-2c59-4c4c-95ce-892eb548bb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c87c767-5d07-4489-8941-badaa5a4a3c1",
        "cursor": {
          "ref": "5daed427-89a1-4972-b612-328eb748e35b",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b9bce932-e225-49bd-baeb-de36c76e365a"
        },
        "item": {
          "id": "2c87c767-5d07-4489-8941-badaa5a4a3c1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c136ec21-e208-41de-95ea-299b4b5745aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d3952b-8e91-428f-afb2-7f24fe849496",
        "cursor": {
          "ref": "c8b464c0-a053-4296-a2af-fda94e521530",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "91421f7e-c516-4ed4-9868-50f6b362b7d3"
        },
        "item": {
          "id": "56d3952b-8e91-428f-afb2-7f24fe849496",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fe5053b5-e788-4183-a258-98bf6490865a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193774f6-e2e5-4ba3-a7f8-625835aff05e",
        "cursor": {
          "ref": "76e67618-e0ff-4c6b-8a9d-4ff24af1efdf",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f7da4211-3e35-4869-9052-22a7d0d74af6"
        },
        "item": {
          "id": "193774f6-e2e5-4ba3-a7f8-625835aff05e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ec197fdc-290f-4b30-b644-dce081829204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976e4523-d425-4672-9a97-ff4b1dc711c8",
        "cursor": {
          "ref": "e9e92884-6195-4aad-9fef-af670557a7f6",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "270de065-a3c6-4ece-9d39-d172fb6a8e2f"
        },
        "item": {
          "id": "976e4523-d425-4672-9a97-ff4b1dc711c8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e6679d87-1951-437a-9618-a0a9e58cb0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6172e92f-36a1-4b20-9e93-3618fd66d236",
        "cursor": {
          "ref": "a6e9406d-74fd-4416-8153-3eed99a88f48",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fb114ac5-7ced-46e2-a192-2133c91e2fd9"
        },
        "item": {
          "id": "6172e92f-36a1-4b20-9e93-3618fd66d236",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e5a55acd-6a8c-4047-b120-6f25100d4296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdfaec7-b3e1-47f6-950f-bc2774878eab",
        "cursor": {
          "ref": "d9b14a1d-63f5-4a65-b452-1e49f7e0e382",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "20bc37c3-94c0-4ffd-b850-fb8175c28728"
        },
        "item": {
          "id": "2fdfaec7-b3e1-47f6-950f-bc2774878eab",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "77a752cf-f20c-447d-b6db-b61e7bb60a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0088f72-1900-49be-af24-c228fae4885b",
        "cursor": {
          "ref": "a78215c6-092c-4e24-8a59-7a13b1e1e31b",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9e4615c9-133d-485e-a37d-5be4ed492bf4"
        },
        "item": {
          "id": "f0088f72-1900-49be-af24-c228fae4885b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0bb00f65-f822-40f8-abca-a56c8cb6bf96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1dcfeb-277c-4872-936a-e67cc627cbc2",
        "cursor": {
          "ref": "3232c75b-dbc9-4cd7-a967-575932be0c83",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ddda6807-f9e1-4c14-94af-f6187c808c35"
        },
        "item": {
          "id": "9a1dcfeb-277c-4872-936a-e67cc627cbc2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "61fe6457-c075-4f5b-b658-887a7fc7b0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c46eec4-ddde-4479-8c47-e93f269e396b",
        "cursor": {
          "ref": "dfd66ea4-5c30-4e14-aa2e-b7b08e9f1152",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fd404d58-2e43-44f4-b27a-486c2ec2882b"
        },
        "item": {
          "id": "5c46eec4-ddde-4479-8c47-e93f269e396b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "abf442dd-6177-45c9-9e66-6e1d0e1ed0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b83bbe9-93fe-42bb-ac4a-246c3c13bc7e",
        "cursor": {
          "ref": "9f0301dc-2257-4bfa-b28f-20eac143e577",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "dff978ed-5049-4e3d-aca9-b6f1e35a1bd0"
        },
        "item": {
          "id": "5b83bbe9-93fe-42bb-ac4a-246c3c13bc7e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9e46dafa-92f5-4617-a217-ffea29be63a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a869bdbe-bc52-44e5-8b56-51890861c195",
        "cursor": {
          "ref": "5f4239be-f777-4159-9c4e-a90c18be0f42",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9329b06f-0b67-4347-a2fa-e77231bd9082"
        },
        "item": {
          "id": "a869bdbe-bc52-44e5-8b56-51890861c195",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4e082f3f-698e-479e-8ac7-45e959560644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebbad6e-fa39-485c-849e-e0d24620eced",
        "cursor": {
          "ref": "7fbaa82a-9c1b-4d1b-ac45-696d5b568a3b",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9d4f4b1d-0c86-4039-983d-654c2930503a"
        },
        "item": {
          "id": "aebbad6e-fa39-485c-849e-e0d24620eced",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e5665f35-4cef-4724-bc1c-03f39ea65d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacef1b2-2feb-4719-8662-e5482b7c5b68",
        "cursor": {
          "ref": "b67d4cf7-f62e-49b9-a7d2-92d3f16a689c",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "23df3557-83a2-4971-b251-4a1f23cfa492"
        },
        "item": {
          "id": "eacef1b2-2feb-4719-8662-e5482b7c5b68",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "701497a7-dda9-4bca-a221-60e90ce17152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e12bcad-5d64-460d-ad37-29ad944c7095",
        "cursor": {
          "ref": "a0b02f6a-568a-479f-9727-deb3ec233a2e",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "81fb447f-e2ef-4370-8406-ee3d90bca5b4"
        },
        "item": {
          "id": "1e12bcad-5d64-460d-ad37-29ad944c7095",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f3323114-9555-4fca-8250-e809a636b50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d25530-c925-46ae-9007-f9d739415d61",
        "cursor": {
          "ref": "dfa0d1f8-185c-4c9b-aafd-3ee49a848c11",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "eb7d4632-6385-4905-b994-b42556c15e81"
        },
        "item": {
          "id": "59d25530-c925-46ae-9007-f9d739415d61",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a3c5ff41-4614-47b6-8374-693cfe1e53b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d8c2aa-37d4-458a-9127-9d417ca05f04",
        "cursor": {
          "ref": "0010c6b3-1b4f-48c2-92ef-c562a7bca10d",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "62901a7c-de4d-4459-b3ad-29cfde1c4702"
        },
        "item": {
          "id": "42d8c2aa-37d4-458a-9127-9d417ca05f04",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b132f501-8195-48bd-87ac-fcb10270b193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd3326b-0388-47ed-8739-369a9623efee",
        "cursor": {
          "ref": "e3a46685-c6d3-407f-9b8e-8857bed45a8a",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ba9011a1-eb0b-492d-9d8f-9f5940d0e04d"
        },
        "item": {
          "id": "5dd3326b-0388-47ed-8739-369a9623efee",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "12103682-3469-4c83-9e61-cc3322136b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af28ba1-de57-44e4-9345-e2c2a0dded8b",
        "cursor": {
          "ref": "bf98beaa-0d9c-448c-b840-d2d058620097",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "75861564-bcb9-416c-ae8b-06721542daa8"
        },
        "item": {
          "id": "2af28ba1-de57-44e4-9345-e2c2a0dded8b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f5cf3427-8092-4c12-ae96-3370f74f0e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403a1ed2-3e5b-406d-9a0e-0af02b9e75c3",
        "cursor": {
          "ref": "82d306da-2191-441b-8842-3bc2ae2d3cb4",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f3aea044-9f81-44ac-97e2-45e845ef1799"
        },
        "item": {
          "id": "403a1ed2-3e5b-406d-9a0e-0af02b9e75c3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ec204710-d291-46da-805c-1276d8b436d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bb9f41-f05d-45eb-ba65-af66993db39c",
        "cursor": {
          "ref": "461b8452-d5f8-4dca-a79d-a903a62c037e",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "870a13f3-9918-43c8-97b2-da7c2e85b4c0"
        },
        "item": {
          "id": "49bb9f41-f05d-45eb-ba65-af66993db39c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a08561fa-8233-403e-898d-4702a9bb118f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c802f619-242b-4778-9398-d9e413611fa0",
        "cursor": {
          "ref": "0d92012c-4af9-4716-8410-cded6c9be9ea",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f6d9d72b-199f-4449-b661-acaa94a78261"
        },
        "item": {
          "id": "c802f619-242b-4778-9398-d9e413611fa0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c0d3950f-0cc9-49ae-b5eb-8188e26fd7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abbd159-00e3-4753-ba7d-d049fb7ed734",
        "cursor": {
          "ref": "da2aa700-9988-4f06-ae25-c6e50aac96a6",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7cf8b990-b9cf-499a-80cf-5ca979b2c044"
        },
        "item": {
          "id": "9abbd159-00e3-4753-ba7d-d049fb7ed734",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5aa9ebd6-7892-43ab-aa9a-30f9dffe6f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4da8037-f23e-40ae-994d-5ee32c422275",
        "cursor": {
          "ref": "6f659b8b-ca06-4dcc-8677-bf9c0635fece",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "48108bce-c468-44b2-9981-a5009e7fc925"
        },
        "item": {
          "id": "b4da8037-f23e-40ae-994d-5ee32c422275",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f2c485da-a49a-4f64-9a42-b7cf87992d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201a77fe-fa5d-4e9e-8ef2-bbc1aa1904bc",
        "cursor": {
          "ref": "10dd6f91-334f-447c-8200-1d769237e4e8",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dbc8ba1a-00eb-4126-93d2-e57f1e0dcdd0"
        },
        "item": {
          "id": "201a77fe-fa5d-4e9e-8ef2-bbc1aa1904bc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9c380d82-5fba-40b9-b1e7-3f72a56d7d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d675c75-418f-4a82-9651-6414f69c4c6c",
        "cursor": {
          "ref": "dfbd3216-a9da-4c17-bbe1-05613021f46c",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "352fca3f-7342-4842-bad3-c5096531834e"
        },
        "item": {
          "id": "1d675c75-418f-4a82-9651-6414f69c4c6c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cfc8f324-5ac5-4dad-afc9-c01efe61ec31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b7099c-c4d4-492a-a550-a3f3b6d42319",
        "cursor": {
          "ref": "71172e8f-bad8-4964-95e6-f2b94d306ca8",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2ad4c2ab-9f49-4360-9b9c-93779a0e3c2e"
        },
        "item": {
          "id": "a4b7099c-c4d4-492a-a550-a3f3b6d42319",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "081b1ce9-2ad7-489e-a8bd-ac06a170ba2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba474f9f-45c5-4ed5-89b4-d7e8419bba6f",
        "cursor": {
          "ref": "cef6063e-f40d-41e0-bbe1-6707e522cee2",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6d0aa46a-2da9-491d-981d-78fd3d285bb2"
        },
        "item": {
          "id": "ba474f9f-45c5-4ed5-89b4-d7e8419bba6f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "77e1d59b-295c-4571-9433-f18a25b1bef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe601f4-2943-4015-a7cc-6c4500add211",
        "cursor": {
          "ref": "80404451-98a0-444c-a851-ee826a0e820c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4cce1f34-7f5f-49c9-a4a1-fe5f75ce8593"
        },
        "item": {
          "id": "bfe601f4-2943-4015-a7cc-6c4500add211",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "94fe818d-6ac2-42d1-9445-cc1989d166ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4940481-ee04-4b4f-afde-55b4eefa318f",
        "cursor": {
          "ref": "8e8e6921-ef9d-4af8-a4af-b50ac7d44806",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c31e2f64-aa6f-4b1c-929a-623e260fb8cc"
        },
        "item": {
          "id": "d4940481-ee04-4b4f-afde-55b4eefa318f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7e041276-c5b3-4f3c-9bea-c666a92b572b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895d8b8a-bb27-42e5-b0f1-9db79d0fb8fd",
        "cursor": {
          "ref": "f389e9f2-0e20-4a44-a780-7ba706f5efa1",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9cc9afcb-919a-4459-89ce-42e1906563d9"
        },
        "item": {
          "id": "895d8b8a-bb27-42e5-b0f1-9db79d0fb8fd",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "020bb2b6-04a5-43a6-95e6-dc77a72def82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2fcf0a-c275-4723-a393-1522faaa9e79",
        "cursor": {
          "ref": "03efb441-74fe-40d2-9730-ac9f90bfae8e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a77adfb3-ea5e-4b00-bc7f-4043fd288bc0"
        },
        "item": {
          "id": "de2fcf0a-c275-4723-a393-1522faaa9e79",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "81f8be27-1655-48ad-b865-89d5cc574e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429aff9b-3c3d-40ca-a8a3-f23c94a5bf65",
        "cursor": {
          "ref": "7526bdff-cb97-45cc-a610-d70daf2ea88f",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "58e8e947-c825-4e6f-b785-540aeb568ac2"
        },
        "item": {
          "id": "429aff9b-3c3d-40ca-a8a3-f23c94a5bf65",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f0a009c8-97d8-4c8d-9a4c-7a9d9542d53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50df372-d8ee-4308-9db9-e22a1eb8ba11",
        "cursor": {
          "ref": "5c6a55ef-582d-4deb-a434-6d300d8a7572",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6cf4a0da-5fa2-4355-bf9d-b5bd0b2030e2"
        },
        "item": {
          "id": "e50df372-d8ee-4308-9db9-e22a1eb8ba11",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7d970d51-94f8-491f-86ca-3fa1bba8a424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ff7f85-9f6e-43d4-b470-31d057f410a3",
        "cursor": {
          "ref": "5efcada5-e6b5-46f0-b1df-ce2a03510fa2",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "49e66c8c-7e13-476a-914f-e9cb4a9c7ecb"
        },
        "item": {
          "id": "f7ff7f85-9f6e-43d4-b470-31d057f410a3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "12015bbe-995f-45f1-bff0-13f44cccb453",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8bf53a-b282-45ef-b1e7-68797e6f2dd3",
        "cursor": {
          "ref": "5d03e1a0-d12c-4ae8-bb48-a8a0a2c9dbe6",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "45e001b3-32e8-4b89-917e-26ff91e404a4"
        },
        "item": {
          "id": "4f8bf53a-b282-45ef-b1e7-68797e6f2dd3",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9b8d1da8-27b3-40ca-870b-501b7fdf9c12",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcc21fb-45c3-4d20-b47e-7d643719834f",
        "cursor": {
          "ref": "a6169210-8d6a-486a-90c6-9f20408dcc14",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "313f5ae8-3529-4872-9067-9f6429396908"
        },
        "item": {
          "id": "1bcc21fb-45c3-4d20-b47e-7d643719834f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a8631add-7517-48ad-a79a-33ec1a08f6ca",
          "status": "Created",
          "code": 201,
          "responseTime": 125,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "183d527a-b09c-4423-a2a0-cf94ab685547",
        "cursor": {
          "ref": "8129fb10-2e5c-4433-a417-07f69d780503",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f7aa6d32-c7cb-486c-89aa-69ed0ea1c0a2"
        },
        "item": {
          "id": "183d527a-b09c-4423-a2a0-cf94ab685547",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "610d029a-bb8c-4fe6-bd47-685e77a28b6e",
          "status": "Created",
          "code": 201,
          "responseTime": 42,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b118c53-3319-43ff-8c91-42f1a330414b",
        "cursor": {
          "ref": "35b2a269-3fff-40c8-85df-b272a8b73cf3",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "efd46aca-232b-4edf-ad57-bc95f2385194"
        },
        "item": {
          "id": "1b118c53-3319-43ff-8c91-42f1a330414b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "06830358-3415-4181-9981-79ae67413ec8",
          "status": "Created",
          "code": 201,
          "responseTime": 38,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5287656-ee3c-48d8-aac3-035387121250",
        "cursor": {
          "ref": "7d3514c5-92ec-45e7-b73d-25b39101b872",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5fabb8ba-33ea-4c73-a5ea-cb42c3dfcf6d"
        },
        "item": {
          "id": "e5287656-ee3c-48d8-aac3-035387121250",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8e82fe35-4ff7-4617-87c5-9913b5b53a6d",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e997b7-fad3-4663-bac5-2c679d64c9a5",
        "cursor": {
          "ref": "92e96e51-9894-4ebf-a50f-af876685a65c",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9c58575c-3a63-4d1e-9868-5420be03f0ac"
        },
        "item": {
          "id": "c2e997b7-fad3-4663-bac5-2c679d64c9a5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f33d137f-025c-4b6c-b301-882dde9b605f",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "61312b8c-3ed7-4d69-9553-a740168172e4",
        "cursor": {
          "ref": "ea8f34f8-70f1-46de-bdb3-7cfe39e031ed",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "74c92e4b-3299-4dbe-8e50-eefcfbdc91fc"
        },
        "item": {
          "id": "61312b8c-3ed7-4d69-9553-a740168172e4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "612c9090-40f0-46b9-8af2-d03dd8228700",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ded45e-5415-483d-9a31-27e93e03ba68",
        "cursor": {
          "ref": "f3f92a38-9011-4526-b34f-e43a77b13be1",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bacbfb25-6375-4b3d-ba4f-ce3754d97ebc"
        },
        "item": {
          "id": "a8ded45e-5415-483d-9a31-27e93e03ba68",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7e028c93-15eb-44bf-aae2-02ba2285539d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036a6385-ad70-4c7a-a964-8bc47bf11417",
        "cursor": {
          "ref": "611c6d02-6bf9-43ce-b323-2dd8806f8093",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b5088e36-7c93-492d-91ee-64c723e2eed8"
        },
        "item": {
          "id": "036a6385-ad70-4c7a-a964-8bc47bf11417",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bd01a64d-307d-4ea7-8fce-1a4ebdf3952c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3e463b-4816-494c-b4ef-bfe789990071",
        "cursor": {
          "ref": "2322486e-e0f3-411a-9080-32db1b8a9cca",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "28a119d0-22f7-44b3-a247-e65d86ef55f7"
        },
        "item": {
          "id": "3b3e463b-4816-494c-b4ef-bfe789990071",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "15fcd1d2-e6d2-478e-8e6e-e42cf39312c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e92cbb0-1d40-4b00-8803-bb52d75f6bb1",
        "cursor": {
          "ref": "582c0c28-384c-4a79-b8d5-5d624c6ae712",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "06801e5d-c8b1-41b7-a927-c69f8f17ee36"
        },
        "item": {
          "id": "5e92cbb0-1d40-4b00-8803-bb52d75f6bb1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6383c6bc-f15d-4f6a-8f19-2b2b782e1cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bf9bec-cad3-47ae-9585-3971fc277b04",
        "cursor": {
          "ref": "2faebc12-70f3-46ad-8443-d88f130effa7",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1306ff31-ae11-4895-a251-b121380c9165"
        },
        "item": {
          "id": "e5bf9bec-cad3-47ae-9585-3971fc277b04",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4c358231-727f-47a9-9aac-e573ed7200ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75792588-8346-4a60-b1ee-f971b2e2e3f5",
        "cursor": {
          "ref": "3ae77ed0-9aa5-4234-b770-eccd2c4176d9",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "02d946f8-46d7-4ef7-9519-1c1393d0143d"
        },
        "item": {
          "id": "75792588-8346-4a60-b1ee-f971b2e2e3f5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "679959ef-72ec-46ec-9912-95e2c1395386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30690fde-85da-4b95-9308-1e0647d97ddd",
        "cursor": {
          "ref": "65bcbecd-700e-42fc-ae4c-69597ec1a41f",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4bffc122-12e9-4efb-9425-1698eb4327a6"
        },
        "item": {
          "id": "30690fde-85da-4b95-9308-1e0647d97ddd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d850d3b2-24e1-4b2b-9f1a-6c435505acfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3459a614-6b89-4b9b-b87d-a2e55214af06",
        "cursor": {
          "ref": "3a370d83-c9b7-426c-9421-33142653707e",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "34438306-d070-44ab-9175-5cd669f95a75"
        },
        "item": {
          "id": "3459a614-6b89-4b9b-b87d-a2e55214af06",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c3bfcbf6-085f-4b3e-93ea-9441156538ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b86705-6779-4993-bb99-ad3a20690cb4",
        "cursor": {
          "ref": "f447c784-aca9-4587-992e-d63ef6804085",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a2e6d831-2bd5-4b92-b370-33e27f0cef10"
        },
        "item": {
          "id": "38b86705-6779-4993-bb99-ad3a20690cb4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "74a8d16a-b81d-4880-a7d1-3affa2b98b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdf423a-084c-4de5-8f1a-1888aa7692f3",
        "cursor": {
          "ref": "457a921c-c5b5-406d-9491-0644f1de5aef",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4888f08c-bc6d-413b-981f-03843d1b8d44"
        },
        "item": {
          "id": "5bdf423a-084c-4de5-8f1a-1888aa7692f3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "195f7f96-8e5a-4243-891c-54108fef297d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adc03da-1c58-4342-973a-698edfb6fca3",
        "cursor": {
          "ref": "7edaeb72-f8c6-4a15-ad09-3c823a7f271e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "31fb7fe4-cf94-4321-9b46-352ec14b5ce3"
        },
        "item": {
          "id": "8adc03da-1c58-4342-973a-698edfb6fca3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fbdae0b8-5983-45d7-b2db-cd3aae1a71ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c8e172-eff7-45c8-a7c2-c06e73509589",
        "cursor": {
          "ref": "71b05b8e-c22f-4942-9fa6-01f050e309d9",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a3f36670-af56-443b-8534-c456cfa05f55"
        },
        "item": {
          "id": "39c8e172-eff7-45c8-a7c2-c06e73509589",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e905f7ea-0502-4f8d-88a8-98bc5cd25160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d41c0e-3715-4c9f-b16f-b922606fcea7",
        "cursor": {
          "ref": "083a4467-5039-49b4-accc-1a92bb727b95",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "87ea1333-8d64-41d9-9d68-d9910b9b0602"
        },
        "item": {
          "id": "60d41c0e-3715-4c9f-b16f-b922606fcea7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "243824f7-348e-45d4-8750-3554a99e55b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4bec49-68a7-40ca-aae4-350ed7d503cf",
        "cursor": {
          "ref": "c990635d-0a8c-49f5-adc8-31e4641fcba2",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "35e4cb4c-fdd9-4c35-ba1f-cc17f828938a"
        },
        "item": {
          "id": "ee4bec49-68a7-40ca-aae4-350ed7d503cf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "44591521-9f89-4956-ae30-8e14a470c61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84712cf-b0f7-4879-a289-ab837094448d",
        "cursor": {
          "ref": "33fa237d-b94a-4fc7-a3cc-e9dcb7ea9635",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "62c711ba-a439-48f1-a4e4-0f365b675779"
        },
        "item": {
          "id": "c84712cf-b0f7-4879-a289-ab837094448d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5fd20ced-c49e-429a-add4-dd8658adb276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66188e8a-a48f-4a66-9652-cc133191c25e",
        "cursor": {
          "ref": "5efe4992-dcf5-476e-835d-c54b7cde44fc",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "dae4853d-99bf-4fbe-9eba-322957105cd0"
        },
        "item": {
          "id": "66188e8a-a48f-4a66-9652-cc133191c25e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5a86f802-7010-4e8e-9e01-ba15d62a58e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23830f2-8d10-40ac-9663-588e90e8daab",
        "cursor": {
          "ref": "0841eeb6-285d-4607-abe7-a49e944f209d",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "645d3245-ded4-4d82-b4dc-0da132d16b1f"
        },
        "item": {
          "id": "a23830f2-8d10-40ac-9663-588e90e8daab",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6a7dc583-e79b-429e-bd52-4e52715b013b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f12944a-1ef4-429e-9e65-4fcd78cb7373",
        "cursor": {
          "ref": "5d2c8a50-232b-4bcc-96d1-80751c90ce01",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ae305e36-7a8f-42f5-a668-bf8bfd2056cf"
        },
        "item": {
          "id": "1f12944a-1ef4-429e-9e65-4fcd78cb7373",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bdec682b-8c10-4604-847d-66b415922f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc020a1-6ae2-4c05-8261-c6ed2e5666a7",
        "cursor": {
          "ref": "6b7fff3f-709e-476e-a385-d762d6da1d8f",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6d18fbda-0f3a-45e1-9176-49f3ea4cc449"
        },
        "item": {
          "id": "8cc020a1-6ae2-4c05-8261-c6ed2e5666a7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8e1e82ab-771a-4b28-bdbb-d5c1dc02f434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33ee03d-afed-4cb7-9209-6a840e579f21",
        "cursor": {
          "ref": "4304b409-f348-4ad5-9ef3-a6588e2adff5",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "534f2340-c45d-43da-a071-fa76f2df71ee"
        },
        "item": {
          "id": "a33ee03d-afed-4cb7-9209-6a840e579f21",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3b4fc26e-1865-472b-ad3f-ddd508ec5885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb17034-3b65-4a7e-9fd7-0b4024eb45a0",
        "cursor": {
          "ref": "8918b62a-527d-47b9-831e-c9682f55c6b8",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "76cca020-cba3-44f5-8434-dd0be7152eb5"
        },
        "item": {
          "id": "7eb17034-3b65-4a7e-9fd7-0b4024eb45a0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "813568df-e4d2-4c50-b46b-97f89c4375a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4c7e0d-82b6-40b9-9a3e-5772987df12c",
        "cursor": {
          "ref": "b8ad07ec-aa49-4191-a5ee-8ab53c02aba3",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "eb4c6857-0c85-4018-bc2c-db8846927f81"
        },
        "item": {
          "id": "ed4c7e0d-82b6-40b9-9a3e-5772987df12c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c1495248-dcd9-4f72-9df8-ce2819823873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e19ba31-8352-48fd-8baa-44e212193fed",
        "cursor": {
          "ref": "37e6ccfc-d31f-4ab0-8bb9-b986cdc889ef",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bb2488c4-93e7-46fd-9ec3-92a7daab8bfb"
        },
        "item": {
          "id": "3e19ba31-8352-48fd-8baa-44e212193fed",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e5120e47-d659-4e47-89b7-93a35d4df460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34986676-7ec2-4e36-8909-e41fefedb72b",
        "cursor": {
          "ref": "5dd25260-1262-48cf-b95b-979beea0dbaa",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a0b7084a-1fcd-4510-b777-5e3b5f3b659a"
        },
        "item": {
          "id": "34986676-7ec2-4e36-8909-e41fefedb72b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bed76b33-b90e-46c7-8935-7a5aa2dc2784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bba46db-d692-499a-9fec-0ad521c2981e",
        "cursor": {
          "ref": "10fa06b2-d33d-4456-82c6-fe0beaabc5b5",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d772da9c-2ea4-438c-9896-2141dd50be92"
        },
        "item": {
          "id": "3bba46db-d692-499a-9fec-0ad521c2981e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d69d4f71-04f9-439f-9f56-1635a4a1b1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80677eca-02e1-4407-aa4d-6dc7e0e75ee6",
        "cursor": {
          "ref": "92c728d4-7e2d-4636-b279-35b2bc115251",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9ab57145-7992-436b-8769-fbd06fd99958"
        },
        "item": {
          "id": "80677eca-02e1-4407-aa4d-6dc7e0e75ee6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "66fbec29-ccb3-4a08-8a9a-09d7ff7876af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e116a9-d476-4745-bc2f-b8dc374a878d",
        "cursor": {
          "ref": "cbf3ddfe-31af-4725-a54c-38a78a63cfd9",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0420172f-d958-46e3-8e33-2408f50e0a47"
        },
        "item": {
          "id": "91e116a9-d476-4745-bc2f-b8dc374a878d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "12f2d5ab-ab4c-4f70-a3a8-48faec090de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd33b4d-5fa9-4bba-b403-2bd60ff3c896",
        "cursor": {
          "ref": "18cf5e07-1d02-4687-bf4e-8e8176255bcc",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e2d4134f-24a4-4fc4-9194-753063ab34bd"
        },
        "item": {
          "id": "2bd33b4d-5fa9-4bba-b403-2bd60ff3c896",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "18531e70-8477-479b-b54c-5e3551f015a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acecb248-cc43-46d5-8897-745230557009",
        "cursor": {
          "ref": "a6788b3c-bde0-427e-a15b-c6ccf4d5e299",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ddc8d53c-b237-45c5-9b21-50ea638430fd"
        },
        "item": {
          "id": "acecb248-cc43-46d5-8897-745230557009",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "31a056a7-48a6-46f0-9e60-9b16a250673f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7de4aa-1d18-437a-aca9-b7940bc2bdee",
        "cursor": {
          "ref": "3a776b75-83ae-49e3-8810-7cdae902e791",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7fa53416-ce9d-4b08-bdab-9f91aec86eaa"
        },
        "item": {
          "id": "db7de4aa-1d18-437a-aca9-b7940bc2bdee",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "17c032c2-fff7-4831-a8ea-60b54c87af11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ef0c7d-78bf-4aae-bf2c-5379b06e4895",
        "cursor": {
          "ref": "2a408348-e99a-4c2d-8a03-90cb86db5562",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a3dd91d7-0d28-40d2-a489-29517d910dab"
        },
        "item": {
          "id": "59ef0c7d-78bf-4aae-bf2c-5379b06e4895",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4d9f4182-1ece-448e-8b97-824366cf1e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0294fe1e-866a-4f50-85e0-629df35ae04d",
        "cursor": {
          "ref": "4b7ee274-5a06-49ea-9075-a8f237723aea",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "913904e5-df60-43f9-8bab-538a162c5100"
        },
        "item": {
          "id": "0294fe1e-866a-4f50-85e0-629df35ae04d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cfaa0eec-87ac-49dd-abb3-48f0a50c9a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f15d97-c056-47f5-8cfc-fa544bedbc78",
        "cursor": {
          "ref": "995f5170-0a2b-4b29-83f4-54860242ce0d",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2a1131ba-de04-4151-8cff-0cadf895bb65"
        },
        "item": {
          "id": "74f15d97-c056-47f5-8cfc-fa544bedbc78",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e90838c2-9806-473c-8ea2-2ccd5aaa9d6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a91fc3-96d4-4bf5-b1bc-3e218aaf1e31",
        "cursor": {
          "ref": "3b1458b0-db5b-4313-802c-2a5f086d4a15",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ec8ada1b-9bf9-41ab-b73c-0a321a06d07e"
        },
        "item": {
          "id": "f8a91fc3-96d4-4bf5-b1bc-3e218aaf1e31",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cbeb9fac-6506-4b36-8fa8-687390de5b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47ea828-ec6e-4fd6-a694-6d0c6db281f5",
        "cursor": {
          "ref": "67173c24-6bb4-4f52-a152-3b68f47485fa",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "83767ce3-b456-42a0-8567-7f75126aec43"
        },
        "item": {
          "id": "e47ea828-ec6e-4fd6-a694-6d0c6db281f5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "db78d643-f5ff-452e-8dc9-1d8698c6cf86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158b16f2-b790-495b-a6a8-46efc7d2bfdd",
        "cursor": {
          "ref": "ad2efa70-bb1e-4278-8e53-82ca31728898",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a9085b58-78f0-4c7f-8a64-764a909ef1c6"
        },
        "item": {
          "id": "158b16f2-b790-495b-a6a8-46efc7d2bfdd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "86402243-7422-41b6-825a-16a3c4e36a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16180fe8-3221-49ba-997e-dea9866cf51c",
        "cursor": {
          "ref": "23c3f8c3-849e-4ed3-a55b-62118bd2863a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "306c37ac-54dd-4eca-9a3b-7035dcd0c89e"
        },
        "item": {
          "id": "16180fe8-3221-49ba-997e-dea9866cf51c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "90c526b1-1aae-4a38-b979-f06b459a7afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c1a237-2e68-4c94-8f24-212d1b2ade5f",
        "cursor": {
          "ref": "7e00d136-f134-46fe-9ddf-6b6a1f41fc2b",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3547e9c8-2d5d-476a-95b4-af112a7e4cf8"
        },
        "item": {
          "id": "53c1a237-2e68-4c94-8f24-212d1b2ade5f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fde6f0b4-f630-44f6-a900-127d93b17b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4544630d-23c7-4f2b-9cea-bea5763246d7",
        "cursor": {
          "ref": "0048e994-3fa0-415c-bc8e-407a1ce8ffc3",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "968a3a6f-4bd9-4a5b-8a1e-76ab256ef3ad"
        },
        "item": {
          "id": "4544630d-23c7-4f2b-9cea-bea5763246d7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c591b47d-57e0-422c-b484-ec1268e40230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6d5752-2508-477f-9017-cbe4eb01c90d",
        "cursor": {
          "ref": "658d0231-5df5-4c2c-aace-2224799976f2",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8f6b6981-b079-4733-a033-6ed433086d5e"
        },
        "item": {
          "id": "7c6d5752-2508-477f-9017-cbe4eb01c90d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6b3bbadf-b277-4f48-93eb-33971a74ae3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8fc880-a152-453d-9976-1d0706630f3d",
        "cursor": {
          "ref": "8fe8dc7e-02db-4bc0-9d45-cc9e15de3580",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0a7d54c0-3783-4f11-b8e9-f5e3466278fc"
        },
        "item": {
          "id": "4c8fc880-a152-453d-9976-1d0706630f3d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2a60cb6f-00cd-4dd7-b628-0933edb57a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace7ffec-e437-47c7-93e7-4fb4c9bb49df",
        "cursor": {
          "ref": "f86124c1-82e5-4dd5-bd2d-ae2866fd219e",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6226ca6b-9f86-45b7-b8a0-a01969147898"
        },
        "item": {
          "id": "ace7ffec-e437-47c7-93e7-4fb4c9bb49df",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a64bfd98-5508-47cf-b965-6c65bd292e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06476cc0-7c13-431f-8ce7-e40cd91fd2a7",
        "cursor": {
          "ref": "a4fb7dc6-89c0-407b-9c98-8fa63297db29",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "672fc403-e0b5-497f-b1bd-ca1185d51cc8"
        },
        "item": {
          "id": "06476cc0-7c13-431f-8ce7-e40cd91fd2a7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2e80deed-6369-4e67-9ddc-e4c1ef49d3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050d4a18-0a5d-461e-9c50-9ea243b21c5d",
        "cursor": {
          "ref": "1c86a040-f240-4afd-ad7b-06ac03eafc86",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6447e71d-c980-4b1a-8a2c-a500da5a9478"
        },
        "item": {
          "id": "050d4a18-0a5d-461e-9c50-9ea243b21c5d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ed596fb9-8a79-487b-8889-f03e6f874048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268fd489-868e-4b99-a496-65c6ce40ca8d",
        "cursor": {
          "ref": "3c8b7e6e-8c15-4c57-93eb-454e59556051",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a3879e48-e883-4cdb-b3e0-24eb0ada89f4"
        },
        "item": {
          "id": "268fd489-868e-4b99-a496-65c6ce40ca8d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1748c421-2932-4835-a963-912d8547485b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d1f392-b469-4e83-aca2-4b131b34ed62",
        "cursor": {
          "ref": "e87e713f-2e9b-4342-82f4-c213ff469505",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6ccdc785-27c1-4b8c-97e5-6dd29e65c2bc"
        },
        "item": {
          "id": "69d1f392-b469-4e83-aca2-4b131b34ed62",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "84b990dd-8db7-4d50-8126-677c384b52b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5690698f-edfa-4bdc-ab7f-f5b799066d44",
        "cursor": {
          "ref": "9b053b5b-baaf-47a7-b302-01c4731309db",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9755e3eb-d823-4b1f-9ce8-98ee49bc3e44"
        },
        "item": {
          "id": "5690698f-edfa-4bdc-ab7f-f5b799066d44",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ab29be82-c1de-48be-a212-ff953b9bdcc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d05f51-f35e-48dc-8171-deeee19ee0ed",
        "cursor": {
          "ref": "b189ece1-2a60-4bd2-b9e6-7ce78460cb6b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0ba65388-5501-445f-868e-509778c385f2"
        },
        "item": {
          "id": "b8d05f51-f35e-48dc-8171-deeee19ee0ed",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3666576e-d5dc-4e34-ba64-ac1130264fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb54f03-98ea-4fbe-90c3-80f36e06f979",
        "cursor": {
          "ref": "76dd780c-37b8-4048-8d63-cbd6e7dce33e",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f8282f90-3892-41fd-aac4-af083910fba3"
        },
        "item": {
          "id": "ffb54f03-98ea-4fbe-90c3-80f36e06f979",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fda8da5b-a012-47a7-85fb-e5aaabd7e185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e13902-2fcb-4c15-898e-fa36f3b60c3d",
        "cursor": {
          "ref": "165d8c35-e051-4de3-a765-9ca3dc3c068c",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "01b36557-593a-4750-9372-6cc1ce4e449a"
        },
        "item": {
          "id": "12e13902-2fcb-4c15-898e-fa36f3b60c3d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "44574e84-236e-4b2c-a55a-3f4ffd904f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68ee4a0-1b1c-4bc9-b738-9b96bae08355",
        "cursor": {
          "ref": "3e0c2c82-9431-4fcc-ac0e-1b477119eef0",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fcd43ea2-6bb4-48e8-96f6-7eb90b048800"
        },
        "item": {
          "id": "b68ee4a0-1b1c-4bc9-b738-9b96bae08355",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3ea7c849-40ca-45f4-91b0-5b812e092315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3258563-ef10-41d4-aed5-a2bab67ba6b1",
        "cursor": {
          "ref": "47c70da3-4da3-490d-98c2-4e285b22fb18",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d84dec6f-3682-4209-91d0-65ebf743725f"
        },
        "item": {
          "id": "b3258563-ef10-41d4-aed5-a2bab67ba6b1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5e72ba2f-e070-48f5-b83d-08ed6892f6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886e0eaa-a02e-4372-9bc1-15d0b5156e6f",
        "cursor": {
          "ref": "885de2ed-9531-4855-ad03-23fb647e2349",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "16f0f0fe-fbd9-4529-9f6d-a5368b9bdf6b"
        },
        "item": {
          "id": "886e0eaa-a02e-4372-9bc1-15d0b5156e6f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9b2e0747-40b7-4cf0-bbb2-940d38e85ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f1c678-5069-4db8-a89d-d01f64e75a37",
        "cursor": {
          "ref": "0be5c811-a2d6-455c-89a4-25c7c9b3e277",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "89a913db-da55-4c30-8af8-e8ce90d32fe0"
        },
        "item": {
          "id": "90f1c678-5069-4db8-a89d-d01f64e75a37",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1764c467-5cbe-406c-8a83-032e301ded9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee9e218-2a42-4e21-8cb7-faf4fe01c9ab",
        "cursor": {
          "ref": "e55569e0-3988-4103-b6cb-3d8199344cd0",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "83b9744c-c36b-4891-b4da-4664fd5377f3"
        },
        "item": {
          "id": "fee9e218-2a42-4e21-8cb7-faf4fe01c9ab",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b37a629b-a279-4637-944d-0ce91efcaa90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7772fae6-46c7-4ce8-9d7d-f99f058d1f22",
        "cursor": {
          "ref": "e80568b5-ba07-4d78-a125-61698a51f5ff",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6c989299-4048-497f-8d3b-6d970919b2ee"
        },
        "item": {
          "id": "7772fae6-46c7-4ce8-9d7d-f99f058d1f22",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5fbee253-f8a5-4790-b7ed-a5e141cce0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d28d49d-ea71-4d97-b1e7-1d38d827a305",
        "cursor": {
          "ref": "ea489480-325e-4204-a870-d35334efc00e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e86e6a00-a2f1-4caa-9e81-1b138decc14c"
        },
        "item": {
          "id": "8d28d49d-ea71-4d97-b1e7-1d38d827a305",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5b2131a9-7110-4c89-ad3f-12d78fec7625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5e6149-1df9-4a98-8448-49decafbd7b7",
        "cursor": {
          "ref": "a6cac86d-04f3-4783-bc85-6326686504a3",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5465ecb4-4570-4092-b02d-090137fe285f"
        },
        "item": {
          "id": "bd5e6149-1df9-4a98-8448-49decafbd7b7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "822906e6-1919-4c4f-880b-8cea20014240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133ab44b-778b-423c-8bf3-1a8576c992a4",
        "cursor": {
          "ref": "a9904f78-0cf5-4181-8810-797b10f98441",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "615be88b-ee1a-4da8-85e5-44af3a06e063"
        },
        "item": {
          "id": "133ab44b-778b-423c-8bf3-1a8576c992a4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4bccb291-b312-4077-917a-f223652f6a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe0912b-c374-451a-a45c-896b16f4ed82",
        "cursor": {
          "ref": "79895145-ea13-407d-b217-1ad78de45cec",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "107fe343-3a6d-433a-aa9f-4005d78883bc"
        },
        "item": {
          "id": "dfe0912b-c374-451a-a45c-896b16f4ed82",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "333ed4a1-a455-4600-8c8b-68e4e201676b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2bb6a6-a77a-4db8-9cb5-cbf81c6c86a8",
        "cursor": {
          "ref": "ba2fb9bd-19fd-48e3-aa42-709516494df7",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "767978c9-e222-4948-90a9-cbd0a40f8f3c"
        },
        "item": {
          "id": "8f2bb6a6-a77a-4db8-9cb5-cbf81c6c86a8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d8a4c129-0e28-4134-b33b-de9c5b7ed713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85453a4-d6c5-4da2-863b-7a21a9040096",
        "cursor": {
          "ref": "ba60d6c4-40ae-43b9-97bf-3bfd800089ce",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "efab5aab-2b3e-4ca3-bfe8-47ca36bdff55"
        },
        "item": {
          "id": "f85453a4-d6c5-4da2-863b-7a21a9040096",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "540b281d-85fb-4080-89c2-ce1417383609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ead85c-e1e1-4e66-b54d-cfa49902cb7f",
        "cursor": {
          "ref": "677751ca-2bd7-41b2-94ae-0ad0888c8e78",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "920bb22e-ca9c-4a53-8d6a-28e3e479bce5"
        },
        "item": {
          "id": "d4ead85c-e1e1-4e66-b54d-cfa49902cb7f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "089692ba-1f35-47f9-95eb-5348467e511e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97642190-2c00-4321-9552-d10380415b71",
        "cursor": {
          "ref": "2d205616-89fe-4158-badc-af8ad78ddc22",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "86c0d81f-a83d-4343-9b18-8b4ffe5321ab"
        },
        "item": {
          "id": "97642190-2c00-4321-9552-d10380415b71",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "247b5e87-010b-484b-9528-9c5f4d7d44cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d8934c-e587-45bc-90bf-5c8445e6013e",
        "cursor": {
          "ref": "22e7243b-7361-4872-9f76-0149f4138aaf",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f7ae4b99-af30-4982-99da-00fec9d22c99"
        },
        "item": {
          "id": "28d8934c-e587-45bc-90bf-5c8445e6013e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "75e0b731-1d08-44a0-ab99-1b870eba5064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1224dd-479e-4050-ad07-6aa8c2a0e9e4",
        "cursor": {
          "ref": "63df436b-8e6d-483d-abc1-969b4f73437d",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "786e7483-0f3e-4247-89d3-4742f4431bdf"
        },
        "item": {
          "id": "8c1224dd-479e-4050-ad07-6aa8c2a0e9e4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f23a0210-13e8-463f-a059-c95d4755744c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7a1908-e93c-4a21-8196-e167ca7fbe7a",
        "cursor": {
          "ref": "a0e811bd-8051-4113-9380-34f26aa1f25d",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3090af03-962e-458c-9267-6b133ef81639"
        },
        "item": {
          "id": "1c7a1908-e93c-4a21-8196-e167ca7fbe7a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ad86f8f8-3e48-4d07-8920-de05ec850be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ab8c5b-9bea-4525-a847-325ea3853780",
        "cursor": {
          "ref": "605c94e7-fc4b-4c12-ae80-a71b93e40d25",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "991379fc-c013-4ed9-a6f7-792640cfa4dd"
        },
        "item": {
          "id": "b3ab8c5b-9bea-4525-a847-325ea3853780",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b90defe8-5b56-48af-a5a9-41238da77b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2d8a1f-1bb1-425d-83cf-4e674b27b1c0",
        "cursor": {
          "ref": "d5e78082-91bb-41e0-b36f-485848e50509",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "35b3b938-0aef-4b6f-9ee2-9b82bb834dbf"
        },
        "item": {
          "id": "5b2d8a1f-1bb1-425d-83cf-4e674b27b1c0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c6fbcb9a-c973-4cf5-900f-3b79c5d88e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc14794d-804c-48a7-9d07-0cb580bb0825",
        "cursor": {
          "ref": "18174e9a-f8a6-43c1-9ee9-8a225a2e102e",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "eccec2fd-87e0-43f2-8dd8-5312c5dc7ef2"
        },
        "item": {
          "id": "fc14794d-804c-48a7-9d07-0cb580bb0825",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d6522251-0573-4c8d-bf42-e99af77be505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af852dc5-9702-4c24-9858-ca3e27b105c3",
        "cursor": {
          "ref": "f0eea3a1-7377-4651-8c18-c36fae7e530f",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5e0c5f82-7fba-4b59-bfef-816b182ce0a5"
        },
        "item": {
          "id": "af852dc5-9702-4c24-9858-ca3e27b105c3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7b4e3820-2d29-4dbf-9d90-67cbe1f736f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a22320-61e2-47f1-9277-d9bce2120358",
        "cursor": {
          "ref": "e46264e8-c9fc-4fa2-925b-25fd333f9af0",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5ea151eb-f1b8-4a32-8a41-c6bdeccbca6f"
        },
        "item": {
          "id": "e4a22320-61e2-47f1-9277-d9bce2120358",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8f6833a2-5044-4dd4-8dd4-ca6ed67c29dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b702dae-de1c-4318-9313-bb7ee830313f",
        "cursor": {
          "ref": "60c5f1a1-3413-49b5-af24-8c858e26c22a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8014111f-b58c-45cf-98f9-6336daf0b627"
        },
        "item": {
          "id": "5b702dae-de1c-4318-9313-bb7ee830313f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a6530af6-7d84-44ea-a06f-ae94817c9f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde8d842-443c-4267-95ad-8f5bb0a1dcc2",
        "cursor": {
          "ref": "d1bd2564-d0a3-44b3-809b-d9f4759ce3a3",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b9c46aa2-b60a-4cff-aaf2-8e566d51ba3c"
        },
        "item": {
          "id": "bde8d842-443c-4267-95ad-8f5bb0a1dcc2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0b7a2df7-15fc-43fb-85fc-03e0a77312f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a4548f-a6f0-4f6c-8a19-7d1ca085c1fa",
        "cursor": {
          "ref": "e1bc48f7-d9bc-436a-a148-13dbdd0dcdc2",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cfb69359-7284-4034-a9ae-ebf4138e320b"
        },
        "item": {
          "id": "d3a4548f-a6f0-4f6c-8a19-7d1ca085c1fa",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7ef0894a-79ee-4049-b777-285208d1d9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463095ce-074a-4273-a730-ac2e2dca1893",
        "cursor": {
          "ref": "f0d3d06a-f46f-4ab2-bc11-fced743988b9",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "015b4a5a-1d41-43dc-9dd9-cfdfd6cbb447"
        },
        "item": {
          "id": "463095ce-074a-4273-a730-ac2e2dca1893",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ab0eb4d9-e7a5-4b85-9706-eedf30cc4444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ef24e3-bcbe-4d1b-b046-43b6a30776f0",
        "cursor": {
          "ref": "1a5e7a16-9a02-4a9b-84ab-08bc6eb61372",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8d948340-699d-4902-a598-bd1a2227a038"
        },
        "item": {
          "id": "c3ef24e3-bcbe-4d1b-b046-43b6a30776f0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "db7bde8f-5efe-4946-920e-3c206ee45304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f70a54-70dc-4a1d-8507-54c2a892b466",
        "cursor": {
          "ref": "a4ae90a3-e5c0-456a-8b29-55bd4cbfb9ec",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "45cb173e-f390-43ee-b23d-36b1c9271d2e"
        },
        "item": {
          "id": "19f70a54-70dc-4a1d-8507-54c2a892b466",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4f4cb306-0452-4ee4-b948-7acbeebb58b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916d1670-f1e4-4179-8def-c8538e0adafd",
        "cursor": {
          "ref": "1af38f61-0b07-4e24-a87a-3b29436227a4",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f6876183-6b42-4e6b-92f0-7e727141671e"
        },
        "item": {
          "id": "916d1670-f1e4-4179-8def-c8538e0adafd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "98f40367-14ad-4424-8560-b6e374d9ba8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19775cdc-81b2-49c3-8037-ee51015099a6",
        "cursor": {
          "ref": "bdfbce5b-b3d6-45a5-a432-c857e8da94ae",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2c0cd540-1622-49d8-84b0-d8a8fd8f7048"
        },
        "item": {
          "id": "19775cdc-81b2-49c3-8037-ee51015099a6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0fe34c16-fda5-4023-a253-1e609e0635bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465c5a6d-d3bc-47c0-be1d-4120c81ba288",
        "cursor": {
          "ref": "2381caef-16ae-4fe5-9d02-065d8e0e9b05",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e0a5cc76-14b2-4ff6-9e6e-3c241262fe03"
        },
        "item": {
          "id": "465c5a6d-d3bc-47c0-be1d-4120c81ba288",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3c7ed2c1-dc6d-4cdf-bf1c-aa1756f7dcf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ee0790-0cc1-47a8-b280-472a21508a1f",
        "cursor": {
          "ref": "3f68b356-6292-4c6d-8af5-866052c89510",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3b406b48-1a61-46f9-bbd4-aa5e047326b9"
        },
        "item": {
          "id": "e8ee0790-0cc1-47a8-b280-472a21508a1f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1dd4f309-147c-4349-86c1-c507e58fa46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d65ac9-2c6b-491b-958a-618747c0b94c",
        "cursor": {
          "ref": "33fbd9cd-6d03-4f74-8c47-1412f6b83aa4",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "76ca82d0-45f4-4e2e-ba73-f0b052c5cb7b"
        },
        "item": {
          "id": "73d65ac9-2c6b-491b-958a-618747c0b94c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0cc3ece0-d86b-498d-8bb0-17fb61b08bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424572a0-f991-4d44-aaac-27b449970627",
        "cursor": {
          "ref": "8929a581-8b8b-4492-896a-65761b4971ee",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "57ba35b6-c39a-470f-9e50-02fa60866005"
        },
        "item": {
          "id": "424572a0-f991-4d44-aaac-27b449970627",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e3d91741-ea70-4f3b-8f52-8a78fc5e8ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1340e7-fd5b-4931-bc4f-a42ada0414b8",
        "cursor": {
          "ref": "6baa2321-9831-40b7-b779-8eece439fc35",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e0278e90-2325-4b71-b864-f0f9323b311e"
        },
        "item": {
          "id": "ff1340e7-fd5b-4931-bc4f-a42ada0414b8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b55afb78-3443-4561-96d6-1e587f1fc6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b75829-faa7-4c34-9d70-17ccbf5b0cb9",
        "cursor": {
          "ref": "2f31bcd4-00a1-4a78-9a30-051a2d3beee8",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6f3fb13a-17f5-47cc-a1f0-ea9d4038307a"
        },
        "item": {
          "id": "03b75829-faa7-4c34-9d70-17ccbf5b0cb9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0201e03d-8336-4621-a459-da21cbbe88bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bc1cee-0f77-417c-bf76-c6ccbad2ea2c",
        "cursor": {
          "ref": "c4d199e7-f19b-49b9-8c1b-b63556ab8134",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e7553b3f-b8e9-4758-a5f5-60ed50e8030d"
        },
        "item": {
          "id": "b7bc1cee-0f77-417c-bf76-c6ccbad2ea2c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "85d19796-f1a2-4715-b691-e458fde940ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db5e9c6-78ff-436a-ba56-9779bd3730ef",
        "cursor": {
          "ref": "d346865f-9c0e-4764-b17d-a46d649ed22b",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1b8232d6-7d84-47d7-a391-06b952c122e4"
        },
        "item": {
          "id": "4db5e9c6-78ff-436a-ba56-9779bd3730ef",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f52da191-5cf7-46b5-95e2-50659a3736b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4952f1-0d59-4341-9475-453897273fa5",
        "cursor": {
          "ref": "59ad3866-5a50-4463-a288-a6b9f0fdef28",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "feb7deb5-610a-4ed4-8b08-28adae887f0d"
        },
        "item": {
          "id": "ec4952f1-0d59-4341-9475-453897273fa5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f9b62a00-30fa-4ec0-a075-9e25daadad35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d8e48a-589e-4ba7-a957-0fe962c5ca02",
        "cursor": {
          "ref": "c6b74cff-0bae-4e8b-b809-dc166286a6bd",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4489fdf5-1b23-4c00-86a9-07c3d329422d"
        },
        "item": {
          "id": "b3d8e48a-589e-4ba7-a957-0fe962c5ca02",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "86bfdb65-6c79-4b19-9300-0ca97a4654f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b98408-4804-4192-8df8-73c78db335b8",
        "cursor": {
          "ref": "eb5423c2-f341-4fd5-b51f-3d0e990ceb53",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ebd93b96-515d-4285-be7b-e3c3897626d3"
        },
        "item": {
          "id": "c2b98408-4804-4192-8df8-73c78db335b8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c82c463a-0529-4d3c-abae-346f6ccfce81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb90510e-27c0-4cb8-b37a-31114c0d0523",
        "cursor": {
          "ref": "1d19f515-20b7-4e33-88e7-447bd9718eed",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c7452236-866b-476f-a90a-ab56911be1a9"
        },
        "item": {
          "id": "fb90510e-27c0-4cb8-b37a-31114c0d0523",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0d1ed958-13d8-4ba3-bbe3-d30d48d86eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e751789-d8b2-4101-a4ee-a8c49b367df3",
        "cursor": {
          "ref": "21298e47-21bc-4c12-8d58-5c02ece404da",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8fc6f429-61e2-411b-8551-9509c1225b53"
        },
        "item": {
          "id": "3e751789-d8b2-4101-a4ee-a8c49b367df3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a77a6479-29b8-4b6d-a751-2e53acd3c2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a7d5ba-fc91-42b3-ac2d-9f7129cd7f10",
        "cursor": {
          "ref": "3cc69af6-bf56-4116-ac2b-c68d54a55eec",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "70919e22-3b4c-4654-9de0-8a4f091766e2"
        },
        "item": {
          "id": "d7a7d5ba-fc91-42b3-ac2d-9f7129cd7f10",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a29bd55e-6bdd-4612-9911-a5436d9a20f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316cf559-0556-4ecf-929e-a430d490d3e9",
        "cursor": {
          "ref": "500adad9-cd1e-4aba-9be6-23966b1324f1",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e194641a-ef3b-4cdc-862d-e625e73eaf04"
        },
        "item": {
          "id": "316cf559-0556-4ecf-929e-a430d490d3e9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "60858dc0-6e6e-4178-8c9a-a64b764e5329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f55b62-e487-4334-a3a4-6640ce77bb16",
        "cursor": {
          "ref": "36cf7a86-9953-4294-b2df-a3ef5ab9694b",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2f3f567c-7be5-440a-bcb9-cdc3f6c67cdc"
        },
        "item": {
          "id": "69f55b62-e487-4334-a3a4-6640ce77bb16",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3fdc0b34-1386-4de6-81bf-45dcf873ec0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08aa59d-153c-42d1-8425-0c803792a9ce",
        "cursor": {
          "ref": "87f3d903-1e06-472b-b9a8-3bdfc5971fef",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1602ea05-90d1-4d44-9d27-b74cc6ef194f"
        },
        "item": {
          "id": "b08aa59d-153c-42d1-8425-0c803792a9ce",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8e4cb3e9-8da6-4425-a79a-db777d8b7614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636e4e2d-fbe8-4521-9f01-7c96ec0981ee",
        "cursor": {
          "ref": "80ddb230-b02f-45dc-97e2-37c5dab55452",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "aaee8caf-c89f-4783-93ec-3a247f4e502e"
        },
        "item": {
          "id": "636e4e2d-fbe8-4521-9f01-7c96ec0981ee",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8758485d-c32c-41db-af5e-397d5b430028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9641c5-5df6-4f10-9334-33e7a90cd335",
        "cursor": {
          "ref": "f7c29f62-faf1-4c32-a0a6-84fdd118ba1c",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4b2b39e7-e307-48bf-b620-8f3abd38ed81"
        },
        "item": {
          "id": "0b9641c5-5df6-4f10-9334-33e7a90cd335",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fa821aa0-dca3-48f0-839a-e0ffd22603d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370f7975-c1f3-4b98-a4ce-aebebab325ab",
        "cursor": {
          "ref": "7b5d03df-0bf7-4fec-9e0a-07917de4186d",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1a242b8b-6730-4368-9a34-944f5ab5f375"
        },
        "item": {
          "id": "370f7975-c1f3-4b98-a4ce-aebebab325ab",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6b236724-a1d9-4fd8-8778-0d907aceaf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb716de-dbf6-4458-b677-c1b221129b83",
        "cursor": {
          "ref": "b4834aa1-bd86-40f1-9a13-e8502ab21d2a",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "18a32dd4-74e3-4612-9bbe-23e038e7cb24"
        },
        "item": {
          "id": "ecb716de-dbf6-4458-b677-c1b221129b83",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "48cd5def-03b5-4f68-8822-ddf651600cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b48f860-22c0-4772-b192-aac1ff15095f",
        "cursor": {
          "ref": "33e53952-bbd8-4020-9379-9889f9dc55dc",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "52567798-0a98-4008-a22a-2f5cb7ad7ac9"
        },
        "item": {
          "id": "4b48f860-22c0-4772-b192-aac1ff15095f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "492d510c-b74b-41f4-81c1-354cc1dd3cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d7fae3-bb94-471f-be2a-7eb9e4935ff6",
        "cursor": {
          "ref": "d0d9f6c4-17b4-430a-92cc-7a37e4f1d11c",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "098a5793-23c8-4378-a84e-a9e96680d9ad"
        },
        "item": {
          "id": "19d7fae3-bb94-471f-be2a-7eb9e4935ff6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2a972230-1d3f-459d-879a-ed8d536841b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0692ec-a548-49dc-9581-7516ecc308f0",
        "cursor": {
          "ref": "6ba341d5-ab09-4a21-9b10-8e6ad81e740d",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a8798906-428b-4965-b506-ee730ef622a3"
        },
        "item": {
          "id": "de0692ec-a548-49dc-9581-7516ecc308f0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6e7d5f32-cb16-45f8-84ed-09ff3e3b2ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7d8b30-06be-45e1-926d-0b72f6feff0f",
        "cursor": {
          "ref": "7f429092-a439-4ce3-bfa2-ae4c7b38b06a",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e40c15ee-8896-46df-8ce2-459dd504682f"
        },
        "item": {
          "id": "bd7d8b30-06be-45e1-926d-0b72f6feff0f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bc48e6ae-cd06-4efd-a7cc-c5c977baab36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7b8161-273a-4bc2-8f4a-70805710a41b",
        "cursor": {
          "ref": "ea29d809-8ad5-428b-915a-a27bf8ae4179",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7bef58b2-b34a-4d02-b827-a3b98a333fcc"
        },
        "item": {
          "id": "ba7b8161-273a-4bc2-8f4a-70805710a41b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ab278dca-5cc1-45f2-8522-c1b65435363b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f667f6b9-1bb2-4ea2-8522-cadc38e4ebd9",
        "cursor": {
          "ref": "949cae0c-a069-4405-93eb-2743db7168cd",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ac416496-91db-40dd-91bd-c51de4642aa8"
        },
        "item": {
          "id": "f667f6b9-1bb2-4ea2-8522-cadc38e4ebd9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9e0ab14e-a6a0-416a-a747-87e0b107d55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df895780-4b11-4bc6-810c-7c8808a5d82e",
        "cursor": {
          "ref": "49124fc1-72b8-45ec-a6cc-f4be5ca38aed",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4e4eb2a6-a5c9-4a41-8d2a-b2f38722a7bb"
        },
        "item": {
          "id": "df895780-4b11-4bc6-810c-7c8808a5d82e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a13ba429-6568-4e39-840a-8f5807f29634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c797dca-2024-4206-b477-ffc6a76abaff",
        "cursor": {
          "ref": "cf69c6b7-901f-4816-babd-c102e5bf73ec",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e731bf05-f8ef-4b9a-8a17-5fd18e5103b7"
        },
        "item": {
          "id": "4c797dca-2024-4206-b477-ffc6a76abaff",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "771e7cb7-f2a8-41a1-b2a7-25e7c9847b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03453765-a4fc-424b-89ce-8bb082c7ef72",
        "cursor": {
          "ref": "6da0ea13-ba98-4864-87d4-d244c15f79a3",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b1891a16-5854-4f2e-b0b6-80711dbced65"
        },
        "item": {
          "id": "03453765-a4fc-424b-89ce-8bb082c7ef72",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "31a8a07e-c1f6-448d-852d-451dbfb3e12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc0d2c2-3ae9-42b3-b362-209762614042",
        "cursor": {
          "ref": "4f88cb11-1392-46b6-8734-1d3831a8e9e8",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5222dd1d-6d45-47f9-aae2-44de33a539ad"
        },
        "item": {
          "id": "9cc0d2c2-3ae9-42b3-b362-209762614042",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2c376fec-c67a-431f-be1d-fe4b2c2da713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455aed97-f6e0-436c-9c2e-fa97eb4b0554",
        "cursor": {
          "ref": "e3b018a7-80a9-46c8-b98f-7690e2096564",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c38e128b-0818-4d58-ae62-d123507e3039"
        },
        "item": {
          "id": "455aed97-f6e0-436c-9c2e-fa97eb4b0554",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f7638cec-e23b-4fc1-883f-bb1b9080466d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9658b56-9e30-49d8-bc99-58110dc26259",
        "cursor": {
          "ref": "d33762ba-986a-4825-b981-cd43613317cc",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e3eb5654-123d-49ca-baf5-48f0d62731bf"
        },
        "item": {
          "id": "a9658b56-9e30-49d8-bc99-58110dc26259",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "546f071b-7dd9-4b21-9f80-12168b78f583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640813b2-9911-4ab6-950a-4317f7b449ba",
        "cursor": {
          "ref": "4a3764de-3af5-4ad0-b3ea-f2f8aa55d709",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8bd8fc21-ae70-4826-b28d-d20882b973ad"
        },
        "item": {
          "id": "640813b2-9911-4ab6-950a-4317f7b449ba",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fdabe8ea-9f5f-4106-99c4-59f084824307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9761c262-0438-424b-8de7-2e92acb3201a",
        "cursor": {
          "ref": "1f6e6568-88fc-4699-916c-edd2e076cbe7",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dca99f9f-03b6-41e7-bfb1-615a152a8e88"
        },
        "item": {
          "id": "9761c262-0438-424b-8de7-2e92acb3201a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8e0ad08d-ff9f-4876-a2b9-284eb68c04e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41942f31-b80a-4055-98cd-1d816f493d5c",
        "cursor": {
          "ref": "f0dc7f6b-8b1e-42f7-8194-1242beead3bb",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ccfa05a5-154a-425f-ab79-3d6ba0915e87"
        },
        "item": {
          "id": "41942f31-b80a-4055-98cd-1d816f493d5c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "96be4cbc-3ac0-46d5-adbf-109395f136d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778653a4-5c07-4504-a100-962d26fd4059",
        "cursor": {
          "ref": "9c434775-6fc3-4d85-a6f5-91e8657b0686",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d3193dbc-50f3-4a57-8de2-20fb10263ac9"
        },
        "item": {
          "id": "778653a4-5c07-4504-a100-962d26fd4059",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3dcd96bc-684e-4814-8655-067f118d6989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe69e92-e1d6-4bd7-8e75-38b24f54a61b",
        "cursor": {
          "ref": "8cdec738-bf5d-4cc5-9481-130f6d78172f",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "33e94769-a0f2-4b73-9f6d-0423a89b4e5c"
        },
        "item": {
          "id": "6fe69e92-e1d6-4bd7-8e75-38b24f54a61b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "cb628afd-7c02-4b21-892e-71893a445f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7f9b0a-5d02-48e0-8fc7-8a29aefd259f",
        "cursor": {
          "ref": "546d9996-dfd0-42ad-99a5-f3c899bf56bc",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8a594fcf-fcd4-40cc-afc3-2f198139e748"
        },
        "item": {
          "id": "0f7f9b0a-5d02-48e0-8fc7-8a29aefd259f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "19241cc0-17f8-4a6e-89a7-cfb02da52f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b808d82-92cf-4af7-9f08-d33674dd381e",
        "cursor": {
          "ref": "bb1de0bb-2180-4643-a1ac-e1e89c6ba152",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8f603244-3bde-4134-ae65-441a369f63ba"
        },
        "item": {
          "id": "9b808d82-92cf-4af7-9f08-d33674dd381e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d1792dbf-caa9-4d61-b9d8-a2ed1cc4fe43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e583799-7a63-4d81-9ef1-2d9669694856",
        "cursor": {
          "ref": "668b5af9-a264-4dc0-b3f3-26450a693b18",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "964accce-b2b9-497f-99a9-36b1f0545902"
        },
        "item": {
          "id": "2e583799-7a63-4d81-9ef1-2d9669694856",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e3a05fa1-eea5-42c4-a720-a7155a2131e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7072716-9097-4182-a272-5e90996867f4",
        "cursor": {
          "ref": "1bd519aa-8def-4315-986e-80d5959f3e8e",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "58df91f2-935d-4b5b-81ea-71365237b18d"
        },
        "item": {
          "id": "a7072716-9097-4182-a272-5e90996867f4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a25d0d6a-7874-4eae-b441-e7e06f60576e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32e28be-e3e6-4b25-abba-06410f011e0c",
        "cursor": {
          "ref": "48f366ba-e981-466a-a503-98256f4574f8",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2a54a24b-975f-4a25-ad99-7ff2f0d5e90a"
        },
        "item": {
          "id": "b32e28be-e3e6-4b25-abba-06410f011e0c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "af4b7aed-4be3-483f-a653-55b449bd28c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ee965e-e30e-450a-92f5-78c1924a3abd",
        "cursor": {
          "ref": "cd8c0680-65a6-437b-86be-89c9bb64e15e",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "58716a74-43de-485f-a9b5-f8e31bc00324"
        },
        "item": {
          "id": "a6ee965e-e30e-450a-92f5-78c1924a3abd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d87a16fe-5cce-4639-876a-6c57e2e04a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca00d747-9bf9-4e62-a643-5fa4fed81dc7",
        "cursor": {
          "ref": "ddcea094-687f-46f5-b63e-d037dfdcfd47",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d228cee7-9e2a-4b71-ac48-f5b2d44ca0b9"
        },
        "item": {
          "id": "ca00d747-9bf9-4e62-a643-5fa4fed81dc7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "dd776111-3400-4493-ba98-ac8c0032f452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebe64cd-a8de-4b1d-bdfa-243746797655",
        "cursor": {
          "ref": "710bf80d-1ec4-40f1-904c-31669cc1811e",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "79c8044c-568c-41fc-aa25-d73e48598a17"
        },
        "item": {
          "id": "aebe64cd-a8de-4b1d-bdfa-243746797655",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4b984ef6-c507-47c3-a4c9-2cc208fc80f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b480a501-e2b8-4c01-8a61-86e7148299f6",
        "cursor": {
          "ref": "913c400d-2047-4624-b719-5de887a18ff7",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bb9c794e-9c1f-48db-aba0-c6f70a2698b3"
        },
        "item": {
          "id": "b480a501-e2b8-4c01-8a61-86e7148299f6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "74cbd2e8-8317-41de-af3e-53699a31f625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06e463d-0ca4-4094-ae99-82610820c4ca",
        "cursor": {
          "ref": "a0c45db0-e52d-44bc-8242-2120e1135998",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5a36e080-302b-4545-95e5-5545b83d3085"
        },
        "item": {
          "id": "d06e463d-0ca4-4094-ae99-82610820c4ca",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1df8b3af-d169-479c-93fa-d30bcf58010e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f2da22-8269-4666-98e4-d32efc5b44b5",
        "cursor": {
          "ref": "ecd9936d-2ae0-44e1-b353-f5b3cb2196f6",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "308c515d-46c3-4863-bca6-d498c4b0cbd5"
        },
        "item": {
          "id": "16f2da22-8269-4666-98e4-d32efc5b44b5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ddcc11ac-0994-465b-933d-ba6197fb6b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4c64c4-001c-4954-9bd2-17844486f355",
        "cursor": {
          "ref": "271dbadc-8333-4981-ae71-1569f605d781",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2225bef4-4409-4d1e-899e-a96514dd8edd"
        },
        "item": {
          "id": "6d4c64c4-001c-4954-9bd2-17844486f355",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8c7d8624-927a-48b4-84da-c819b121af72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8463a7-6b27-44c2-b443-c89e79d1fa66",
        "cursor": {
          "ref": "bfecdb72-14b7-4951-b928-7f9317f2cb8b",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "23f98711-b703-4d5b-b9f9-88048af43a5e"
        },
        "item": {
          "id": "6e8463a7-6b27-44c2-b443-c89e79d1fa66",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7d49410c-8172-48d8-ade1-aa28b058a74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516269a9-e216-4da7-9591-ad07df9a3aef",
        "cursor": {
          "ref": "87b88166-6044-47c2-8d93-81f48b948f38",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "07b11683-11e4-4013-8f5f-5dd22145425e"
        },
        "item": {
          "id": "516269a9-e216-4da7-9591-ad07df9a3aef",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b3c29591-2e77-4507-870e-0f251a9680c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88202c1d-e1ff-4fcc-bf4c-de631e91beaa",
        "cursor": {
          "ref": "289246ab-7a88-4bda-82bb-9c908e0147b1",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "23bd8a77-ffc0-4e68-8637-a8e3cc25d113"
        },
        "item": {
          "id": "88202c1d-e1ff-4fcc-bf4c-de631e91beaa",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f545487e-99e7-49c5-a45c-f968dc3ee697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de34f91-932e-4784-b27d-f1c0a9d3a5ef",
        "cursor": {
          "ref": "8a2bae3f-4338-4c6e-bf93-7f9608be40d3",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d9b38496-8f1c-4632-9abf-f6ce6d68eb89"
        },
        "item": {
          "id": "9de34f91-932e-4784-b27d-f1c0a9d3a5ef",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a65a928e-1918-47da-8185-0279df297f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230ed1f8-f3ed-44ca-b373-276fb10887d1",
        "cursor": {
          "ref": "bf3f2bd1-b79a-4689-a8d5-6c4815f1d64a",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2c930cb1-ccf9-4e2a-81a7-14b2f42c000e"
        },
        "item": {
          "id": "230ed1f8-f3ed-44ca-b373-276fb10887d1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "76d90da8-f301-4726-b25d-8a845c94af8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d21bed-3e1b-4016-b130-91aecc0a53aa",
        "cursor": {
          "ref": "381171cf-2e2d-4fb5-89d8-b622b7c39b4f",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2ef8ea51-7e0e-4fda-9f96-68757eea1000"
        },
        "item": {
          "id": "71d21bed-3e1b-4016-b130-91aecc0a53aa",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "371b9ead-7303-441b-87ba-55840e80ecf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3df9e7e-f28b-4d8f-82a3-a47b932a2681",
        "cursor": {
          "ref": "6cf133a2-bf32-4711-a5c1-db952566c1d2",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5ef71c95-c465-4f55-9ef7-b6c30d857d06"
        },
        "item": {
          "id": "b3df9e7e-f28b-4d8f-82a3-a47b932a2681",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bd65de13-4aba-4f56-9581-d08e4b976a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91042167-c180-4694-aaca-d208ab8ec514",
        "cursor": {
          "ref": "439c626e-207d-4f05-8f30-11013d8b2706",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2b6782d3-9059-4062-8e81-c2afd9b415d3"
        },
        "item": {
          "id": "91042167-c180-4694-aaca-d208ab8ec514",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "22469ccf-5182-4ee8-bcd6-f06ce8948f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f726bc91-157b-4b66-94c4-8fd864501dd3",
        "cursor": {
          "ref": "5a16e032-afec-45cd-86fc-dc1e8bb008ec",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "faaaccaf-3440-412e-aab6-4125a9bc893d"
        },
        "item": {
          "id": "f726bc91-157b-4b66-94c4-8fd864501dd3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "32696ca3-bb10-4d78-9e67-fc47108bb103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89f3260-7cd7-4b67-9b6d-b690e9c74451",
        "cursor": {
          "ref": "8adf2119-7fbe-4802-9724-38f760df59bd",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4821cb26-38d5-4540-a869-522485922746"
        },
        "item": {
          "id": "e89f3260-7cd7-4b67-9b6d-b690e9c74451",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6a3661a1-1c50-4c80-91e1-8c050b4a1c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b563ba-e9bf-4ee9-b8ef-808b540496cc",
        "cursor": {
          "ref": "bbf980b8-fd52-4b3b-8f39-ec5b03b67770",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "901aa11d-b032-4c06-9dfc-2a56d8c229c1"
        },
        "item": {
          "id": "b6b563ba-e9bf-4ee9-b8ef-808b540496cc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "89d735b8-3723-497c-830a-9351df21d070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c1ece9-8b31-4a90-9be5-3652b91d7c44",
        "cursor": {
          "ref": "5f616841-12df-4cac-9c1b-65ec7f20a9cd",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "49fdcf12-2dcb-4032-84a8-8b260a8b82fa"
        },
        "item": {
          "id": "99c1ece9-8b31-4a90-9be5-3652b91d7c44",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7eb2a131-5166-48c8-86d6-203a96f028d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e4e795-ce1e-47c0-b336-96660ab19a96",
        "cursor": {
          "ref": "f5a033bd-3e4f-4e5a-9ae9-c269ddb3ca87",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3358ce8b-8208-4316-a1eb-77bb01a12d24"
        },
        "item": {
          "id": "b0e4e795-ce1e-47c0-b336-96660ab19a96",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "038b0dc0-f7bd-49b6-9bc5-d91df46f63d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d354169-60e9-40df-910b-7244bf888ee0",
        "cursor": {
          "ref": "90d8a76d-051d-4ad5-aec0-254c4bc9c7f3",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "76bf605d-46f3-4ba9-9589-11ca9ad76ead"
        },
        "item": {
          "id": "4d354169-60e9-40df-910b-7244bf888ee0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3b05e547-71e0-4142-b803-d76072407048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb8b595-fa58-40d1-add3-2b7574088ea5",
        "cursor": {
          "ref": "902cb3f2-40af-46bf-9322-8f6aebcc9844",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e6b0f357-0be8-473e-9eda-d65ac6817d06"
        },
        "item": {
          "id": "6fb8b595-fa58-40d1-add3-2b7574088ea5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ba5e64a9-58c6-4236-be10-772954f5320e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0b78f2-3b4d-4bb1-8d88-b9354464790a",
        "cursor": {
          "ref": "f7842a02-9d35-458a-83f2-8534962716ec",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "24bf0ffe-fbcb-4554-8a46-6b267e29ee93"
        },
        "item": {
          "id": "eb0b78f2-3b4d-4bb1-8d88-b9354464790a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2b649a24-1c29-4c68-b956-0d6129d9dca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b79226-1f80-426b-b295-0b18da89db70",
        "cursor": {
          "ref": "e00c6b6c-83f8-4596-9fe9-a9770db9cc42",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "da6c8de6-b692-41b6-a9de-196a632e0798"
        },
        "item": {
          "id": "c5b79226-1f80-426b-b295-0b18da89db70",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d2a478f2-2677-4e33-9223-7fa42d88f336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b416e90-4ec1-4d86-a6e5-e20953bad6cc",
        "cursor": {
          "ref": "ac4acdad-3bca-4a77-b213-7958eb899944",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2fc66cc3-beb3-4d1d-beb9-ddb0010bcf6a"
        },
        "item": {
          "id": "2b416e90-4ec1-4d86-a6e5-e20953bad6cc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4c178302-4c66-4480-83a0-6a76d86d974d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed5f0ea-4770-4593-990d-966e3c54d4d7",
        "cursor": {
          "ref": "5efc3a55-09bc-4aa8-b29e-ce00929e8dd9",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "33f12e3d-d64c-4c5b-a4bd-7aa292fee265"
        },
        "item": {
          "id": "8ed5f0ea-4770-4593-990d-966e3c54d4d7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b344e5ee-1cb5-4968-ad9e-490a81fac812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d24187d-e5ea-46e3-8282-1cd82322a5b1",
        "cursor": {
          "ref": "3dabdf65-5d9e-4902-a028-54ef275e9f4d",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "aa1301a4-9b17-4c3e-b89a-d99a02db82ee"
        },
        "item": {
          "id": "7d24187d-e5ea-46e3-8282-1cd82322a5b1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cd987695-406e-4aa8-84e1-85b3befc436f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8659cc1b-d5a5-49ce-b0a8-242f6e03a7fd",
        "cursor": {
          "ref": "57f8878e-0085-4da5-a412-e4382fc850fd",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4396df44-4b74-4c2a-ac79-550cfbc3793c"
        },
        "item": {
          "id": "8659cc1b-d5a5-49ce-b0a8-242f6e03a7fd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "98b4b3fa-d1b1-4f09-94cf-152200aed2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fff22c-5464-4123-a448-0ed140519fe2",
        "cursor": {
          "ref": "cd22707d-0729-4f46-9417-636d41488941",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c554c1b7-c9fe-4f77-bb9f-c2129a5d3429"
        },
        "item": {
          "id": "76fff22c-5464-4123-a448-0ed140519fe2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "99dce93b-e232-400a-9267-b9ae64664e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1fabf4-bff9-4150-b72e-cbf8f91c152c",
        "cursor": {
          "ref": "2b62122a-8b0d-484c-95ab-e963919a527c",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "71e501e7-de82-4e03-a243-713893d27996"
        },
        "item": {
          "id": "0e1fabf4-bff9-4150-b72e-cbf8f91c152c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f4650c9a-cbff-448d-b001-8847d0687524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d818f03b-3c40-4ef4-ab15-03b82bf7fc6c",
        "cursor": {
          "ref": "d077be91-5eb0-45d0-9d23-a256e6cd81ea",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7d0115e8-018e-4ee0-9561-d9b11040169c"
        },
        "item": {
          "id": "d818f03b-3c40-4ef4-ab15-03b82bf7fc6c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "07a4e8e0-9fd2-493d-9e05-a835bf617d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde4f465-edff-4829-8071-ae60abf29f3a",
        "cursor": {
          "ref": "5850952c-4c47-4619-bbee-290173fe7f5d",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1a1867c6-7744-443d-a9f2-d19553d51788"
        },
        "item": {
          "id": "fde4f465-edff-4829-8071-ae60abf29f3a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "09668a43-9bc7-45eb-aa23-df5668bbda46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38061822-7ec3-4a71-9025-36d5c8d645bc",
        "cursor": {
          "ref": "37ec4c3e-e966-4684-a50b-a9303f0d39c2",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "91085b7d-28f5-42ff-ac98-0abac5604981"
        },
        "item": {
          "id": "38061822-7ec3-4a71-9025-36d5c8d645bc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "52ea7fc1-5e20-4374-8c3b-7fcf9d82b9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b11535-ff14-4b21-9147-a18b193e0771",
        "cursor": {
          "ref": "e6f52901-c60a-4265-a127-146dd2113fa0",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "cb0d3694-b20c-4b6c-abb2-ec6bd4e7cd65"
        },
        "item": {
          "id": "76b11535-ff14-4b21-9147-a18b193e0771",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e6255abf-b385-4afc-b21a-f26ba8204b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8ea39f-9c9d-4605-a4ce-160a23af0974",
        "cursor": {
          "ref": "39965080-e0d9-4f02-99b5-5e64ec3fdc47",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e728b634-5547-4641-acc5-656296fbbd5d"
        },
        "item": {
          "id": "7e8ea39f-9c9d-4605-a4ce-160a23af0974",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c23a40f2-68c0-4c79-b0cd-cc8a341caaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8378f6-f7f0-481a-96da-1bf1e93eff48",
        "cursor": {
          "ref": "14c0a8b3-660d-4ee1-8f72-c8bb419e7ac5",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5f2a47ad-d596-47d1-90da-41fc33a51a17"
        },
        "item": {
          "id": "1e8378f6-f7f0-481a-96da-1bf1e93eff48",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ca3a0658-89b8-4518-a45e-9c477bd4537c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8ff02d-1178-486c-9db6-6226666c41d8",
        "cursor": {
          "ref": "c0a9d679-c704-42f0-bad4-58950a49c73a",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c560b0fb-029d-49fc-a54e-1e0c1ed8d5b0"
        },
        "item": {
          "id": "df8ff02d-1178-486c-9db6-6226666c41d8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3d7def38-0f2c-4abe-9f68-438444012dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1cfef81-f4f1-40b1-a343-7846c0a655fa",
        "cursor": {
          "ref": "9b6297ec-2b12-4c8b-8ce2-0319fe98b227",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "bd6d1506-3123-4c28-9ef6-2c791f8bc616"
        },
        "item": {
          "id": "b1cfef81-f4f1-40b1-a343-7846c0a655fa",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "93ab5e27-1fc5-4b5c-99c6-431adc53a900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989160a8-9608-463d-b89f-e1aaaa1b141d",
        "cursor": {
          "ref": "b1fe0e34-b94e-4d19-b405-fecdc711a1f3",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8cec50e2-5963-4116-b64e-5a71ff633af0"
        },
        "item": {
          "id": "989160a8-9608-463d-b89f-e1aaaa1b141d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "506b36b9-44cb-488f-9b20-41be4aadb467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a37c1c-64ad-4e2a-935f-e7728884b186",
        "cursor": {
          "ref": "e6aaf1c9-f394-45e9-aba2-ab0a3165e44e",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e8c97ebd-fe10-44d3-81f4-f23383c96ac0"
        },
        "item": {
          "id": "32a37c1c-64ad-4e2a-935f-e7728884b186",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f60e7441-e7f2-40af-b845-74653e856a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672ca7db-3cf2-4aed-8792-9ed487b0d45c",
        "cursor": {
          "ref": "b0f51f78-0d23-423b-87c2-5b1220c88d32",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "10c703ec-751c-4b89-82ea-329bf8d62928"
        },
        "item": {
          "id": "672ca7db-3cf2-4aed-8792-9ed487b0d45c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e5241a95-29c1-4bf5-a910-2e706a751b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43afa054-7ffc-451b-8326-36c8f5d5e9d0",
        "cursor": {
          "ref": "f1311526-4de0-48e9-bbd7-923079761a64",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8558f585-9ff2-4566-ae80-fef222d1172f"
        },
        "item": {
          "id": "43afa054-7ffc-451b-8326-36c8f5d5e9d0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "51113f1d-1558-4425-b38a-77e8d40a7ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d8f25c-7bc3-477a-b79a-4161c2cda5f2",
        "cursor": {
          "ref": "f3ebc1f6-b8e3-4918-8d9f-cffda7843f6b",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d9a1470c-ea3f-4f63-8369-1916dd41cb90"
        },
        "item": {
          "id": "78d8f25c-7bc3-477a-b79a-4161c2cda5f2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3448da7a-013a-4227-9a9b-3519d60e23f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5348c741-d6b0-4dfa-a8ad-c9807f4cc0ff",
        "cursor": {
          "ref": "2dd49d80-6636-46a8-b151-6a048e9f3c22",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "32a29343-ec11-4740-b93e-79a1dde2f32f"
        },
        "item": {
          "id": "5348c741-d6b0-4dfa-a8ad-c9807f4cc0ff",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f0ac91a2-5828-4f3c-a359-148ad16298f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb3048d-0b08-4770-827d-30c9ae0e2208",
        "cursor": {
          "ref": "1267deb8-68a7-4c09-8196-13d226bcfa5b",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d95d69cf-f2e5-4886-849d-677d005d1ee1"
        },
        "item": {
          "id": "adb3048d-0b08-4770-827d-30c9ae0e2208",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fa769724-c384-4743-8d13-22fdeaa98ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594bb112-52ef-406e-b35b-f52ade7db494",
        "cursor": {
          "ref": "37c3276a-9f94-4a04-b2a9-8945c92d9a5c",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "26c32613-017e-4429-8795-dd2347fbcc4d"
        },
        "item": {
          "id": "594bb112-52ef-406e-b35b-f52ade7db494",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "17f8a2dd-ae52-4f1e-a03f-e8f0186a6105",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb342b8f-b28b-4c22-bbc1-f359ba5a0761",
        "cursor": {
          "ref": "25dde11d-d6c4-4e1e-a69d-92f6552f6684",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c8380c4e-57b7-4da1-b386-c50c0c44695e"
        },
        "item": {
          "id": "eb342b8f-b28b-4c22-bbc1-f359ba5a0761",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8b9357d3-2be8-41e0-a2e3-b4440d07c864",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfe58d0-7db1-4a90-aa02-c0d73729ba31",
        "cursor": {
          "ref": "d7b59a5b-7bec-4b85-bf3b-44502acf3006",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "2627ee43-30f7-49a1-891c-7f62ed8513df"
        },
        "item": {
          "id": "3dfe58d0-7db1-4a90-aa02-c0d73729ba31",
          "name": "credentials_verify"
        },
        "response": {
          "id": "329f054c-8863-4a93-9230-8d9e318b979d",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7655bf8-a91f-4754-acb3-46191e8aaef9",
        "cursor": {
          "ref": "7b6747f9-2848-4577-a17f-5301be277b5a",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "aaa86337-b599-4f0c-ade9-30a7a70ceed4"
        },
        "item": {
          "id": "f7655bf8-a91f-4754-acb3-46191e8aaef9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3278d0f1-bb3e-4e01-851e-017fc480c814",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5adac616-ae6d-40d2-b667-7417fc0b018d",
        "cursor": {
          "ref": "45bb0cc6-3993-4a00-8651-9a33de17decd",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1d644f0b-b6f5-4174-809d-ba14703d2515"
        },
        "item": {
          "id": "5adac616-ae6d-40d2-b667-7417fc0b018d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1cb59e57-3a82-47df-a68b-e542b8aad6af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5adac616-ae6d-40d2-b667-7417fc0b018d",
        "cursor": {
          "ref": "45bb0cc6-3993-4a00-8651-9a33de17decd",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1d644f0b-b6f5-4174-809d-ba14703d2515"
        },
        "item": {
          "id": "5adac616-ae6d-40d2-b667-7417fc0b018d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1cb59e57-3a82-47df-a68b-e542b8aad6af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1bdc98-ccc1-4429-b792-1c38a340be3a",
        "cursor": {
          "ref": "767262f4-4dad-40f7-b0e7-e5482349892e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b83a1623-3f7c-43c1-b3cc-ce6ecc3f907f"
        },
        "item": {
          "id": "1b1bdc98-ccc1-4429-b792-1c38a340be3a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "219a3ab8-0ebb-4555-8023-08a4e8692193",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95cfa40-2b1e-41b9-8c35-1318154328f4",
        "cursor": {
          "ref": "e5a17e6e-64b3-48a2-b5e6-ddbc82321cab",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ad5b27a3-a13f-40d2-b649-4129b5e857ab"
        },
        "item": {
          "id": "a95cfa40-2b1e-41b9-8c35-1318154328f4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e872eb3a-c902-4736-b37a-a567c34fa611",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}