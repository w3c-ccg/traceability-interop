{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "defa52bf-32ee-4111-962e-a1aae7a1a50f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d26f5bb4-8a44-4414-a090-6c215f308958",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18de5415-307a-4318-a205-e643dee58bac",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "765b077e-15f2-4564-96cb-d439964db27d"
                }
              }
            ]
          },
          {
            "id": "566d91bf-a375-4e05-ad01-893cf4c698ac",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "63751817-ee96-4331-983f-370e4f55a8ab",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b9b2fb5f-1696-4e34-bb32-b1769579a537"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "300b7c6e-5274-418c-9377-715ade24a700",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "afb2a212-b216-45a5-b1dc-561cc0a1d75c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "001bc6bf-9e7f-4745-9d1b-4554535a247f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05efac00-3b1c-406b-a384-464cd1977727",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c96bfc92-683a-4038-9968-0fd7a791bb28"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7dbe3885-defa-4a90-9c06-f011b96fe824",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ef9cac9-056c-41ae-b3d5-b8534c96954e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "69bc8001-1814-4ed8-91d6-00fd912bd234",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "800b0b52-89ef-4ccb-839b-8eb807721fb3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7dd4f1df-9f2e-4664-8c70-760fc4bd8ce1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dff62be7-77e4-4f1f-8ce6-867da9c70034"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "275d4f20-8874-4f86-b3c7-c6e80e4a0ba7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1dc7199-c483-4c75-82c5-3b06f4fea6fd"
            }
          }
        ]
      },
      {
        "id": "f2ca3323-68d2-4864-b9d1-bb588e2a9d07",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "45266555-7241-48e8-8295-f6395980d0fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5bcc9691-31c0-4934-8e11-85a4ea469815",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "72d44a77-6311-420f-962a-0b8402d5bbc0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1725f90-aa58-4c3d-8ef7-ee81fc0a835c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53624e27-02de-4a54-b784-f62db25c0d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72af1dd7-0df8-4359-80fc-7927604ec037",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64aaa444-7dd6-4405-bcb9-8afe4a4670f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84d3d0df-b914-4d10-ae52-26de9ee4cc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8aa0af-9e6d-415d-a191-d979abb8727b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9acea4e-e50d-4185-b0cd-19f151e9b559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ed50fac-b17e-434a-9d0c-d13cc46ad1ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7cc6c083-ce70-451c-b82c-14809ed46e39",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b55a2a42-1025-420b-8562-04fd2be875ff",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d341da-30cc-401e-9510-fe19f58b929f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a288b5c-557d-44ba-a99b-130c4af037b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19addddb-3640-4887-bb66-83f70fb76866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc4499f-a36a-4da8-bc89-8ec5a8662153"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "608cdf68-af96-4ea7-bb08-c44e736ab62b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6e8f1b98-0c6c-4ac7-946a-8b495faa856b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4bc763d-4dd2-4099-9037-5db8d383528f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1f099bfc-9550-4c25-a678-2ae78391cf3e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03704068-60d4-435b-bea1-8b56600f8832",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "712cb856-baa1-43b1-9425-ef06b675739c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7063cb0-503a-467a-b173-c7e124f7b1f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4d57ddb-b198-4aa6-ad74-3b6b2a1aba18"
            }
          }
        ]
      },
      {
        "id": "4e52c83e-02b4-4483-b27a-8b7110b6e818",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9f1abb43-8172-4dba-90db-317d3faa6f02",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45caabfa-2e8a-46a8-a35a-1d9eaab7b395",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c99c8d1a-9429-4868-a924-c3127624ef9c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f355da47-841d-4355-9833-45b74716e508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a523226c-6e30-4840-b477-17bfb52970d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c29364a-c0fc-4173-be77-baaf07d05950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5efab20e-7a0c-4d28-af9c-dd0017964b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790ae11c-d3ba-4d97-95a8-03ea425b7599",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6482dc-9cbd-43ca-9275-f50dce87c130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79967f70-835e-42c8-8b16-972bcfc27eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7dcbcb8-7ba8-4997-b304-ddafd5561e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60657944-34b4-4ab2-85b6-591321a53a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fab8a35-d6e4-42a1-8005-1c99167b481d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6745aa81-31ab-41c0-961d-e37824b39662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f15021-2c33-40f3-8f56-e6a3b3faa0a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5b721a-f0ca-42e3-a088-a94802f9495b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba76f018-bf2e-4934-abea-0e73706db0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4254c32-e2c0-481c-a027-a5faa1c49d23",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8009e4-1139-480c-9689-e46584304228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e50f84-1cb2-4b9f-ac47-c4ca1f570dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d10774e-31b8-4a15-8bd8-dc2ee9398e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22c5236f-f8fc-476d-91b2-8757ce4c8d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd389360-c666-41af-8607-17a3f2c680d7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8ab28e-de2f-400b-ae8e-e37265d6b42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a8d6e8-ac8c-456e-9806-d8ca9cada9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe52cb7-016f-4b41-a58d-f75f7a6ecb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8b69cc6-ab5f-4d23-8f34-6fc4ca379fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48623dc-0e7d-482a-9cac-522f5c3394f8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8c1721-00d7-4ea5-96df-8c06a0ecb7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b87267-dc53-41c7-98e8-54a703917857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25955af8-51ca-4adb-9093-b4cb8c49dc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9770c859-ccf1-4df0-b584-1b7179809ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bc6c27-a34b-4371-afca-ffa9371ba275",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0526a28c-cf63-45a6-86c7-3071a3dd10d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3822b90e-ec03-49f6-b2ab-1117a8a40204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b939144-16d1-4ca6-b4f7-12b2ed5aa92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ddbe51d-79db-4249-af01-3250f6b4471f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4476fdbd-c576-4d6c-99f9-c0f233eb7ea1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90360a62-eba2-45d1-b5a4-d4a54dfb1b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c06cd0-671a-45e2-b460-574945376a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e63454-8784-4d36-a9b0-17cddd24d802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76f6b3ca-1e0b-41db-b233-f737af931012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903e788c-a864-454d-a895-4b4a8883bcbf",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd56f496-6a7c-4ea0-a0dc-a9410193d910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb18c29-6b87-4e08-a1ff-3be1185941bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d03064a-c7b9-4736-80ff-5c1af8489156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54bd1bb9-a8e2-463d-a54d-758daae12153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a754b2-b982-4367-aacb-94ead9a5a8f8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ef4737-06cb-40e9-b72a-44358979bc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8d46fd-66bc-48a2-936d-174af03e84b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105a8bf5-6518-4598-8150-134904019717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a9862bd-5e7c-4d22-84e0-15d90c1956d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a780c37-ab66-4ed6-a529-9bf134bb44a8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e7339e-f83e-4e67-baba-2c0dc64bc0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956d75e8-c5e9-466b-8672-084a77fc8f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8e8d6e-861f-4def-b59c-da16b3c9876c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "119c0f53-2313-4ffa-a7da-cd457316847b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac0ac13-b39e-4e3f-a9b3-d32d69bbe9de",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b569b229-5bd7-497c-bc6b-41b0f8e3e6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258bf171-cf53-44d1-a20b-28424e2c2814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e4b78a-d228-48f0-9b3c-a43e4d3d6dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2f04f0b-e099-423e-8876-c124faf1a16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7a5644-ab9c-4335-a065-c2f32045faa7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a20d37a-96ea-4f92-b30f-262bf02808d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9b734d-9102-435d-88cc-cae5211ad771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035da80f-0b99-47b7-9ff8-6fc88fccad0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f124cd8-16a7-4839-8a30-711d02f05e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad2a03f-36ac-473c-b767-188b754e0531",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3c8f0f-7834-45a6-aa56-5b512b7e61fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfdfa3ec-3e68-4e56-b784-a1666bf23200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c4cecc-8e6d-46c1-ab65-11126855c5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a8839fa-82a2-40d2-acc7-dae0269a3e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be9df77-9c7e-460c-9856-dc13cda3cc0a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1c523d-65af-4f26-8996-68b14f858682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca0e6a1-6258-4e2d-a067-05b4929c349e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca26e5c-6c44-4964-ae26-6bee6f469136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf8bbcd1-47b8-411b-a142-d8ed84e282fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5f559c-e423-498b-a0aa-9930bca9fe41",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53454ac-8c89-48f9-a74d-e13cc3927784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2aa634-ce0f-4c63-b515-19faa292bf2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fc39d0-0397-4245-ab2a-e314955fed3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70a4eab7-ff73-4d1a-9468-14b18bdfd8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a8c444-d583-4503-97ca-e77f4dadc061",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b77ae8-2663-4942-827e-47887c55fd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323b3e51-2bcf-403e-b205-b3df842c6e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ef7c00-3ff5-44f1-818f-b705e6e55eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f55e146-6afc-45bd-89aa-8bb43c3947b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421092d3-42a4-472b-85df-e285e3fafef0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34257cd4-8e26-4a68-8dc8-3f1cc088ea20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd84e3a3-bbeb-4347-98d7-11b420a2abd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b35eb9-023f-47d7-8366-00f8b2d7c1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "310f99d5-9823-40ba-8d58-6ccdf4eefcfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf443dd1-1942-4daa-a9b3-e8e3db9c5354",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125abf19-d578-40cf-bcd5-76681bb59532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c00c36-01a8-4ffd-adfe-28877fc2892d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fbbc81-8379-4f05-ba99-d72394734839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ccc6674-73d1-452d-a2a0-fd2d39cf11ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414232eb-0e16-4139-9d3b-1ac360b2b373",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19022d84-7563-4852-9d08-a45a77baddeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a70003-f5c6-4468-8e8d-5f5fa98cb8de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95971f9d-a5fe-4de0-ac86-b0ccecd240bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47bfbbf4-9c02-4d20-9778-091fccfd66c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381436f5-8f1d-4c9f-8ba1-400c1091f5d1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da557390-c488-489d-86cf-ffb8f994925e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea81b3a-7636-4c18-b3b2-e76906ca9e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9371ea82-ed55-41f4-a6a5-34eb948bdbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92019625-cc45-433b-9fa2-b3096fe4306c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b405b7-3a2b-4eb1-9264-ca8ba1db6a91",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e688695c-184d-4ec7-9703-4575b44587c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d70e567-286d-4624-8883-2516b7d385b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38316de9-b80d-444a-8e47-1d8fc69503b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4e34e1-1eb9-4c6c-b725-423eade601e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8dfaec-6ac7-424d-997a-53a0e84b03bc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3a6dc6-df72-44e5-932b-2b5e8d4ad4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2902264a-0958-4628-ab04-01f26e94f4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7e209a-23e8-4493-bb66-acabd2850120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1c05b1-e2c1-4be3-b49e-2604748aa5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda45535-2127-4019-be66-e3a3c79a2883",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4289f4b4-4c70-45d5-a6c5-2e636588c2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "456bcdd2-c399-483f-8de4-7ca4612989b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3102478f-f3cb-4b1d-a9a1-7ebd7b43bf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5a0a53-6137-467b-9954-f8b5f9119e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8532ee-cf99-4aad-95c0-3c88a7d16b62",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea24be98-c718-4f0e-ba38-5af92a4e9148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ef3243-ce8a-4115-b7df-4969124c89da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69371abb-c048-4f2c-be31-d22f3b51a6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0296d04f-f9e0-46ff-a3c6-3629c309115a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dbce74-f7ce-4191-a968-6da394a64cab",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee7a0e1-f7b4-419f-826d-b0a2acba4efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b7be56-236f-4759-9337-5e725c017c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da76d53-b620-4f1f-8803-255d0ea58215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea4f150-270d-454a-919b-85d09e774428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8de611e-bf36-4393-9801-f8086ab19061",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23112c3-92ee-4194-a196-9315b9474a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3841ef83-2dcf-4fad-921f-c15835aecda2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6395e557-9ec3-4bf6-8c1a-9b32d0ca1c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "566916b7-e423-483d-ae29-f3423ac62618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d1e51f-717f-4d2d-8644-f0c3678d625e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19749624-6bb1-4279-aded-f55f72a4675a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6a1d97-828e-4b34-95d2-9a2ae62c1acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e5654e-ebf5-4ea4-be46-9197c0d4f03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44c12feb-572f-4b14-9fc5-287e2b2de38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f93d884-eb35-4a9f-9276-4952ad124e2b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fc5ce3-c2af-4912-8a78-ee469e947c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9419020e-8edb-429b-b508-9c699743aacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d342f70-e2a1-42ee-81d8-0a2cb7d5ec38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d669f22d-dd02-4bdf-81cd-c65da93df9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51ae12c-857e-45bb-8c23-50c24bacdb9e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d850712b-76a6-4539-94f0-c6f2fa11771a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84422ba-db68-4ab1-9a32-23f38ad3d376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07dd4b6-eff0-468d-888e-9929f7b2ac5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "85292268-ac2b-4bda-a323-cf0d987e0e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba62a118-fac7-4969-8f1d-7d4ddf012801",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35602d0-61e4-4592-97a7-ede6160b241f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4489d3-a88f-4312-8cb8-a763413ba2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c447da86-a14f-42bf-9a62-3e86cc1fbe03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "453dcc73-3ed5-4360-8601-e1ed2067b773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fedff2-ef36-443f-aefc-4b1585dff376",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b75045a-4379-4a55-9fde-f0be25188263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3cbf1e0-2e0d-4b68-b69b-b3380a923870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0789721-20a6-488a-a1dd-4553dc1d8e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e06bc02-5ba0-4e41-aa1b-fdabd3c57cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1020b343-8ca1-425a-b793-dd8f0ec11682",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7ee0da-0027-476c-937b-912139497f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d682a64-d324-40fe-8fe4-06991cc29f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d862e5be-bbc6-4ef9-84b5-84c40db345f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7063346d-4e36-4734-b341-6debb97bfee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41205de-dc7f-4130-bcaf-a25fa22d50a8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18e5ee5-1e60-425e-b5ae-d4c078315e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24703351-e5a3-4d05-9efa-869267a0d202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e8471e-3ac4-4d1e-b823-cc35a4814c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b45fde2c-117d-499b-b2e5-b2cc278e8a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a8443f-b8e6-43d2-9c2e-0a8f49a46864",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed00c0c-555e-43bd-b527-2a0d6624eb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e15a511-5436-4fe3-b928-121aeaa335c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fef1fa8-70f8-4b76-b848-b819a95d3496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1a661a6a-3fbb-468a-b78b-d15e58d734e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297e56c5-267e-4ee6-bd37-b2fb173fe05a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c3a2c9-3ff0-4f73-9f1c-b2c0e1459262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "358a362d-e8fc-4d4e-a5c4-b1e1e3838f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9a75ce-058c-4fa6-b0a5-a2c8e15ca9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba8243da-3154-4120-bf63-2cec6282b9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95434ef-2405-4676-a201-85c77ff2e12f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8643f76-5a69-4eb8-9ed7-e849086e61e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c578a33-1544-4d8b-8500-527f41709053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5470506b-5b7f-401e-99dc-61a8e6cfca66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69fad4af-8cf3-47fe-a8e5-5602c9a2f2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c316f113-8399-4608-a42d-3640ed4f43e6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953b13e1-9491-4427-b2ba-5ce0f70c09eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0898ce-c584-450f-b6c1-de2e7e793f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aef1e0d-65ba-4ccb-8f43-03100b16e477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f872ad27-874c-44cf-9bf6-e3f96023d807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3328feaa-73a9-4302-b6c1-efa1ac70444b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6f32fd-0672-4ec5-8fea-380cfa6b0855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d48151-1f4c-44c7-ae66-a9ecb8c1560f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8f76fa-ec83-4b1d-8c8d-efa93c92001b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7c19ac-a59a-420c-9968-978cd46a250e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385941c6-2043-4ddd-9b71-6424a27fc985",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299f3c98-991c-4e4a-901e-537189033677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb243bc-c595-4aef-893e-45aa0b7a07dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c0d6ae-7158-4952-99ad-e168adbc8e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "189de8ac-f38f-413c-9d6a-a0d1c67c8a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5a1052-972e-4d8d-9680-e669808cb270",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f9b299-72e5-40dc-9df5-d6d5954d7d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cad33df-7ad8-4b21-a3db-1eae14c26b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6351cdd7-5cf7-4943-b914-8490cca9695f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "61337fae-64b9-4dc1-9a40-276d5884e4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381d6eca-2264-4719-afad-27a1bf2f05f3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00ee0df-12bf-40f9-8f91-56b9d0f2c90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b223667b-7695-4d55-bb8d-3e1b7bed1e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875c89a4-e709-4d67-9316-03cead9e5a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9174ca73-2d51-4b2a-a5d5-8eae5bda18d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36a4398-cadd-49db-bb7a-de57021a9bc2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f67a72-4372-477d-b883-90c1c0bed569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a87d6f-5f55-4d8d-8d4f-1c59f47ec53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82029a4b-c708-4aac-95a3-f357a01b3b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1151535f-3ae7-4a30-9d72-6c743ffa4c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671dfa3b-2584-4d8e-ba3c-da681d2a3798",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93cdbc6-90cb-4443-840a-bca280ec707b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ff3969-6b75-40e5-a7ef-1406340859d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f855b29-1496-4bc4-870e-d7b8b9005811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "53b04812-1ba1-4741-bfb1-3c64e1b6fc62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993894a1-2050-4401-8893-281f7da861ab",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452236a2-b9bb-4b78-a993-34a07df2ac2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58f5681-7e9b-438d-aedb-641de70c59e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e46c2e-dc4d-4f45-92c9-3aa80cbde696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40bb8a23-db06-4d6d-9523-50038013cf34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7317a578-98d9-4ba0-a2b7-b1c4cb76b75a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b82a15-faba-4ede-aa05-b2fff0b9795f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08361443-53ee-4f2b-9b87-702e10b2ac8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c509feda-d827-45bc-a0bd-c96f9619a11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8601c229-7579-45f1-91b6-7b4c1c701c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c2a13c-f63d-482d-86b1-eb0d965140a2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1173e107-1c7d-40c7-acec-57076b163984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c30796-4e97-4e09-a2cb-fb58cd500b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8d70f5-ac2b-48f7-ae21-59e34e67c7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb99191-9f01-4216-9d11-86c61da16ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51dd8c3-8115-49bb-9efa-e1e5494b47e2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2ce2eb-6d2e-4745-b967-0b11763a1474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3bdbaab-b742-4a81-90e7-1f695242bdaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949ba1a0-7a2f-478b-b319-8f9bde3f4515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c887bf6-696f-412b-ab9d-6989ec9bffd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56f3a3a-c882-495c-a9ee-6fc3e196b380",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa62e81f-7da5-4547-aeef-b8b042ffa415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73debbcf-e024-42b8-b1ca-fdd08c6868f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdee300c-5439-4eed-b9e4-4fde46480be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c648c813-c92f-482e-97db-e31fea87e63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4d9f31-2c92-4e1b-8299-82f814a6db80",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023e428e-a8d9-407b-982d-545e371e5635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de45e0f8-3e3c-40c7-b9c8-5fd64ab8d29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab61153-d954-4560-a022-86d703d0c685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3cea20f8-936d-439b-b36f-f2b26e74ae4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de443654-a8b7-4b40-9f95-835a6804118f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b99c52-72c1-4e1e-b4cb-0c5768425c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f463aea-a682-4c0e-b937-c5b86fe6c307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384e44ad-bdcb-4a85-b06a-f380213bf308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb60602-5dd8-4eec-9ca4-ae0cee9d4406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6a36a2-8571-4728-9e5a-922cbc2ecb40",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da56958-0c51-4a7a-ab7a-08246461d5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d860e004-2a6a-4d50-a41b-736e4fc3e7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac784d8b-0d9a-45f1-9094-7e29316c416f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47924ecc-abc6-402d-9d90-6da56001d010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b56751e-ab1b-445f-8299-693840bb3a24",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c89bb4e-cf2a-427f-a01d-2280c5467ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca266767-6b35-4d4f-9e6c-2e6ca950e217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7ac835-b98b-458c-a52a-fc8d45d5727b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "064f9e7b-f958-4c70-a511-6ef190d42764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5821191b-680f-481a-9788-17a8fc44a4ec",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc146297-4e4c-431f-865e-9e4dbf990bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b0bf4e-456c-4008-9449-26ca6f845b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b98da7-2204-47d2-8857-87a3abadeaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3199d48-96f8-402d-8969-9596a64ef436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea995c0-f147-4a6e-85b3-9bee32b8bc58",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979ac862-ac77-4685-abe7-e0f26af69466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a8f731f-1d08-4006-89ef-d93629365a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae2dae0-dff2-4993-9f58-2d919bbf3086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fdf1e08-6cae-42f9-a424-f7ab2c9b2b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5881656b-9a63-4836-90d0-54d8a1a776ca",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87e24cc-95ec-4bd7-90b7-32c71c51b59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8aecccc-cf67-4c9a-9284-cc55a3e81a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3252b090-acbf-41f8-834c-f1eec25df953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bf72ce4b-b620-46ea-ac67-8b61f30f490a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1e6bd5-9fa5-43e3-83d8-dd253ac6ec2c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7458ac8-210b-47b7-938c-56e259f8591f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c2bfbf-333d-4cee-bfa5-2251b6d994cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86559c6-2a01-4275-8298-e56eddc90ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e85b4b65-da10-4f5f-aca4-5f357e882dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccaca950-d29d-4038-b5fb-fd3015ac2484",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0db184-b93a-4ae8-8b43-65344e301a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b649ec92-d5b7-47a4-a89c-638e029fa0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16cc5d3-9e0e-4029-872e-dfc041a99f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "54d66595-63c3-49b8-89ee-22d5e21bec4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1b19b1-cf74-4c9a-8b6b-f92aad503cd9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84c261f-529f-4b4f-a29d-23c543f00ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3e116d-c255-4d9e-a5c8-b7e7c7e6caf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1de3c8-5da3-4a6d-a109-2abdbcb27493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d04fc5cd-0a84-4110-93e2-2dbda294afbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daac22d3-1c96-4365-aef4-8a51ee4be7fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb46c48-1e87-49c6-81ca-7a8e02cb056e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8daa96dd-3a0d-4325-bd87-497b3c33bb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae29a37-f0d5-4aa0-ae48-3e57f0d851f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb822d6-3097-4005-8079-0a5e9ef0d461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d516070f-2eb2-43f4-a488-aa6f231f64ee",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbf49ed-f7c3-46b2-a90b-c22c93c9f3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd18e519-cc05-4e20-9eaf-4ff2ea3026f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524e377d-fd4d-48a6-aee2-6ab27b17487a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7772c765-286f-497e-b5fe-28f93fb79321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3c2c6a-e9c7-4e2c-95c8-a463a585f2f5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39511a37-b706-4384-ae7a-6f9ed1d24ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0c82a2-1921-4388-8508-916ad4ce4c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b3346c-bcd2-4246-bc08-33efcdd50ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0813f22e-e799-4ca0-8eb8-622f4b4ee607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b78e381-f0e7-4c84-8951-27ddd6e1d32c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51c0021-9b7d-451f-8055-ea534abfc4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db77c915-79bb-4d96-979b-4d30cc30525b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a9f567-2a92-4a27-93d6-bdc957a52ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "69f5f3ec-8419-44b3-bd55-90e115e4d3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe26ff6-9070-4ae1-a0b3-7b22b0c24035",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67b399d-b1ae-451d-875f-bb03fd157816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4c71ae-b34a-4447-b5d3-57fe347701ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c958c1-516d-4c0e-8f99-1124bd93c1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61da8860-8837-41fb-948a-9c3578290ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7facf2d0-0c92-4e66-b022-6ab379418d07",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb578a3-e6f3-4812-b233-4defbe5de775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7835c852-a5b4-4840-ad82-2d40fa86be2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485cbcd6-0abb-4e78-872a-741ddacd85ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "170fca48-0ea9-43cd-a694-0754dc165b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55f2f60-e55c-47d4-91bc-32090575044f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5198a70c-90d8-4fdd-b728-90337ba4b2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e53cb8-e879-41d6-b0f5-b92303616dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd28b897-091f-4b4a-9366-0cab53e59f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61afa830-826b-4084-8197-1b2ad9be442f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081563b9-ce9f-4fa3-9a64-6213fb28fa6e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbdd1c6-84d3-4c47-9c17-33f67630fae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af91971-f697-45dd-93a6-accac067b90a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fa7b9d-e2f8-4ef0-9c30-da40e041b38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35d49129-c0f8-4f5e-ad33-3512cfbdd0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5937e575-34c9-4abd-af4e-5788b0b0faab",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd8c076-6acb-43dd-ac06-d8bfea117e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a134ea0-c1d0-4c42-9fdb-1591530784c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d5ea4b-f91f-4a30-85ff-8579cf133aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7146a2da-9782-47f0-ab77-a6f3e829067b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5bc2fcc-2317-4416-81c4-2f23b2c65c16",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4f4fa8-d680-4d85-a458-162f6cc25e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5810a9b-b6ec-4f61-b755-8b5e07fcd9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ba97a5-1d27-4609-968d-1f864cf3eaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a30d4c7-a8c3-4eb7-9f07-56e3a7c99caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6c986d-6eee-40f0-ab29-2c23697a87cf",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bcd10e-0325-49dc-9b45-5c4cd375a9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b678aa7-410f-4170-95cb-3271c5fafe9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40c6f96-67b8-40df-9ba6-0bd3d6ade1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e126530-22cc-4b48-ba3b-313a0ea03377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669d499a-d85d-4ec3-bab5-64c1dc8c472b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc56b58-9cb7-4546-aa9a-00769120e077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9ebff9-ef35-408d-9727-23199350ce6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14de6a9-6e2f-4cf2-954c-fe3152e52993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9fff953-460e-408f-8aef-777e09436e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c1b5e5-7783-4c3a-a01c-355e9e05e1b2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd390e4c-fa3d-4694-b4a8-ca7115e73bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b23853-e725-425d-8c92-b237a9d636e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572e6e35-0b24-41dd-b91b-c86c70b331bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0687589e-e96a-4d69-831f-9f6558255476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d151a08-3b86-4a68-b123-24b1991ec9eb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a464bf-b3ef-4cd3-990a-942ccf187679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b06c6df-9284-4617-afbf-dc132ecf4fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aabb0b3-8b0c-4956-ac43-b9cbad051cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3668634-c175-4b57-bd66-8f8c477ff30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c123d25-ae66-45fb-9e20-23809d68aa75",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d3610b-cb9c-442e-86a4-e0d1eec0d26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a41453-1253-433d-af70-9a77dd601d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3a46f0-9671-4666-ab14-97204607caa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "000ea054-6a0c-4fda-ab8f-8fd5eb20272b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9069aa1-518d-482f-9a46-ad3559c7ed7b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0723e9-11e0-4272-a3d0-a50f5f54226c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975ac433-bc12-4c26-88a7-869ea14e927e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f09dbd-5855-4126-803b-884ae717c245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41b97582-497e-4e10-9639-c55ac505353b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d66bf87-9787-46a3-a4d7-0bb6a9b2f045",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5aa829-a0d7-4026-a267-c55045584670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e6c109-7e8a-4c9b-a0b5-434201fd0c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa83b287-8105-45a3-b2df-31e434a32c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae586805-ff54-459b-a576-88306202df80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d558722c-c5bb-4b8a-8438-9384fdc21e63",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178bfc3e-8e83-463f-b00c-e68a9806fc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8b03bc-3688-48bd-892a-22004aa33bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1563e830-51d4-481a-a03c-0652580dcd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "449f4d81-477c-42e5-8424-873a52a2f75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b230dc4b-eb67-4555-bdb0-3e7fff65e0e1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab23694c-2a07-47ce-a34c-3e8fa66a9789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc10faa7-31b0-45fb-853a-fa9faef0fa49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a215324b-8828-452a-a5ea-2c2e9ac28635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35b85557-6d4c-43e7-905f-d1deeee04ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea7bf24-aa54-45b2-84ad-3ad23efad692",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989213c4-daef-4af2-abec-267f0f1de5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae71a7f-22d8-4954-bd7c-8dd58604bc57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d451844-e653-44b7-a566-efd28729fe77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7671c2d0-e214-4bc6-a086-2a0e1110e9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9ad4c0-ed55-4cd8-8f9c-b01c23b0b83f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c127466-534a-48c2-a803-c1c3e65083a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba4e213-1973-42a7-a97d-1bd6271ea8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdab86a-47f3-4c4a-a0c3-d29d117a4401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c58dd98a-2d5e-4081-929a-6138d3603634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af7ea0a-a5e1-4222-93d1-a3a70433b1ae",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54bfbc4-542e-44c9-a650-0d47abe11817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9fe67bf-16ab-450b-8fd9-85dd9493409c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9192649-eb43-4768-894f-398e0bd67576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "70485653-e4e4-4371-8459-0b3b76ef30fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2a2aa1-0ac0-4c1a-9387-965692184301",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38d0665-d1c0-4e20-a13d-ff0ad652792c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ebe91b-9589-45b9-827f-cebfa1c1b719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2628d38-23fe-4f7a-b6ab-eadf280b81e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbc082b-5d69-482c-a6a3-0112c3aa9b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34a385f-0054-4785-a25c-60798d372465",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e37425-7820-427c-abce-98d355122e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a51019-b5d9-4d41-a9c0-8470c071913d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc21d96-2a55-49a2-80a5-5249a4878c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6da7ccd1-a645-4ac3-b2b6-3900e606e19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf5f7aa-46ac-41ae-a7bf-da02eeb0c5eb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0302b39-c123-42d8-afcd-a7b38e290a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "888c609f-4f50-45a2-b502-cf01311cb966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66e263e-6003-43d1-87bb-355bddae9c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4960d5-6734-46b5-b20b-975187cd8968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1773258d-cc47-44f7-a658-eeda96e0db81",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1950e1cd-98f4-4ccf-9fd1-d0c4c028880f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00c0555-a79b-439d-b201-cf95759281dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a364c421-f89d-4d05-ac82-69f777a29091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2592e6b9-2972-4b68-b4ea-1a58e7d30c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86378266-b4ec-4a15-90bd-fd81a334e15f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8b59c8-9f97-479a-8fa3-c2c7c57815a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3bb0349-362f-4974-83e5-f2ba44bdd84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164507ae-afe0-40e0-9b65-c2db3988a92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6faad267-6f24-4b0e-93d9-ed68f31c356e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798637a3-1bbd-4843-811d-2a5f449022c9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2e617c-efb2-4622-a899-185e42a0ce42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed722f0a-a850-491a-84dd-de70691a112c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d0e7ee-c479-4b5f-97e3-d6aa0fb543b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a56c0cdc-92c7-4e77-aed5-d6f0bae2f6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2e58b3-7a24-4f89-ae0d-5d1bca07757e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8b2c65-580a-4526-b7e9-726f86c5b907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177e7131-71d0-4681-b672-469b8348d295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23dc1e6b-a933-4e8c-90c3-02ae6fedfd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8882e701-a4b4-4817-8e50-caf80abcc667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0602c699-216c-4bc8-8c2d-1549c3cbd082",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85eb621-606f-40f8-ac59-f5d95f56759a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3fce46-4c3a-4135-a3da-d6d127aea29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4c4b47-afcd-49f7-a121-dfc373803075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa5fc0b-acd5-4ea9-88c8-b434423c3bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0e2aa0-a810-4a2f-91de-5b3606b27166",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1458e8-c605-4b13-853d-e3f145f7ccdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086ec68a-9fff-439e-b93e-69dae936fcd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41aa254-9c5f-4e30-9412-fdc2c593c115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf78156-b78b-419f-8021-26ff0d788efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44029fed-22f1-4b59-973e-73e64285bbf7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521c46c7-f19c-480f-b0b8-6300646b1641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54bb88f9-3e9d-4017-b1af-e89abe7ab647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfa4e0f-dd4b-4836-bdba-062bff9b526e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b07ddd5b-4756-47bc-a8a8-23488134095a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a1bb6f-99c9-4162-bb0b-8aabb3b45aec",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f3b50b-2ba4-4efa-9031-cc99635a312f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ddee123d-9b2b-443f-9732-04f4eb74ded4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc5d3c0-0926-418a-90ba-671b60162a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "26acfc28-0336-4a8d-96c6-2523593cd48b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f72d51c0-3a51-4e9a-aff6-574e8d764766",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7baa9daf-3b62-4e43-b0b7-2c8e3d8d45e4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed11016-09cb-481d-953b-28e0a1e00169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "faf4da61-a5c5-40b8-a2b2-95d155c4653c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e132cc48-1861-4eab-9694-96fc80dcb29a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b00fff5-64a9-48c2-bc1c-510aad20646d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89c42a28-bc85-4cf8-a3cf-5851a1ff99b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "144040f1-acd9-419d-baed-bd71db109ede"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6570b993-d8ec-44fd-b014-007ef1611743",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69a80c95-1e3d-47b6-9134-c60ad96023a9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba583150-e42a-43d6-97bc-19033bc8ceb6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0f7330f-49bf-41b0-94ed-c56201ab3527"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "24891a13-4348-4af7-be8e-97f8c75b509d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eddf366e-3c91-4316-92ee-3de476831c18"
                }
              }
            ]
          },
          {
            "id": "789f04c9-3ca8-41c2-896c-7f21253584f6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1163f886-77b0-4ecd-a1b4-f2b7d4abbc16",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f716b6e7-af39-4f9c-9c5a-cbaac46b2054",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d0d290-03c8-40e8-bfb0-7e6074fc9018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "08f05413-91f4-48c6-9167-5234372abe2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f1489a-068d-4bd3-9fde-998b9c450785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8468e3-7c10-454d-b9c4-9207e9b88bd2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fad70a6d-1281-40f8-bced-9b412d43a210",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5ab22cb-f016-4df0-8c10-1075126ec4be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5686990b-bbd1-428e-a44e-c32d8a5b41e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "386ada9f-9bd6-4a52-81c8-1fec750a63e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ee8beff2-3e6c-4bb5-b905-f049a647b952"
                    }
                  }
                ]
              },
              {
                "id": "5ef1a2ec-1e30-457c-bfbd-1be97e99b38e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e079d8d-3c42-413f-bf6b-f98c42ceb20e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e4ff5b2-a3dc-44ba-87e2-d1ac19ed665a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b060036a-3a2e-4352-b5a6-b9cc734db424",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "556de184-de2e-4e96-9360-4aeab897d4c9"
                    }
                  }
                ]
              },
              {
                "id": "6fcaa7cb-4acb-4681-9eff-797a416f770a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a3f4662-969b-4262-ac0f-d118acd60da0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "344aaea2-6fe8-4872-af1e-132281bb7998"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48082e91-4477-42d8-8099-fefdb30f6d3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "73025db8-6b72-4997-88e9-84f64e9b93c8"
                    }
                  }
                ]
              },
              {
                "id": "ae384f70-000c-4e5b-b5a8-093f97c5568f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f77537c-837e-4e77-8cc5-731d2bf47212",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a706a9bf-39c1-4f39-a41a-6766f5efbb3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "884f60db-a39b-4ecd-bbcd-29bed90f533e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f5f58593-ad5a-46a9-9fba-0a9098b8c990"
                    }
                  }
                ]
              },
              {
                "id": "249aedc0-9595-46b3-b479-7324836098ac",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8407c99-d868-48d5-a3fb-0e07f42ed0f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "43b99b6e-e919-4f19-9c56-1838c8c81350"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63077799-aa64-4a74-8508-6ed3a8fc72e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6be0d3f0-79ab-497e-9d91-db5e8f8ee845"
                    }
                  }
                ]
              },
              {
                "id": "e22c9558-0cdd-496a-b983-895d19cf18e0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31208ef2-6559-4f3a-b32a-2715633f22a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0ba81fe-a173-4732-ab40-c19ed1a6a4b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc64935d-e85d-43c7-95d1-de3767803560",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8a43553-cb39-4b61-81f7-cdda10d72a31"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "384f25cb-4cd5-4f5d-8c65-ed9859a44086",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f244a7e-3f49-4368-b413-7a4d9f12b1b8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8a7b1f16-954a-408c-bfe2-bcb1fd682402",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ab75fd4-5527-4513-b56c-3dd847e9596f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c53e90a-fd21-44b3-91e0-4b0d6b3cf06a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ca11e13c-d6c7-49fa-9790-e417f1299f98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "159ebb95-0887-4c5f-a0f1-3578c0d38c0f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0fa036b-d2f7-4fe3-87e3-c7c52f15d755"
            }
          }
        ]
      },
      {
        "id": "8884bb0c-80fb-4fe7-918c-2ff8adaae4cc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fbc2e66a-f551-4cc7-bcc5-a05cdfe5e2d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "181fae14-ac55-4ce4-bd91-4b00140404f9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c0c444a8-045b-4582-9631-9b943638d6cf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfcc2ab7-d661-4191-9938-878ab0f62274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4558b2-cda4-4142-9b1d-ef9c215a4a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c3d9c4-8339-4ebd-bbf4-14731aeedecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "28af833c-7f86-411f-9309-82bafd64f2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7317ead4-04ba-427a-b44f-ec72dbbd8590",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7acc2cf-0d7f-466c-a96f-c18f8c4551a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2384680c-51c9-46d9-9258-cf20f5771df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cf9eef-d52c-4f45-8997-37a78dd26904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee2ae1d5-2a37-4dc5-9d88-8ea60a9b688e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e70973-db89-4c99-97a6-c59e44ea21ee",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb1d55b-325f-4143-bc41-e740ebb184e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eca8234-9ad1-4786-9e25-8ab35f7ce112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403614ec-8bc6-4f8a-acac-a25b483fd3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40fbe70b-e268-4bf8-97be-ba7897892464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87740c7f-6ed4-441b-9da6-55daccf73a35",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cbffb4-3616-492b-b48b-2207dac3bd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42148c98-496d-4a0a-b3a9-82e37938bd3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53572f70-bd49-46e3-a196-4fed69bb39fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5520ce47-2191-4627-8193-be133500c3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c74884-77e8-4135-843f-30f9b79ab8a5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18dc1198-c4fb-471f-8af7-2416aafad145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf8e827-6d2e-44f1-80bc-d5ab0d16b4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085c8012-ce00-4aa4-a3d4-b7eaa7a52663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac4b931a-7b52-4b66-9c94-3d96b4f4f4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d276a5e8-1445-4d06-90a0-896470e6c0a7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fc7936-8474-4888-9416-039940d3af14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f0bef70-b5a2-4297-a19c-cdcb35dc18ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6644190-d7f4-4b6c-85f1-39020f96f4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3219fd4a-8718-4dfa-9d95-2389cd6111f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbd1560-4da9-491f-84c6-0bf66ea6f930",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf42e2e5-0dd0-4cf4-92e2-879897b58b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c29ddb-31c0-46e8-afb3-b9323f03bfef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c2997d-37f8-4557-a3af-5618265cc922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1c0a1c-ae4e-4253-ba6c-0190c66fb6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7521e606-e2ee-4531-ba79-e60c07715763",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7352036-5ffe-4eb8-bef4-bfb03a64df78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240d3112-3d32-46ab-9c93-7272b6d35820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b075e90-1106-47ea-a2b2-b4e4b50fa555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34d179b3-2db0-4800-a982-5ec4b8a2f8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1576a0e5-d048-4a79-ba87-2e93dfcd2f19",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dd7a5c-e609-48d1-bc82-eec92d1b456c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c247a2-4e54-4814-9e6a-9a8978b8fce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cae981-b26b-45eb-9cda-8b610c40119a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b191db8-cb00-4e17-b0cd-e1753e84c4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b65c5c-5208-42e8-9c27-cd73d4eb559d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b411bd-e65e-4bcd-89ea-ed8dbe175021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207fafdd-9f8e-47ca-b8d5-f8d1e4906dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad927888-ed08-4007-82aa-f2d4a68db9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7de925f-eb2a-4280-85a1-433dcdae6aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd18dbe5-af97-4f7d-b424-7626f4cf2fde",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afc38d7-df14-465f-b250-26f59b483689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac14feb9-ef8a-47b4-bd17-65c3d65a51bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1bc08c-6d01-455b-a840-49d52fc529ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "98834820-69d9-4e52-94d4-3434ed83c9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634567e8-2dcf-4050-be3c-db6d2437ffaa",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbfeb27-8ca4-4521-83c9-837fb0ab9f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3efd0eda-b065-436b-8603-3c686d2dff23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf037519-f237-413c-a64f-d6a9707e68c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33565e2a-441d-4c8b-91b8-742e56c73ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6180fbd9-263a-4039-98db-2bc18eefa038",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e779b93e-60d1-4c1a-bc0a-7ea911a7a3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c094d7-f58c-4dc4-8e05-eb32d1f3fd6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffacf793-a5a9-497b-b6ad-b1076eaa4d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "93bd789f-364e-41ee-9a29-df6c2bda782d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cd9491-f417-4ffa-8f78-e208b44ad356",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e708ee-662b-4bdc-bf41-052668a1e234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7d77c3-1a27-4a04-b7c8-12ae04fe0c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec2d88e-4791-4f49-8b31-b44bfaf424a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f198776-5638-4115-b9d7-1e5a42fd5ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4eefee-bb67-4b05-9bdb-9631e1abbb1c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bd14e4-4b9e-4755-8c1f-5facf3896685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0a23c3-8377-4e12-9b2e-58cc9fc50644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d97c9b8-c626-4fa5-a63c-9de39d346d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa5212c-af6e-4298-8628-0b096adbd719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4939e7e-4411-4d1b-ba84-b68e32eb9508",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21202f8-8f83-4086-abd8-e2ff679e356e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446677b8-61e6-4a03-bbb5-b554c8da5d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48f44b4-7f2a-421e-928c-c6a9aa44d986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3df4946-38ad-4038-ae37-b54cc9bb94c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf87e22-f7bd-4d87-8548-202786a423b4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b09da4-f7ba-4e88-9dd4-a921d9b4f4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc25042-46f9-492e-a4f9-89aac46b5156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e801d8-7af0-427d-ae9e-2129130d994c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d727680-800f-4def-a6a1-8613567944cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a806f0c7-5972-473a-aa01-92a7e13ac6a1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadc76ee-33a3-43b6-bda5-26ca1a22f462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ab35f5-462b-445c-b2b2-e18763e656a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7006f5e6-805c-457f-a6b5-37337cfa4785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "08e376cd-80e2-4766-bf38-93fa2f8e08e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aea679f-0dbb-4be5-a492-bd6799e26eb4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53c8a9e-1010-4661-8a17-43b91c379a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b247a158-847e-49f5-8fc0-3f0765ea4196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdece20e-3fd2-4750-814b-404ead406be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3f88bd-cad4-40da-a159-43af792a974c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ecb352c-a317-4532-b1df-ddd87006d96b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7bb136-5675-4e20-b983-32b274513d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20bcfcc-97ad-40c0-b276-3fad88d91255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423e2baf-9b64-40b3-8441-2412072187db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cca7f9c-ada5-4808-bf97-d8e6b590b794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8670a2-f5f0-4a4a-84d8-08633805efa5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02319e7d-9b88-47ef-a0aa-0d212205cb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a80d01f-3ae1-44a6-acb2-e8dc6cf55fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0285e2c1-a2f4-4cf3-a156-a09555f6a220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfaa58ec-c6b5-4450-81cc-0225228aef4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9878b082-7c7c-4a42-8498-3a517d09a220",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4da844-b4ad-4be2-9096-e0b648a61557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0739096f-30bd-4308-bc24-acb7a5f7d5e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ea1834-9c19-451a-b17a-dfd0b0f9d06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d478b2b3-f6bb-4366-a1c4-97cf326a78df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efe2e3f-643f-42dd-bd96-282755451d59",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84dd86c-624b-4108-9c3e-729f236cac9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb80730-b7c7-44e3-ba79-56bc94b1e913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c3bf64-cc18-45ac-9cee-6399def072d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38cc4fa6-bba3-47d2-89fb-fd93f6f9affb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eac641c-531b-443a-9979-3ecd1c620e4c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbccfc7f-9711-4f5c-aaf1-9bc1ad197ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7ac48b-0091-41ee-84de-8b1310d71681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10434f9-b590-4365-8ab5-458f83bbe589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9fb4672-d14d-4b41-a5e0-16f64f11550d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a50b24-a6b7-4544-ae4f-949ba40dbfb4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4574a95f-2322-4c1e-bafb-1fc639523572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af46a4e4-3c77-4700-8b84-17173e68c58b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f15e20e-fba7-46d5-a319-9a7386a4c08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0b7144-0bdc-4db0-aea0-9c881ad32343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2d9176-1ba6-44e3-aabc-11d3853eff0c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3bb56b-e389-49aa-ad12-e08f47185ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3c22e0-2f54-4c54-987a-f34e8330aa29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee4f367-68d7-4e0d-995e-dc54f43369f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91ceb912-149b-4546-a36f-843777009f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922c90b2-b561-4d40-8b21-56289ec53679",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42613ada-9747-40ff-a905-bf27905907da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553bd623-99fa-465f-b8c7-86093970e9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bfe6a0-2485-4d6f-8b01-3b89b7c29565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0890df15-2144-4197-b0d7-26bde532884f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79ec4cc-9792-41bf-84ad-4addcdf13afe",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d969d5b-b0ad-4282-a818-373c81e2a14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc28909-0af0-42a8-a839-718912b27b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60013d9-92fb-46f5-80e6-2352c451b2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "871509a0-a406-4582-9311-55651ff30405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54d0ce8-9d60-439c-9156-abd85b0114b3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d5d6f9-94a5-4da0-8211-8ed81f491ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dfa6ce8-9583-40fd-9e8e-c66d22c5963d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce364eb7-6865-4eaa-ab69-6b370fd50531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11ea62a6-9795-4c5a-b565-04af2e106438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83dc20d9-8dd7-48d4-8f47-e46a87305eeb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fac946-d620-4f11-834f-7ea03eba6cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8461835-ad64-4ecc-a0bd-408c7d9085d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3fcc9d-661c-49bc-ad21-650138e933f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6726cb-0a04-40a0-a2e1-cf83c0aa0a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf56e1b0-8be1-41a7-8da6-63f55f830dd1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a580de7-4881-43ea-b3d7-3dab9ee32f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14862cc-9092-47aa-8f6c-d75a28a9aa8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c810910b-7466-4e47-85c3-33949d9c20d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df4c1dd0-024c-43b2-b160-3730093a6422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4775e87-dbe9-41a9-ade1-cf5248c31de8",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aecba90-9f59-4b3c-858b-4d0bc8a3f2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2f098d-75c2-4aad-9108-50a274c8acb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8759ed2-1010-4df2-b6fa-3c2b02ac9a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bce5a8aa-0bd9-413c-84d9-065e5dadac29"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a0e54a2d-5688-42d5-a717-2b1df9a0bc36",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "894dd677-5ba6-4ad0-bf49-230dfa96764d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454c0861-19de-479c-ba66-5562cb3fb8a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "859e3f36-97db-4cbd-a63b-d67acb5baa64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13636f6e-e618-4a63-bb7f-47be2b76da99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35975a75-a5fc-4751-9a10-0ef93a909081"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fad8d9a-6605-4cb8-b0c5-ae4f4e69de80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6027b12e-62e2-43a5-b98d-054d9086022a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbea2b63-988e-41d5-bcc1-eee94c837d04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee6f7d1f-b515-4d45-99de-b36e98db242e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1443e478-e651-414c-b128-53f92eeefe1b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "256e035c-105e-416e-812b-a82e894841ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b734212e-20a8-4355-a615-e63f756e5a79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80fb3b6a-f191-46a2-a7b6-e237b6fe61c3"
            }
          }
        ]
      },
      {
        "id": "573e91ef-a9cc-45b3-9861-533f90d1c859",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d7aba4c1-4c3c-43e9-ab1e-690ebfc644bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b68f8726-e4d6-4724-a4c8-0b9b9498d332",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be4503bb-bbc6-46f1-b333-d1966f7a43a5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04cad856-0a3d-4696-91a1-b42239e0276d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60a3c77-db4b-41d4-a62f-461c2fef0a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53313496-4771-435d-81c5-d3441f12c3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "321ce37c-e056-436e-a047-2323a69b1c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280c88e2-8d9b-4e2a-97c5-10fecc9c5f78",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72adfc0-7dab-4ce4-9d3c-7ddc3ee34dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f9e4a4-aaf2-4e03-949a-df2c47454a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4f3482-b739-427c-b6b9-8876b40bf53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5098ef7-708a-450e-ad0f-da5637d830c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81abec64-5ba5-42f0-80ef-b8dbe44e2856",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a5a5c3-4685-4018-99ac-324a36c3da0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "828a7dbc-ea47-4393-9a52-cb988415a827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db539a98-a583-4c78-af84-a556c80c8838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78cb4232-e60d-483c-b7a9-bdf662c3128d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567a2624-22cd-435b-858b-8936bf3e6b6e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1b8214-3971-4087-9efa-b6b332b8d54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e163a170-d3ed-4eaa-9e2d-f19c2fa73aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2e3f3b-16a3-4251-a7d0-b05002278dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe588c2-3bc2-4c70-973c-33eadae3930a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56cb567-276f-42aa-a5a8-714b3973c572",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09f9680-426c-4a5c-8a1a-0f9dfe3efa34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab724dc-1b59-4d5d-87da-1f997fcf8088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aef9eef-8d0c-4986-ad53-c543e77d2b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "396c3e50-155e-454a-b8b7-9676a4f74e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c329483e-12b0-4001-95fa-46959ecf47a0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd0c77d-a766-4659-94c4-7bd9ec4da547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a32dac0-4602-46ca-b324-522d904ec965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63148c68-01b1-4c54-ac7f-100538a6b1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7a58da-d9f6-4233-99b7-a77b15fef3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647c4541-0c46-406f-9462-c620299cd17d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15c286e-b8a0-44aa-86ea-346cc4dc6d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2369b1-b079-485e-b9be-eff8917500a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fde632e-caa4-44e6-9631-ee9ca4dc3db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3914a98a-8c81-4145-8b8a-ea4b96b9598b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3229bb7-83dd-4a5a-8fa8-c7cf5b5f2a02",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2cac0c-49e9-42a2-bd19-d5ee6b9f2797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20ba80e-e53a-470f-8514-e73451cebb6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174ec9cd-e939-4312-9466-26b92d3ae9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9066895d-1bea-4532-906a-ec305ad921fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6017c77-0ab7-4cc3-864f-5af1a738c987",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ccbebad-4912-4ffb-b617-4d78f6cc146e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0eeeac9-d9ae-48d1-9290-d96e3bbbf825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150e8fb7-05c5-42aa-a321-5796e20481ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38f40000-af20-4c60-aedd-1fb8bdc67870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f3c5e1-6f99-4c6c-9c28-69e7286d26c6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3607ab-3ddd-4e34-a8cc-9032beaa061f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4212ec03-a1d5-4dfb-849d-5c176172a9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc19e15-f94a-44fe-b270-c0d0bfa3e471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81fa40cf-f8bf-4609-97d9-aaffc547a434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee336733-9e74-4d73-93d5-a94313ff098c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25be2be-4785-4e8c-a9ad-41f1027c7866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1eab644-f697-4e93-8b9e-7e292dcd9801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49dc8457-7bf2-49db-baf7-b4f5c57f1792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "eacb37f1-5da4-4b33-a53f-e181f828a403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1ace0f-d98f-41a4-8a61-e521c23c49d7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3800855f-9291-4356-8e83-ac9061079d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0526bf09-d713-496e-a32f-96f53149aa90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc8d19c-247d-4934-a13f-148d43aeb4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db9c958f-3265-40cb-b802-f25e70123f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3ce92d-9913-43b2-a7c9-4f375fcec29e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71240b27-057f-4b1d-a6ab-08d4683d99b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786e66e3-fd6a-496e-b665-4e43b3fae427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c821f3d8-4cad-4ae0-8885-a6c82e275ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "42d9d253-a91f-4544-a8bb-9e4e6f78793c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8941b156-e989-46b7-b004-46d557106845",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3667da-757a-4dab-8649-7dfc8983b25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53079946-cf54-4f54-964b-77d90877ae3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c19692-e1c2-45e4-b515-f95e523e1195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b8c1b9-8969-4d42-8666-2a71c6be5bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1718a956-1495-4301-b78e-931807153b6f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3168ec65-ef10-4709-9ee1-e842775575dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedb22ac-62dd-4481-8c5b-44f77da32060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74703141-0afa-4aeb-9661-f4a04a81e242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8acca6c-ff66-4803-a774-d646b8001a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55732a7-4b57-4651-91b1-05a7166dabc1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e06aa5f-b2ca-44a5-a631-3c4cf944cd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee753ea3-ad7b-4a3f-8050-13f6b1c418e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edaf53e-be3c-4da6-a567-c142818bf488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f54d36a-3b41-49c2-adc5-53908acb6c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330721e8-de84-4502-ac02-0b6dfef9c268",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6986321c-264c-489d-b2d3-15bab687fb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4df97c3-531a-4f8e-9493-d09ca4ab4b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6930cdb5-151c-4733-ba5c-0034e9db1294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "59404a98-fd01-4f15-b8cd-5f2a115dd2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c918cd6-a0ec-4939-a549-cda3c5ab6c1d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27970b5d-73b1-49d5-9479-2b3096a025aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227fa3ba-642b-43d5-9051-ffefae00ae7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2e9831-e551-4b25-9908-212a3ddd2d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f0c6d8c-077c-492f-a811-fb7edd1418c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9347ee63-0ff4-4efe-8f37-4f6f9cd43565",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13bdea9e-00da-4947-bd18-3f11aa6bf4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32bdbb0a-5aaf-4b1a-b830-a00be45a2fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c197672a-39b5-4b37-a5f4-762fd0be4d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c807d7c7-404b-4dbf-aba7-20ca3f7e6a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332a65d6-14fe-4e72-b392-d6dfa9287cbf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f9577a-8818-46e0-b194-608e79cb4997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3bb184a-b23f-4790-86a2-5068f32a1f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7ba3da-7d9c-4aac-94aa-f44eaaddd894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89600502-8fe5-4788-944b-03472bc65799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888525f6-0048-4b54-804a-6b11d5cf6dfe",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b145fd7-f257-4a36-8772-afd03e5f4744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4ecc54-cad7-4246-87f2-a23e2ba97c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e244b5fc-e0ce-4183-92fb-e68f8ffed0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a57f7087-5329-46f4-9dda-7963b105d892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf093f03-7728-435b-802f-71b35f311b60",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205e03ca-4c34-466b-adcc-99145074676d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56211932-34cb-4ac0-ab0d-99ab3fc929b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55baca03-208c-4bff-a72b-58b3770ed978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5a6d6c-34d8-48ea-bd31-414c8cb3861f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845e5652-9aaa-4d95-8bf9-8200b1ef82b1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2811829f-1838-48b3-9756-de1c6103ecd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "141b787f-872d-4c12-bc13-f40aa9e259f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa57d6ba-b7b4-4565-a79a-5177e1d82347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f627215-d0ee-4168-aa85-20897fadcefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e3c402-18e9-4d0b-93ae-883493da2124",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d207c9cc-e4bd-4ee8-83fb-aa3ba93d24ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66dbbb38-f676-44e7-9448-aa0855683364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0503b20-2628-4bac-8915-78d1a307309a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90fe6f62-fcf4-4543-9039-9ab76dac7bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b9a678-bf6f-4204-a508-4c5afaf66b90",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28dd51b8-174b-4d16-a26a-0bffd9d3f50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2192314-3810-4981-b9fa-f473e73252c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6985d5e2-f690-4e3a-a9bc-cdf3c9fb8c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37472fcc-d683-432f-8271-59cf015b2c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca64376-b6c0-42c2-961e-633ebe67d0ab",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab5506c-ff1c-4901-b948-93a33c2886df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f95670-95ea-48d5-8075-1969347f7637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb37f8a-a841-45a7-a2b6-f41e06999996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "271a1cd8-bd85-46ad-b0a2-3a70c794ca7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7ac7e1-bf78-45bd-9afa-b20a0cd00ee2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4309f5f-1a0b-4ccf-b65f-91d25106a7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b71c94-9065-42f5-90e2-974c8df98e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4345368d-f3c2-48dc-a6ed-e420a0892da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "659b6a6a-1603-4555-8191-f1c36dba4750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318d454c-7e2f-464f-ae3b-ec4a14e71f2c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e0244f-4871-4b80-93fa-eebf4ba61bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20578d5c-ae26-4803-9114-3c1917f6ec3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fc4ba8-e012-4718-973f-7c3e609681c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f19d02-e336-45ba-aab8-61bf0ea59d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1403f9-5ac0-4c80-9071-d9bc0279fd59",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44541150-73b4-4a61-a424-9578c9f8d7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f65318f4-0a47-45be-a8c3-e3635ad30be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766c54e8-caec-4779-9c20-377a284d7c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b528fbed-6421-4593-aafd-146b9c513e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13070ecc-60b9-443e-8e6a-fec16c5073d2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b736bfd-31cf-4fff-a00a-fa48352fb235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e965ee5a-e30d-45b2-b799-c3206d393168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ac6d98-a921-42e3-bd25-355b8c2b8023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c95834a-5a7d-4343-a730-7bfd26c548f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d746a513-3187-4a50-854e-a7f2927c9f2b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d439748-7b74-4827-9da3-0c01be09d0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a650a2-21a8-47da-80e1-18fcb63598d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a626632-3491-4354-bb5e-df9d3b78ca63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "357476a1-c97f-4a70-b3cc-892d39bd50dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1360a88-6e31-410e-b515-f0ac9b700d53",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6ae446-a920-4449-99d3-16c5b7a959ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bdc637d-c89c-4e1e-a8b8-5502e1af6746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862d2281-3e1b-489c-ac4b-6a1bf6087b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e24bb25c-7d6d-4e6c-9cc4-1b71b0f0cfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b68912-cee6-4ba7-a084-ec3211367fa9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669c0c26-a4e1-40c9-bf6f-3caa1fe05c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41094284-d59e-4b1f-a0d2-aa6d1a8b134c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bf5dc7-ccf7-4248-aa5f-d1fb17946cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2db6f5a7-44df-4ecb-8a30-11b4a77cd993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4056dbc-4284-4b54-819d-95b3e662ce8e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645d0c98-6df0-4e3a-8022-d72b37cd265f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b890c9-7c0b-4f89-8811-f79e56dbb747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231837f8-a12a-4fe9-b390-76bf18d01e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf653b0e-5606-4283-adda-edb3632ab45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9402e4-daec-4702-98e1-a77985d73a2c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e8ac53-a549-4353-a669-80c1631f0878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4089023-3078-4036-8fbf-57574d7e5faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde3a820-c007-442a-8ff5-0ffd3c4008c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9629fe3-6ec1-474e-9b0a-ba85d74533da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa2da57-d557-4dea-8008-bea0bd7d1df2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ed1034-110c-40e2-b97b-5edf81902090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d5ee77-e80b-4016-b5e5-0eb84b41af50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b019dc2-85bb-42e9-8468-c32775c4a1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "318eabd4-f3f3-4f48-b969-994e9cfa26b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b900bf4-8856-4a9a-962f-c7099acabf5c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede40b6d-9978-435d-8826-3a5884737eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253cf774-d48a-4fe6-a915-2948ff27bd42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcb4452-819a-419c-bc5d-b60c45aa0db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff95219-75bf-4a4d-a0c3-7ddca762fb2a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "15acfff7-6da9-41e4-a322-a3df89a7bb85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09da8293-5335-43d0-961d-17e9dee83f32",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cc2397-e559-403f-91f2-367c7747bd50",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ce772e61-e1ef-46ee-aa21-9097c3e397b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f548d8-d0da-4f6a-8ac7-4dd4e9ccf62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "402daa4f-dceb-4ac3-a4cd-de7a0f25c21d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d98efde-946e-42a3-b591-6dbb837d1ffe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2de786cc-2c83-4bc1-b755-d9a7436f8d2a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26972b13-0c75-4002-aa77-320c6a86ab06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aca21c2b-1510-4dc9-9b14-1327b72574b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d3398d9-aca1-4c61-bdd4-b193cbbdacf4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "227622d4-9e0b-40f4-b77a-ec07b0c2d399"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c557a30e-bb54-466b-bbad-8c6263bbc7f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8724e73-5d76-435b-a9d7-0a064dcbe896"
            }
          }
        ]
      },
      {
        "id": "d44eb931-538e-4fa9-9c1c-ccef2b21bf9d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c97b2bd7-3515-4986-8d54-d0963ea1ceab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2befe38-a657-4d20-9d5c-67e7eac04925",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e51c24de-54ee-4e63-a3cd-f63ed3a6fddd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b605cc46-9025-4acb-a350-900185da7775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f641c76-380f-4640-b230-642d8b6d7e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affa33e1-e065-4090-a276-701e88528d5d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0d49c4-45bf-4f64-b7e1-ab9181f3cdb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc315ad-7c61-4378-9ca6-05894e383a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3e0d44-7f99-41e3-828f-868c4e065d21",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b362cdf1-9171-42a7-a17e-32381074a42c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c58f96-9817-4e5d-a95f-8e804f95a608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22c1f67-bde6-47cf-b163-ccfce54fb327",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab94270-9076-48de-a2cd-4e8f5e96c66b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c94dd3-3636-4c3b-9550-843629868946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c28441-37b5-4968-9145-3c3a8e2c1565",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7b7e15-6b5f-4ce4-a441-c9408d56da83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8a21dd-5519-4979-a70f-74aec0d49c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b11fbfd-2705-48ac-a336-a3dfaf18b590",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678a267d-1130-47f6-85c3-34fddb8ed3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c4fe67-6194-4f42-86eb-b1d6657b29c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df6be74-d4ae-485d-86af-64f749304828",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5587a177-e383-453d-b43f-a46765178843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b2b876-e437-45fd-ade8-f7ea1c967310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ec4880-10df-44ec-8d59-3635cedad870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0558e5-032b-4542-a885-bf3e710ca1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a03a19-8572-4042-bd4f-1bf4c16c3673",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33caa88-1b34-4a04-ac5e-bb2ee01b35a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bb782c4-c11d-4921-9ee8-aea9479db9ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "164839f4-45cd-4c75-b353-97d345149f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f0e6bc-1bbd-437c-a226-abf43991462b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492571d8-01d2-488b-aa33-0e3911e1eb0e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adeedec-3151-44ac-8eaf-680ccdce01cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "765a7117-15a5-449c-8aa0-25e55be23a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3761e2a9-b3c1-4ce2-99d0-8be1f9044582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca782e3-35b5-4e0a-a372-43623f3501b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663ca40f-6ffc-49f9-ab04-db2040e23783",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8e83e7-cd96-46fc-8b36-dae8b0567426",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ebadcd8-b354-49df-b194-ea2446a8a62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf393d3-357e-406f-85c8-3d4f2326809e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4faa155e-c8cb-4417-a81a-b9e5ab688112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3dcbb1-5d1b-43ca-8a46-6e89f8af6c86",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dff70e6-144d-475b-b3b2-a954c42ebcb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59b168f-15ca-46a1-a808-b613811f9e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042eb115-3b43-48b6-b1ff-81f29c6ec18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ec152e-69f9-4b9f-b079-c9cc5933a4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b4687e-6396-47bc-b23e-d7628b47c7f6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067cba1b-0c1f-4be6-b3f2-a8e415c46e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9bca00d-030c-4664-94bd-f6d8dff3a584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6151e8fc-2cfb-4af0-93d8-3f3258900dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0974f463-7a88-495b-8bf0-773abdf043b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782207fe-408c-4ab6-a563-638b87f91154",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8e36db-5b9a-4e6b-aad3-41518bade72c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf893ab-cfba-4ee5-bc7e-043bf3a28428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b4c5b3-b5b4-42d9-a145-47c146753b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9d9155-f8b4-4735-82bb-f37449757cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616794f1-0b40-4cfc-b500-b1d0225f7f80",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcf0e0d-d95e-49d3-b834-499f00642bba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dd07e1f-397f-48c6-acf2-1c2d36d898ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb79dbd-6b0a-4f51-9c47-1176819ccfde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ae5c11-3e4b-43cb-ae66-3412c7873e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ab5637-6091-4506-841d-1b8f6f74c794",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000ca458-368a-4dae-8338-3cd1da714616",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43a5a52a-c631-4f4f-b97b-3cf50e0995b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8b399f-bdf9-473c-bbae-062966205065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf114af6-4663-4940-acee-df19910b8472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eff5fcf-378e-4ba4-a6df-e5ecbf9a79d5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57100bcb-8cc2-4bb8-8dd7-7ceac33b5d6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae8147a7-7775-4298-8f9c-e2369fc28dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dff3fc-3d9f-481f-8137-f25d1c803594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd9f14c-8c80-401f-9f8e-0ae9e34212b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e93f97-a4e6-4b7d-82c6-d257daebcf1c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e0a721-06bc-4432-9cab-23389da04398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed214231-a830-4f19-99e9-f81c65adfeca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa8712c-dd04-4a45-86cf-9824a4340894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21952fff-756b-4ed9-aa3a-88010e2948df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa11664-34e2-4f79-8da4-b047984cf475",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d3893b-78d8-40d2-9388-2036dbd1525c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa3552c-5a4b-44c8-9f8b-680c798149db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbc9188-0503-44fe-9373-4166ad953e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea37abb-ce45-42ed-9df4-e67d62e0caad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56320bc6-2510-4a18-a330-9e9677982576",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b56208-ba71-4c8d-812d-2723744c7dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de3a0c7-f880-44b0-9481-2b3d4d2ad727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb09be65-7f7e-440d-b409-a0cb7b4835c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a86dbc-dc36-4fb4-a3fe-a4a9eff92722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdf41c8-7eb3-41fd-b4fd-39b412876709",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb53898c-74d9-4bb4-b556-11348079f295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3f9629-82ba-46cd-a224-e87322455cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f620d97-5f58-46cb-bb8d-e49f31f268b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b4c12b-e988-46de-8923-d98a06368f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0274006f-1b36-437c-8d1a-5933612eb10d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a7ea30-b7d9-4e25-bd63-75d5d72a240a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e140418d-940e-46d9-b5e9-f198e89310ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4021733-4354-491a-bd6e-dead01557cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74cc7f8-ba1f-4731-a7d5-61e6db6a76fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb39525d-e56e-4033-9a9a-714970b36df1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22348dd3-7cb9-4fa7-9432-b09679a80d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b270c79-bea4-461b-8afc-ee31798878de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7422fb4f-a722-4656-b51f-0e8ec2027c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f836976d-292f-4e58-9752-769f37de08b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919dc051-addc-429c-971f-d91dca893997",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143ccd22-cfb2-4fe3-9b8b-6b3a4e6511b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87377ea-eedb-48ee-865a-2857f089406f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d74a2e-c185-4997-88dd-ac5defc55f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563c1b30-d049-48c0-979b-5dc9eaa8bfb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652af148-89b2-48dd-abc9-6799dd85c951",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1274677-f460-450e-9d5c-c16e134ccb10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1559ecb0-33d8-4c99-b08a-f5791ef7c9d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0389e2-341a-4617-8c68-bb4804854d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3771bd05-26a2-4376-9d25-eb3b0b719269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12e1345-db48-4359-a51b-1e2f26412bd1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0871c87-58ce-4f09-b698-b8b2e43a3020",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e7521cf-4d27-4260-9595-292fe91fa5b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7954881-90ae-408e-9837-c91f0a29458a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7cb2603-e4d8-43e5-8e56-a20efd5a7c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e11c8c-dd49-4fa6-bf17-af3bce95fe14",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f19d0a-ea07-469d-ae28-6c5cc417d111",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ba68843-f387-4f3e-b9a3-984544c71b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0c9401-1658-4ecc-9300-1e1d16b339bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3db0cb3-6967-45cd-8ca9-66c41c917387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb100a1-dd97-4237-9a43-4f242024aabc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bec29c6-a780-4f78-a3de-cd93863bb6ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b97c3a4a-81f2-45f3-a0c7-41e55afc917c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57dac53a-93ae-4a3a-bd78-d75da66f327a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b01821-5284-409e-8c3b-d527f984809d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175ae542-8fb6-42fa-94a8-21ce13a17b48",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26260540-9fe3-4725-9eee-3a6c9ee5fd52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8cb324-7c85-4e3e-8de1-2862d47cc9d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1316673f-5e67-47b4-b706-4b4e79c5a9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069f9081-065c-433c-9816-f333339bded8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a418ed-86bb-4096-bcb6-7e97af125395",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6418fead-d222-44b6-98a9-e047d3115277",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "584cd77b-cc8a-4054-b6f7-e7bde5e9fb06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee733f0-7e3b-4d93-acf1-ad3033ea930d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c54c43-6308-456a-80a4-19f97de26906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbff1d4-53d1-438c-9e1b-fc2df0bfb3a9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f0e045-0cd9-4df9-8872-6d3cc093d66d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ce0722f-9704-4496-b5f8-93d7a95756eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7a3700-b9ab-42cf-bd79-4b2ad07cba00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff271d31-a5e6-4cee-b6ce-91e87ec9a113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7a8e73-99d0-4f3f-8d46-585f1393eac6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e61cc8a-c12d-442d-900b-af940abcd83a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f9bebb5-1502-4873-aaf6-c579b23a8ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8d14bf-aa0a-4c7e-9dde-32f341b8a87c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80bf56a0-2291-4369-a4e4-b7feac31c34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1587db-596f-40b0-ba11-8f6ba729d408",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5316dc26-99b4-4487-9b78-0e73d9359ff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d022a8d2-f2a5-46e0-80c9-e0fe43439ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9827484b-6870-487e-834c-31afbcadba1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7dd3805-fc83-45d1-983e-66f997b12f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf4b96e-d4ed-435f-bfac-14e9367662cf",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a998a2d-cf52-4b86-9fe8-f597ad36bce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "227364e2-1101-4af9-b374-0d14129d9b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09e7aff-4729-4d52-b99d-38ca16c269ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e4b524-5dcd-463b-a48a-305d9f6b7ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccc205a-59d3-401a-aac1-757568fef585",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3190a7c5-610d-4da1-b7ff-926ad9969860",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53af696f-d428-4da3-be88-4f9e950899ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97fa58b-b41a-44f2-9569-aeb836e37aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5994bcd5-708f-4aea-8cdc-6632c691ac66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f50f2b-330d-43a3-b40a-09bc367cc0f0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee89bbd-b204-49dd-bd1d-cdf3a325ddc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa70f50-bd2d-4096-be59-e0894ae72a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcce939-98b4-4f07-ac4f-4efab901c7c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a1990ac-65be-416d-997b-f0c134c02e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e87700d-0c4a-446d-b814-59f34c754e23",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bfc06d-10a7-40bf-a786-166ebf6fc892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d6b117-7a08-4760-bcf0-b11302be2f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc18834e-4443-453f-ab50-bb4961762813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a9e6f8-8505-47de-90cb-f7866d957931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e701c7c-0252-40db-88f3-4923b6d60ab8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3808a7-00db-4709-ab2e-c35072678cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4660d6-be23-4895-82a9-17bde1133a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda33ce4-2939-4763-b2f1-fdf9ee0b9b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c589ed5c-0779-412c-aa07-392006c334b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1003c8-5817-4e1d-a975-e756231f788e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3832b1ad-e74f-4a06-9256-1a4bc766e948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473aafa1-c5f4-4455-bc28-7fe52c1b934c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c8adbc-cded-4b5e-8b8e-8f902f861393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58543ab1-5be4-44aa-a7b4-ac9877c22966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba1bed0-4b8e-4297-ae0e-73fc9de73f9d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f943e17-a1c2-47f2-b65d-6c3786a141d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05747dd6-5469-45c1-94d0-c8e8a9418d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53d6116-822e-4630-9d65-4d9fc048b3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bff8913-f512-424b-80d8-8f0cef0fa6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc917bd-3c7b-4461-8adb-155524166641",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde30150-0af2-45db-92e4-e93b4daf94cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31681b79-fc54-4dac-8d40-bedde48ef721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "627b7c41-fbe3-42e2-8664-b1f87a630eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c07350-6c16-452a-bb77-d01dcf987ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe73ee56-31ef-45bd-9b3e-42a8c606499d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a4e603-80ac-4b1f-8b55-d575b18f567d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b8ce9b-489e-461e-b431-bee741000d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d59df1b-c3cd-41d7-8593-3070a2c83561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442f58b8-6625-4670-bb8d-0648a63c4a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5c1efa-e99b-46bc-9065-f0fc1687e1e6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae6f6b0-bcf0-4e44-afa3-9f25ba506182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71860b5e-6d6a-4ff2-86bc-24e576581529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1393f433-b3db-4267-85d3-8221b5f222fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9b1319-d624-4d8c-8ac3-1e168e21f007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eed5ee4-ed6e-433c-a4f3-a1d8eb934e41",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbb3592-d06a-46da-823d-475cb409bcc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403debb1-6879-4f7c-9ab4-d272bed9d5a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "246c7f3c-da9e-43a3-984b-16b3a00963cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b9fea5-11dd-407f-a0d7-5484f76a4ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ac16d7-1596-4829-8529-5a473275797c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5bf6c9-dc56-47bd-ab04-d26a53abbcfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdab16c5-c048-4504-b71d-2d7edde5e61f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d39df8-8f90-4932-80f6-f44e73abb08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4461f9-b313-4cab-87e7-2ea88e5f14c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce36525-88d5-466b-8fd5-809018452e66",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7620f5-78c1-4571-bf73-c57a0b0f299e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73b9308-eb0a-44fe-81be-6bfb3a86cdd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d13c84-0471-462a-8168-9b9d842b1af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c152c3-cef1-4ea9-b701-5d63f5323258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156bda69-b829-4450-81de-4699077494b1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de90abda-9696-4c41-b545-ab07fa9b7253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481f99ea-34e5-42bc-80db-d6d6d56777f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a971aab4-8436-41bc-8f75-bf14fcfa22fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8d831c-d357-4512-a68e-bbe91415dfe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3347f2d0-3a7c-4b0b-ba13-7a1d42ce1418",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d922152-37a8-424e-95be-5dce225f95e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e13421d-a78d-4e81-885c-39637220f8c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2778d89c-413e-4583-9625-38e484a45895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e2a7ce-4caa-4930-959a-cfe0fd8237e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e088669-ef98-49d4-bb0f-a79301f78d0b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74fed0e0-b45f-49a3-8c92-ef856f6627f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d32558a-e5c2-48f1-8b3d-5bf388a30219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833347c1-be90-46f9-8477-6cc543d355cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e30939-0891-4eaa-b03f-7623e853077f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9773528f-276a-4eb7-850b-da57ed96a3e8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee61783-9ab3-47dd-a52b-0bcf4ce2e177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7e9d64-c902-4a81-b1c7-f047846299e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60071a8f-9c7a-4fe1-9ae4-2687291e7117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd6c0b3-2b92-4f95-b7ab-35f00490039f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e85cf35-3c13-478d-964f-0993f9ecf374",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d827f5-438a-4f5f-9c66-99991a3123d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1edc7ccc-6f01-4d88-9c0c-740386bc73e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45536f69-c809-4120-9245-faa2da8c1cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22e111a-2e9a-4ce9-a5c3-df3115d61bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59fa2ac-82b8-47b0-90a6-834673a576f1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca37896-c647-43ea-bf32-3fe8ee02d056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c8a5c3-1054-4fa1-9d85-c8e8472c98f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5064dea2-3c5a-4e10-b4f8-57d72a8413df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3d6474-8eaf-4dcc-82f8-92efb0c2b693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6feea374-12c1-4e8c-aea3-e731749b1372",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff27f06-1409-49e0-992a-f0241f6ce04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f172d0-5b4f-4a2f-bd8b-cd35efcb9cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b72fd45-992d-4a05-999e-9675db453e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb856d2e-8592-47bc-b363-54bbf9421da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435313c6-8160-4fd4-8915-d67058076a5e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55206b34-80d5-49ce-88df-f3755db63b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5a1a0e-a515-4813-ba23-2633703a77ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8141ffb0-1749-4b2a-bf6a-b2443235d670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "967f4de9-8206-43f0-b0a9-b98a25e984a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e6f1ab-1173-41b2-a26e-05ebf47331ce",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95dd7554-bc10-4365-91d1-b8f4199e6602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3989ca-3027-41c3-9415-40146ffc547c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4101f6-8aed-4761-8075-9aa89d20c761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b705f8-4647-4cae-a91d-6a35bc900596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a76341c-8ddd-42ba-a32f-dbfd76c9afd5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8f2757-64b9-436f-8336-daa12e23fdb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9df8cab-3972-4e4b-a2e7-936a68a118fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae542758-2254-4f93-98d9-ee0679c81da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b5d44c-3bd5-418a-82b4-028c13fae80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cd4c78-df7e-4f6d-862b-04b0b1ef35c5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9b189b-4242-4d22-be12-8d76126bfb59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d90b3d-a749-4755-989f-8a639e54a6a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b23ac43-3cf8-4be0-8c9e-86429871f133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adea957c-0d02-4bce-8295-22b7b1e63cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6492f0-6e35-4e52-a336-6ced662657f0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd150978-5f24-46f5-9bfb-d61e5f1b06ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10a233e-4247-418f-adf1-f465ce02c893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f40350-4a4a-4c30-9a9c-32875ef7cc60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f639fd6f-1945-458c-ac61-723c1941ea63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4ddedd-466d-4278-b0bb-ab3517b26975",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77871341-bd04-4f71-ba93-e4425dd2b027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7bcec2-273d-45f3-8cf5-f3022d0c4658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a7f107-5914-4a1a-bd18-276c28e72d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8105e3ad-9c38-4607-bba1-55f315c5d85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c327a28a-6f38-4a6a-a2bc-4942752c91bb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a754b01-7ec2-4b16-8599-cfdf0b0e2c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220ee55c-8efa-4c3d-946c-861ccbb71f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7eff2d-ae85-4f4f-a0b0-0cd1676a3ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1b2621-50ea-4d38-8bfc-2d87d0da93a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1208d9-5a8b-42a8-926f-5fadda70ca27",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547c3946-fd46-42a3-98dd-35f0514728f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298261f9-fade-4567-a17f-4cfb52ef9e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb609d9-9bf9-46e3-a39f-0a6431c173fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac435bd-ecca-4ae0-b61c-b7b8f6ddb7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7bf670-690d-4885-a689-5f50417a640d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d59db3c-c6d6-42e9-95c0-67824e8fded4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d4b49e-3822-4486-a291-87489f74323e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "393c1117-8594-4e75-81cc-e268b29040c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c3793c-0218-4ea7-b86c-53380981add3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e48aa85-ffc6-4850-8463-e4c2e445644e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a72757-fc93-4f31-a1e6-6062112b6a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257c9246-a720-48a7-8f0a-2b2346767d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2aee72-4d23-4967-8a02-c833a6ebc937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0916e45-958c-4e43-81a7-8ae1ecdea7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca52cd06-1a58-4c4e-9c72-42150f62dd4b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db50e12-589e-4ef0-bda1-3b18afaf729d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc635039-6e57-40f8-8af7-032c3bdcc3c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871e42fc-f164-4126-b5ba-af605254c5fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984bc560-1c38-4410-b14b-34bace25451d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f2a6f3-59f4-4a32-ad12-cc27a05b5abe",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19a950e-ba56-417f-8dac-7240fe6ebda8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4a73bf9-7688-45ce-be06-5db169655091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a72c4c-e146-4a3c-aaaf-a2a5297d32ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90f45af-233d-449c-9ed3-62e9d5b31b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5730db5-3bf1-4c90-8a63-57ea6d2a050a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eec1438-a861-4a20-99b7-98dfbc161229",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd8515c0-e39c-4788-b624-a8ca10811ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb83eea6-a5cc-40c7-b089-f1881328006f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aab8a37-7c0d-42b1-8ca9-3dfd35448173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c75bc3-7fd1-42a3-a806-f758b5a9fc54",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799646aa-f29d-4046-8e16-44410e8f0195",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb730c92-0366-40f4-b53f-5bc9ec8a7b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbbf5ba-b2b7-4c2b-becd-30e0872bd098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12fc1d7e-6c33-4c32-b0c6-2702877be9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e2e240-8dc3-42a4-9667-8748bddc7fc5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e8b51d-041d-4544-b251-574501e2f225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d0df050-12dc-4b00-9611-a1d43f106ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff77632-8f5d-4c85-8f10-0dc49f9aa88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe452474-6ef1-4299-9893-a09fd65e6be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd82665-f485-4883-98e9-08132482ef03",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f66f9ef-106e-4c00-9c94-4956934af7bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5077c916-f292-435d-8d96-9d596a259a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf19ce8-cb81-4f19-87ce-dc7607d57fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4bd211-30bf-4677-adf6-4ac1c554f186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1b8df7-7cc1-44bc-a657-b77683cfe2c2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d552235-2028-43be-aff7-b168ae59aeb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e1f6157-3f1c-4ca5-be54-0601c31125f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76fe682-e396-44d4-9f3a-4a786a5380ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31504cf5-059e-4334-9323-c6d72a912e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46c8e20-c2aa-41ce-9024-b45550718c46",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d5c6ed-37cd-40d6-b9c9-9fcfb5d1f047",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f52b86c3-7a2a-43c2-adb8-41bdc67c2b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "201fac11-4fcf-4a1b-a6a2-4aecb335edfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f856b8b-9b20-44f1-be71-788588c5003a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f93e838-9b7a-499f-b89c-bd6e751bd8ec",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0929ee9-2d73-41c1-9911-2fdc0979eb08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec7c7582-15f2-4c94-94b7-eacfd1e84695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eec6356-7af3-4899-9461-65f9cf132bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc6d804-066c-47e7-9311-a0f1d89bb9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c4a0af-f08e-44ae-8db3-b007e47e89e4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817a1b08-0f73-45ea-8639-fb31a885edc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e24ac82-d032-4ec9-a85e-dbfc36796bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9c743c-4ba0-4b4f-9473-b0e9de8d4ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7593b3-4e65-4266-aaeb-12aca77b1595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ffc208-ddf7-4b1f-95a2-a4284b563a4c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79812a54-93f1-442f-8115-75aeb8f2590d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab7b90a4-3bc0-498a-aaf7-a56b1b11bafe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcab21cb-3e74-4344-95e1-1b339e5579bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9675507-b009-49d9-baca-4a67663186e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb47891d-cb6e-4d4c-967b-3c279fa6103a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc744a01-eca4-4c90-8267-691973cba004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21a88366-7c05-41ed-a388-26b0eaaff25d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4d4499-48e0-47df-82f3-d0d63ef657a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2590ce5a-f951-41b4-885a-8661d06256c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cb7c2d-e256-4475-aa06-3480f09ded77",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec354d4-e19e-48ba-b22e-5c153e649cbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca44489f-fc65-4d5b-b4db-403d8aaf42ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb87cbb-ee48-4766-9f31-0b670d308629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed7f812-12bc-46b9-913a-6b8c53fafa90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c4cd19-290b-45f7-9521-31bcab5b0aa5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e0bed0-5b18-407a-85f3-61706d8c5132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "368a048f-e085-4c17-ae2a-d9d470c5295d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72136813-d8d6-41f3-8b25-d28a43e8adb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0a75fc-ceb2-4772-979f-e46fd533b5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad4f3db-820c-4716-b205-6bdb2dd82bf7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85de0ed2-f9be-45e1-92ba-4776fd0b1faa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd22584a-3923-46d1-87eb-f9e2e09c3d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2661015f-b4a5-465b-8f1c-03c4c47058a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e557d60-9d3e-40d5-8113-6ad3bffba029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efe5571-fba8-4e59-ab5a-50379b75acd1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a492c2-4860-4b8b-ae6b-aa7e5df74704",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "059a3d7e-c7b9-44c0-97f0-2c43c4e4b66a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fe0cdf-9bf6-467a-97a7-d767f6c43817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ec0a44-f63a-4121-b5f3-b0355dd01aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183b21eb-58a7-4a03-91ba-7bab893f995d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943c67f3-c691-48f9-8ac8-c44bbc3347aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3da0952-7df5-4767-bb07-ccbf4dfa430d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "152aa456-9675-452f-9ec7-3f0c29f3fb7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a00ca9a7-1c52-4b6c-aaf5-a9eea7cf1921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75437e7a-3d5b-470b-87d1-498b96a27c9b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e37222-c85e-403a-96f6-dc07fea51053",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "278ba0fd-4c9f-4ebe-ad3e-c560098fcd3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdc74c9-ce2a-48f8-9a09-93dbdac14100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f14f907-d30a-40a8-a12b-2b29eca6f63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348d4f66-2aff-4197-a698-c08a6c64e5b2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5aae90-36de-4ff6-acf0-cf2e30f2fa4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b063dfec-29fa-4752-bd53-45b16b83c9ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ea9af6-4977-4ac5-8c9e-140088b658de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61bc2164-faba-46ae-a5ca-2c1959313841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dcee47-2636-49cc-8541-a047f2fc86c5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f46b34-4354-4c3b-8e82-31f4dc6aa6ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eb8f53a-0d70-4300-a252-c80e3c489855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82a63c1-ecbf-49f6-be26-68e36f5b310a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654deeab-1bc5-46d1-891f-01f5e74d27eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc66c840-de5a-448c-ab0b-e45b82c389db",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85756e3-dc4d-45c4-a356-65b5299f2a43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52d5af70-5d90-42dd-a0e7-c07d6c783f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9fd0b8-eaef-4593-8bda-8c46f27a353a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10c4221-8ba6-41b1-9b47-a2fb1b468339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b3f9e3-5e0f-43e5-919a-1f2f23198067",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19104d87-cdc6-4852-9e7a-53fad282fe65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07cdcca9-075e-4db8-886d-da50e204319f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a087d320-fbe9-461e-8f79-12fe70ec9c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00e40d2-c512-47f4-8581-300f03f2c33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff27876f-c7cc-4005-8cb2-51c096e4225f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c223c28-d0c1-4638-96e8-0accafc426d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da2636f5-b3a1-4b8a-bab6-ec7f1597e6b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "371341ce-60e7-49b5-a890-059481b5c577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f23f263f-87a6-4e2c-931c-95ea08bbe20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58db9fdb-fb8b-4d9b-8f79-51f6a47a0249",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3891faa2-3cc6-4fe7-8bf1-7135df473df8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdd54eaa-93a6-4e20-b509-cf90cf319a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "514ec2c0-24f7-4e81-9112-e084ce488073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f08390-b2f5-401f-a9a3-f2e2f613ddf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fc07cb-9bda-4cdf-9f00-87f2c1874aee",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9a03ac-f49c-4209-bbac-cc257290bd97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8110bf0f-d081-4d7b-b0c1-50fd1fc22e0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97718f51-dbd1-455d-aea7-78ab24e7f036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0b674e-99f0-4421-9fa3-1803576db1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6457a22-c406-417b-b661-64b5788bcaf7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc574ebb-fe8b-4f58-9a90-89e3cad7b4b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fe58ee1-4900-41a5-9dcb-597c94a11f02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a83ac5-b8c3-4513-a664-b3a2a267a23e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888c4869-ce61-4d2a-b823-c83f583dd225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c3ef32-4b7d-4569-8566-b59a1de7bc53",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96702250-3fa6-4c55-926a-0f459b255c21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2174a20c-441f-42a1-85c8-d587591125e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ef383c-5bf2-4eb8-9407-893650bc32ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d8bb15-f2d1-4d96-b12a-4a33c7109968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72946d7-b878-45f5-9d80-83be6661ec8d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ec0cfa-9af7-422e-805a-1e878850e1c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9acaea7f-7bb5-4569-977e-13c0fb722a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8a511f-a26c-4922-8668-6394f4c323a5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73590815-2af7-4b1f-af2a-849674fd58b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2415a978-a071-45d6-9e68-082910ad041a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96790f15-4dba-497f-8903-96e1641712a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdc89cf5-9134-45ac-91e6-e6281be065f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4624252-61fc-464f-8500-5e5ec5c51553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2fb655-e07d-4c34-ac78-d6888f360dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c019a90-79ba-4555-96eb-5b96f051931a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d2d301-cd91-4dd8-9842-5ec0cb756b93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "817b3add-978a-43f7-9611-d5cc4f0d59f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2387021-4a8f-4dea-9c6e-e29715d0c87a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510fd621-02ba-4d70-a464-74c739f5e49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3b69a4-598a-4556-8401-05fdcd5054cd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d636ab05-4052-4456-9687-a529a9f8cddb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb95e023-165b-45a0-9044-bf356aef5440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "962b7913-1c61-419c-b90d-28c1a90cbc6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212e3853-209c-40d8-83c6-196c4c3bb9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec07955-96c2-4f84-81ef-a74737ca8709",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34106af-1e0f-41f9-83c8-39ff8bd041f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba921d45-ecb0-4543-be47-0148bbc9656a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4825e5-5099-42b9-9e15-9baed53aaa72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4b5d26-9bbd-413f-a822-a2acc9d56b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ad1b36-625a-40fe-a03d-e0cd49110fc9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e3edfd-7377-4ecf-8cd7-3ca48c0d1d6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f820fb81-e3db-497b-a0b3-ea3e936dd47f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "060338f6-e810-494c-aac1-494d8796b145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77430f28-6968-48e0-944f-64cfa8f3a191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e93041-3b60-421e-8a27-949e37bc09e5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fc44a0-3e8f-45de-a407-9ce2535ab0e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "520ba689-7463-4c98-9c8e-16a16ca99e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16595b9-c1e7-4746-833f-06eb18672fca",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b2f1a1-1ae2-4c94-bc48-5712b0f8659e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eaacf73-ab46-445e-b7e0-3f14756e0ea4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d61194-823b-45c8-a4ad-07f115cf2999",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3669bacb-1a47-47d7-84d2-27a47b07dd6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bca358f-f700-4876-9aa8-d80561ad1598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d0a071b-c90d-45a5-ad1f-e6b8c12c7218"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7968111b-7c63-47f1-b450-1d6a27ad7a77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a09b055f-cbf7-4fce-95e3-a0b32e4c88de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "acfc49b6-b114-4cb2-9015-73343f7fd9d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04c14939-ac1c-4381-bd8e-811b9c56fc2c"
                    }
                  }
                ]
              },
              {
                "id": "c0264dfb-4781-4bb1-a336-06e7d256c546",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6210be2f-ce47-4c12-95e3-afad02cd7082",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6aa2fda-61a5-497f-a4b7-8f6f5de58ab1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7dec6830-a0b0-49db-89c0-8e1b0e6550f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f815fd-513c-4ce1-b302-7c471f04c90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c68fb89e-a75c-4bb6-b8fc-2d2aa37fa49e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99135e06-089c-46f5-b826-7036c371202b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16a19406-b77a-4d34-9a30-8b166208b0c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d34922d-2330-4c26-a54a-802175d299de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "088b59b7-0de8-46a8-9483-d959f9425139"
                    }
                  }
                ]
              },
              {
                "id": "d8f92d33-2c14-4bcd-9955-d858ef390b9a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e1c6cc03-5545-4957-a1a6-c2ba54403c0c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe39c16-12aa-475e-b6a9-0b5049c237d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "79aafb3c-11b8-4f19-a9ac-a37d6a419a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a854b561-f944-4873-8ab9-dabc8f7c1887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075b9c02-ecf3-435d-a283-4df903ab1999"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c1aba9b0-1dfc-4782-b7bf-095e522a9583",
            "name": "Positive Testing",
            "item": [
              {
                "id": "544999e9-1cf7-45c1-ace9-0761c12c407b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed8d182a-a857-467e-97c6-9e56d6f90897",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "04ee2f1d-3ea5-482a-9ed0-7a1e1298afa9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9e617b1-3a80-4590-8080-f40fb0af0941",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85f65fc5-3135-47de-81e4-0f480d9b9602"
                    }
                  }
                ]
              },
              {
                "id": "5540491e-3626-48e2-8d3c-bd273d64df72",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37040b62-d8c5-47d9-b487-24db0e83f3d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d0711e34-5fa4-4e65-9d48-df6465d8bf96"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c3dac66-62c9-4a28-90c8-cb48f78210cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd5b26c0-f626-4322-b089-7d0335b01f98"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89d4cce4-9e2e-4ef1-8970-506e01290f02",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "045baa2c-fafe-4a1e-b533-eba514957575"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a49878f0-deb1-4213-9a32-8ae7a7b4a36f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1535635a-b071-439c-a38e-c509705cb462"
            }
          }
        ]
      },
      {
        "id": "f7a85181-6255-429e-8b9a-12364a92a03b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f862f1fa-9604-42b4-8280-66ab5cd12b6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0f18c7b-ebf0-4950-8dec-50f2b6a0ecdf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8dab7105-2ca7-4b60-8079-135edee02d06",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d393e2e8-d8d9-44a2-adda-153b8914b8a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3f32e9c4-904d-44aa-9e4c-fe3f753af77e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e68afb-57dd-4a38-a801-9e55c1073bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc6e0be9-f94c-4b86-9d1e-044247d8181f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "133a319c-d6fa-4cea-ac27-d2e4c4b2b08a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e751e46-6a7c-461d-9462-032890d3a00e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d20afda2-8c1b-428a-8d91-97d9124191f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90263983-5e09-4695-a063-b8a32bd22ab2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49b86e48-5a18-4268-996e-c0cc6401b9cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a37f9e01-ffe7-4ff0-951d-e0414590eeff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "889e8e4a-3a0e-493e-8898-a658ed2975a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5bc4b825-4672-4f73-bbd3-0d97f76d5de6"
            }
          }
        ]
      },
      {
        "id": "cb841390-2883-449d-b036-520a14a44687",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "92dd70e8-0ef0-4673-ad6a-3baf8b3cc8cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "798e9a45-4baa-4290-b17d-2ccedb0dcd05",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce8f719d-72ed-4cac-a67e-11b88d3b5c05",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fdf028-a491-4c59-9393-ca7dc09b6b5b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3963a11b-1234-4363-b4de-bbd3a24f6a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2233cc3b-3dce-470c-a151-bc35a585f15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "975e36e6-8a6b-4e8a-a572-39522ad98e48"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84723944-7ad6-4cbc-8b93-a8278dcd3865",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d051f1d8-e04e-4125-b46d-49fbaebfadb6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b2c3e5e-d776-4ffb-a26e-3b49f9bdf793",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c9e51e7-83ab-4f75-9a29-15f07c567cad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecfbf581-98ac-4d98-82b9-08f8e0a1e78a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b33951b5-f431-406a-add6-4db06531e2ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf90f442-0fae-4873-b122-450ba381f559",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "010dadca-560f-4384-b181-c48d9bc44649"
            }
          }
        ]
      },
      {
        "id": "f6c0d5b7-a7d3-40e1-930f-fe86796c0203",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "99c6d83d-0413-4638-9e87-bf49b49238ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af9fe16e-2bf3-4874-9833-41f7873f7818",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f226b54c-23f7-47f5-92f1-d4fb8bf00e89",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355c0b23-ac2d-4f39-a60e-1027785e5916",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bcb803c-3bde-47ed-9f0b-ffb0fda8b1ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e8bd51-cd9f-42e7-baa7-973c65ffc13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de2709cd-c183-4567-a431-d634fd8a6356"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c642446-9ab6-45df-85ae-3fbb142aac15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d8658dc-9779-4a18-826d-cbc7abfac3a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "42c620aa-fdbd-4de7-b132-ea20547fcbdc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2686e2e-a441-48bd-9a5c-d66aa8f6c658"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab28ab3b-fae6-486f-923d-51d076f426e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1572d849-9bfe-4ca4-afc5-f8797173c8fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ecb063ad-7826-4e43-9531-ee8fc60d151d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4bbdd7b0-fbfb-4ff0-9903-66eb8ec2789b"
            }
          }
        ]
      },
      {
        "id": "d8e70866-98dd-4acb-b775-f8855d1769df",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "acc6e578-9df1-4de3-a81c-0e69750cafb9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eea05215-0dd7-4ba2-a0e5-898b11ea5718",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "32815de1-dba5-47a6-b303-e14212b7ce94",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8cf7472-c8c3-49ad-bd86-13b0476ba1d0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9b2cec7-7b45-4727-b130-142e49f2ebde",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 117.63157894736842,
      "responseMin": 6,
      "responseMax": 3010,
      "responseSd": 359.971774311564,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705019790143,
      "completed": 1705019833029
    },
    "executions": [
      {
        "id": "d26f5bb4-8a44-4414-a090-6c215f308958",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e18fb584-618e-483f-8877-59d95b7e746c",
          "httpRequestId": "bc5507a7-0aa5-4cf3-9d52-535fafebf6af"
        },
        "item": {
          "id": "d26f5bb4-8a44-4414-a090-6c215f308958",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5a75f5bf-b258-44c2-8daa-4ee270ecd30a",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "566d91bf-a375-4e05-ad01-893cf4c698ac",
        "cursor": {
          "ref": "a523f07c-e107-4f28-a69b-42a4bbdbda40",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "91b7ae5c-701a-4795-ba48-93ef0878df4e"
        },
        "item": {
          "id": "566d91bf-a375-4e05-ad01-893cf4c698ac",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9f24b96d-c4d2-4b8f-a64b-890657bfc378",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "001bc6bf-9e7f-4745-9d1b-4554535a247f",
        "cursor": {
          "ref": "76637c2b-548c-42b0-bf6f-67a669c606d6",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f2d121e8-2839-4f7e-b168-296261f81c1e"
        },
        "item": {
          "id": "001bc6bf-9e7f-4745-9d1b-4554535a247f",
          "name": "did_json"
        },
        "response": {
          "id": "a44a70f3-7e46-4e2c-a8b3-0c5773548322",
          "status": "OK",
          "code": 200,
          "responseTime": 863,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d44a77-6311-420f-962a-0b8402d5bbc0",
        "cursor": {
          "ref": "c81e853e-fbf8-4810-a334-5e7c72c36daa",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1fa37bdc-ce3b-4efa-a19a-c74c28a80d32"
        },
        "item": {
          "id": "72d44a77-6311-420f-962a-0b8402d5bbc0",
          "name": "did:invalid"
        },
        "response": {
          "id": "56b2204d-c0b8-4be6-8798-cca1e7da5db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d44a77-6311-420f-962a-0b8402d5bbc0",
        "cursor": {
          "ref": "c81e853e-fbf8-4810-a334-5e7c72c36daa",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1fa37bdc-ce3b-4efa-a19a-c74c28a80d32"
        },
        "item": {
          "id": "72d44a77-6311-420f-962a-0b8402d5bbc0",
          "name": "did:invalid"
        },
        "response": {
          "id": "56b2204d-c0b8-4be6-8798-cca1e7da5db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72af1dd7-0df8-4359-80fc-7927604ec037",
        "cursor": {
          "ref": "1703c6e9-99dd-464b-9d91-e3738a917851",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "273f6097-1950-4fd5-a23d-83eefc73a526"
        },
        "item": {
          "id": "72af1dd7-0df8-4359-80fc-7927604ec037",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c2a6df1c-9c89-4d36-bd75-e8162d539f55",
          "status": "Not Found",
          "code": 404,
          "responseTime": 118,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8aa0af-9e6d-415d-a191-d979abb8727b",
        "cursor": {
          "ref": "79829022-4129-4037-a17c-74a5e5c77182",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "703940f8-bd65-4331-8279-35f8a2e26f15"
        },
        "item": {
          "id": "8d8aa0af-9e6d-415d-a191-d979abb8727b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3af05abf-4611-49a0-a73a-403165d2b91d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55a2a42-1025-420b-8562-04fd2be875ff",
        "cursor": {
          "ref": "7037fbe1-1404-4484-9188-5635c0bf8ae6",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d7394697-0e0e-4138-8d00-9619f012da84"
        },
        "item": {
          "id": "b55a2a42-1025-420b-8562-04fd2be875ff",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6f3e07c0-4ac5-4e05-8f87-4f5503581ee5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8f1b98-0c6c-4ac7-946a-8b495faa856b",
        "cursor": {
          "ref": "77776f98-c0cf-4c18-bf0f-2aceb59ef528",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "218803c8-3d6d-4691-b29a-67e79c35fb7c"
        },
        "item": {
          "id": "6e8f1b98-0c6c-4ac7-946a-8b495faa856b",
          "name": "identifiers"
        },
        "response": {
          "id": "c4220051-2e7a-4d43-a578-b7cadf53bfa5",
          "status": "OK",
          "code": 200,
          "responseTime": 310,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99c8d1a-9429-4868-a924-c3127624ef9c",
        "cursor": {
          "ref": "9130f245-6e95-4151-a7fb-d31d7fb7fb15",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a2c66b1b-b44b-4299-906d-60c3760cf7e0"
        },
        "item": {
          "id": "c99c8d1a-9429-4868-a924-c3127624ef9c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "374e574a-d92e-40cd-90b0-2a4c3c554779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790ae11c-d3ba-4d97-95a8-03ea425b7599",
        "cursor": {
          "ref": "144d8a31-154f-432d-a9b6-2d05dca4b29e",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e0138ad2-e72c-4b76-ad3c-e365a49cff2b"
        },
        "item": {
          "id": "790ae11c-d3ba-4d97-95a8-03ea425b7599",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "57ade695-6c22-44ea-9e6f-7171c138ca86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fab8a35-d6e4-42a1-8005-1c99167b481d",
        "cursor": {
          "ref": "0ecdd279-4034-4f39-b282-88ec74abf264",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6df5561c-de74-418a-9bd1-049671a36b3f"
        },
        "item": {
          "id": "4fab8a35-d6e4-42a1-8005-1c99167b481d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dc4f64f7-53a2-45c3-92db-bad1b66c3b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4254c32-e2c0-481c-a027-a5faa1c49d23",
        "cursor": {
          "ref": "a390ec32-a5b4-456b-b68c-46617fe6b39e",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3e8a95cb-0c03-4163-b08a-6e7fba63d134"
        },
        "item": {
          "id": "e4254c32-e2c0-481c-a027-a5faa1c49d23",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "865459d1-e933-4140-9277-44f462ad5e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd389360-c666-41af-8607-17a3f2c680d7",
        "cursor": {
          "ref": "986a0b02-c270-4abe-8b03-26f16c61fa4b",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ef1e4e12-cf11-4aa7-8811-e0c53c6f161f"
        },
        "item": {
          "id": "bd389360-c666-41af-8607-17a3f2c680d7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "642c945d-42d8-4a32-9021-1de5326bd8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48623dc-0e7d-482a-9cac-522f5c3394f8",
        "cursor": {
          "ref": "9a429a8b-f8a5-4ff9-8f95-02bc0151532e",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7e0b8d5f-b526-48c5-9bd8-905e0154b978"
        },
        "item": {
          "id": "b48623dc-0e7d-482a-9cac-522f5c3394f8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9fd6f5a5-441c-4708-b953-5329d01706a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bc6c27-a34b-4371-afca-ffa9371ba275",
        "cursor": {
          "ref": "00d85208-a306-417c-a2e9-359a8207e15d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "526b7905-0847-4afd-bf7b-58fa2dfc9ca7"
        },
        "item": {
          "id": "a3bc6c27-a34b-4371-afca-ffa9371ba275",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "75651754-b3c0-4481-884d-7e5a3b9dfa09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4476fdbd-c576-4d6c-99f9-c0f233eb7ea1",
        "cursor": {
          "ref": "20046bb6-c434-445f-96d6-b324849289be",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0d5160dc-b3cd-4fc8-8293-ebcdc1fe0314"
        },
        "item": {
          "id": "4476fdbd-c576-4d6c-99f9-c0f233eb7ea1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "802ad35e-3a54-4178-98f1-736ebf9f4542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903e788c-a864-454d-a895-4b4a8883bcbf",
        "cursor": {
          "ref": "0c444ccc-c531-403e-baa6-43f637a36302",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "07238054-4c59-4710-8813-edabebf51eae"
        },
        "item": {
          "id": "903e788c-a864-454d-a895-4b4a8883bcbf",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c467d032-bba1-42fe-ab48-caf3f5479a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a754b2-b982-4367-aacb-94ead9a5a8f8",
        "cursor": {
          "ref": "0d323c12-3cdf-4904-afa4-8e6231e00e1b",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b36c25de-f846-4007-a68a-1a09a1e84a9c"
        },
        "item": {
          "id": "67a754b2-b982-4367-aacb-94ead9a5a8f8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "966b2068-e229-4fe7-9fa8-e99babb34cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a780c37-ab66-4ed6-a529-9bf134bb44a8",
        "cursor": {
          "ref": "1fab8727-75ff-4ab1-80b1-e5b9fc3b6724",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "11ae418d-5392-4cf5-b80f-59e2dadef87f"
        },
        "item": {
          "id": "1a780c37-ab66-4ed6-a529-9bf134bb44a8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3bef7f5c-8eaa-4407-8f2d-6f1c20b84568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac0ac13-b39e-4e3f-a9b3-d32d69bbe9de",
        "cursor": {
          "ref": "02e356f3-40f5-4bdd-97d3-8f0ec6570484",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7281c01f-c272-4cc8-b220-c463fe3386d1"
        },
        "item": {
          "id": "fac0ac13-b39e-4e3f-a9b3-d32d69bbe9de",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a06cfa90-5e7e-43ad-aac8-3b5e1e059625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7a5644-ab9c-4335-a065-c2f32045faa7",
        "cursor": {
          "ref": "211ecfe8-2f97-4330-83b4-1d44026a3fdb",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8443766e-40e8-45ea-a44d-5deb21e57380"
        },
        "item": {
          "id": "3b7a5644-ab9c-4335-a065-c2f32045faa7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "410a104c-15de-438b-a7ef-eb0e2ecb06f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad2a03f-36ac-473c-b767-188b754e0531",
        "cursor": {
          "ref": "c7962030-582a-457c-8c6c-9254ea43f695",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "62017ced-d427-4858-96c0-1fbd7ed0fd7b"
        },
        "item": {
          "id": "3ad2a03f-36ac-473c-b767-188b754e0531",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8de6c7bc-6827-4941-b19b-b2efa2a05aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be9df77-9c7e-460c-9856-dc13cda3cc0a",
        "cursor": {
          "ref": "95fa9a28-6739-4955-8312-2442c7359ef4",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "36d8be71-9153-4a9f-b31f-e85a431fdfc0"
        },
        "item": {
          "id": "1be9df77-9c7e-460c-9856-dc13cda3cc0a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c46a2395-08d2-4e69-9809-ef2b3097b593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5f559c-e423-498b-a0aa-9930bca9fe41",
        "cursor": {
          "ref": "07fae491-0819-4610-abbd-440572795ba5",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f74d97de-624a-4232-a017-24dadeb54f60"
        },
        "item": {
          "id": "9f5f559c-e423-498b-a0aa-9930bca9fe41",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7eeb25d3-b6da-44f7-bff6-2dfcfc0255cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a8c444-d583-4503-97ca-e77f4dadc061",
        "cursor": {
          "ref": "3e8150f9-8cc3-44d6-9ccf-d25fa0b9d862",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "eaff663a-c6d9-4046-b933-9230580a9071"
        },
        "item": {
          "id": "05a8c444-d583-4503-97ca-e77f4dadc061",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4ab0559e-e23b-450c-8432-e269fdf2a26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421092d3-42a4-472b-85df-e285e3fafef0",
        "cursor": {
          "ref": "d655c03a-938e-4dcf-a8de-dd0a2f70351a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "be089961-96d4-4666-b579-8ff4bfc7689e"
        },
        "item": {
          "id": "421092d3-42a4-472b-85df-e285e3fafef0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cbfd524a-6e6b-4e68-8756-e0dfcbc371b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf443dd1-1942-4daa-a9b3-e8e3db9c5354",
        "cursor": {
          "ref": "1460fa85-7146-4f8c-a90e-190bc1683d68",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "011a6331-7dc0-436d-8266-b443f3dbf46b"
        },
        "item": {
          "id": "bf443dd1-1942-4daa-a9b3-e8e3db9c5354",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7924ef44-d64c-4331-9795-5e0d32049fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414232eb-0e16-4139-9d3b-1ac360b2b373",
        "cursor": {
          "ref": "ab10b772-2756-40b8-a5df-42c8f75a9ffe",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4ab361f5-04ae-4566-83fc-85629ec3861c"
        },
        "item": {
          "id": "414232eb-0e16-4139-9d3b-1ac360b2b373",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "00ef8c7d-211d-4bdc-9533-e9246d44d2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381436f5-8f1d-4c9f-8ba1-400c1091f5d1",
        "cursor": {
          "ref": "ff7bcbed-55bd-46da-b462-1394cc6a05bb",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "eb5b6712-b03c-45df-b39d-5b61da0d546c"
        },
        "item": {
          "id": "381436f5-8f1d-4c9f-8ba1-400c1091f5d1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "58495f52-f6f9-44ca-97c8-9c959db483ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b405b7-3a2b-4eb1-9264-ca8ba1db6a91",
        "cursor": {
          "ref": "d1d90740-8793-483d-86a7-93cb747c12ee",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "89db9c0f-f450-4822-bc4d-a4d7919fa08d"
        },
        "item": {
          "id": "79b405b7-3a2b-4eb1-9264-ca8ba1db6a91",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "844091d3-a804-45bd-9176-39360773f0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8dfaec-6ac7-424d-997a-53a0e84b03bc",
        "cursor": {
          "ref": "e05e80bd-c109-4ac1-8cb4-2155eca17754",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5d2b796e-c449-4281-970a-5920f4432f46"
        },
        "item": {
          "id": "0a8dfaec-6ac7-424d-997a-53a0e84b03bc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "639b5f0a-ac5b-429e-a244-bca6b65ffa2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda45535-2127-4019-be66-e3a3c79a2883",
        "cursor": {
          "ref": "adf69b5e-32fc-40e2-a8d0-aa3ebfbb4679",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4cfbd496-e101-4af5-a687-62764dd634b2"
        },
        "item": {
          "id": "cda45535-2127-4019-be66-e3a3c79a2883",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e6437545-1e25-4c71-804f-f9874706cb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8532ee-cf99-4aad-95c0-3c88a7d16b62",
        "cursor": {
          "ref": "ff021a1c-d28b-4a8f-a84b-44788ba11354",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "264eac3f-b58d-499d-a5b4-1532bcd6a532"
        },
        "item": {
          "id": "6c8532ee-cf99-4aad-95c0-3c88a7d16b62",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "20f34b21-78a5-45f2-8fc3-f632a7eeb052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dbce74-f7ce-4191-a968-6da394a64cab",
        "cursor": {
          "ref": "7a16bba0-dbf9-46f4-9c16-2f3c5c9fc48f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "32881b48-5e4b-4735-8620-f57b7a1df14f"
        },
        "item": {
          "id": "27dbce74-f7ce-4191-a968-6da394a64cab",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6ddefec6-522a-4b0d-b08c-ddb1695db08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8de611e-bf36-4393-9801-f8086ab19061",
        "cursor": {
          "ref": "803242c8-f485-4285-ab86-583ad4d5e33b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e6857114-db62-4082-ba97-60a756b90175"
        },
        "item": {
          "id": "a8de611e-bf36-4393-9801-f8086ab19061",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "70c9c0e4-1e5a-4f2a-8709-7dd1eac534bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d1e51f-717f-4d2d-8644-f0c3678d625e",
        "cursor": {
          "ref": "1d6c645d-1799-46f7-9f3d-beb8fa195003",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f10b4f56-e2c0-41ad-9388-25aed01c5afa"
        },
        "item": {
          "id": "17d1e51f-717f-4d2d-8644-f0c3678d625e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e16c3fea-4884-4462-818c-2c90de47213e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f93d884-eb35-4a9f-9276-4952ad124e2b",
        "cursor": {
          "ref": "fc0c0a59-08b3-4d48-868d-25da24faea5c",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "604e24a8-2614-4dd1-afcf-ca9150252ec5"
        },
        "item": {
          "id": "2f93d884-eb35-4a9f-9276-4952ad124e2b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "10bd1072-16eb-460b-8182-329f8aca3701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51ae12c-857e-45bb-8c23-50c24bacdb9e",
        "cursor": {
          "ref": "49189487-14fd-4799-9f6e-51d27f83d822",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "82701ffd-531c-418a-8157-f1568aa28b16"
        },
        "item": {
          "id": "f51ae12c-857e-45bb-8c23-50c24bacdb9e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "475bfec4-d36f-421b-adb4-7a54bd5d3022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba62a118-fac7-4969-8f1d-7d4ddf012801",
        "cursor": {
          "ref": "f86242b1-6f23-4ebb-a1f4-a8d309107a23",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1d8c9e5b-cf87-497b-8ea5-3d22e357a202"
        },
        "item": {
          "id": "ba62a118-fac7-4969-8f1d-7d4ddf012801",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a0f5a4f5-033f-41fc-8a84-415a55d486d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fedff2-ef36-443f-aefc-4b1585dff376",
        "cursor": {
          "ref": "042c46e0-ee26-4ad8-ada0-983791cca3ce",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e6712e1e-ef70-4d34-867e-672c52d3db7a"
        },
        "item": {
          "id": "d7fedff2-ef36-443f-aefc-4b1585dff376",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "44b34201-c869-4c38-bcd0-4559e6d45594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1020b343-8ca1-425a-b793-dd8f0ec11682",
        "cursor": {
          "ref": "e8ff1ab6-053b-4cec-9f3f-6d4d47fcd70a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4dedda94-adc9-429b-8deb-bf41440c607b"
        },
        "item": {
          "id": "1020b343-8ca1-425a-b793-dd8f0ec11682",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1aacd88f-3a92-47eb-8516-7a17c1424230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41205de-dc7f-4130-bcaf-a25fa22d50a8",
        "cursor": {
          "ref": "c3da9139-c16c-4d7d-826f-aa107416a55e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6998b49f-a95b-431a-bf5c-c57397b3c686"
        },
        "item": {
          "id": "c41205de-dc7f-4130-bcaf-a25fa22d50a8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f4bcfe23-e878-416a-92fa-d2261630a188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a8443f-b8e6-43d2-9c2e-0a8f49a46864",
        "cursor": {
          "ref": "cab1823b-2911-47a5-8a34-b0d14c66871f",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3b6d90fe-53e9-438f-8b29-5b6901d2b49e"
        },
        "item": {
          "id": "a1a8443f-b8e6-43d2-9c2e-0a8f49a46864",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5567364d-2142-4590-b488-85433b3bbb0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297e56c5-267e-4ee6-bd37-b2fb173fe05a",
        "cursor": {
          "ref": "b99f1892-6797-4fac-aeb1-ec5709a9ff11",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "384890f6-61b2-4afe-9c4a-00d3cc82f72a"
        },
        "item": {
          "id": "297e56c5-267e-4ee6-bd37-b2fb173fe05a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d9174535-219c-48fb-bcc4-af33293e0991",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 346,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95434ef-2405-4676-a201-85c77ff2e12f",
        "cursor": {
          "ref": "eb7051d3-9ef7-4c36-9346-b36296f3fa14",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a6714da3-846c-4bd2-b554-d66417751bdb"
        },
        "item": {
          "id": "e95434ef-2405-4676-a201-85c77ff2e12f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e5a8c428-d79e-464a-a32f-0a0b4eaed77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c316f113-8399-4608-a42d-3640ed4f43e6",
        "cursor": {
          "ref": "edd2dfc2-984e-4ae8-b96b-d28e74311e7b",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e61c2d50-c2e7-4062-9821-58801af18a31"
        },
        "item": {
          "id": "c316f113-8399-4608-a42d-3640ed4f43e6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6d8e9bf6-f0b6-4aed-b7dd-e248ecd6a504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3328feaa-73a9-4302-b6c1-efa1ac70444b",
        "cursor": {
          "ref": "d7bd008b-a586-4e13-9f80-7482d0aa3881",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "096d61c4-7c47-4d61-8d83-33184115dea0"
        },
        "item": {
          "id": "3328feaa-73a9-4302-b6c1-efa1ac70444b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b9c51402-ab80-4dc0-93c7-d06d0fea2d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385941c6-2043-4ddd-9b71-6424a27fc985",
        "cursor": {
          "ref": "63b2e324-0240-4341-80c1-3098c00d69b7",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e99052fa-4f39-4915-b7d1-f08500952356"
        },
        "item": {
          "id": "385941c6-2043-4ddd-9b71-6424a27fc985",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9db307b4-04a3-40ef-be38-f3d5421b580c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5a1052-972e-4d8d-9680-e669808cb270",
        "cursor": {
          "ref": "13b16e39-d9a3-4b8b-95bb-727589d5c3e5",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a8e14775-8edf-4efe-91bb-32784b358820"
        },
        "item": {
          "id": "ca5a1052-972e-4d8d-9680-e669808cb270",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "dcddc7b0-57d4-4a8a-8b5e-a6af92bb951d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381d6eca-2264-4719-afad-27a1bf2f05f3",
        "cursor": {
          "ref": "0391724f-c00f-4c80-bf4e-4b6ee593bee0",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a4987fe7-12bd-4ed8-9339-f120c065235f"
        },
        "item": {
          "id": "381d6eca-2264-4719-afad-27a1bf2f05f3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1837d22c-c6b2-4f9d-bd0b-b8fc48fa84a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36a4398-cadd-49db-bb7a-de57021a9bc2",
        "cursor": {
          "ref": "9d2ac212-ec2d-4d55-ada0-478ba4f361f8",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a7e81dbc-64c8-4854-b4d2-67ca11fcdb58"
        },
        "item": {
          "id": "a36a4398-cadd-49db-bb7a-de57021a9bc2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "90a4e3eb-e408-469d-a0ff-25d4170a9846",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 327,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671dfa3b-2584-4d8e-ba3c-da681d2a3798",
        "cursor": {
          "ref": "b01fd8ba-07c5-4c08-b627-ba372e8d3a95",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1dac027b-9cda-4f53-acb0-b98f8e92e2c8"
        },
        "item": {
          "id": "671dfa3b-2584-4d8e-ba3c-da681d2a3798",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2584f231-502e-476a-8704-455c1ff5c4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993894a1-2050-4401-8893-281f7da861ab",
        "cursor": {
          "ref": "2f1568cb-b621-4177-b8b9-941a71cd219b",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f7f91f34-675e-48c3-94e2-07377f327e66"
        },
        "item": {
          "id": "993894a1-2050-4401-8893-281f7da861ab",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5ee3b6b0-60df-4958-8e73-9f147e0fc567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7317a578-98d9-4ba0-a2b7-b1c4cb76b75a",
        "cursor": {
          "ref": "dda30957-b057-4a53-b7cc-7594f6020947",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "64e2a3cc-9f87-4ea0-bb37-a5c1cb9d7c46"
        },
        "item": {
          "id": "7317a578-98d9-4ba0-a2b7-b1c4cb76b75a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "aeb7f57a-1e9e-4042-a5b0-91c8053e7381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c2a13c-f63d-482d-86b1-eb0d965140a2",
        "cursor": {
          "ref": "9ac98c8a-7d51-4552-948d-78f488b31d71",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e2b9602c-0309-42ed-b75f-afcdd3f4d945"
        },
        "item": {
          "id": "a5c2a13c-f63d-482d-86b1-eb0d965140a2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "177a0a63-e1b2-4e04-b6b4-715da20463a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51dd8c3-8115-49bb-9efa-e1e5494b47e2",
        "cursor": {
          "ref": "d684cd2d-f220-4499-b11f-00d05add361c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2b51f5d3-b3fa-44a3-8857-a8bb42ba8461"
        },
        "item": {
          "id": "c51dd8c3-8115-49bb-9efa-e1e5494b47e2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "daa2f9e4-2650-4a27-8323-3d3453766078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56f3a3a-c882-495c-a9ee-6fc3e196b380",
        "cursor": {
          "ref": "446417e3-cdf5-43a8-9318-804dc20db075",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0f3c7ca3-8147-4e38-be18-0f193e7a8348"
        },
        "item": {
          "id": "b56f3a3a-c882-495c-a9ee-6fc3e196b380",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b32158a3-f685-40e1-a898-f7a00a566530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4d9f31-2c92-4e1b-8299-82f814a6db80",
        "cursor": {
          "ref": "0f8164cd-d0df-4aca-90a5-9c5815d54ddf",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d9c988e8-f6d1-480e-b79e-9ec3d6e256d1"
        },
        "item": {
          "id": "cb4d9f31-2c92-4e1b-8299-82f814a6db80",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "88837b1e-6dcf-4e6e-807e-7cb4efb4e64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de443654-a8b7-4b40-9f95-835a6804118f",
        "cursor": {
          "ref": "aa43b95e-b8ad-4bd6-be89-fc1e18efe66e",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8efc15c6-e502-4fb3-8191-c8f0a5990f6e"
        },
        "item": {
          "id": "de443654-a8b7-4b40-9f95-835a6804118f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7bf11a50-0351-4cef-ad37-8448cf0d0ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6a36a2-8571-4728-9e5a-922cbc2ecb40",
        "cursor": {
          "ref": "ca268667-9ce6-4b21-8501-8cc6ccafeae8",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1071467f-e39a-4631-b076-43b5c99accb9"
        },
        "item": {
          "id": "eb6a36a2-8571-4728-9e5a-922cbc2ecb40",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "52c4dfac-cb4b-421b-b615-a32e1ba42830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b56751e-ab1b-445f-8299-693840bb3a24",
        "cursor": {
          "ref": "7bc708f3-6c80-43c6-934e-d1dd66f9c9e1",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d4574ab5-dc80-44c3-a920-1e35bf5ee6a4"
        },
        "item": {
          "id": "6b56751e-ab1b-445f-8299-693840bb3a24",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "481edf8b-0974-4101-9246-46949fdedbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5821191b-680f-481a-9788-17a8fc44a4ec",
        "cursor": {
          "ref": "d8d9c19a-037e-4b04-b375-1a3266a011cf",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f5fe61dc-007a-4aa6-9c77-553b1fe00a93"
        },
        "item": {
          "id": "5821191b-680f-481a-9788-17a8fc44a4ec",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e36e7956-0dfc-410d-a4a8-ab2b4b61ff32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea995c0-f147-4a6e-85b3-9bee32b8bc58",
        "cursor": {
          "ref": "96e598b8-6d67-4e3c-bb92-67a17ec62559",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8f241ec6-3e93-48e8-87d1-44d2ad5ee681"
        },
        "item": {
          "id": "0ea995c0-f147-4a6e-85b3-9bee32b8bc58",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ba9da047-773c-462d-a06a-073fb71f079c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5881656b-9a63-4836-90d0-54d8a1a776ca",
        "cursor": {
          "ref": "a9ae7e0f-59f6-415d-bdef-b983c3cf401b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "919e503f-8a08-43d5-a971-095534b3b413"
        },
        "item": {
          "id": "5881656b-9a63-4836-90d0-54d8a1a776ca",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7ccc4222-8ec0-41a8-8f00-88e577fc2ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1e6bd5-9fa5-43e3-83d8-dd253ac6ec2c",
        "cursor": {
          "ref": "21aebcbe-d09a-4a29-b3bd-2da956d5b641",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3c3c596a-2822-46d3-b58d-026c1de26d5f"
        },
        "item": {
          "id": "0a1e6bd5-9fa5-43e3-83d8-dd253ac6ec2c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "efe2757e-97ce-4e53-aee3-bb02b28c5e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccaca950-d29d-4038-b5fb-fd3015ac2484",
        "cursor": {
          "ref": "b80c1199-edb2-400a-b35e-95fecb208b7d",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f53c24c7-9016-4b26-a6ca-735a207958dc"
        },
        "item": {
          "id": "ccaca950-d29d-4038-b5fb-fd3015ac2484",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5dfad6c7-38a5-4464-b883-7288c0d82b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1b19b1-cf74-4c9a-8b6b-f92aad503cd9",
        "cursor": {
          "ref": "357ec337-e252-4c3e-9aa8-8525693d1b9c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3845faba-2370-4b39-8143-11b586f12d1e"
        },
        "item": {
          "id": "8b1b19b1-cf74-4c9a-8b6b-f92aad503cd9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2062cff7-21bc-4836-ad29-154594fc9c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daac22d3-1c96-4365-aef4-8a51ee4be7fd",
        "cursor": {
          "ref": "f19bd4d5-385b-4db5-8458-237267c9b1f1",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4978759a-86e6-464c-8da5-b10f3abaa967"
        },
        "item": {
          "id": "daac22d3-1c96-4365-aef4-8a51ee4be7fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "69473818-47ff-40e0-a139-a693d09d3510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d516070f-2eb2-43f4-a488-aa6f231f64ee",
        "cursor": {
          "ref": "2e07a2a2-c86a-46fc-a82e-ba4202eec96c",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b08607c2-dd4a-40d2-be59-787804c009d9"
        },
        "item": {
          "id": "d516070f-2eb2-43f4-a488-aa6f231f64ee",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "637ef6aa-26f6-4841-b118-b50bf331a1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3c2c6a-e9c7-4e2c-95c8-a463a585f2f5",
        "cursor": {
          "ref": "178f50d7-5ad8-4891-b071-27886d83a9e6",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8fed6cc4-5b7d-4661-bc38-567c179f9bfb"
        },
        "item": {
          "id": "2e3c2c6a-e9c7-4e2c-95c8-a463a585f2f5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9277aaf5-1407-4e89-8afd-7a8cb110d1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b78e381-f0e7-4c84-8951-27ddd6e1d32c",
        "cursor": {
          "ref": "eb7b179a-8c02-4b11-a785-9ff845618e11",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9855f9f2-0765-4de1-8346-0d1ee6516b1e"
        },
        "item": {
          "id": "4b78e381-f0e7-4c84-8951-27ddd6e1d32c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "738eb3dd-f895-4bdc-8fbf-fd120260048b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe26ff6-9070-4ae1-a0b3-7b22b0c24035",
        "cursor": {
          "ref": "8000937f-29f6-492b-a5d7-a11de6f62e6e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "acfbf923-ddfc-4217-8f4d-2af77cb20d65"
        },
        "item": {
          "id": "dbe26ff6-9070-4ae1-a0b3-7b22b0c24035",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b21c3742-a179-4596-8a09-defddde1256c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7facf2d0-0c92-4e66-b022-6ab379418d07",
        "cursor": {
          "ref": "6a33d2e0-ea4f-431d-a84a-3158d66e5e99",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0b0e1645-8b38-4a51-a8a3-0dc0fef72757"
        },
        "item": {
          "id": "7facf2d0-0c92-4e66-b022-6ab379418d07",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "de32835a-8779-4dfa-b692-1d730314ec7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55f2f60-e55c-47d4-91bc-32090575044f",
        "cursor": {
          "ref": "928f45ea-e5fc-4323-9472-c48461e0ca85",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "18f5deae-9cac-44a2-acf9-e3f38c8d1c68"
        },
        "item": {
          "id": "a55f2f60-e55c-47d4-91bc-32090575044f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "54ed1d2f-1cce-4171-a809-1773188a35a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081563b9-ce9f-4fa3-9a64-6213fb28fa6e",
        "cursor": {
          "ref": "2b3ad1bd-e2b6-4971-9288-59cbe30ad7f3",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "be663c42-2455-4a27-ba13-61c4a7b5bb5d"
        },
        "item": {
          "id": "081563b9-ce9f-4fa3-9a64-6213fb28fa6e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c00e1c97-f0e5-4779-b739-b100dc93e907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5937e575-34c9-4abd-af4e-5788b0b0faab",
        "cursor": {
          "ref": "5af86b9c-2134-4ea1-8823-fb85c826f7bc",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bbbab0ff-13fb-4ef5-ba56-3564e3cc7ca7"
        },
        "item": {
          "id": "5937e575-34c9-4abd-af4e-5788b0b0faab",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8503ecbf-ed0b-4747-87dd-01f5ab5ecfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5bc2fcc-2317-4416-81c4-2f23b2c65c16",
        "cursor": {
          "ref": "ac845e4e-7689-49a3-92d8-b26bc879f374",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4bc40f1a-2c2d-47b3-9045-46d79ba9a637"
        },
        "item": {
          "id": "f5bc2fcc-2317-4416-81c4-2f23b2c65c16",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f980f74f-c090-4ac2-9b57-324e60357c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6c986d-6eee-40f0-ab29-2c23697a87cf",
        "cursor": {
          "ref": "ce646952-92ac-4197-ae96-44e12860f048",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "61cc08ee-34e9-4efc-a548-4666d10c0a3b"
        },
        "item": {
          "id": "4c6c986d-6eee-40f0-ab29-2c23697a87cf",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dc97207b-92fb-471b-b9b6-8a41e8d9f2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669d499a-d85d-4ec3-bab5-64c1dc8c472b",
        "cursor": {
          "ref": "fa42e563-4741-49ac-8637-9c3c03218917",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c5c97fbf-cb7e-4c67-8f56-ab7c9fc5bdf1"
        },
        "item": {
          "id": "669d499a-d85d-4ec3-bab5-64c1dc8c472b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f287b24c-9065-4dc8-8109-5d00de5538ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c1b5e5-7783-4c3a-a01c-355e9e05e1b2",
        "cursor": {
          "ref": "59f0ee1e-d462-4ecd-a302-be4d97fded3e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "37cfc063-d1e1-4b88-90ae-3098aa2336e5"
        },
        "item": {
          "id": "71c1b5e5-7783-4c3a-a01c-355e9e05e1b2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b875e656-351b-42ff-9d93-efe54099d435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d151a08-3b86-4a68-b123-24b1991ec9eb",
        "cursor": {
          "ref": "9852608d-b718-4800-a4f7-632cc0cecb33",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ef29d03c-0a55-4268-8230-46083aedbd7b"
        },
        "item": {
          "id": "1d151a08-3b86-4a68-b123-24b1991ec9eb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "34e23f64-6981-433f-ab48-f55090613db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c123d25-ae66-45fb-9e20-23809d68aa75",
        "cursor": {
          "ref": "8067f282-36e8-4094-b96e-b8383b9f152b",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f2ba7595-363c-4453-adf6-5e528686a9e1"
        },
        "item": {
          "id": "1c123d25-ae66-45fb-9e20-23809d68aa75",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3db6f690-43de-41fe-9aa7-66953ac565eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9069aa1-518d-482f-9a46-ad3559c7ed7b",
        "cursor": {
          "ref": "4e85c3e1-3a2d-4a53-867a-aae89db4944e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8829b746-f2e7-44b1-a8b8-94a4fbbd35e4"
        },
        "item": {
          "id": "d9069aa1-518d-482f-9a46-ad3559c7ed7b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3333ce5a-bbd4-4a23-9f93-1ac7baaf844e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d66bf87-9787-46a3-a4d7-0bb6a9b2f045",
        "cursor": {
          "ref": "372be3eb-053c-40c8-b9c2-386147977db3",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d39aa2e9-0881-4f7c-9d4b-94225d4bda43"
        },
        "item": {
          "id": "5d66bf87-9787-46a3-a4d7-0bb6a9b2f045",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a0922eb3-cca8-4d25-8a4a-14202e3259aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d558722c-c5bb-4b8a-8438-9384fdc21e63",
        "cursor": {
          "ref": "68961270-19cd-483d-9e2f-54f2a872e3f0",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e4c5ea95-6cf7-48e5-92e1-a600a494ad16"
        },
        "item": {
          "id": "d558722c-c5bb-4b8a-8438-9384fdc21e63",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "30566be0-67c5-4bdb-86df-1f85c53600f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b230dc4b-eb67-4555-bdb0-3e7fff65e0e1",
        "cursor": {
          "ref": "a12b2506-d3c0-47e5-b681-cc30fbdbe837",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "95190580-cd64-4f07-9379-4acaca98a1ed"
        },
        "item": {
          "id": "b230dc4b-eb67-4555-bdb0-3e7fff65e0e1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "57777bf5-11ec-41ff-9992-ea2751568e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea7bf24-aa54-45b2-84ad-3ad23efad692",
        "cursor": {
          "ref": "d964e477-878e-461f-9587-6db3f016ab58",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bff052fb-407f-4d70-8956-27b3a8afb290"
        },
        "item": {
          "id": "0ea7bf24-aa54-45b2-84ad-3ad23efad692",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "589f3c4d-ec50-4d94-84da-ed9c2e7098f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9ad4c0-ed55-4cd8-8f9c-b01c23b0b83f",
        "cursor": {
          "ref": "b0b4fc56-0397-4a0e-973b-a36b103fdcdb",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e62692d1-1eb0-4c9b-95ab-c70bbad5ea19"
        },
        "item": {
          "id": "fd9ad4c0-ed55-4cd8-8f9c-b01c23b0b83f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "02ef5ab2-2b31-45e5-81ab-5d450addc8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af7ea0a-a5e1-4222-93d1-a3a70433b1ae",
        "cursor": {
          "ref": "760df9de-6a0a-42c5-a20e-e9759493f21b",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ae972a69-a54c-48df-bbda-cf9568fb4e47"
        },
        "item": {
          "id": "8af7ea0a-a5e1-4222-93d1-a3a70433b1ae",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "09fa3747-48eb-4fa7-8442-9fd6be49b3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2a2aa1-0ac0-4c1a-9387-965692184301",
        "cursor": {
          "ref": "524801b8-2e05-458b-8293-4ad70d8e71c5",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "16d1158b-f74c-474b-8f1c-c17b308f6c9c"
        },
        "item": {
          "id": "4f2a2aa1-0ac0-4c1a-9387-965692184301",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1a9f3273-c0b3-466c-938e-eb2a07b918f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34a385f-0054-4785-a25c-60798d372465",
        "cursor": {
          "ref": "b3e4f0fb-ca46-40d4-b63d-e9bd69f93c6a",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d8cb681d-fcfd-4811-bc18-cff4dc2cec1a"
        },
        "item": {
          "id": "e34a385f-0054-4785-a25c-60798d372465",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a4a81dc8-f8c7-49f6-9d94-92b5c0b05f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf5f7aa-46ac-41ae-a7bf-da02eeb0c5eb",
        "cursor": {
          "ref": "40909efd-0284-497a-88c9-0c7e4fc0af7c",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "93827935-ac8c-4fd0-9da8-0792c8562ef7"
        },
        "item": {
          "id": "1cf5f7aa-46ac-41ae-a7bf-da02eeb0c5eb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "66c0e2d2-62d2-411b-bb84-cbe191e7ffb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1773258d-cc47-44f7-a658-eeda96e0db81",
        "cursor": {
          "ref": "d20af552-557e-47fa-bc57-f40032f5ee0a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cb57976f-8591-490e-8547-1a36bd09eeb7"
        },
        "item": {
          "id": "1773258d-cc47-44f7-a658-eeda96e0db81",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "49275cf9-2802-42d2-afc4-5bf88a56b80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86378266-b4ec-4a15-90bd-fd81a334e15f",
        "cursor": {
          "ref": "af637784-2333-4674-9c05-36c77ae73960",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "feecb343-62bf-4c97-bdb0-3f5d0d5d7c88"
        },
        "item": {
          "id": "86378266-b4ec-4a15-90bd-fd81a334e15f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a135f9ae-da28-445a-8340-69bae87996fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798637a3-1bbd-4843-811d-2a5f449022c9",
        "cursor": {
          "ref": "40017389-4412-43aa-99bd-da2f7627c66c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "675ae79c-894e-48ae-bacb-ec23b3d347cc"
        },
        "item": {
          "id": "798637a3-1bbd-4843-811d-2a5f449022c9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0692c375-ca2e-412b-9229-ac63c7fdf6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2e58b3-7a24-4f89-ae0d-5d1bca07757e",
        "cursor": {
          "ref": "6d6e27f4-0a16-4982-930d-0aa0c023ba72",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e531d8c0-d582-46bc-b3fa-d658be3479c3"
        },
        "item": {
          "id": "ed2e58b3-7a24-4f89-ae0d-5d1bca07757e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d6f994d2-72f8-4dc0-afa9-d66cf4e5f295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0602c699-216c-4bc8-8c2d-1549c3cbd082",
        "cursor": {
          "ref": "a0c19032-6727-4dbb-b76e-1c8104b29b50",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a60e5b19-1bd9-48bf-9fb1-389df77c25f9"
        },
        "item": {
          "id": "0602c699-216c-4bc8-8c2d-1549c3cbd082",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "739e9e34-d28e-4843-8d4c-22651e013207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0e2aa0-a810-4a2f-91de-5b3606b27166",
        "cursor": {
          "ref": "de1d6d18-a2ec-496e-a67f-be850d39fb98",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "96c10039-c63e-4a84-8953-c5da994fef26"
        },
        "item": {
          "id": "9c0e2aa0-a810-4a2f-91de-5b3606b27166",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5a421c65-ed3e-4bfe-ab29-ff908af1ebe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44029fed-22f1-4b59-973e-73e64285bbf7",
        "cursor": {
          "ref": "fe757fcd-8ebf-4b9d-b836-c4ef5091b5e9",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6152615a-23d6-4767-b7fa-a4694d059cee"
        },
        "item": {
          "id": "44029fed-22f1-4b59-973e-73e64285bbf7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "465da180-348d-450b-a6f6-e8a6605ab576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a1bb6f-99c9-4162-bb0b-8aabb3b45aec",
        "cursor": {
          "ref": "23234f2b-dc42-491f-a51e-ba306ff0cc7d",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "20983ceb-a999-45b8-824d-3b70cccbc2e0"
        },
        "item": {
          "id": "98a1bb6f-99c9-4162-bb0b-8aabb3b45aec",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8c66f8bb-bdc9-4552-96db-786b36e5fb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7baa9daf-3b62-4e43-b0b7-2c8e3d8d45e4",
        "cursor": {
          "ref": "8bacd508-d734-4291-af5c-fdb0b071b1a3",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bb97ec87-a371-46c2-bfec-4ea8526b5894"
        },
        "item": {
          "id": "7baa9daf-3b62-4e43-b0b7-2c8e3d8d45e4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "da9bd6e8-55a6-4536-a23f-728d615cad39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f716b6e7-af39-4f9c-9c5a-cbaac46b2054",
        "cursor": {
          "ref": "b174e9a0-f756-4ced-96ca-7b293174560b",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f967ac8c-894f-478f-a0b5-ddf242e04a06"
        },
        "item": {
          "id": "f716b6e7-af39-4f9c-9c5a-cbaac46b2054",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c5ca5984-2513-4546-86a4-4494fb016f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "fad70a6d-1281-40f8-bced-9b412d43a210",
        "cursor": {
          "ref": "4426b854-56e6-4297-8e28-3243498cd0e0",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3de2800d-142e-4b15-b868-ca6e3ffe6a18"
        },
        "item": {
          "id": "fad70a6d-1281-40f8-bced-9b412d43a210",
          "name": "credentials_issue"
        },
        "response": {
          "id": "131c6bc0-d55c-4c21-9855-8b91e39b201a",
          "status": "Created",
          "code": 201,
          "responseTime": 3010,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef1a2ec-1e30-457c-bfbd-1be97e99b38e",
        "cursor": {
          "ref": "6453d4fd-6317-4d67-94a0-03730030adac",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cf61722b-fc6f-4e5a-83c9-4378907f9aac"
        },
        "item": {
          "id": "5ef1a2ec-1e30-457c-bfbd-1be97e99b38e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "03c7b33c-0a0a-4c20-af3a-cf2fc1392fa9",
          "status": "Created",
          "code": 201,
          "responseTime": 2511,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fcaa7cb-4acb-4681-9eff-797a416f770a",
        "cursor": {
          "ref": "cdf23274-c48f-4394-bdc0-5a680cbbc418",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7977db10-df1d-4f57-bf04-48026b607996"
        },
        "item": {
          "id": "6fcaa7cb-4acb-4681-9eff-797a416f770a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bdfdb691-0405-43d6-993d-d0c7c4ca4b84",
          "status": "Created",
          "code": 201,
          "responseTime": 2543,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae384f70-000c-4e5b-b5a8-093f97c5568f",
        "cursor": {
          "ref": "8088f776-9857-4a33-85f0-37a70fdb2952",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0fa1f406-bb30-4fbe-b34b-6923c6863428"
        },
        "item": {
          "id": "ae384f70-000c-4e5b-b5a8-093f97c5568f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "492033b4-9c48-40e2-8577-569d48ffe78a",
          "status": "Created",
          "code": 201,
          "responseTime": 2620,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "249aedc0-9595-46b3-b479-7324836098ac",
        "cursor": {
          "ref": "d5864dca-1aa8-4e5b-8fd6-eb36fccef1c3",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ecb13d1a-e1f6-40fb-8a8f-3dfd19ed1fee"
        },
        "item": {
          "id": "249aedc0-9595-46b3-b479-7324836098ac",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "81a631ac-fb7a-4a37-ad17-9b46b6ecbece",
          "status": "Created",
          "code": 201,
          "responseTime": 2273,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22c9558-0cdd-496a-b983-895d19cf18e0",
        "cursor": {
          "ref": "8454602f-c2d8-4a50-8ea7-db21934c19d5",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a8e237ef-4b82-4e08-a26d-0fb74c135381"
        },
        "item": {
          "id": "e22c9558-0cdd-496a-b983-895d19cf18e0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8203d31d-98bd-4957-a9e9-a71ea059a3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c0c444a8-045b-4582-9631-9b943638d6cf",
        "cursor": {
          "ref": "c9d0264c-d320-4011-aef4-b2a351e015aa",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "48d7ac74-ca9a-4ba3-a99d-7b458b5547fc"
        },
        "item": {
          "id": "c0c444a8-045b-4582-9631-9b943638d6cf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ee10fd9d-ec47-4109-9569-dadc21b17901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7317ead4-04ba-427a-b44f-ec72dbbd8590",
        "cursor": {
          "ref": "d8e7c0a1-377d-4008-9360-e0140eef2e1e",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1232f082-2e52-41fa-8fa8-5129be20afb3"
        },
        "item": {
          "id": "7317ead4-04ba-427a-b44f-ec72dbbd8590",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "93562491-590a-40b8-8ab0-9ba9b94acc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e70973-db89-4c99-97a6-c59e44ea21ee",
        "cursor": {
          "ref": "e5d856ef-7be1-495f-baed-90ce0cdfc080",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "16920629-0ee3-4b4c-b217-ee7915b94f59"
        },
        "item": {
          "id": "d4e70973-db89-4c99-97a6-c59e44ea21ee",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a7f1f0b8-5724-45ce-b080-f9a28558a26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87740c7f-6ed4-441b-9da6-55daccf73a35",
        "cursor": {
          "ref": "ec91e311-806e-4e52-8efc-26a0519dd98d",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bf9bc383-277f-4811-a0c4-f7fd3bdc8679"
        },
        "item": {
          "id": "87740c7f-6ed4-441b-9da6-55daccf73a35",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fc568069-4ca9-49d5-81a1-5e804d222bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c74884-77e8-4135-843f-30f9b79ab8a5",
        "cursor": {
          "ref": "5ab4558f-fef2-4595-a696-a7d4659cb596",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6fc15266-ce52-4376-863a-9be76a61698f"
        },
        "item": {
          "id": "06c74884-77e8-4135-843f-30f9b79ab8a5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fa20f6d7-8e44-42f4-a6df-cd770ff09c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d276a5e8-1445-4d06-90a0-896470e6c0a7",
        "cursor": {
          "ref": "14a4cbe2-d456-4a0d-af7c-31daf4d4bb36",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "78e9cbc8-52a8-4d6b-a688-aa35a7ff63e3"
        },
        "item": {
          "id": "d276a5e8-1445-4d06-90a0-896470e6c0a7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a02868c5-a3ea-453b-a363-f988926361a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbd1560-4da9-491f-84c6-0bf66ea6f930",
        "cursor": {
          "ref": "071f99b5-d992-421f-973a-a81aa612a488",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "81644ac2-5bfd-4a4e-bcba-1d358f4751db"
        },
        "item": {
          "id": "7bbd1560-4da9-491f-84c6-0bf66ea6f930",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "30f5fc04-5395-4c10-b5f4-30d5045e9bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7521e606-e2ee-4531-ba79-e60c07715763",
        "cursor": {
          "ref": "861455ad-5d7b-4b11-a771-e5beb1fa1b80",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "96fa2d02-db45-410f-a685-93891dd351df"
        },
        "item": {
          "id": "7521e606-e2ee-4531-ba79-e60c07715763",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "01545f47-5841-44b9-a1f1-5291f6593030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1576a0e5-d048-4a79-ba87-2e93dfcd2f19",
        "cursor": {
          "ref": "2658c835-ab0e-4fea-b7f1-1cbaf3949d49",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d3b0d2c8-e1c2-46dc-8ea2-6ea48cff7c2e"
        },
        "item": {
          "id": "1576a0e5-d048-4a79-ba87-2e93dfcd2f19",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c5cdc1bc-d61e-44a6-9324-399117f6fbbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b65c5c-5208-42e8-9c27-cd73d4eb559d",
        "cursor": {
          "ref": "0d3b6c5a-11c7-4c2a-b84d-d7d92129d32b",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f31247ea-8c4e-46ba-9502-9261737976b0"
        },
        "item": {
          "id": "45b65c5c-5208-42e8-9c27-cd73d4eb559d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "070245aa-3a14-4d23-aa77-3f82d75dcfa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd18dbe5-af97-4f7d-b424-7626f4cf2fde",
        "cursor": {
          "ref": "442d7709-b684-48fc-989e-24547587a919",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c47b5957-b8b6-4819-b777-6e576eace0ec"
        },
        "item": {
          "id": "fd18dbe5-af97-4f7d-b424-7626f4cf2fde",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "94472e5e-e348-472c-bdae-c18019ef87f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634567e8-2dcf-4050-be3c-db6d2437ffaa",
        "cursor": {
          "ref": "f3928c9f-8f89-4353-add5-db2a06239169",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "706a2869-25f6-4798-8e73-48183b136cd8"
        },
        "item": {
          "id": "634567e8-2dcf-4050-be3c-db6d2437ffaa",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4f61d806-3664-4e51-87bd-c842a89a549c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 414
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6180fbd9-263a-4039-98db-2bc18eefa038",
        "cursor": {
          "ref": "632ef75a-d21b-43e9-8885-1befd9a43c95",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "40f05dff-206a-4cea-b07f-f60c838a3058"
        },
        "item": {
          "id": "6180fbd9-263a-4039-98db-2bc18eefa038",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f1bff5ed-fe4f-4548-a4e1-15e5a7987037",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 116,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:121)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cd9491-f417-4ffa-8f78-e208b44ad356",
        "cursor": {
          "ref": "717d422f-58f4-4ca9-a54b-25cf1b20e0e5",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8b279d29-e56e-4127-b39d-1865ac495330"
        },
        "item": {
          "id": "01cd9491-f417-4ffa-8f78-e208b44ad356",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6a628894-b7e4-4dbc-9323-2f099d212822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4eefee-bb67-4b05-9bdb-9631e1abbb1c",
        "cursor": {
          "ref": "a166e3ec-76aa-4989-b1c6-b7e9aa520cc4",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "15242700-56ae-4511-af15-68590f1c340c"
        },
        "item": {
          "id": "fb4eefee-bb67-4b05-9bdb-9631e1abbb1c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "aa47a065-9ffb-4b47-a861-b465ec012c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4939e7e-4411-4d1b-ba84-b68e32eb9508",
        "cursor": {
          "ref": "198faee7-edf1-4495-b940-af8f09569f9d",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6a419a8b-deb7-472b-bb1d-0133cc0a653e"
        },
        "item": {
          "id": "b4939e7e-4411-4d1b-ba84-b68e32eb9508",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a13c0028-a2fb-40e4-8427-8fc50095df6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf87e22-f7bd-4d87-8548-202786a423b4",
        "cursor": {
          "ref": "40362848-12b0-4bfc-be05-8f64cde6dcc9",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8b2098b5-b5cf-4f55-86bd-39bd16f63d99"
        },
        "item": {
          "id": "3bf87e22-f7bd-4d87-8548-202786a423b4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7ed5e897-fa62-4c43-99e0-541811e6fe53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a806f0c7-5972-473a-aa01-92a7e13ac6a1",
        "cursor": {
          "ref": "a6602db8-04bd-405e-8fc5-47e4a9a379bc",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d2b66372-fe2e-4495-b4d3-539a43cd6135"
        },
        "item": {
          "id": "a806f0c7-5972-473a-aa01-92a7e13ac6a1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "095f2da6-84aa-4551-9eb5-75d7e4c544b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 426
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aea679f-0dbb-4be5-a492-bd6799e26eb4",
        "cursor": {
          "ref": "d5e84565-5cb4-42ce-a568-4a70ba533e38",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b612c162-3fdb-4a2f-b2c8-daff28e88caf"
        },
        "item": {
          "id": "4aea679f-0dbb-4be5-a492-bd6799e26eb4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "290690a6-d19b-40dd-b534-e4b4f400050c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecb352c-a317-4532-b1df-ddd87006d96b",
        "cursor": {
          "ref": "647cc511-79bf-4a62-af45-7d24e8f723b2",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "052daa78-fbad-4114-b2ff-f40d72e1a815"
        },
        "item": {
          "id": "6ecb352c-a317-4532-b1df-ddd87006d96b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dff09978-a1ef-4170-8a8e-ff9d7e7e09dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8670a2-f5f0-4a4a-84d8-08633805efa5",
        "cursor": {
          "ref": "242cc1dc-f71b-412e-a914-ca5b614d44a6",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3d5f580b-0015-4dd7-938f-28a29bd430c1"
        },
        "item": {
          "id": "ae8670a2-f5f0-4a4a-84d8-08633805efa5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e2c489a6-ce20-4d5b-ab53-6ba66619a2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9878b082-7c7c-4a42-8498-3a517d09a220",
        "cursor": {
          "ref": "24acd176-b94f-4644-bd9a-2c5880f3434d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f44aea75-7f7d-4053-98b5-8d3f82993baa"
        },
        "item": {
          "id": "9878b082-7c7c-4a42-8498-3a517d09a220",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0858ca9c-600e-4284-bb18-e7a4625baf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efe2e3f-643f-42dd-bd96-282755451d59",
        "cursor": {
          "ref": "fd8a5135-600d-449d-a633-cc5e9d6dedb1",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0798197f-c08b-4e36-8b63-e5661f59f0bb"
        },
        "item": {
          "id": "0efe2e3f-643f-42dd-bd96-282755451d59",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9b816ed6-dc7b-4d21-bed2-3013737be3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eac641c-531b-443a-9979-3ecd1c620e4c",
        "cursor": {
          "ref": "ba801baa-d482-4b66-8180-15504e9d5c38",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6fc73f57-b690-48e9-b243-0f493d797f16"
        },
        "item": {
          "id": "8eac641c-531b-443a-9979-3ecd1c620e4c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fb553bec-a997-429f-ae66-260a53b8a612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a50b24-a6b7-4544-ae4f-949ba40dbfb4",
        "cursor": {
          "ref": "96e391ea-768b-416a-a03e-a2716d1f9cc9",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "336045b6-eed2-4d64-8153-6e203678492f"
        },
        "item": {
          "id": "92a50b24-a6b7-4544-ae4f-949ba40dbfb4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "80fb5a7a-4780-4a75-9724-8cc62e00af32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2d9176-1ba6-44e3-aabc-11d3853eff0c",
        "cursor": {
          "ref": "93429741-15a8-413a-bdcd-6b84de2be093",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "194e92a5-d18b-4f20-a93c-8984622aa3c9"
        },
        "item": {
          "id": "df2d9176-1ba6-44e3-aabc-11d3853eff0c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fa435326-f669-4c23-a408-2381395f9646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922c90b2-b561-4d40-8b21-56289ec53679",
        "cursor": {
          "ref": "839d5722-3db9-435d-8fec-d91d653f97d6",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ebcc8953-cc14-4ee0-b3ea-2de9371d50a8"
        },
        "item": {
          "id": "922c90b2-b561-4d40-8b21-56289ec53679",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fde8f000-eccb-4a52-abb2-22249542df52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79ec4cc-9792-41bf-84ad-4addcdf13afe",
        "cursor": {
          "ref": "d149f7cd-a55c-4733-9b9a-945b4de03d13",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bce64fd2-4668-4f0b-aa6d-f0f4a7cb0caa"
        },
        "item": {
          "id": "d79ec4cc-9792-41bf-84ad-4addcdf13afe",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2e320ba1-f6a7-4770-9d33-ddb68771018f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54d0ce8-9d60-439c-9156-abd85b0114b3",
        "cursor": {
          "ref": "acf49880-5d8c-451d-b423-5357b9ad3419",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3005e1ee-3e83-4999-bdf7-64c4c3bf627b"
        },
        "item": {
          "id": "c54d0ce8-9d60-439c-9156-abd85b0114b3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "453874b8-85db-4fd9-8f85-c3f21621bcad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 752
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83dc20d9-8dd7-48d4-8f47-e46a87305eeb",
        "cursor": {
          "ref": "8043cf09-e7ee-4b2b-b9d6-a12fedc11f1b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a51eaa11-a2f6-42a8-84ef-cf3b3949d159"
        },
        "item": {
          "id": "83dc20d9-8dd7-48d4-8f47-e46a87305eeb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c3480cd2-cb96-48c4-b968-d19c33784c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 755
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf56e1b0-8be1-41a7-8da6-63f55f830dd1",
        "cursor": {
          "ref": "4f1c5ffa-c1b6-4b29-ad72-c5e5e6a43623",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8bab4a86-56a1-4f89-ba61-1f6e1265f33f"
        },
        "item": {
          "id": "bf56e1b0-8be1-41a7-8da6-63f55f830dd1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "672cf053-b838-40d5-8fa5-f25b27fd48df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4775e87-dbe9-41a9-ade1-cf5248c31de8",
        "cursor": {
          "ref": "5e86b9de-676b-4c38-8a60-49d8a63f00e2",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dc5017c3-2156-4590-a44c-dcb346f0c310"
        },
        "item": {
          "id": "a4775e87-dbe9-41a9-ade1-cf5248c31de8",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "188ec8e5-6927-4fbd-b916-f195deeb7401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894dd677-5ba6-4ad0-bf49-230dfa96764d",
        "cursor": {
          "ref": "cae406e1-55c6-413c-a2a8-dd46ec7d1dc2",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5914f2a2-ac36-458a-9fac-69deb4cad456"
        },
        "item": {
          "id": "894dd677-5ba6-4ad0-bf49-230dfa96764d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "35783a6b-bb92-49ac-887b-f36e85b68d81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4503bb-bbc6-46f1-b333-d1966f7a43a5",
        "cursor": {
          "ref": "28e4e251-6be0-4279-8ee9-8d9c86a44724",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bf45b199-e83d-4fa8-8bdb-fb8f37d1d228"
        },
        "item": {
          "id": "be4503bb-bbc6-46f1-b333-d1966f7a43a5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c367be3d-f529-4ec1-93ae-1a6d17ea29dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280c88e2-8d9b-4e2a-97c5-10fecc9c5f78",
        "cursor": {
          "ref": "e3ab44e5-1088-4fb2-8429-deeafeb76867",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "403a894d-4ad5-4072-9043-11e24596cb19"
        },
        "item": {
          "id": "280c88e2-8d9b-4e2a-97c5-10fecc9c5f78",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b5610fe8-f0a4-418c-9773-c5cd09a35844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81abec64-5ba5-42f0-80ef-b8dbe44e2856",
        "cursor": {
          "ref": "0d5bde41-cddc-475a-97cc-b05b77fe96ad",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "609a13a4-bd5c-4d09-950c-eb4e64a03d2a"
        },
        "item": {
          "id": "81abec64-5ba5-42f0-80ef-b8dbe44e2856",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "29cfd882-48a0-4e11-9dd4-30219e1a3b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567a2624-22cd-435b-858b-8936bf3e6b6e",
        "cursor": {
          "ref": "fc91844f-0db0-4873-8691-211ffe0317d0",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d53530b3-c9f3-442a-81a0-3d255194a7e0"
        },
        "item": {
          "id": "567a2624-22cd-435b-858b-8936bf3e6b6e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fdfbe9bd-61f0-46d5-91dd-ca7930e605ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56cb567-276f-42aa-a5a8-714b3973c572",
        "cursor": {
          "ref": "52100635-d795-4215-befc-3e68048e513e",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "dee91fcf-d60d-4837-9043-34b0d8980392"
        },
        "item": {
          "id": "e56cb567-276f-42aa-a5a8-714b3973c572",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "60b6de14-de5b-4c8e-8adc-46dc47f03e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c329483e-12b0-4001-95fa-46959ecf47a0",
        "cursor": {
          "ref": "db85900e-5983-43a3-8797-033a3cbfef49",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "50a5efd2-82f6-4a5e-92b4-1c6de458e8c2"
        },
        "item": {
          "id": "c329483e-12b0-4001-95fa-46959ecf47a0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3984d6c1-f5d7-44c6-a4c6-4ded39c354a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647c4541-0c46-406f-9462-c620299cd17d",
        "cursor": {
          "ref": "f1e1e8c7-6cf8-4f80-ab8a-83480715fd0a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a9f87b03-9ee5-4268-98a9-f8dca86ffeed"
        },
        "item": {
          "id": "647c4541-0c46-406f-9462-c620299cd17d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "354fbf77-6de4-4bbb-8254-b5b402fa63cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3229bb7-83dd-4a5a-8fa8-c7cf5b5f2a02",
        "cursor": {
          "ref": "e8e12482-24bd-452e-b08c-2af4d83a98a5",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "60a02612-e47c-4eb7-84e6-b7f13d175426"
        },
        "item": {
          "id": "b3229bb7-83dd-4a5a-8fa8-c7cf5b5f2a02",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4b471e41-1efe-408d-be04-87da01c8f369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6017c77-0ab7-4cc3-864f-5af1a738c987",
        "cursor": {
          "ref": "3f53d8de-05f2-4f41-9416-9d57a070dc37",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "84a9b78c-1c8a-475a-9691-b4b0241b581f"
        },
        "item": {
          "id": "e6017c77-0ab7-4cc3-864f-5af1a738c987",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "24d1259a-5dad-431a-abf7-af80ddd3ccca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f3c5e1-6f99-4c6c-9c28-69e7286d26c6",
        "cursor": {
          "ref": "91a309d6-beb8-46a4-9e95-42e8dab88683",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "de89c023-72e2-43d3-866b-d748f250464d"
        },
        "item": {
          "id": "63f3c5e1-6f99-4c6c-9c28-69e7286d26c6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "21d4a95c-c22e-4d5c-bed4-5ec2ac7d1796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee336733-9e74-4d73-93d5-a94313ff098c",
        "cursor": {
          "ref": "d9c79de2-d545-419b-915f-9e02b54114d4",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "06b78364-0502-46ab-89c7-89b1d6f9602f"
        },
        "item": {
          "id": "ee336733-9e74-4d73-93d5-a94313ff098c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f0ceecb9-8b84-44ae-8fa6-e063737c7d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1ace0f-d98f-41a4-8a61-e521c23c49d7",
        "cursor": {
          "ref": "e3aac0a9-b36c-414d-9ef6-c9d1425e698f",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6ffab0e7-30e3-4518-abb9-03bc8fd21e48"
        },
        "item": {
          "id": "8b1ace0f-d98f-41a4-8a61-e521c23c49d7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2e32295d-779d-4ad9-8f06-2ff29c65dd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3ce92d-9913-43b2-a7c9-4f375fcec29e",
        "cursor": {
          "ref": "3aacdb7c-5219-4642-ac83-9fae0ca21f03",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "aaf1548d-9c91-4451-867a-277803131bec"
        },
        "item": {
          "id": "ef3ce92d-9913-43b2-a7c9-4f375fcec29e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9a05ac89-b049-4e21-a1f7-5f87b3916851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8941b156-e989-46b7-b004-46d557106845",
        "cursor": {
          "ref": "45b42859-dc5b-4828-83f1-7bdfa04ea68f",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b6c0f9e2-c6e2-4e3b-83c5-153501348250"
        },
        "item": {
          "id": "8941b156-e989-46b7-b004-46d557106845",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d6227051-5e77-4cd4-9cc6-80920dc8c3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1718a956-1495-4301-b78e-931807153b6f",
        "cursor": {
          "ref": "402bde4a-20a2-45a7-a80b-84e6c3a6ccfe",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b0e02fa3-0082-4f0b-811b-ba47d3487e05"
        },
        "item": {
          "id": "1718a956-1495-4301-b78e-931807153b6f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7ece7cf2-4223-4b5a-b00a-113713b7af55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55732a7-4b57-4651-91b1-05a7166dabc1",
        "cursor": {
          "ref": "4c382b9e-b8f7-4fec-831e-50d0c67c2ff8",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "475df5c1-c18a-43a5-a6d9-8c08124c0823"
        },
        "item": {
          "id": "d55732a7-4b57-4651-91b1-05a7166dabc1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "22bb753e-586d-4785-8e2f-9ec4a28ebf22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330721e8-de84-4502-ac02-0b6dfef9c268",
        "cursor": {
          "ref": "1ad9d809-0c98-45e3-ade6-052f45bd6192",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f7441ede-3f59-4d82-b9e5-38e17bf93dee"
        },
        "item": {
          "id": "330721e8-de84-4502-ac02-0b6dfef9c268",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e94e3e70-d966-40fd-847f-538fb96cc2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c918cd6-a0ec-4939-a549-cda3c5ab6c1d",
        "cursor": {
          "ref": "79df3acd-f576-47a7-8967-f0951e61aa56",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "05365a99-41da-4fd1-a5b6-bf6403256146"
        },
        "item": {
          "id": "4c918cd6-a0ec-4939-a549-cda3c5ab6c1d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6cb8c9a9-3aee-40b1-9647-914e39a428b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 421
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9347ee63-0ff4-4efe-8f37-4f6f9cd43565",
        "cursor": {
          "ref": "69a82ec4-6277-4175-b256-a3e26db727ac",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "60164b5c-46ea-4b4d-8c84-776f0b4b5571"
        },
        "item": {
          "id": "9347ee63-0ff4-4efe-8f37-4f6f9cd43565",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7ed17523-ad48-4936-9ef7-8484f2cbbbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332a65d6-14fe-4e72-b392-d6dfa9287cbf",
        "cursor": {
          "ref": "7e7b7a4d-d64d-4fc6-8c26-aaa3cc6a11a9",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b9f5129b-f559-45bf-bd04-e97e16e37909"
        },
        "item": {
          "id": "332a65d6-14fe-4e72-b392-d6dfa9287cbf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1ec1f61c-9625-4e29-9123-5206a5b8fb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888525f6-0048-4b54-804a-6b11d5cf6dfe",
        "cursor": {
          "ref": "d7d09040-b94d-4e76-a6c7-41a4eead1cb5",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a5c0ad2d-ca9f-4791-9eca-ce6d69ceba17"
        },
        "item": {
          "id": "888525f6-0048-4b54-804a-6b11d5cf6dfe",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "529d94d1-2608-47ba-9f69-832e5612712c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf093f03-7728-435b-802f-71b35f311b60",
        "cursor": {
          "ref": "b1e4390f-0ab8-4c4e-bcd3-e18e14056340",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c8b7aa77-f3bb-4825-adaa-23f71568d610"
        },
        "item": {
          "id": "cf093f03-7728-435b-802f-71b35f311b60",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c9155bea-fcb8-4963-a25b-7878182ab415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845e5652-9aaa-4d95-8bf9-8200b1ef82b1",
        "cursor": {
          "ref": "e6c18ce2-4576-49f8-830b-5686c62b9e66",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f63653da-28a3-4ab7-a4bf-0983d6e1b999"
        },
        "item": {
          "id": "845e5652-9aaa-4d95-8bf9-8200b1ef82b1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5cac2778-2ebb-4bde-a0a6-01b63e3c800d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e3c402-18e9-4d0b-93ae-883493da2124",
        "cursor": {
          "ref": "b38d23b5-4af6-4fc4-b7ae-9b1207ac19a1",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0087729a-d390-41fa-9d75-662db0a02e94"
        },
        "item": {
          "id": "e5e3c402-18e9-4d0b-93ae-883493da2124",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "824054a8-6e44-411e-bde8-71203cd914d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b9a678-bf6f-4204-a508-4c5afaf66b90",
        "cursor": {
          "ref": "073cbb30-a93c-4f5f-9b56-e85e5bb13da8",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2d0da83e-db3e-419a-a822-5893be85363e"
        },
        "item": {
          "id": "d7b9a678-bf6f-4204-a508-4c5afaf66b90",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "50da612f-fbf8-417b-9fff-55a020342bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca64376-b6c0-42c2-961e-633ebe67d0ab",
        "cursor": {
          "ref": "2f78514e-0ab0-4317-a56f-294a2e7ce201",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "af7ffb90-cb97-4364-a1ec-f4a7763e546e"
        },
        "item": {
          "id": "eca64376-b6c0-42c2-961e-633ebe67d0ab",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "09760775-f7ce-41ec-b4c4-a97cedfe185b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 790
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7ac7e1-bf78-45bd-9afa-b20a0cd00ee2",
        "cursor": {
          "ref": "528634ad-e878-4d4a-9c37-b465d29add83",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ed528a36-1342-4389-9de8-a00e35e9ab51"
        },
        "item": {
          "id": "ad7ac7e1-bf78-45bd-9afa-b20a0cd00ee2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "88b6504a-4ef3-4751-8c14-f0dd762769a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318d454c-7e2f-464f-ae3b-ec4a14e71f2c",
        "cursor": {
          "ref": "85a7ded0-8508-419a-8e02-51d6fc5f0f0b",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5aab4127-dcfd-43d8-9887-f96d886403a7"
        },
        "item": {
          "id": "318d454c-7e2f-464f-ae3b-ec4a14e71f2c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "26f8b496-b63e-4cc7-be9e-c5422944bb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1403f9-5ac0-4c80-9071-d9bc0279fd59",
        "cursor": {
          "ref": "802acbff-7c75-4065-b82c-9dce001ca1da",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c201ca94-947c-45ef-bb23-f8e923159e36"
        },
        "item": {
          "id": "5f1403f9-5ac0-4c80-9071-d9bc0279fd59",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "77389182-5b9d-4487-8eb2-8f022b686ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1066
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13070ecc-60b9-443e-8e6a-fec16c5073d2",
        "cursor": {
          "ref": "0b649086-5dcb-4c9b-88af-d2936377950a",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e9745c3d-406d-4d30-b352-21f582688170"
        },
        "item": {
          "id": "13070ecc-60b9-443e-8e6a-fec16c5073d2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "19b50448-0ead-46dd-b9f8-66ace923b17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1069
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d746a513-3187-4a50-854e-a7f2927c9f2b",
        "cursor": {
          "ref": "a8a90df7-6fea-41e3-8304-92f0a026f2dd",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f5bda820-c120-4dfd-a9f7-c8a4adb1ee59"
        },
        "item": {
          "id": "d746a513-3187-4a50-854e-a7f2927c9f2b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3b339d5e-4058-472e-9099-009e412ad120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1067
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1360a88-6e31-410e-b515-f0ac9b700d53",
        "cursor": {
          "ref": "e1081cd7-100d-4862-a472-56eef4527efc",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c959e112-a1df-4735-81d5-bf1a0e0310e0"
        },
        "item": {
          "id": "e1360a88-6e31-410e-b515-f0ac9b700d53",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "51974275-5338-4acf-8d87-7c1a605fb58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b68912-cee6-4ba7-a084-ec3211367fa9",
        "cursor": {
          "ref": "b4a8285a-17c9-493c-85e9-167125a500ce",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "726877f7-b0b2-4785-9f6f-925f83c9a941"
        },
        "item": {
          "id": "e9b68912-cee6-4ba7-a084-ec3211367fa9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fa5b3b92-19a2-4b85-b2ba-c0b082c55302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4056dbc-4284-4b54-819d-95b3e662ce8e",
        "cursor": {
          "ref": "2af97ba1-4f5b-43fe-9bd7-604f2937e8df",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "722b1837-3ecd-4435-95b8-6ca9582f9ea7"
        },
        "item": {
          "id": "c4056dbc-4284-4b54-819d-95b3e662ce8e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "df9f0664-a405-43f7-a003-0ededc663903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9402e4-daec-4702-98e1-a77985d73a2c",
        "cursor": {
          "ref": "352ca534-e9d8-43c5-8011-2148b48aaf2c",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "430b0c9d-2c92-4b6b-900c-c28b06a28015"
        },
        "item": {
          "id": "0f9402e4-daec-4702-98e1-a77985d73a2c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "02ebb4af-c69c-4cfb-b579-82b1dc41dc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa2da57-d557-4dea-8008-bea0bd7d1df2",
        "cursor": {
          "ref": "a8221937-7971-4fde-8e73-2479e0e79a63",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ddc58ec3-8340-4348-bc57-496079f713bb"
        },
        "item": {
          "id": "5fa2da57-d557-4dea-8008-bea0bd7d1df2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f766d9bf-e47f-4346-9c2f-0cb22be05623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b900bf4-8856-4a9a-962f-c7099acabf5c",
        "cursor": {
          "ref": "62c1511e-eec9-4f6d-85b2-4612c9a11fd6",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "283a9b9b-e182-4649-9476-2ae2cc670aa2"
        },
        "item": {
          "id": "4b900bf4-8856-4a9a-962f-c7099acabf5c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ad69e15b-d704-44a4-ba3b-29c3a96948ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09da8293-5335-43d0-961d-17e9dee83f32",
        "cursor": {
          "ref": "a392e645-5955-4130-b77b-e5f1ac3bad2d",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e0f82d8e-7495-4c8a-a258-74cddc2d1a32"
        },
        "item": {
          "id": "09da8293-5335-43d0-961d-17e9dee83f32",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9f91dc69-2976-4253-a228-87edf4cb758c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51c24de-54ee-4e63-a3cd-f63ed3a6fddd",
        "cursor": {
          "ref": "f787f617-207e-479b-8621-08fad8d75bd5",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "29ef7d00-3a5d-446b-a29f-8197aa4a1402"
        },
        "item": {
          "id": "e51c24de-54ee-4e63-a3cd-f63ed3a6fddd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7287ce74-8c2e-4672-81af-29b74fa082a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affa33e1-e065-4090-a276-701e88528d5d",
        "cursor": {
          "ref": "1573d421-679c-4e6a-b211-d8b910653317",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2175a1ee-6347-4a8c-8f56-58643de53953"
        },
        "item": {
          "id": "affa33e1-e065-4090-a276-701e88528d5d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b18e8aeb-fd31-4d56-a2fc-ff3ba7016f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3e0d44-7f99-41e3-828f-868c4e065d21",
        "cursor": {
          "ref": "fd133883-30ec-4e6d-846d-3ca448d13a11",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "60b92646-77cc-4615-b2a6-47db7ab11ea2"
        },
        "item": {
          "id": "ae3e0d44-7f99-41e3-828f-868c4e065d21",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "51b9daa3-3a7a-4841-a158-46c257bd66b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22c1f67-bde6-47cf-b163-ccfce54fb327",
        "cursor": {
          "ref": "8749a56b-8114-4568-9a01-ab9295d3327a",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "451c4802-72a0-4882-8d3f-b9a76764cace"
        },
        "item": {
          "id": "c22c1f67-bde6-47cf-b163-ccfce54fb327",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "48a04a95-7da1-44b3-8bf0-afa2a122d2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c28441-37b5-4968-9145-3c3a8e2c1565",
        "cursor": {
          "ref": "0ff0a74d-88f8-4720-a09e-3ab7f38df638",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4e80420a-2354-409e-9b5b-931a84d441c4"
        },
        "item": {
          "id": "a6c28441-37b5-4968-9145-3c3a8e2c1565",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0e674a68-3ade-4349-aa42-f2bf98ce5c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b11fbfd-2705-48ac-a336-a3dfaf18b590",
        "cursor": {
          "ref": "6f809da7-d8d0-491c-bf2c-b9ba2e5d341d",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "34b05490-4454-47e0-b4ad-2cbd77738302"
        },
        "item": {
          "id": "0b11fbfd-2705-48ac-a336-a3dfaf18b590",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f0adc77c-829c-48f2-bc68-d87e95f43aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df6be74-d4ae-485d-86af-64f749304828",
        "cursor": {
          "ref": "c369c26d-6c6c-48d3-a08b-d624d4b55fe8",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ed00c570-ccab-469c-8c30-5e136ada1aa8"
        },
        "item": {
          "id": "6df6be74-d4ae-485d-86af-64f749304828",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "63792b27-e475-45e9-87e9-ee7996df813d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a03a19-8572-4042-bd4f-1bf4c16c3673",
        "cursor": {
          "ref": "bc18b177-cd69-4efb-b407-fcaf63ee269e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bf3c18df-92c1-46b7-9989-17f92fe40ef8"
        },
        "item": {
          "id": "78a03a19-8572-4042-bd4f-1bf4c16c3673",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "12d8d315-e6a7-40eb-bec3-e8ae86219fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492571d8-01d2-488b-aa33-0e3911e1eb0e",
        "cursor": {
          "ref": "3a4818df-8fc3-411e-aff5-829d256166ea",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8bdac34d-9ecc-4dfb-be2e-0a5874d11d5b"
        },
        "item": {
          "id": "492571d8-01d2-488b-aa33-0e3911e1eb0e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "478538d9-342e-4d69-acd9-4774e4dc47dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663ca40f-6ffc-49f9-ab04-db2040e23783",
        "cursor": {
          "ref": "61be4e1f-ceb0-417a-a346-02bddb4e7a18",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a996e11c-4b3c-400b-9507-cbb208ff523e"
        },
        "item": {
          "id": "663ca40f-6ffc-49f9-ab04-db2040e23783",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "da48f61c-d914-4b27-873f-3a658a00ca3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3dcbb1-5d1b-43ca-8a46-6e89f8af6c86",
        "cursor": {
          "ref": "a5d8e3ef-24ac-4b20-aa05-895aa50791b3",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "861d8545-45b0-4f84-9675-10d0833de65c"
        },
        "item": {
          "id": "fb3dcbb1-5d1b-43ca-8a46-6e89f8af6c86",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b863cc3f-5df5-4abc-9373-c3ee75a51111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b4687e-6396-47bc-b23e-d7628b47c7f6",
        "cursor": {
          "ref": "d4d75ffd-ae00-437c-bfeb-bfd8799bd930",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ae7fc860-44de-4a11-ac3f-5960934ec602"
        },
        "item": {
          "id": "10b4687e-6396-47bc-b23e-d7628b47c7f6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5ca07bcb-6c79-45ff-a332-6ac848fa3beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782207fe-408c-4ab6-a563-638b87f91154",
        "cursor": {
          "ref": "a7ee4581-0341-4940-8fcf-ab12f571ae9e",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5e87c14a-792e-4449-aac9-0a38f7c686a7"
        },
        "item": {
          "id": "782207fe-408c-4ab6-a563-638b87f91154",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "851a5bfb-3346-47c3-b31f-dc3b44401705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616794f1-0b40-4cfc-b500-b1d0225f7f80",
        "cursor": {
          "ref": "404ac46a-c030-40b3-93c5-b12f183db81c",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6c4520ab-b2ca-4a90-9847-1b534f49bd6d"
        },
        "item": {
          "id": "616794f1-0b40-4cfc-b500-b1d0225f7f80",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d12f27db-54d9-4be2-8e33-1115d4ddb865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ab5637-6091-4506-841d-1b8f6f74c794",
        "cursor": {
          "ref": "5a72477b-56f2-46c1-8145-62c5edb175af",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1f2bce29-174f-4ba8-8287-372e2936fb9e"
        },
        "item": {
          "id": "54ab5637-6091-4506-841d-1b8f6f74c794",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ba7eb569-a7b5-447c-a588-377b3a668c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eff5fcf-378e-4ba4-a6df-e5ecbf9a79d5",
        "cursor": {
          "ref": "8e76cbf0-a6b9-4e7e-99dd-3830e79a4878",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e0d9c638-44f1-4028-ab5b-0b33d60c0ba3"
        },
        "item": {
          "id": "6eff5fcf-378e-4ba4-a6df-e5ecbf9a79d5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "825314ff-0ecf-4967-b2f7-7717eba36d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e93f97-a4e6-4b7d-82c6-d257daebcf1c",
        "cursor": {
          "ref": "6603ad18-3b33-4296-b9b4-431f287c9cfd",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6371fd33-be5c-4200-96e1-687b561f5a98"
        },
        "item": {
          "id": "13e93f97-a4e6-4b7d-82c6-d257daebcf1c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9608c8b6-9288-480a-87a1-4dfe58a494b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa11664-34e2-4f79-8da4-b047984cf475",
        "cursor": {
          "ref": "7ac300ba-67e1-4b50-8aab-b7acbdcd0fe9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ee302e7a-d012-4041-b73b-f324f3cecc15"
        },
        "item": {
          "id": "ffa11664-34e2-4f79-8da4-b047984cf475",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "15f862e1-8f61-4e12-bc39-af4a66727ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56320bc6-2510-4a18-a330-9e9677982576",
        "cursor": {
          "ref": "72b23e49-56a1-446f-8149-6364721e7ecb",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d2f39cfb-1817-4126-8e0d-7d142df74103"
        },
        "item": {
          "id": "56320bc6-2510-4a18-a330-9e9677982576",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f0c1a2c6-612c-4715-bb79-aa1a071a8d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdf41c8-7eb3-41fd-b4fd-39b412876709",
        "cursor": {
          "ref": "bc2d7fbc-e04d-4b45-a003-90eab813d358",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "082a3831-1c9e-4ec2-8606-44b46f8ecb4d"
        },
        "item": {
          "id": "abdf41c8-7eb3-41fd-b4fd-39b412876709",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fb3431a1-6c79-4633-b519-c8810aee8262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0274006f-1b36-437c-8d1a-5933612eb10d",
        "cursor": {
          "ref": "ab76e980-dd4c-4871-8741-32169baa57f5",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "01c6036f-a883-4957-be12-7a32c809735a"
        },
        "item": {
          "id": "0274006f-1b36-437c-8d1a-5933612eb10d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "18ff31d5-f53a-4022-8ceb-0d2f25b9b5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb39525d-e56e-4033-9a9a-714970b36df1",
        "cursor": {
          "ref": "ba780bdf-72d7-4fd4-99a8-d41f7023aad0",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "04158857-b812-48eb-9a29-ed38ef0c1c4d"
        },
        "item": {
          "id": "fb39525d-e56e-4033-9a9a-714970b36df1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "15308e6d-6f11-4bd3-b826-d7e876a2d686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919dc051-addc-429c-971f-d91dca893997",
        "cursor": {
          "ref": "91e89fa8-1345-40ef-bc0d-a91621b9a8ba",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "88d28510-6080-441c-88fe-b0a1057f25a2"
        },
        "item": {
          "id": "919dc051-addc-429c-971f-d91dca893997",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "54040506-0262-4915-b5e8-650ffac3ba55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652af148-89b2-48dd-abc9-6799dd85c951",
        "cursor": {
          "ref": "5c4f887b-48a2-4a4f-b5f4-34992084cf14",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "540d67a8-453f-422f-89f6-7153ce4ee952"
        },
        "item": {
          "id": "652af148-89b2-48dd-abc9-6799dd85c951",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b87751be-6b93-4608-a048-78f054c8941a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12e1345-db48-4359-a51b-1e2f26412bd1",
        "cursor": {
          "ref": "da98f58a-f936-4cd6-95f8-0b95af12a3c5",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "226726a1-74d3-4197-a4f3-afc72d28b704"
        },
        "item": {
          "id": "f12e1345-db48-4359-a51b-1e2f26412bd1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2e689653-4b0c-4f91-87c5-d24082e3cf54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e11c8c-dd49-4fa6-bf17-af3bce95fe14",
        "cursor": {
          "ref": "eb3a4ba3-5621-41af-9cfb-5f947e237798",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5b1fc756-10a7-456f-9938-2682c10b62f9"
        },
        "item": {
          "id": "27e11c8c-dd49-4fa6-bf17-af3bce95fe14",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "49873000-c95c-41b0-9788-92967cf36370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb100a1-dd97-4237-9a43-4f242024aabc",
        "cursor": {
          "ref": "52553703-c214-441e-a165-7c3633195954",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9868fe4b-0b3f-4979-acbc-46563e7fa825"
        },
        "item": {
          "id": "bdb100a1-dd97-4237-9a43-4f242024aabc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0dc8bee5-5f49-4db2-8747-da4a92573a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175ae542-8fb6-42fa-94a8-21ce13a17b48",
        "cursor": {
          "ref": "c4e5c08f-5942-416f-987d-6cf2373fbc53",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "48c33721-a765-4cfe-b708-17d723f60bee"
        },
        "item": {
          "id": "175ae542-8fb6-42fa-94a8-21ce13a17b48",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "be52cc84-ea51-4c7a-bc0c-487b21526f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a418ed-86bb-4096-bcb6-7e97af125395",
        "cursor": {
          "ref": "1f856a3f-4912-473f-a07a-dea224b4bf0f",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ffe38913-da09-44cc-8077-1c129cb36a4a"
        },
        "item": {
          "id": "50a418ed-86bb-4096-bcb6-7e97af125395",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f450453d-cc28-4adf-a8c6-b0fbcdceac5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbff1d4-53d1-438c-9e1b-fc2df0bfb3a9",
        "cursor": {
          "ref": "d48fbea7-2f26-4446-81c0-34d58e3b4c06",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "73357e9f-3a07-49ac-9be9-be735dd91ac6"
        },
        "item": {
          "id": "dcbff1d4-53d1-438c-9e1b-fc2df0bfb3a9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "619b7fa2-b23d-47f0-8c58-1c426a76fe28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7a8e73-99d0-4f3f-8d46-585f1393eac6",
        "cursor": {
          "ref": "7578afec-8310-45a7-a3df-9bcbeb4251cf",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d6fd5700-381e-4ee5-a7f7-3c851c150a58"
        },
        "item": {
          "id": "2f7a8e73-99d0-4f3f-8d46-585f1393eac6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1a6dda68-b805-471a-b20e-1a1f1c9f4a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1587db-596f-40b0-ba11-8f6ba729d408",
        "cursor": {
          "ref": "f1b389ef-ccd4-4160-9961-5ca2d3174586",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "91c847c9-4bcc-43df-ae75-c3080a6287b3"
        },
        "item": {
          "id": "ab1587db-596f-40b0-ba11-8f6ba729d408",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "10f41724-2c4c-4b50-b65f-3e8b0b78dd06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf4b96e-d4ed-435f-bfac-14e9367662cf",
        "cursor": {
          "ref": "ad37f694-ce0c-4f04-b098-c3a345cb5918",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8957c62f-8997-4d9c-8fac-8238997fdc73"
        },
        "item": {
          "id": "2cf4b96e-d4ed-435f-bfac-14e9367662cf",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0282d0c9-ef19-4d1f-a9c1-28cc227cded9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccc205a-59d3-401a-aac1-757568fef585",
        "cursor": {
          "ref": "85c6d62a-88f2-4c89-b751-83cdd5307fc6",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "06813da7-15e9-43a5-90c6-c6fb55a6044a"
        },
        "item": {
          "id": "cccc205a-59d3-401a-aac1-757568fef585",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e62434b4-06d5-4758-9a1d-f698ad49a677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f50f2b-330d-43a3-b40a-09bc367cc0f0",
        "cursor": {
          "ref": "f24df7d8-3a9f-475f-807f-4b82108d2807",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "82c08990-1199-4342-804e-d66e0e3717bd"
        },
        "item": {
          "id": "56f50f2b-330d-43a3-b40a-09bc367cc0f0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5a16ca30-0dd3-4020-b8c3-57f81e0a198d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e87700d-0c4a-446d-b814-59f34c754e23",
        "cursor": {
          "ref": "e6342ff9-cfdb-4434-8dc1-bca1699bc73e",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9561f78b-3f51-4ea0-9386-1b18add0fe18"
        },
        "item": {
          "id": "5e87700d-0c4a-446d-b814-59f34c754e23",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2dfa587d-029d-44ee-8630-a5f32db86ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e701c7c-0252-40db-88f3-4923b6d60ab8",
        "cursor": {
          "ref": "64376103-08d0-4734-83c9-2f48822f50cc",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9277d422-d367-4b6f-a4ab-b01743ddebe3"
        },
        "item": {
          "id": "6e701c7c-0252-40db-88f3-4923b6d60ab8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "50d29a46-14ef-4b8d-928e-249b6e05d83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1003c8-5817-4e1d-a975-e756231f788e",
        "cursor": {
          "ref": "8bc9cd18-4487-418e-b7fa-0c33138684d3",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ff405412-01c7-457f-8c3e-426c0c1c466c"
        },
        "item": {
          "id": "0f1003c8-5817-4e1d-a975-e756231f788e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4be6d161-0735-4e9d-b9c6-9a5d2a15e31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba1bed0-4b8e-4297-ae0e-73fc9de73f9d",
        "cursor": {
          "ref": "6568d6e3-bd88-49da-b95d-4363bf8743de",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c64f225e-2b07-4747-9265-79022982c6da"
        },
        "item": {
          "id": "8ba1bed0-4b8e-4297-ae0e-73fc9de73f9d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c9b345c2-8e1d-49b0-85f6-01ea07f04b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc917bd-3c7b-4461-8adb-155524166641",
        "cursor": {
          "ref": "47ae47c7-1529-4b3e-ad57-bec2ef3497b4",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "75dc4f0e-61f0-47c4-959f-36f736172177"
        },
        "item": {
          "id": "4cc917bd-3c7b-4461-8adb-155524166641",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1008f6a8-fffd-44f9-bff0-4b4404300c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe73ee56-31ef-45bd-9b3e-42a8c606499d",
        "cursor": {
          "ref": "209b73d6-de89-4783-8338-e91957201c5b",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "eb3f8246-e283-4963-af93-0d6a9b6ccd28"
        },
        "item": {
          "id": "fe73ee56-31ef-45bd-9b3e-42a8c606499d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5f4dca31-16d9-4052-ac75-7b9c57a8f535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5c1efa-e99b-46bc-9065-f0fc1687e1e6",
        "cursor": {
          "ref": "88b621d6-0d9b-45b7-8121-006fcd474c5d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0fb92f0a-43bd-443f-96ea-3d1188b1d0cb"
        },
        "item": {
          "id": "dc5c1efa-e99b-46bc-9065-f0fc1687e1e6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "44cf6bb0-56fe-4c77-b2fd-793b1ae490cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eed5ee4-ed6e-433c-a4f3-a1d8eb934e41",
        "cursor": {
          "ref": "e2872fa6-746d-4f54-87af-5ee82112cadf",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1f1a8d3f-c598-4fa8-9c1e-b95609402bc5"
        },
        "item": {
          "id": "2eed5ee4-ed6e-433c-a4f3-a1d8eb934e41",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "18b47595-ff18-490b-a623-b4b0427ca4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ac16d7-1596-4829-8529-5a473275797c",
        "cursor": {
          "ref": "1916afec-b402-4324-b3f2-0b89939f5575",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "aa0a6d6e-5a36-4db1-b5ef-09e8785b0d0c"
        },
        "item": {
          "id": "c3ac16d7-1596-4829-8529-5a473275797c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f25cc093-09ac-4b4c-aba9-c86d7bc82307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce36525-88d5-466b-8fd5-809018452e66",
        "cursor": {
          "ref": "cab3d664-62f9-4754-846e-ec558541996a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "54d130f6-cb87-407c-8d4f-7230f8692660"
        },
        "item": {
          "id": "fce36525-88d5-466b-8fd5-809018452e66",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "04af50e6-24ca-438b-8d39-76631d8e9574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156bda69-b829-4450-81de-4699077494b1",
        "cursor": {
          "ref": "b0ea82bf-c457-446f-ba14-195918ff5b7c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "478f618d-e726-47ec-ac8a-9d5223fafc4f"
        },
        "item": {
          "id": "156bda69-b829-4450-81de-4699077494b1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fb80bc27-dadd-4a95-9328-bc6cb34988ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3347f2d0-3a7c-4b0b-ba13-7a1d42ce1418",
        "cursor": {
          "ref": "0484bdc1-82bc-4870-b86c-4a0227507779",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3f69630f-2802-40dc-9f26-df55120fc871"
        },
        "item": {
          "id": "3347f2d0-3a7c-4b0b-ba13-7a1d42ce1418",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fb9ca8ce-363d-42b2-8f2d-60bf3a7a538a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e088669-ef98-49d4-bb0f-a79301f78d0b",
        "cursor": {
          "ref": "37c2f72b-65b1-48fb-a799-2761dd872783",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0c0c9dcb-f382-4913-85a5-d69d604776dd"
        },
        "item": {
          "id": "5e088669-ef98-49d4-bb0f-a79301f78d0b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "33b36965-c550-448a-9619-162c07454c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9773528f-276a-4eb7-850b-da57ed96a3e8",
        "cursor": {
          "ref": "5e508356-de5d-4ebd-8b33-851a4b6f708e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a1fc0845-bf9d-4d36-a89b-5a1c77099d64"
        },
        "item": {
          "id": "9773528f-276a-4eb7-850b-da57ed96a3e8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "169d0371-a6e5-441b-bd63-eed0e2b5a42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e85cf35-3c13-478d-964f-0993f9ecf374",
        "cursor": {
          "ref": "4729c20a-23b4-4497-b66c-a833afe8ff73",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a5c38fe1-4393-4837-abaa-d5b68289540c"
        },
        "item": {
          "id": "3e85cf35-3c13-478d-964f-0993f9ecf374",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "62459663-a498-43c2-884d-26ca24c84539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59fa2ac-82b8-47b0-90a6-834673a576f1",
        "cursor": {
          "ref": "bb0c367b-fb31-4a83-a33d-822ef687d6b3",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e4eac00c-15cb-438a-ade4-78539d107a4d"
        },
        "item": {
          "id": "a59fa2ac-82b8-47b0-90a6-834673a576f1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b7aa5a5f-5ab0-4ccc-aa2f-5e772655b114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6feea374-12c1-4e8c-aea3-e731749b1372",
        "cursor": {
          "ref": "742003f3-9a56-4cde-9a54-fdd1c8851a58",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2e26e671-2e0e-49ec-883c-189571ee8d1b"
        },
        "item": {
          "id": "6feea374-12c1-4e8c-aea3-e731749b1372",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a174160d-65ef-4ede-b697-4241e16ba288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435313c6-8160-4fd4-8915-d67058076a5e",
        "cursor": {
          "ref": "ca381c68-e9da-4192-b0aa-94d9d8fe5184",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6cd5945c-5a3b-4339-9fec-765b76134c73"
        },
        "item": {
          "id": "435313c6-8160-4fd4-8915-d67058076a5e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ae5663b8-33c7-493e-a580-002f48b67f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e6f1ab-1173-41b2-a26e-05ebf47331ce",
        "cursor": {
          "ref": "acab36c6-615e-4364-af56-2d766d88732e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "66b747d2-7f93-4cf9-9b94-625d4b39089a"
        },
        "item": {
          "id": "b2e6f1ab-1173-41b2-a26e-05ebf47331ce",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c12fce54-d168-4c10-a844-ed47e176b812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a76341c-8ddd-42ba-a32f-dbfd76c9afd5",
        "cursor": {
          "ref": "8506e64a-29d3-4a45-ac51-2716114f5a5d",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fdd5bd5e-fc73-4931-b013-89eb206b9af9"
        },
        "item": {
          "id": "0a76341c-8ddd-42ba-a32f-dbfd76c9afd5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "124d3038-7690-4447-9e90-23b9a647063b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cd4c78-df7e-4f6d-862b-04b0b1ef35c5",
        "cursor": {
          "ref": "3dbae052-2d34-436f-8f65-f991f179489e",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e0164708-5b88-4256-a569-8ce569a36e8b"
        },
        "item": {
          "id": "31cd4c78-df7e-4f6d-862b-04b0b1ef35c5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "788bde82-6278-476b-8eb0-074cb64bbf2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6492f0-6e35-4e52-a336-6ced662657f0",
        "cursor": {
          "ref": "f8ecbec7-2e14-4aa0-a4af-c0190faeac4c",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bf85ee1c-5680-4cb4-9451-95fa662ad86e"
        },
        "item": {
          "id": "cd6492f0-6e35-4e52-a336-6ced662657f0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "582dff3b-49b4-4397-a68b-cfd6c085d2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4ddedd-466d-4278-b0bb-ab3517b26975",
        "cursor": {
          "ref": "f73e11f8-8e6e-4e02-9b2a-1cde1587ee8a",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7032b42b-3c2d-4942-a0fa-140e6b883b67"
        },
        "item": {
          "id": "7c4ddedd-466d-4278-b0bb-ab3517b26975",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "06b014d7-29c4-4ccb-888b-1283b303a01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c327a28a-6f38-4a6a-a2bc-4942752c91bb",
        "cursor": {
          "ref": "9d688bae-9bfb-46cc-9253-9a738712cbfc",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "116bf7d4-e874-41c3-a572-d355499837d2"
        },
        "item": {
          "id": "c327a28a-6f38-4a6a-a2bc-4942752c91bb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "937b3575-5f1f-445d-bfd5-69923c96cf9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1208d9-5a8b-42a8-926f-5fadda70ca27",
        "cursor": {
          "ref": "d29a733e-526a-4d04-99b1-240db86ea2b3",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c2d583c8-2d9e-4cb6-b49e-189887f148fd"
        },
        "item": {
          "id": "4b1208d9-5a8b-42a8-926f-5fadda70ca27",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "444cd692-efbb-433d-8350-8c586ab36c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7bf670-690d-4885-a689-5f50417a640d",
        "cursor": {
          "ref": "c19f59d6-78a6-4886-b39a-4671eee48775",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7479208b-de03-43c4-a52f-523bd98c2b5d"
        },
        "item": {
          "id": "bb7bf670-690d-4885-a689-5f50417a640d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "94c52958-efbe-4477-9e67-13e468ca1bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e48aa85-ffc6-4850-8463-e4c2e445644e",
        "cursor": {
          "ref": "610f7a5a-5dd5-428f-8d63-d27ea3d00d78",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "944135c3-1c8c-4f94-980b-23603b16fbcb"
        },
        "item": {
          "id": "6e48aa85-ffc6-4850-8463-e4c2e445644e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a4d621c1-e945-471f-8914-cbbb1770d79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca52cd06-1a58-4c4e-9c72-42150f62dd4b",
        "cursor": {
          "ref": "530f44cf-0ea6-43c8-916c-beb97e6da587",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6607394b-0d20-4c65-8a6b-bdd8f137dce7"
        },
        "item": {
          "id": "ca52cd06-1a58-4c4e-9c72-42150f62dd4b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "22f74139-8b6b-4d24-9b38-ee45842dc2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f2a6f3-59f4-4a32-ad12-cc27a05b5abe",
        "cursor": {
          "ref": "60ecb241-f9d2-4662-a578-df46ba2e15d6",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "10e3597a-2290-49c4-aee7-92bb81ecd8ef"
        },
        "item": {
          "id": "91f2a6f3-59f4-4a32-ad12-cc27a05b5abe",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "48256952-e48c-4a26-a917-774483c7f243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5730db5-3bf1-4c90-8a63-57ea6d2a050a",
        "cursor": {
          "ref": "cbc97541-6ab4-49aa-b0fc-79c1fe1e432e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "310eb462-271f-4a9b-af5c-8942ef2a8a35"
        },
        "item": {
          "id": "e5730db5-3bf1-4c90-8a63-57ea6d2a050a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "19dd179f-0894-4f44-8930-c3f889e545e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c75bc3-7fd1-42a3-a806-f758b5a9fc54",
        "cursor": {
          "ref": "55ab4721-4d74-4a0c-a2d9-e5ac3b186a15",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "884089c9-8948-4912-8ead-e43a46fb5bd2"
        },
        "item": {
          "id": "c1c75bc3-7fd1-42a3-a806-f758b5a9fc54",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bbd969d3-e9e2-4998-8bd9-beadd75818a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e2e240-8dc3-42a4-9667-8748bddc7fc5",
        "cursor": {
          "ref": "d7023d50-d6bf-4029-86a3-7ae698bc9acb",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0b0342f4-6e55-4a3e-b2f5-4c436e871df0"
        },
        "item": {
          "id": "c3e2e240-8dc3-42a4-9667-8748bddc7fc5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "268572fb-6879-4484-b0eb-8d8e534c598d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd82665-f485-4883-98e9-08132482ef03",
        "cursor": {
          "ref": "098f6c20-d144-4b83-a3ac-a4571b2e3001",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "53cb9681-1a74-406c-8589-dc189de830ff"
        },
        "item": {
          "id": "ddd82665-f485-4883-98e9-08132482ef03",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "728aed16-8551-4145-9291-c4c608e7004f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1b8df7-7cc1-44bc-a657-b77683cfe2c2",
        "cursor": {
          "ref": "1e2b4843-4639-4066-b62e-b5a7f5153778",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b61e0f83-9223-45af-81c9-befef1d47dba"
        },
        "item": {
          "id": "9f1b8df7-7cc1-44bc-a657-b77683cfe2c2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3c2e38ef-556d-4b15-b5c4-01e5292dac87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46c8e20-c2aa-41ce-9024-b45550718c46",
        "cursor": {
          "ref": "c7a07be2-8964-4b16-a330-5ad5ce37f1cd",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "01d55b26-805f-47d8-bd56-7a8f96c7dfe1"
        },
        "item": {
          "id": "d46c8e20-c2aa-41ce-9024-b45550718c46",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a5437cba-8d35-4489-aef6-14e69c862865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f93e838-9b7a-499f-b89c-bd6e751bd8ec",
        "cursor": {
          "ref": "be3cca8f-33af-4790-97c2-700cd951c21a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "83de1fa3-6fc0-4ab9-b313-c5a2bf7b2e23"
        },
        "item": {
          "id": "7f93e838-9b7a-499f-b89c-bd6e751bd8ec",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a2eef777-07a0-45bc-8d57-837183e2e03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c4a0af-f08e-44ae-8db3-b007e47e89e4",
        "cursor": {
          "ref": "8bf2bd83-e8e3-4a6a-beba-50432026fa05",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "35b7948c-dfc5-451f-badb-d0d791dfe11d"
        },
        "item": {
          "id": "d7c4a0af-f08e-44ae-8db3-b007e47e89e4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c76b492b-236f-41a8-bae4-fcb8ea1cdb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ffc208-ddf7-4b1f-95a2-a4284b563a4c",
        "cursor": {
          "ref": "0fa4ebc6-8bea-40f4-b2ad-2a09497c8a04",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a36a154e-a523-497b-96d1-eb684d9ddfd4"
        },
        "item": {
          "id": "75ffc208-ddf7-4b1f-95a2-a4284b563a4c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "87656795-1a99-4980-9a4f-d67a236391fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb47891d-cb6e-4d4c-967b-3c279fa6103a",
        "cursor": {
          "ref": "a0182b8d-5351-4036-985f-fa06a212f05b",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "259881c1-2a88-44ce-b68a-b7708a9fafd9"
        },
        "item": {
          "id": "bb47891d-cb6e-4d4c-967b-3c279fa6103a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7e1b3106-9b40-4c3e-85e2-deae2bb37fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cb7c2d-e256-4475-aa06-3480f09ded77",
        "cursor": {
          "ref": "a6e04a83-9098-4b62-b0d5-19e0e0dea4c8",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0aa34281-40e2-4d1a-9402-c6d08a46a0e3"
        },
        "item": {
          "id": "e2cb7c2d-e256-4475-aa06-3480f09ded77",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f0ec671d-ff6b-405b-9d83-aa6e8b09e5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c4cd19-290b-45f7-9521-31bcab5b0aa5",
        "cursor": {
          "ref": "d0117c47-9e6e-494e-a423-57fd1fc25095",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d8e58ac6-0dfd-4600-828a-b49a32a63f33"
        },
        "item": {
          "id": "e6c4cd19-290b-45f7-9521-31bcab5b0aa5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7bf9a9e3-2346-4885-8629-bade07e12609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad4f3db-820c-4716-b205-6bdb2dd82bf7",
        "cursor": {
          "ref": "3dbfd9dd-1289-4207-807c-4addfb1d4a7a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e4ce0e89-bf16-4246-bb36-10d365cde761"
        },
        "item": {
          "id": "1ad4f3db-820c-4716-b205-6bdb2dd82bf7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7a335062-fd62-4ae6-ac2d-0380c407ad90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efe5571-fba8-4e59-ab5a-50379b75acd1",
        "cursor": {
          "ref": "a3e55404-9e70-4394-8ce3-5af3c0836214",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "3cf424d1-efbf-451d-bf89-ba8af61e5df4"
        },
        "item": {
          "id": "4efe5571-fba8-4e59-ab5a-50379b75acd1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bd948b98-bb0c-4d96-9c12-43a3ffe6b75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183b21eb-58a7-4a03-91ba-7bab893f995d",
        "cursor": {
          "ref": "6953e49b-69db-417b-a5a8-e8929ae7a763",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3bdf808e-525a-45cc-886e-21bc4ad17957"
        },
        "item": {
          "id": "183b21eb-58a7-4a03-91ba-7bab893f995d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8d3447d7-62da-475b-8590-887399486452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75437e7a-3d5b-470b-87d1-498b96a27c9b",
        "cursor": {
          "ref": "29d4c5ee-40c7-43ce-ae22-30f2df830b47",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "aec65eb5-952a-438b-8b69-6d77e472690a"
        },
        "item": {
          "id": "75437e7a-3d5b-470b-87d1-498b96a27c9b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "73162f4e-2ce1-437a-9728-118d0c358dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348d4f66-2aff-4197-a698-c08a6c64e5b2",
        "cursor": {
          "ref": "f4b544f4-e898-4bd4-932f-ab239fb98c74",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "691f01f5-f280-43f7-87fa-c94023ffea9c"
        },
        "item": {
          "id": "348d4f66-2aff-4197-a698-c08a6c64e5b2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "34f3fe11-2457-44bc-a735-c661647709ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dcee47-2636-49cc-8541-a047f2fc86c5",
        "cursor": {
          "ref": "e402124a-24ed-40cd-8f9d-0f75a194eaa0",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "577f7e45-53a1-437f-8ed8-d62aac7e6882"
        },
        "item": {
          "id": "b4dcee47-2636-49cc-8541-a047f2fc86c5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c2fb9dfa-6c68-45bf-809c-31a6d5670344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc66c840-de5a-448c-ab0b-e45b82c389db",
        "cursor": {
          "ref": "3033f504-cfeb-44aa-932f-04f28f48a27b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8db1c9e7-48d3-4dd0-a37b-ea96952f7af0"
        },
        "item": {
          "id": "bc66c840-de5a-448c-ab0b-e45b82c389db",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bcc64d48-2a3d-4b35-9c7a-c77cd8a5adbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b3f9e3-5e0f-43e5-919a-1f2f23198067",
        "cursor": {
          "ref": "f613e7f8-ea2c-4b5e-869d-a746fed66194",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3d54b65e-fbfa-409d-a2ca-d4f8ca6ed7ee"
        },
        "item": {
          "id": "e0b3f9e3-5e0f-43e5-919a-1f2f23198067",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cfec69a4-342c-442f-9f0e-6549fde384b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff27876f-c7cc-4005-8cb2-51c096e4225f",
        "cursor": {
          "ref": "647faf4b-06f1-4d31-9e88-63fec2e019ce",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e87289c0-2d55-423c-8dc1-c2eab23a51f5"
        },
        "item": {
          "id": "ff27876f-c7cc-4005-8cb2-51c096e4225f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5092e170-a8a8-4186-87e2-1be583afdc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58db9fdb-fb8b-4d9b-8f79-51f6a47a0249",
        "cursor": {
          "ref": "75e98b4f-b4dd-4368-898d-4f0850e70ba3",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a56bb61d-eb67-49e7-aba2-94d5cf562ca1"
        },
        "item": {
          "id": "58db9fdb-fb8b-4d9b-8f79-51f6a47a0249",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ec205206-d03a-45b0-ab3c-bf28c4d57a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fc07cb-9bda-4cdf-9f00-87f2c1874aee",
        "cursor": {
          "ref": "41cbbaa4-fb79-46e8-bfff-b3abeeaef3df",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e6140f74-5690-442a-81fe-201edbb740d9"
        },
        "item": {
          "id": "02fc07cb-9bda-4cdf-9f00-87f2c1874aee",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "47c9ffd8-02d6-4805-86ce-b913b4ab2710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6457a22-c406-417b-b661-64b5788bcaf7",
        "cursor": {
          "ref": "59cf8c60-2401-4562-9d13-adcaef36bb74",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7763fc0f-28b5-44fe-a646-65276ebd08e7"
        },
        "item": {
          "id": "d6457a22-c406-417b-b661-64b5788bcaf7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bf2ba122-9d10-4fa8-8807-ee618e5d2ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c3ef32-4b7d-4569-8566-b59a1de7bc53",
        "cursor": {
          "ref": "3e8dbe9f-18f2-402a-8bfa-87e1b433cc4a",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1f9a986a-f885-4329-a872-57d6fbc302cf"
        },
        "item": {
          "id": "44c3ef32-4b7d-4569-8566-b59a1de7bc53",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a285cc2a-0378-4082-ab31-bc580ae6d68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72946d7-b878-45f5-9d80-83be6661ec8d",
        "cursor": {
          "ref": "be446187-f07b-4421-bfe7-1bd54f30733d",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1f7435a9-aea8-438b-9eba-35779feca541"
        },
        "item": {
          "id": "c72946d7-b878-45f5-9d80-83be6661ec8d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a4d4f0d3-abd3-4ed4-b3be-8fc49d47a942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2415a978-a071-45d6-9e68-082910ad041a",
        "cursor": {
          "ref": "a3c04138-be3a-4d6b-9bac-b31761487a63",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5dc90517-2b72-4cf7-9431-96700c6105dc"
        },
        "item": {
          "id": "2415a978-a071-45d6-9e68-082910ad041a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5ebd3a15-36ce-42df-bcc7-de07bc37c694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c019a90-79ba-4555-96eb-5b96f051931a",
        "cursor": {
          "ref": "7a31163c-72ab-47f8-bb85-f11370f34574",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3bcb50e4-c3ff-434c-b054-37030701a11a"
        },
        "item": {
          "id": "7c019a90-79ba-4555-96eb-5b96f051931a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fee9809b-676d-4962-8412-ada84d1d3d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3b69a4-598a-4556-8401-05fdcd5054cd",
        "cursor": {
          "ref": "267c57e2-3730-4490-a0ac-4035cb278094",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8363863b-6b38-4cbb-862e-dd41af3c1a03"
        },
        "item": {
          "id": "ec3b69a4-598a-4556-8401-05fdcd5054cd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6b07e37d-6395-432d-bfce-be578f31ad41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec07955-96c2-4f84-81ef-a74737ca8709",
        "cursor": {
          "ref": "0b7bb621-7583-4766-8ded-e56a6bf3d5d8",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "257dfa59-6872-40ae-aec4-93402fe83598"
        },
        "item": {
          "id": "0ec07955-96c2-4f84-81ef-a74737ca8709",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ddb87e68-67ef-42f3-a5da-1877b7c83026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ad1b36-625a-40fe-a03d-e0cd49110fc9",
        "cursor": {
          "ref": "4376bd0c-ccb1-4884-ad16-6b85d44b37e6",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2561d8e8-a3a7-4db5-9de7-6487aec9d998"
        },
        "item": {
          "id": "26ad1b36-625a-40fe-a03d-e0cd49110fc9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "52f46cd0-aa60-4efa-a842-2a59fc33c5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e93041-3b60-421e-8a27-949e37bc09e5",
        "cursor": {
          "ref": "d4ae0859-1e91-40f6-910b-ea1950e432ff",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "65c43bb6-6200-4c7d-bca9-9fc48e705fa8"
        },
        "item": {
          "id": "e1e93041-3b60-421e-8a27-949e37bc09e5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dd35b1e4-6034-4ef4-814b-5b7aa9d47c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eaacf73-ab46-445e-b7e0-3f14756e0ea4",
        "cursor": {
          "ref": "356c8762-f0f2-4001-a0c3-9e254e7c94a1",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "17f97ecf-2fb8-4479-8c51-44c5fe41ecdd"
        },
        "item": {
          "id": "3eaacf73-ab46-445e-b7e0-3f14756e0ea4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2afb6553-f78f-4233-9ed9-ed2c1f63aa1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6210be2f-ce47-4c12-95e3-afad02cd7082",
        "cursor": {
          "ref": "6fb7b7bf-7a3a-41dc-8f3b-6eb66c90a4f4",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "bab9d3db-1bb8-43a1-a00e-01e48f2b9b1b"
        },
        "item": {
          "id": "6210be2f-ce47-4c12-95e3-afad02cd7082",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2bf2f657-89be-4dac-b11b-e5f085cbe72b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c6cc03-5545-4957-a1a6-c2ba54403c0c",
        "cursor": {
          "ref": "d687d3ad-0558-40f4-b48d-76ee928b4e4a",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9e348b8f-4d2a-4d2e-a780-99bc10404d14"
        },
        "item": {
          "id": "e1c6cc03-5545-4957-a1a6-c2ba54403c0c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "be0a6833-cf9e-4339-bdff-e0ebb86d044e",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "544999e9-1cf7-45c1-ace9-0761c12c407b",
        "cursor": {
          "ref": "a5820c58-2ca3-48c9-8279-417f39b35bd0",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0a2d9f3d-5a0d-4246-820d-86ecbee0ff22"
        },
        "item": {
          "id": "544999e9-1cf7-45c1-ace9-0761c12c407b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4e922fb8-172c-4d3b-a474-74d592a77f06",
          "status": "OK",
          "code": 200,
          "responseTime": 1715,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5540491e-3626-48e2-8d3c-bd273d64df72",
        "cursor": {
          "ref": "a52efb85-6f52-439a-b795-2e2e77b6e84d",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "26e24f4f-6099-4b4f-8de0-cbaede71b98f"
        },
        "item": {
          "id": "5540491e-3626-48e2-8d3c-bd273d64df72",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e6a273d7-f547-4958-a640-14ebd95a0527",
          "status": "OK",
          "code": 200,
          "responseTime": 1331,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dab7105-2ca7-4b60-8079-135edee02d06",
        "cursor": {
          "ref": "c2128a3f-647d-4df4-886d-c36f65a7d69a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "83c4522e-0f06-4d36-b9bc-ef523f7e68f6"
        },
        "item": {
          "id": "8dab7105-2ca7-4b60-8079-135edee02d06",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ad197ac7-1122-430d-a962-7dbed8b91d0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dab7105-2ca7-4b60-8079-135edee02d06",
        "cursor": {
          "ref": "c2128a3f-647d-4df4-886d-c36f65a7d69a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "83c4522e-0f06-4d36-b9bc-ef523f7e68f6"
        },
        "item": {
          "id": "8dab7105-2ca7-4b60-8079-135edee02d06",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ad197ac7-1122-430d-a962-7dbed8b91d0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8f719d-72ed-4cac-a67e-11b88d3b5c05",
        "cursor": {
          "ref": "4ce6b21a-5401-4321-b16f-8deb57f70111",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ec305078-3c3e-4f28-bbc6-ba17a38c595a"
        },
        "item": {
          "id": "ce8f719d-72ed-4cac-a67e-11b88d3b5c05",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "341885b1-9f92-4fde-a2b6-ca457bd5cf0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f226b54c-23f7-47f5-92f1-d4fb8bf00e89",
        "cursor": {
          "ref": "41b37130-72aa-4065-9152-6d9c32aff5c5",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "3bc06908-9bd1-443c-9728-72f4bfa86e4b"
        },
        "item": {
          "id": "f226b54c-23f7-47f5-92f1-d4fb8bf00e89",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0678a1df-4a63-45f1-a700-0888d3018df6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}