{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3e4d8054-a754-4f8f-b067-e36497206588",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7aa11962-c6fb-4712-90f4-e7be785cd6a9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f096b09d-5f45-4a73-a6c2-deb790479763",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f7f751a8-84f6-423f-813a-e068c332a89f"
                }
              }
            ]
          },
          {
            "id": "b151df4c-897f-411d-ae07-2e66bd255275",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "072cf6be-b67b-4653-b75c-c10a479fe186",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8d3ae287-51d4-48f2-a2c8-422c0e88feac"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "49bb4126-cda4-4fe0-ab53-ed6432acb525",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f823b81e-d13c-4d54-97b4-0acffd790ef4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "485a82ba-3ad1-4410-bcd7-8bf03fbf9d67",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "728cea0d-3c2f-45f4-86ac-3c694a9cb6e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2809378-bfeb-4d1d-a4a2-2269d229cc35"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c812fc9d-942b-49ca-8409-1c6a429492b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67a34c36-061d-40a6-aad7-bc817419352f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0c06af29-65dc-447f-8455-11b09679e263",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13175fbd-30ad-4f76-ae10-64b350e063cc"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2753f14d-a0cf-46f9-90cc-7e1db45d4f11",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7e7a5366-b69d-4877-8078-56632a62c247"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de3e119e-d9d8-4355-ba16-bd7acee0ada5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4cdaf2b9-949d-47c2-984a-2d67be31f56e"
            }
          }
        ]
      },
      {
        "id": "5016a8ce-25ae-4d57-99e6-c981ff1aec70",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8d3e7a5c-aac1-4eac-801a-b7e41d6f38d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38ad3b70-11c2-48ef-be30-36083dac4c7f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2a6594af-5ad7-42de-b2ab-56c97b46e8c1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6738d824-29e4-46df-8856-868498a5029b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2906a871-e6f4-4fe9-aa8f-8eda92267976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5aa87d-9254-4e23-937d-37174ffc6617",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9b33ac-ccb3-4bc8-982d-7e21adcba581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecb8a3f4-fc6b-407a-b4f8-1445693843e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373844a4-4ee5-400f-a784-47c69887f295",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6653225-c875-490b-9a01-a885d8f00734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e22edfd7-e963-4031-b381-6a84db2fc4dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5f3c7ed6-64fe-498f-b01c-10a64b4657dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb5a581e-8b39-4a31-a15a-e4651e88f05c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df76d9a4-0fd9-4039-8c82-6524fb04f6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4942dd77-14bb-4aab-819b-87e2c6eafeb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ea5456-e3a1-4294-9453-6b4bfbae674b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d19d7b-66dc-41d1-b7c0-62d2df0881bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d1c8f251-7b87-44f8-ba5b-55758eb702b9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4b412f3f-d527-4dab-8a15-758c0c3c5bac",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "101535a7-9bc1-4fcf-9567-da1125135371",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8df7df97-addf-4be2-999b-c886e4920aed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ca708e2-3c8c-41df-83ea-cda0cd46cf5f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1d68f944-505d-4e7e-96d6-ec13dc829351"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ecc09477-9d73-4021-bee9-dbe07b54df22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be118f0b-4400-410f-939e-0eac21d02315"
            }
          }
        ]
      },
      {
        "id": "2dff9c14-384c-486c-a3e1-2d4b6c2b6bd6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "12bdd028-3b85-4543-bbd3-9fc4fbf7a8d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9cc7d31-b840-44bb-9885-6b325dde6a77",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b96cb18e-97c3-4956-b583-7d8aad10444a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a73a55-dccc-4cc5-8a45-253e57459d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae71ed84-f07f-4e18-8f74-bfb7c25f40e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ecaa4c-6466-4c1f-a6b4-ddbefd426f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05bc1ba4-0a00-4447-a5d9-d142097a1222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d0b5c4-f638-402a-a6fe-9af5d1b5a6f8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44c62b7-aeab-40fb-979d-c4d7e20fe614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e88369f8-64d8-4a67-ac79-e0b37cafb780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce14e8a-009c-4f6f-b6bb-7e5a42119bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d2fbcec-6821-440e-a30c-ad1897f4a276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf078cb-09d1-49a6-b8c1-849aabf48526",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3d1e9a-206d-489e-89f0-d166e9c645bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b876bf-8442-42e9-8b5e-47e43e8f8fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385263a7-1a27-4635-ab10-d998ee9f0e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56299113-80da-4195-ada6-68d92ec31180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9553fbcd-d877-4d99-a81b-425c2ef26628",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1235fdb-61ae-4d7e-845f-afa1b1c710d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81fb4c73-e3db-4782-b6af-f115365e809d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3d161d-b0de-44f2-8959-fc6cc1fd8fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b34a6a0-b424-451e-974c-5bfe8bc0edbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88795d14-02ab-4b99-9db2-9d9753a820d6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87f7610-50a9-471f-8fbe-e6224f0bcaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5139ebf-28bd-4dff-8135-d14cd55d9fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8513db92-d20c-4678-910f-55534620fb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c896662-0a97-4029-ba8c-a698fc0e8bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f82f4f-2a74-46b2-90da-62314af8e62f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f72d36-eee2-4076-8f30-74d4c5a7c9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd7e271-4b99-43d9-b9f9-583cc5ccfd23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242357b1-201e-4643-b09f-8526ad6330ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29a54177-f57b-4879-9659-9e559bcd33fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2016adfe-2f93-4fc3-9b27-f84b15edabc2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d53e81-3482-496c-a11b-14465de8c3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd9ae21-e274-4d54-ac8b-4d018035dff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fa82f6-8e49-474f-befc-492aacf2645f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a23f8885-1b24-43c1-a637-49a1b4f27b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327ec65d-e619-4d36-878b-ef263614c3a0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d94818-9b2f-45e1-a747-456d38584772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd6faf6-778e-4b13-a18f-aed4d21932f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275a50b2-74aa-459c-9d59-4cc8649b3ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c72ebd3e-c32c-401d-bbed-c0d267d499bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421c3149-fb3f-44d0-b14a-194a8abc1a86",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035e5b44-1ee7-493d-8d08-3e2f3894315d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfaba029-9ee0-4a00-bc78-5b78aa553d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bcf6eb-1c31-47ff-b1ad-5d6ed997847e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b284449-46ac-4a69-889d-274069cde1a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ffc6ac-3882-4288-bf50-7a42922384c6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35b5c14-3a88-439b-8d97-869be28cc870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ed98d5-0954-4f3e-aaad-8e9a96986b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdba4868-f302-44ad-9910-7f236915023c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c15d6c3-7d6b-4dcd-abe4-1d659451eb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8be28ad-8b28-4e57-ae2b-b2b177e0e71c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04538373-4eea-4c0b-82f4-b3fd1498ac12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5711b6-50ae-47f2-8ebb-005bb5841589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53dedd0-ad52-4a30-aa68-9906136fd4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b0bd309-f684-4856-aed1-da60b2383936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbf0ff9-bf70-478a-b862-e95b42db9bf7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36298c1d-2846-442a-874c-860b87ef50b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241b8ddc-2f86-482d-b13f-42b7fe8f55ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e34f79-28b8-4709-bbe4-1412e93f4e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe9d5843-4165-4b2f-afc4-63d2662459bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fb5930-46c5-400b-b9bd-867dc9312640",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e074bf8-17b6-4422-a7b3-eb159b7ab965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f77b979-d86d-4ed1-9ed6-8cf7753d6f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31618441-615b-4218-89ff-872d3c2c787e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4742e15-2154-41af-b1af-ac7cc841c03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e15d4df-a9c8-458e-84c6-8a67fb56ece0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c90b2a-8d6b-400a-b7bd-ae32a709b423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386dc8c9-4c76-412b-901f-e987eacf3bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b1e9f6-75ae-4445-a135-7d476d60c503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2be043b9-0a8a-4b5b-b1db-14118b08bd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64dfd80-fe52-4ea0-b096-4857f4c3c6c5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5321f1-ef2d-406f-a6fd-3be504479387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b75fe1-c72c-4a0b-99ee-e547dfeb0a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817d8339-ab47-4d75-9a3b-e1ee6b2281f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab35b20b-a102-4eba-8613-d9868c51dbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f323857-0dab-4e7c-b55c-004730dc02ef",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69531a74-470b-41d6-b9f6-24b2fb5f1f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8b2297-7409-487e-bd6f-401041eecf88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41eec65-7334-43ca-8f3b-0c4685df9216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b904bc44-9a34-4224-9de5-626f4cc8282c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3596a9-1267-4b1d-a68d-9b7b9449fb06",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7904f73-9820-4d07-bf91-9f5ef30c4ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391f7295-be5f-4959-9ccb-d40aa4140179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e923ae76-dc38-4c2d-807d-5b3dd1f94d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3ec4e13-592e-467b-98dc-481089dafb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c35f46a-73f4-44e1-8685-f30572905a5a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d0374f-3087-49f0-86ef-40fc5a0e27a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d99a395-7d10-454f-8b63-ff7e831c71a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70395ab1-7d61-4173-8535-94b73c0cd1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "26f5d387-6bc5-46d7-9275-025eb0dedb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36d86ad-0063-40e2-9fec-c6ec23a6e19c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7207488-4e71-4c88-b71e-439026a2918e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d277d9-3365-4dc1-8d59-7e30ae077f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca8b864-ae9c-45f8-8049-e672a3c2002b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7531b9e-8940-4129-90e6-1cdc08f305a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b3df41-4f6d-426b-802c-9b3178869a69",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ebe231-f43a-4e59-88df-8ec128f65431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4600c497-2822-4e1e-b77f-2a9cb957f222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b483771f-cfc0-4e02-9044-9def6cef596e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95ed97c8-577c-4f84-9173-eaad7be7be9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27aa6f9-f06b-435d-974d-179f7c2f935f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a39fdc9-a8b8-47a5-a565-5e41c3dd89df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52098ed-88d5-4c4e-a848-9435ecce9a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf9dd4a-d164-4ae7-b66f-c08ed2b7ea9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5977509-6de2-4a79-aead-48c080ce50a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f08172e-c13b-4328-8250-3ba1eaf84b69",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbb2e5b-6706-4248-8a73-1c1b071a76a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20fa5e1-7922-4e53-86a9-4a6382e98982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd85fba-9823-4bae-aa68-13b591e7c8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e14a191-8c90-4020-9651-228f7f49af7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b23dfae-4e1b-4a6a-a50f-f71f77666d4f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ee352d-3766-44db-96e6-ca16073617b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67aa06e-a290-4d90-805f-49c40de84947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a940322-7e88-4f85-99ea-c29d1cbb2112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c308007-0fbe-4175-bde4-6f9eb02fe5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce4c3ca-6ea0-42f2-a24f-9e9419016882",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574aa1cc-646f-484e-8155-022e10a2df19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786d2527-66ba-4a1a-b15c-8fc11d696bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e289c66-9868-4a54-9213-b1e6065ea65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f177e25-3fe1-4052-bbec-321e038b1cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f4cc62-8547-46b9-bb09-647b577f7b27",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2c5f69-d99e-4244-ba6b-6869175ba3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a21294-0d1f-4b76-8548-e248c330bfe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d31310-78b5-4c2f-a7f4-b05e8b13295b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db44192d-a65c-47ac-a204-d117a5182330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32057361-cef6-4431-aa90-8074a6799f19",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c4922b-f08e-4ca8-b651-6ee615f84d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95115af2-cdfa-4771-8cf5-f70be5a7849a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6606c3-8087-4214-adf6-4fb3c11c0a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf52bdf6-5893-42ae-9d65-cfad602c96eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973b9bc2-1c7c-49b8-80cb-8b18a2f06576",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7f2983-93b0-4217-8dda-986c4faf1605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885454f8-6401-4add-b854-a71ef21ec731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02a795d-7fcc-4696-a5b2-a8d76bc6fd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8f8349-a8a6-4cc0-a570-55ea1d90b633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2689ed0d-36d3-4128-b28e-d34c9ef7aa15",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0498103-b2f6-48a9-8d79-53ce11a8eb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc7b22a-c3db-460e-916b-0b07765cb610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7377a053-3962-4233-abcd-2d4b620e99b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d75aa67-75fa-4493-8a64-e579e1ed3819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b24c4ae-a13e-4713-9e9d-ed6fc7679630",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba98c257-0b2b-466b-9750-33263ee40f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f1c495-04ec-49cd-ac86-7603890f8a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee7d37b-0e46-4167-a5ba-f7faefdb7200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eec58607-a629-4d88-9264-ee773895babc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159731af-95c4-4f95-89fd-ae86c3397a10",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510be6f8-441e-4b5e-984b-2122a78cc07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4768a0-c7ae-42b9-a268-20e0b217435f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097581d8-e5d6-4ae3-a5e1-718caaada7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9fcc683-8514-44c9-9a78-d08866b9a854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05c0743-b22f-4e5c-851d-669ffd1b4f02",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721c1890-6ab1-40ce-9c96-b8a0425b7d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686d80b0-c6c6-4123-9127-1e7e13024ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3f0262-3ec0-4828-840f-da4f7a637715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eeb25a2-ac2f-4553-aebe-bd4c666e4da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec088f3-f544-42da-a70a-82e015d3349f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39cdb4fe-84d0-4cd8-8672-468073cbb343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bee470c-b722-45f4-bbee-9bdb906b38d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543cec90-b7f5-485e-b192-265fb1a90dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "028e2974-f12d-4496-8faf-d08e83c8df65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06758c68-8243-4bb7-8e8e-690f53e0f8d2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a19e77-a588-4619-a12e-0a07d817f9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83cf9c2-fbf7-45d3-b839-5e7d108a805f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c762ed3-1fb9-4dae-ba3a-185f66181261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc42531-ff5e-4f28-a5a8-ba672b4398e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06802e7a-5a97-4e5e-8d09-182c4038b04a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52dcce5-252b-4740-b613-6af0202105e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e77f6093-f087-4fe9-aacb-7035cb6404ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8fe0a7-22b8-456a-943f-0992d337a4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1bfae1-86f0-43e2-9f5d-4bdb065089f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655200a7-00ee-46f7-a069-79bb2bb98664",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09f3b7f-e7e2-4ba4-b460-eb321aab65e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ebf3592-adfb-4b8b-842c-307a3732ddc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa3b19b-884a-4193-bb2d-b2b5ee8e58a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c374f66d-e2a8-421b-84f4-d68f96d9fb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cf9400-0544-4e94-8d2c-29634bb6c409",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbe50bf-c6aa-4384-8243-bd09898d6a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffcbbc8c-9ae7-41c7-b2c0-349f92d3e903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3519d86-3522-40c6-9a88-f05878fc6102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70b7a8a3-bd63-48e7-ad12-b1712d3d11d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bb27bf-5c0e-497f-adc1-05fa22a6a560",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a79ca74-b77d-4ab2-9584-9522e6b2c4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "654499bc-d4fc-4e6d-9264-94e9910565fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8a9a7f-ccac-4ab6-b7c5-3f1965fe46f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31689fd2-ba6c-473a-ab03-dfc6a432279b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10ca140-97e2-41f8-aca9-fd67bc410de7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a770367a-8e20-4be8-9f21-0f0715a85266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7964d708-d3ea-4c70-b6f0-6435e7ddd34c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979f5522-74a0-4a2c-8d77-dda1e3522912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2caae299-1889-4902-812b-813b276e899c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a509cb62-541e-423e-8166-1a965aac5cba",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486bd91f-0988-4c83-9b8b-f3e5cbe01bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132f5585-7d54-48c4-b988-570d3a681b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95e8bf0-7f1d-4ec5-8af1-ada27346487b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4a1691-f16b-4572-ad8f-6455cb831ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7857d1bc-5a4f-4545-b04b-34e1e152a8db",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f391c5a-1de4-45fd-9267-b744e93e22de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79586679-800c-4fba-84cc-9a99e9b41bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57257177-353d-4910-86e5-7ed0bc3eae3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e50ae1df-5e26-4818-88c1-f36587bc3e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c82bba7-1fbc-4bd0-92d3-d33cd8421bab",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925e699c-04da-4dc3-91d8-0fa80602eac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381e995e-fca5-4333-b0ed-897360ffdcbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60ea4b9-e662-4ac4-a442-d9978507fdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cbbd762-9a1c-440c-b380-a626b9945fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5090d3f-5c07-4578-9cbd-3c69d3020eed",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c838aa2-484d-464d-9ac3-fe36a7b651d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33281bf2-f6f9-4433-810f-a5b89c7908bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a94445-bb4d-4b22-a9e6-5e7cb7c67c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d3503aef-a6fd-426d-92c3-3cdbf28b6933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c816724-0d34-4fbf-b675-f100d20163c1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a8f5fd-872b-4869-b662-714c69841877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3753e5-f670-425f-a8ac-710209ab60f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6f1a94-315e-4e09-b24f-c8de7825c2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a03237-0efa-4050-8707-c44ac635b60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a5570d-1a94-4985-a2ea-32d55f5c0a51",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d33354b-d5c3-4d1d-a33b-682db2625502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f17f951-9348-4235-bb28-4d0c2c973ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50398dcf-455f-4fea-b8d9-27e6cd343ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a67866c2-844e-4550-913f-5431075f9bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90bc4e3-3324-42b8-a4ca-0be323f23269",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5b384d-815d-4a76-837d-cc31b92cf72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7295471f-7793-43e5-981c-62566f07cb88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6308e8d-30de-453c-84a0-9911d6b41cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a077c36a-167c-468a-b369-b551eee9fe37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d75ac66-a2d0-405c-95f3-3adfbb27c303",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348f9490-c5a3-47c4-800b-778a4c5c99f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6117261b-6a31-4986-92de-94340517ddfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe81cda-e8c7-47c8-9077-bf67671a793e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1781cee-9f43-4966-bdca-2e7ce95c49aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db9e649-cc24-4035-b327-82340ba347aa",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfff16e-74de-4086-9b2e-e0e106fb8e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87f7c69-364e-4a0c-abeb-9eccf886361e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39edd9f-640d-4d51-91a2-1e2f0e1dc45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dde55706-0fdc-419d-99b8-25f7056d7dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca43e48-0f5a-43b2-992f-a2d1e385f7dd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe887c15-24a6-457b-b184-a9868f4c9a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf083b41-0103-479c-87bf-4a42097a5b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f58454d-132d-4d4a-b5fb-ba83b86012bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e20aa139-4ca3-44d0-8958-0db7f611a867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcf21f6-4d32-4751-aff1-7e44bcea5584",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f873ac22-8343-414d-9f11-30779b81be08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1cb757-f910-45b0-af9f-66e8a143f582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19354fe2-5a18-4019-9ebe-6bcf0517fac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2de0407-a8f3-49f8-bcb5-edcdd469b019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab571a3-fcde-4fcf-96bf-99faad02a5a6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751d72b7-0f7d-49be-a521-ff104756a39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6aed12-5b9e-4c2a-b16d-2501e85c4baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4d7e3f-43c2-487c-9664-51239749a7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a564703c-ea28-4732-9495-a72c35f1c365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4356fe28-f93b-4cf6-8549-cfcfdd3aede8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1b80ea-9550-4dd9-8d61-dd3528166290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804a99fd-bb13-4b4d-b2e4-9911af79a206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a39496-4d49-4282-835c-ce317cbc95cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2947b1-dbe8-4155-aa1e-b18d995b26f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c41412f-fcbb-4279-b9e9-baa7840df6d7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88769d18-61be-4979-8adc-c5c6b890180c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef6943d-dc07-4db1-83ff-46bb82d7fc37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2b3c4d-33fc-4624-bcba-ca61dfa13637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd04e46e-45c8-48be-89ee-8109ea7fef75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef024919-5bc2-49e8-80a1-155ef790b57b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fb5d4f-5771-4d9c-9e0e-87bc32998371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e8ec79-fc47-4820-b4a3-4c40efb314af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05236921-7bed-4136-9569-733a973ddc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44b32005-ebe3-4eb0-bb92-5b0dde3673ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2ac488-bae1-4125-8635-221cc120917f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae812ea-f013-4627-8051-bd66347b9266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edcc07cf-2c3c-49d1-b6b1-1a6789e78056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ad9ced-8c45-4ea6-b3b0-014454f7a25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b02fe3-bf31-4988-8950-52daa59dd49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c442e62-72de-4d0d-a6a8-5a58134ca3bd",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11363ab-518c-427f-93ce-ab78189ee0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2937fc-9a1b-4232-8b8d-5ce01c12df5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eaeb6a7-c332-4a0f-925e-a0131d4a1c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "125d7f44-d8c4-471c-be98-82ac84ac4869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef455dba-282b-4fd3-9fc4-4a40d70cc2d5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e0f7d5-6e14-4183-a850-d4a5518281bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915315fc-41bf-48b2-b5b6-17dc3316ff30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e57cd9-d7e3-4733-b48c-de4df5557f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "709f30c3-14b9-4a39-9f7e-e554a9546666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfe48b8-daa9-49e7-8afb-5d8f6404fa64",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c659ccf6-4686-466e-a25b-9300fe843abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56460896-2246-41fc-ac0a-f2abdc226cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f03f1e0-48cb-410d-aec9-02c9758f9af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "15e5cae3-8ffa-4527-86dc-0b7dc98dd0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b85a168-dc52-4691-bd67-9d7708a043b0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c644dd-cc35-4a82-a406-00c683cc62c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70b984e-0325-4250-b4f3-bbc886bdfbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39859ed-2c40-42e5-bc53-703b3eba16b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b265ec4d-2f0c-49ee-863f-77748b9b1ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab2be77-829b-49ea-ac0f-b4c0562a67a6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47041e2-ceb8-42f0-98dc-e5b286309fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8045c63f-5d77-4a19-9782-2a4b8fd002db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0195220b-356c-4eac-8e5f-5ab28f4a0c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c499326a-a0ce-4b5d-8e2c-b154b8fb2b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d71dc6-f309-49f2-a659-7021d03159bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e2cd40-d405-4fa6-ba93-833da3943c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feec3a6c-47d3-4f17-bd07-6de528b16ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8c80ba-9326-497b-81ca-3b9eed5855c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0554298-d39b-4c6a-bac6-b08b388b4916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d93238d-466a-458e-9a9e-4326320a87f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49465c8b-6ff1-4aca-914d-df7b4d29629b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03957e2b-1ff6-411b-b604-537d6d10994f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7caaada5-b6f9-48a7-9dbd-ca2953d15585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "18f88356-abb5-46db-9957-a934f44632b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978b563a-b81c-4f65-a984-265e4634965f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f52bb5-2756-4303-80eb-ebf2e7875da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0a9822-aab8-4c01-bfd4-0b6cf5b5d44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6b5975-fe8e-4095-83ee-c59ab30f1260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "88166e04-6bf0-4a19-91f9-ca7796aa28ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c22709-52fe-4c5a-9ef5-d401c5b0e51b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7931c05-33be-4f28-84eb-f12ed75ff2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89aedac1-1a06-446b-ae65-70aaf0231b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e568d25f-ac7f-4188-a889-8953aed2d6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1b660c-a943-4fa8-89db-abdd83a08150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3f12ca-1e18-4e8a-ae4c-581223dc2876",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677a48ef-bd58-46f6-a532-8d0e982bf4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55988edf-907f-4f56-a243-7e5dc835e0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff4dbd8-4110-4a6b-a937-d556f83b390c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41d6beac-778f-4199-8d70-6e6fb9d39f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eed5179-3b72-4cde-8bf4-557cd231f412",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436fbf3d-ee5d-4b24-b049-211f7780da6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e74c24-04b2-4e94-8307-a06f46251145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ce5b53-a29c-4f80-b265-b5ef4fc1491b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "366b1c01-0647-467e-8e8a-3ca8dfd1ccb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8400a5-bdac-424c-853e-efc232c4bba5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf1cb16-a5c8-4a33-a704-144c341299f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7438e1b-0771-40d3-8f0a-56216a6e6125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e28dc7-eab5-49dc-ae77-722827219d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3890f91-8e85-4729-8da4-3dc48932b820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2853e873-4c69-435a-a3a5-a382ee5abe81",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381e5ae3-4bc5-4e61-bf02-cea2a90d81b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33597803-3492-4a52-98bf-1dea95a2e48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159025be-0c02-4c6f-ace3-1ffc68138c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38fa8c0c-4d6d-47a6-883b-14b0653fa000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7c929e-9b4c-486c-aabc-973a3b2e7724",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d563c54d-298e-418a-b227-8dae6112e3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf7b4fd-460d-43a8-b7cb-968b1674c199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed04bfa-ddfd-490b-a43c-88738fe0ed1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c597fd44-f63f-4bbc-a0a8-2cf189c96b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4a15e0-103e-44b5-bb30-f67ab4f91f71",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36864ee5-1472-4bb9-b102-19d4f3d1e455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ac9932-6ead-4dbc-b08e-46628cfe6d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3051eb1d-5ff4-43fd-a0b2-651db3ddfebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "773e51f9-aed9-4e47-ad97-32b8593e77a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f11ebd0-1f19-44bc-85c8-6adcbeb5de65",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f17fbb0-7762-40c6-b309-1fe66aca7f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55f7f9c-4371-4381-a1f1-7a43c1e5a806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eda6285-30e2-4585-aeaf-0a1de6fc7201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be09ea7c-bbaa-4716-b9ce-981caaf7648f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074edd54-7224-417a-8c93-490b1a46a364",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37d461a-7555-47c7-8348-82aa90706efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1c3c30-ff09-4872-a169-30fbcb3bd884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338b1115-0e8c-4cea-ae45-86ae7db50654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d05ff17f-1d30-4b3e-a27e-0d3ed714c0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2674f20-6530-4f62-9f03-612c79299e5d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05dbca04-48ab-4b34-b04c-ef149b4bfd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e4d6fd-95fc-4290-be34-63fb3fb1f028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6d83f9-898e-428f-80bc-9cd516191932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7255be51-63d4-4e38-bf8d-7af0458ffe07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783cb828-a881-4d9c-b673-ec50ef4f9e0d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af1bce7-a0f7-475d-935c-e14fced26e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffcd539e-125a-42ce-bba4-f0bf2e5a3b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca66351e-039c-4e88-a186-95e1bb9747a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a10bf3a-3913-43b6-a687-5a681f64eca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade1b0e5-3f5c-440c-804d-fb47d1b0e6ee",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008c1f6e-ad46-41a1-b40e-b8552ccf269b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd52ad4-90fc-4481-9766-92a7946aa2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc1b50c-38fd-4230-a544-aac799757c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d38a8be8-30c0-4279-9506-81b36ebc27b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16806873-0f1a-47a0-bef5-87bca6da83d9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558f0853-c576-4b78-8f91-7df688cc558e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febde9a8-7c22-4b5d-8e5a-393af56acf14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ec4974-7b3f-4a34-b502-248e3809534d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b49af48c-c448-4514-86cd-827554c01403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fdf3ee-515c-4acb-a431-15cfcd999e0f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdcb447-5832-4523-a3c7-1cb819b62223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67da5e5-6c2b-406f-88f1-4e35051156d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277757f2-9afc-4eac-98f6-6f7f81ab88aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f9e96a6-6bdd-4779-8c0c-94363644bb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0caae99f-5f64-4d42-b50e-1dc778dc79fe",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9753d584-c9d2-4abe-acb5-d21e624f8962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b114fe75-2afc-45a8-a0f1-c452318b4cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd8cb12-debf-4de8-810e-fadb4c155c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fafae3fe-93f0-4fcd-b02b-79386494729d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71465bea-1a5a-4fa0-a95a-aa0a2da89806",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9022ee-e9b7-41fe-ab54-a5fe5f5cb251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4802909a-377c-4bd6-87a1-a472ca19d548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ee0377-f7d9-4471-a4ff-fb18ca55a2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79f940fd-83e0-4e29-a702-00134101f290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8510b93-fc25-4f24-8e79-74cfcb7c85b9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7150d06c-d839-40b7-8b7c-bd8a3f7526df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c457a8ca-0c40-48b3-921e-1d27811e0e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f768dedc-f5b7-4bc7-a5cb-c0f83a2c70ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "715ce8b1-6bf1-478c-8ef8-1642b7284dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9a2e4e-ae74-44ce-84df-ec3d42ff1145",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4f3345-5f54-4db5-89b3-7ea85d07ca5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac75b01-40d6-4ae2-8f9c-e3e76ae2cf18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedc5820-1be5-4fa1-ad6e-31cb3acfd4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63f046e8-6422-44ec-b578-5827fb37d861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e10f446-3f38-4cca-9482-133f3be3c251",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547bbd9f-53fc-4569-991a-696f6070fb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c579946-cbd1-4687-b3f0-d37ff705b6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9135e7ba-3b56-4464-96d7-2e80f287fe19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b111a30-0263-4b9f-8a5b-7d470c76a54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52acefb0-de16-431a-928e-9ec6c8515004",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fdcb36-1b75-4cb8-a1e2-e27ed6def6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0017b5b-7f7c-4c99-b21d-b5abcb0f296f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4491e9a-3c4f-4db1-8b9f-ea7ce6eecf9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24eef2ec-d0f1-4b30-b45f-a1133231d0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b92fc5-c674-4c6c-af2e-918954c3bc94",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b44452-ea3f-4864-a849-83c3ddcb154d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2901ce1-f60b-43bc-a0ab-af0d619a8e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733022ec-e4a3-43bf-bd90-c0d71736b9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "efb3b67f-1ea2-484e-8975-ebacbe891211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cec566e-8adb-473e-932b-b546b323796c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a221caf-c60c-4b38-89e3-6cfc2b719dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70674e2f-cc3d-4b20-a420-533942d10201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18c1a8c-4665-44e7-88da-f66a6e329924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f681ab65-f2ba-44db-bbb9-58a0484e2506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467c6c45-5bbb-4448-b0b7-4840e3f975d1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d3bd58-2887-46ba-a21e-f89478935fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431658be-d812-40f6-a3c1-adcc9f60856f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272f71db-0c10-4eda-a218-d3f8dc3e1ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcfa9397-f507-434c-8747-8a7ec73a1788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396045a7-5eb0-4b98-b674-55b698d70d17",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f33715d-fe8b-4116-b9a5-36d1d8e2bfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d2c7f0-74cb-429b-ae30-2051d754c994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957427e8-c0c4-4a69-b33d-f1bc290bbe5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce353ca0-43f3-4611-bf3d-1a22c595be1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1daf95-3744-4d21-a5f0-71f1505d804c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66be2e82-9542-42b9-a15a-eb6b8574c2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4ac671-420c-448a-9f29-2aaf3bdba38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323f0aca-50a5-4825-83ce-1cfd8ff0810d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d633efa-7d31-4a86-929e-e57754d6ada6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339b62ec-c884-45d6-8eb0-e240b5eb54b4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70719bc0-02b1-4c4e-875e-37afdf94e6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764f9a19-65a5-4e4b-81a3-889091c3e53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bc9359-0ce5-4edf-bb4b-7f8b49fde3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "174af221-b673-4fd6-b5ec-640b95509667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea680026-9444-4fce-80d4-0bb33afbead9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae628e7-ea78-4d89-9edb-a234bc019814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ac4bc4-5348-4980-a1f3-3b5aef466e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7314f0b5-396e-4171-88f0-52fe3c02852f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e282ff8e-315b-44fb-8eff-a2eebc53daa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720368cd-837a-4a93-ae04-0832875c02cc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e24a2e-9c8e-43cf-aeea-ffca3e61f72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97dc5ce6-4be1-4916-a963-ade1a087a639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4207911-bf91-461a-8c7b-aaff585144b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e41f5138-a1ba-4cc6-9f62-eee0767006f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80c78d5-708a-44fc-8a58-e97b24076d5c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bd732d-0209-4d55-bcc8-e4fc3bdcbc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cade7dd8-8bf2-4020-a4ba-54cee2350620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb85ab2-6f2a-470d-8a26-475df3ec856f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d059f840-61d0-4d71-b07a-be3b8c66ca38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62a72c5-3121-4dd8-b769-e970db562170",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21044cb-4551-4810-8828-4d738f897cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5c01e1f7-7f3d-4f94-bde7-fc40653ef326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348e3f15-d49b-402f-8b74-53cb5b1677e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c524c3b-42ef-4e5e-b231-6e36ed0257d9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bc749556-dc4a-42cd-9191-f66fa2573af4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b9a0a02-b100-453d-8a65-07ce9993bfd1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a60a893-a1dc-405e-9461-94a82374902a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ba0977e-85c6-47ad-ad26-ba9e04b3da90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e07e2cc-6be5-4bd4-af39-c4e15e42f0b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95937257-f749-4ed3-8e58-21f2342c01ec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dde8297b-abcb-467f-9047-cbec79ceafbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec46ce57-a137-48d1-b55f-f22a70a8e9d1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c090b8aa-6f21-491c-ac8b-5493aca37bd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b8aa601-b752-472f-ad04-745c12dc9b0e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cc925118-f37d-4cd2-9a89-65745bc5fd12",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4fa6192b-4bbf-4d2e-b248-429fe4e9b57c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e9c420cb-cbf0-4d35-859d-163b99979ae6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6aaaf28-c5ce-46d3-8284-aba1e5206725"
                }
              }
            ]
          },
          {
            "id": "0285d54e-dcb2-493c-9794-31d95bc3fb15",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b489e4f5-50a9-46b6-ac06-6e04169d4774",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e684375a-f502-4139-b4a9-3089dccc3961",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388da3ea-83e2-42a8-8417-c8e883de6e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "42b268ac-1ce6-410d-b86e-70175a1f17b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620b2d41-6050-48c3-9b53-4494d9d585d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbcc8271-a3f6-424c-b246-ef680a37e77d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de49033b-eb6a-429d-b120-365c5464e577",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f66307cc-ab51-44bb-bd00-611d9b3ae7bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5aeee84b-d3fd-4559-b6fa-edcc321da4e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a57fa06b-6615-403d-a442-72a33287af87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dd9ae6a2-7875-4674-ae87-60564b66446c"
                    }
                  }
                ]
              },
              {
                "id": "4c76b301-76b4-42f0-9ea1-16d2ce88b30a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5060c4b8-c88e-4c47-bec3-bca22937097a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a21c70a5-d210-4f4a-ae9f-2fa860f12b4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eaf9caa3-5deb-4e2b-9c8d-7188bd377c3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "234512ea-01ec-41a9-a146-ee25135f37db"
                    }
                  }
                ]
              },
              {
                "id": "90883268-e770-4e99-92e2-6a6457c680b0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3f9531f-312b-4a06-8b87-126a473097fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d94bc3e1-3c3e-4d43-b13e-c7714bdc8476"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64b6ec6e-eadd-4631-af39-e01ffea34d26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "71abc55b-d752-4553-b10c-87f17ca34e28"
                    }
                  }
                ]
              },
              {
                "id": "a71e6e22-410b-48e1-995d-ba299b14768c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1027423-4c85-41c5-85b4-31ebcabceb49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "845ab735-0d4c-473d-b6cb-7284ac45ef92"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "299726c5-0119-4d25-9109-1aefd10c7167",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0017bc3a-ace9-4db3-92cc-846b50dc57ea"
                    }
                  }
                ]
              },
              {
                "id": "69645212-9d18-418e-aeff-c7c5c47f0b2c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbfdb179-5fd4-497c-b1c8-f3965d59bdd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "876707e8-2321-415d-8d94-9e421527bc54"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "561059f8-29a0-4b67-9a3c-1e5ce6e78b79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3f427360-9e57-4e05-a061-2b4ef56e260a"
                    }
                  }
                ]
              },
              {
                "id": "8582ae5a-6c27-4a9c-8907-534d08e5672e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "108c921a-2211-4667-b95f-6f35fa7843f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "934084a4-c217-4702-b9bd-9611aeb17f8d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1c0b379-afe3-4385-9142-7a000fb52250",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bae7141c-b36d-4f43-ac3e-0f9693ec1986"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "afc90b96-da7c-4eb5-9482-fd32f33681de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b29e81a1-dca3-46c8-8353-f11d4f4871aa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ce4d7aed-5bed-4fbb-80c3-fcce4f85845d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a2106f33-7204-4356-b2b8-81cc0950f515"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e343b46-9b8f-424c-afcb-dba7751055ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3eab3b48-f4b5-4104-ad50-80aee63441b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d1e1977-d466-463d-94c0-f6ffcf5810dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "276c0aa8-e64d-4ba7-ae19-4c32b16a8dd9"
            }
          }
        ]
      },
      {
        "id": "c2133813-4720-4cb0-8e25-735e22209a7a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "024cf5a7-79b2-46a6-8982-0c13d2aac67f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "259144d7-0344-4542-aa90-be2b2142d968",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fe198f5c-a374-435e-bb6d-8a1b56646820",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a8adcc-3dd4-41bb-b266-dcb977d79609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d3b09f-cadb-4670-81af-3325cd8310f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94f3095-9f45-47f6-8425-c186e0d7cd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "468897e8-2030-404a-bc3c-ca4773e29c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce16dafb-d843-4e5b-ad3e-f02a018e06ed",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c75fb1-f6d8-45d5-8be6-21c240c7259d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d10b50e-b156-442d-81ac-bd85b522eb81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb61776d-9147-4b17-a56a-cc8535d8c46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a76937e1-aa40-489f-aff1-89c1026b7612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113ef554-df9a-482c-92f9-48652188f218",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79342bb-f3f7-4af4-950b-e5e7046866ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011dddc2-ba50-4217-9185-2d3630970c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84759014-bfd8-4622-b197-d68afa05ac6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "513a12e2-1bdc-4a49-b4be-8b6e069c588c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fb753c-e51e-469c-b768-1f882e543160",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5506c595-f86e-4f59-acf3-5b94e8996848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90e072c-3635-41ec-869d-0a8cb589805d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4974fe11-50a1-4e1b-ad45-4edbae4be7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9c759b-9329-4e6c-b2fc-762308834f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ebca4a-2be3-4168-888c-032814f4c702",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6c7d89-2ab3-491c-93af-d618b611c39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767f6c34-6049-4f37-96c8-455d497b6d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de045ab0-f5f7-47e4-8484-85f8aef8c805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "135fd0eb-c3bf-4ccd-b0d6-df9302bba9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9699b7ff-4789-48f8-bb95-0fc6038560d4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f52cafd-036f-437b-bef0-53649db999ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62397c0-4ed0-44a2-a1d9-d3bb43cdf602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc8054c-cb28-43f8-9c49-a22c4762d2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "499b2636-97c2-4a19-b705-17b977a854af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f44c4d-c625-4f37-92c5-ebffe45a7445",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f41aee-ceb2-484e-ac06-71d9dac79254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92aab28-1d39-4b70-a365-384ce4701e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e586fffd-e418-441f-9ee7-dceff65d2f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4061ada0-e81a-49e2-b4d9-8d9880317416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d338109-40ff-46cf-8c43-2a82b753f9a0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cece07-0f98-4bff-8558-f4e7ecf63067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600a8f90-acd3-4e84-8ed0-ed5aec175195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b782143b-628b-4b42-abb6-56044e5239f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f099bad8-0cce-44bf-aee5-2bcfc17a8d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd2815a-6cf7-45dc-93a8-2b6637167f2a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20eba17-6af4-4b4d-80aa-5210abf87a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6499a00e-841e-42a2-ae3f-002f4e7076cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe9a5e7-3235-4fbe-88fc-c551c2e7d049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21a80e1e-1baa-4d2b-9be1-904cb3b2852e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00c798c-47a9-4b3d-b09f-240027b82df5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a90288-0d44-4b89-b358-a1b1c24603bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9e523f-bf7d-4804-bbf1-22c66703745a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ab47c1-29b5-4c58-8cef-ed41c83b02ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29154fab-239a-4d4f-9ab6-8e97b979ad4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f084b828-729d-43b0-bb16-002ee6c1ec30",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7150169d-5cab-4d61-a746-f04886876615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef273cdb-3dd8-4c54-81f2-7d48e752fa4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470dbdd8-b3b3-461e-b641-50fc19af0cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1dede5b1-f4da-4031-9943-8a1e2961cc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2661247e-9303-490e-bf95-527c5a47b5eb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1481ab0-37ca-4209-a28e-2be8a83c1e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd29422-f5bc-4671-a9c3-a8e08292528c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7688bf7b-5572-45f1-b8d0-696c1a15850f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b87b924-2c11-4484-aae0-35eab0a49f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8029956-8a37-4473-b096-4a8ce2da6e53",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a437de9a-2914-4c78-8baa-713887580036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de416ba6-954e-4e54-aa31-d25fdbfcd91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd0d163-9caf-42ae-99b7-9998cceba59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1651694-fff3-42f4-9bec-1d10c6057af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6a43b3-ecde-430d-a9a4-e7368b2e006c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cb5a1d-a1a4-40f5-ae5b-1f86f8700373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7233d712-3108-4f45-bfa4-f96a8e71e489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bca872-6073-445f-9c02-30db03fdf6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "db81310f-a965-4cb7-8044-f7fad11b6099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa37b00-6003-4580-a70d-252710d65e33",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910ec941-b807-4d0d-804e-38bed8ed13c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb2058c-a350-4d69-86c7-8a4605c57d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca68b48e-484e-4260-aa97-967ec89849ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "586eb7ed-ff74-46c7-a781-f3cbf09350b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d826bd57-6d99-4463-a7f6-28c93fdcd4e2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83486213-0efe-4b52-a83c-dce7e37aa4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3d5422-bd4c-490d-bfb8-907f7b965cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cad2b6-d85b-449e-8d15-ad8d860475da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "58985771-eaea-4f4f-8bb8-9636ee1ad970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2e2c1e-3ea1-4099-b14d-ab1df76fea7c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c2ae00-bbfe-4095-9b59-bec751185c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fd96e2-4acb-4c31-8b77-8351fb446519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fd5d48-edc9-4559-a9d3-7bcad9f0e282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dca5ada-e945-4c07-bc5f-c2fc8ed61b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3085ebf5-7473-4607-a7ae-093013dbc45e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d326d2bb-5b42-4c52-954e-12b058d929d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc277df2-64b2-4e99-8140-480d5dc8c7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641c60da-d3d8-4721-9342-2682bd2183b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3eb710-f43f-4938-b72a-e0f9c6e5768a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3cc0828-ec44-4698-812d-8ced9173890b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334df617-3c1b-4bff-a844-ae86ccd281b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb48a56-1388-44a2-a924-5c25c3b2c455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d9a017-715c-428e-a7c9-db877d6f5fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c359a075-e169-472c-a27c-1e73ad3a3abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e492b70d-e674-4b52-a0a5-655cfc23dc3b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a74c85-5772-4038-af2f-b1de7d5bfb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2739bd3-96fc-44f6-baa1-329e8c80aec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5d543d-8fa2-4ed6-93d5-bba6717efbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98759f77-33fc-47d6-8928-e6cd4f409b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eac93cf-1db0-4cad-9eeb-f5c6ace486f6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a952eb-e031-477d-823a-fa7db2efadc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d0f3135-bf03-417d-901f-dae40f3c8503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da304dcb-c7e2-4c22-8e08-9ed26adac54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd74ca2f-8083-4a6d-8c0b-c6065e8a7ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f7538b-0bf7-44d2-aca2-e352d360cd80",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d2f1e7-4b9f-4c34-89c4-af82a0c50cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d263d38a-2f0b-423c-8a64-2ccbe3a71ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6fa0b5-da31-48e3-94ff-9a6ab7284087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d65642f5-bfd3-4939-b55d-1146f2ec8cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2216a7-7826-445c-8b9b-854953c9f555",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea918dbb-1dc2-4251-9c8b-e7aa4cfd3cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef47f12d-0a72-4f43-9a1c-a688dfab9d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57b1e86-644e-4138-ac54-a78dafdaa1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be2a0718-a9a5-4092-aa27-1a5723de7a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb0661e-6a87-4d17-a77f-5919258498b6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2301f3-48ae-4026-9443-fe6767630deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd91300-ce6b-4bf6-9f91-a4a774af519b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4d1424-d6ae-4f73-ac37-92d698c5c05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d7203d-cf6d-44d0-87a5-9e327018cd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ecf964-00f7-4946-a736-ae042f178c85",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61ebf3d-645b-4b2b-bcc6-ae14a65ec6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43629bd4-7103-45ca-8836-f8f67d6f3e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e2dd09-d5b7-476b-97fa-730206f4f61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0069a6-008c-4974-b6d6-27897ee77f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c818b7-b0d7-472a-8d16-624b171dcad5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43abff27-dee0-4be9-b2c2-64eccba67c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fcd0b2e-b27f-4dd0-aa5c-926a9e0fe528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce1de5e-05ff-4348-8f3c-f6696b904931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7946a0db-e29c-466e-9ec4-2ca9209508eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc11d357-56ab-46dc-af9b-5afdd19996de",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9602a8-dd02-4721-a9c3-71fc03e0f20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54360b9e-bb5f-4a70-822e-83783623f439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9dd9dcb-11c8-4033-a217-d7ce9cca86e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60df1b3e-9510-42d9-9876-abbdd37d5ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4102ce0c-08f6-4119-b5dc-7c096738b1ee",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1d842d-b411-44fd-b59e-2aa118469b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08068250-bc44-41cc-8c15-3b5d09bad90a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914f40d2-fba6-4a17-9033-8055a4c16c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eed933be-7907-421f-ae2c-c40c67e516a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9575e93f-9c3c-417a-83c6-00e67ba4a783",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b91fbd-f779-41bc-a2ea-50bbda634004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0134492-cba2-4825-93bf-074d9c0b11e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b239045c-0099-4e39-b778-958bf805c9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e404b08-6c06-4b4e-943c-4170581d3409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809da5c9-c006-4e7c-8ea8-c15a622d6b52",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5feafb86-68eb-4b65-91b8-fe613a3959d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "320cecb1-3ad7-458d-a6e6-ed6c7dbf7609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5950ecb9-bbb8-43d0-9de4-2c93a276b210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b4662f-e254-4241-a4a5-15f114beb2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd0c3e7-691f-478b-bae5-9be25ad5078a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc6f723-59df-47a5-a113-744cf0e0a452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5378fbed-16f8-4cdc-8c9d-5e96f981e49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13105405-bda3-4992-b3b9-81d8f4866069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09e838f8-3b3a-4e3d-aa4a-efe58ac3f5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345a8b1c-20ba-4743-8075-42a3117b108f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c988f235-b72c-496b-bcea-b0c1d7b5602b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf0f80d-e0bf-46a7-9a19-4a1d59c961c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad21cfca-76ba-443c-ac59-41b35ab57330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b87a0e59-3ef4-4f78-a0a8-807efbbc137f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1dba698-1f65-410e-8b65-9e0093cc5958",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe33ff93-c697-4b33-8856-bdc156e6c682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57899010-fb3f-4b34-a79b-a346e57e6154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c4db6e-f7c9-46b3-a19b-3ca49b23ccfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b684446-9a03-41ff-a902-fc6fd3bc4f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a12dc6a-2b2d-47df-86e5-a261823b3663",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7a5d61-7a81-4d5f-9da3-76f47ef1f43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b237b99-8659-419c-898f-eacd619f4887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bdb88f-94b3-4b4d-a49b-982d2896e07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "003df9cb-a602-4435-b53f-445a67f4dcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069e3429-6b62-4171-98a8-dabfd7a050fe",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4654ff-18b2-4485-99cf-7ac4a29245da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9827d9-4a35-4d55-ab58-f4ff840ec528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ed1a48-b77c-4f59-983e-582e14158a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1300a663-0226-44e5-adb1-faf21eaef543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f50a56d-47bb-4f62-8f5d-5709f074049f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db4c686-7821-45b5-90b7-036258f744b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dfbc141-d5e8-45c6-9a49-a14ee831fd58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d71a4c-910f-4c1f-aec6-48c141cc7093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d73f00ef-8bce-4f8c-a9ee-95841fab8675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bc4ee6-14ec-423d-8c7f-0199fd31cccd",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7d07d4-7cd4-40a6-94b3-a4f6a4102055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b9bb2f-5926-4d23-8986-2ee27d91d497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bbd4c0-b83d-4009-b4d8-f499186a95b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42b938ab-a344-4db1-871e-93004c87da49"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6f0073c3-d8bc-4144-ad4b-dbe831e89a84",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d32a624-6ea6-4315-83e5-394c8f0c5163",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f1643d-6f0f-44bd-b74d-056c5018f187",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c41e0352-485b-4a25-be88-7abd48c59c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "862c1f06-3f5c-42a8-b09d-6161975b63f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c0a20f4-a8f0-4471-90bc-dbd9fbd369d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f710d192-e2af-4060-ba22-94fd8e2b3e72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "657acef3-257a-4c59-9177-009872160a14"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee4f62bf-8a1a-4a16-b88b-8f5c30b67835",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41a9725f-4553-4043-a94b-a93ba8a37f30"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef84a5b7-a2fd-4446-a80c-057155ac0335",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a7b1e4ab-7a43-4496-9a38-2f486b11047f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33116c63-aaf5-40fe-9a64-cd61c90c1e50",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02d47496-d1cf-4b5b-8e2e-53716b338581"
            }
          }
        ]
      },
      {
        "id": "72b2df6e-819c-4693-8853-e520640fd395",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9b602a11-c7bb-482d-bb8b-eca70fc6d326",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57c2d55d-c65d-4e56-9f8a-20ad42addd38",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "799bcbb9-b724-49cc-9596-4e404f6eb630",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae84adcb-e918-49bb-9b92-c7faa0ebe95f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c45dee-3eaa-4507-94b7-646058972c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0f678a-7850-4e4b-90c0-6d8c17e7394b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eff3501-f270-41b2-985e-9b707b86273e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86e6e45-8903-425c-bcce-a32ccab7dad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89de7d1-edbf-4de4-8611-a2b703fdc12f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f87087-79b9-4aad-b3a7-ced9f066e9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db25e48-3dd9-42b1-9972-57a6ddbd0963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da22037-9060-47d9-a5e9-581e0087b1cc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a08a06-031b-4c75-9d65-daabb67e63f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14b4dfa-ad26-43c4-9a20-994d806e40a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf99b0fd-6f71-452d-a526-11dbb58895d1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04205518-e774-49b5-918d-9021de93079b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99df61fd-4041-493e-b004-b11e1c6677ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd84547-0fe5-4e0d-8fc7-6da1a03f5311",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92633ea-dc4f-4174-8880-e6d9b500378b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25315f14-12cd-45c6-aaed-907cd728b17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5d9f06-ad75-4e4f-967d-d73eb6e32fd3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecc1a48-3654-4667-9c9b-f899364f09ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deab4cab-0e1e-443f-a856-2ced487526cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8632f07-2620-4b84-91c4-3a1da3784041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224a6e16-c3f5-4fc8-9182-7b4476598633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074f8f82-f34e-433c-8664-05b86e881352",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19b1d7f-a73c-4cd7-b625-ada6e696b8f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cda819ce-59bc-457c-b0b1-03aa385d5de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e86e67-7bc7-4a57-8a9c-63535190a61e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf308f8-51eb-40a0-a209-bb4ae1d3301a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6774c577-9ed8-401b-9ce3-2e01c125bd05",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5629569d-b68d-46a5-b573-44ecda0ec4e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72140369-4fde-4c47-82f2-049d911629cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f31c43-af62-44bd-b493-e9cadb00f89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea10c69a-4b1e-4912-9325-517c649b4443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb7a64a-bd38-4882-a646-efbdfdeee2a4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4425a0-1d5f-47fd-b86c-591e5a4968ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2cc4e08-6c75-48e0-91fc-e5c3c4a8af0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b20ef7-4607-464e-a7f6-9f763b307677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d88871-40a7-4b83-b396-675d9034712c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a4bbeb-9a04-426f-9700-0d899da51af3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97a04fc-8316-4c9e-8e79-e9caa216535f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e49bb2-cdcc-4047-9a9d-0a4dbe27244a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56058388-eda5-4b81-809e-ce84fa39a63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db511f1-1fc5-4e73-80c9-b0730a6ff356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff84271-a5b6-4259-a070-08618c745f53",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92409c08-2397-401b-b167-6b13a34297ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4f2fd1-39b2-4683-9b84-989628885a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe93b07-6d32-47bf-a272-e03f185d004e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e81136f-c141-4d55-bc64-0104ff52128b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e5b36b-ab1d-4d29-8b87-2b355ec914fd",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7f7ff4-6f5a-47ef-9f20-36ea4802f6b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "248c77e0-b3c6-405a-ad2a-b898e33adde2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3e71ab-2c24-4b1c-a0ed-d2f7e57bea85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da80f28f-fcdc-47c9-ba1e-208e9e8abd77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56aedc73-aad2-4913-a0c0-af27d4055bec",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3e8517-2d12-450d-a41f-dc324d1ebd7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ba02883-b2a3-47d0-b2de-071cefa831a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4067f8b-7ef5-4d83-9e74-341b4f8b74ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc925e5-3d9f-4acc-b5c3-b75cbbb0bad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e35a46-3b47-4b1a-b44c-919c384403ab",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddca20aa-7f4a-40a7-a9b0-721498c2ee18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4daba72d-ed4f-479c-b24a-2cbf80c6d5f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a25b22-3834-4f7d-91d5-46166e5173e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534c9d51-8735-4e00-a067-3bfeaedbc58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d21c5f-0ec5-4659-9783-2cd46f50b807",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5652ced7-455f-4c4f-95f9-cfdd6e57dc5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ac039ad-f9c7-46d1-aff8-60a227cbe8ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a74a3d-d5c4-48e3-baf3-85fa19d78807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bce4fd9-2ad0-4101-921d-2c8aae0ef39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e03d44-53f0-42b0-9f46-bef9a0f98280",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ace0d12-97af-4f37-b3e5-9b18b608bf36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f267e7-85d3-4194-8f56-f8fc46878e22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6859de20-b49a-4760-83ff-632d425d5af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4475a9-773f-43b2-a47b-5269fbfb4409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8ce215-205d-48c5-aadd-0958781156dd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc37adbd-a865-488d-9c44-c83e29a63035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0965ffe8-eab3-4e34-9001-349b50db5309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebe6b7f-e87d-44bb-b815-e66f622309fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9f9862-bf06-428a-a8db-f53cf5663b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f4ff05-c615-4b6d-876c-1e1794bd9340",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee37acb-5edc-4acf-8b16-8619f9ecf0b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccdebc5d-1818-4e70-976c-3df605ab2fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0499054-b3a9-40bf-8d7a-35986b4a27b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfd2084-1ae7-4aee-aee8-cbbc1cc29ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e5d15b-f9fd-45de-afac-2a27b0a44800",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6451e64a-175e-49a3-b852-62b041865dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d377c7-c160-44fc-a4d6-01606f212689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6053678b-8a74-429b-a371-7f442bb96496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5de121f-1c78-4468-91de-d879961ec7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a195824-54f7-44c5-953f-ea08d1358f50",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cde3623-1a61-4bb1-bf6e-99c6b8be7757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91cebadf-6616-4fc7-bda4-787be7751a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d3ad83-f929-446a-a398-79a03278469f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a483ef3-5931-401f-9339-6542dee9bebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ca400d-079e-4715-8758-c0735358ab3d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a95eac2-ebd1-4079-a1fc-4fb7065333b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f4b329-b48c-4e47-8e1e-981df145b73f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6ad3f0-0194-4f83-b22c-2662c1399679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaef081a-23e4-44c2-b511-782f56f63200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac60c71-b6f7-40d6-b1ac-126e0de72d37",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351bb975-8688-4474-9e24-65b64e8cae52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14933ece-d7b1-45f4-aa17-b1187372e286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef7d5f6-e527-4fe8-914e-c5389b93a7f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa48cff-5907-480c-915a-4fdf1397f211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1d4675-4872-47dc-b1cf-281985d60d6a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2d12a8-3bf5-4b04-b8e2-d7836c2a4120",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d90fc364-8927-49bf-bdbc-f54260474eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "379c8638-c039-4ea2-9e7c-530fbcbdd7db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4666015-1649-4928-b625-2968fd8f70d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f9aa1d-c52b-4a84-894c-f6119ac26aa5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f51f3e2-33c4-4cd7-bd2b-16e49910ce9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90b501b6-3cc2-4bd0-bbf9-71b8b133c935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ad7c68-150f-42cc-9d1c-2125c86c17c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2cb9de8-3c31-4046-a6f6-2279cd453ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3dbb1a-a4b2-4230-ac60-b7ce4ecbd2a4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41c5e6b-e01c-4968-952f-78ffa863c4fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54e8694f-ed65-42f7-96fd-6aef9c6a3698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a501205c-4a59-4835-b3f6-5559ebea4738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4fc40c-f260-48c0-9da9-421586cd6acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1175ceda-60e9-447c-abd1-e1b5c8270e8e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c24abe-df5e-41f5-90df-12cac6838284",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f742d29-ed5f-4e18-8c17-946da7c1dd03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0c31b0-e111-4dca-a446-c06020dc0923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d39e04a-3cab-4b52-9b52-594b4ca93c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7eb250-6bf8-4332-9542-1a7d8edb7c43",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf7c4eb-3a70-4d92-ace5-1cffebd11cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a91da20-3156-4640-963a-1f5baa5771c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62319c52-ae05-485d-96f7-a22ea6f47fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e7b06c-1c3f-4038-a3fa-1490df435402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d53f5e-c202-46bf-a020-ef25bd52f54c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a4c4a4-f065-454d-9f0c-924f53bd5faf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e899ad56-791c-4884-9312-34be89f62f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ecf1c7a-5f4e-45e2-93d3-b0d68fdda860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5e3630-d90b-490a-ad42-f6f8d47000d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e87ee4-c404-4b42-b6f4-2f4ef2c85170",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eeae687-2a34-4d4b-99fc-0da424ff4e72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3a309c9-988e-46c8-8702-ddee93dd4174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d56fd9-7b53-47c7-974c-67c6ba036e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02e6b43-9506-4707-962c-206a0be69567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096fa377-2063-497e-9f78-99d4d9670152",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afaa87f5-2e78-4bb1-b67a-f9149377e479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "278ace47-7f3e-45f6-b2b6-92a37da45627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db8939c-c890-4ac9-b163-2597ab60c2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97944960-83eb-4315-a25a-d1883d7a18ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c31b597-d561-49d6-8db0-e0e0058068bd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e018010-d552-4549-b902-976708f4ce4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f673fba-6711-4283-a260-3df08eca5a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75486c1-ca59-49bf-a9e6-b521cd43d6f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8200f255-0743-4f95-b34c-d60a7fd35f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bfb975-6ba2-4aa0-a51a-5755354aaac9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93516ae6-426b-4d9c-81a3-1f3b609712c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67cda19f-3a39-4e3a-8fe7-73da9d3e4b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "653244ef-27cd-4284-b00f-3ff3d5f41f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "199d0a65-43ef-4dd6-ae95-19bcd6a8b087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14ea057-4f33-4ceb-90b7-e58c10fcb788",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b494bc2-caf1-423d-ae84-e5f492309a83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4325d882-4791-4c06-be25-850103895780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5db383-a41b-45fd-a05d-ac32d19e9836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d332870c-fa73-42bb-8cfa-1df0e16d2e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b145c5f8-141f-4640-8e34-c0a6739f2d60",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bc40e4-d7f4-4c42-a5fd-01e00aa7dedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe984c72-0bd1-4948-8909-e8dfce47f928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b74749-c2e4-4b67-96d6-b95f335c7b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1871d2d-702b-4d9d-a463-58ebd903e53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffb9912-d94f-43d5-9f82-fde669330862",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37340ab0-cb62-424f-b787-559c81a2dd98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c81cc2-b75a-431f-b877-4e98bcf949d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6103c6-650c-459b-881a-26a53305a3a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f33a48-2c3e-42b4-9c7b-51b6aa74c77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe0615e-1f12-4dfc-a77d-0a5691302075",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607c3786-7f2e-4525-9e34-a3aac282d2df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0666d55b-43a0-4b41-af5f-b52eed2d22cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1768167-3496-4ad9-b83d-9c483fadd15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b066b06-5c2c-4fb3-88ac-189b225d1826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a47592-f7fe-4205-988e-a60be7076042",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f77aa5-7798-4120-a199-390f335df11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8630e6e8-ea6f-4ed0-bdfe-9e10773a7a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4547bd4-8923-489f-8de0-1a7fe8bcecbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb03a0a-1335-4c3e-a837-cf2201536d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd48d81c-0af3-4dbf-8fe2-249894ded497",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ee7024-9e5a-4cb7-ab43-96f98564f624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff4774f-984f-4f88-af83-855cb0675560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0add035-00dc-4b5c-89b6-ca236af7cd67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7972d6d4-6271-4375-85a1-f84e486785f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961fb1f2-8dc9-4ef2-9ee2-a75ca7153356",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b448e78-0763-483a-8601-49072ec6aad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9b8bcd-b2ab-4f5c-a6cc-65000b19c0f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cc7404-e62e-49ff-a740-22939dc85686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dee2c20-007a-40f4-a493-cc53277d0d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10657982-b1df-498d-b81f-2e8241f02272",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9714fbfc-c089-4df6-8dda-fdd9e8510a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c338ad61-e9e9-4d87-a2c1-e656bd7af5a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "296e2cb5-7650-49b7-ab43-5c21246769d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bb86cc-a1fd-4a68-be0c-230de44ec4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7eafdca-5eb9-4e47-a57c-fe9cf4605d78",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108ff92b-78c8-4c4b-8186-d4f19155957a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1136f3ea-749f-4f78-afec-8c1171017a22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6326da23-9251-487d-9b70-db47bbd96e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e01de9f4-bc98-4ef5-8993-933813979e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c398732d-c3d5-439f-921c-6df8a989049a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e7f17b-5f81-48e0-8189-2f68ae32f2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331e8198-79ce-4dc2-87ee-3577d1ec8959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da488ab-91af-412f-9932-59996dc248f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349736d5-0c84-4399-b522-c144dbe698e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0c8c8c-af35-4b08-93d1-7d1abf8a094b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0d4a3e-5bb6-40f6-97da-5552f0158279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7874b2f-a43c-43b3-99f9-450f3d22c533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87b2c74-4c19-4f4f-bdf7-7991eab6d5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed2c9ae-26f7-4a9d-884d-d3903ca5492d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778ad3cd-20ad-4160-ae7a-353e678250b8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2fc3c8-12c3-4530-b2a3-030d85edc1c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf923b80-957a-4bdc-9c1a-9e0967ee4303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ea0b8a-0fc7-49ca-8191-d22b942703c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d28a7f6-a07c-4586-be11-e95fc8f2840a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f93869-5398-4f91-aa7f-7f66944c9723",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b35d2fe-d7f6-46b2-8ff0-4f87305c2826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746b36aa-3e6d-4fce-9811-4ac5a444e7cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99400109-4f0a-4346-9e5d-c6233c91a13e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4a62ae-2607-48e5-94c5-e0a55b114857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44185000-e127-443e-9915-042350862c7e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0330c5bc-b6fe-4243-82c6-b762f56533e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4bff5d-8683-43db-b0e2-0fdea178588b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "688dc5c3-f648-40c9-a7fe-2c9d11483d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95b2b24-51c5-4e09-a481-ae0dd1310436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22023c4-cb9d-436f-86c2-9c9d3f97a05d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bac1052-43a8-47fa-bf42-3f060e16b29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795391aa-8339-415e-b15b-64ceb4f5e617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b75836e-204c-42dd-bd3f-44d162aaca21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af54814-f461-43b0-bd86-43df5a6b935e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea650c1a-79f2-4dad-ab48-dc60be8179f1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7181f26-cd27-40d9-9ff3-8ae0a5b0895f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "304e5f92-1885-41b0-8b43-f0e0077bf3b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4c1a6b-7069-4d79-8f9e-5ec75e1e5e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a7f398-df0d-437d-95d2-5df3b7625f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5ed731-cae0-4a14-933f-eadac345eab8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c81126-e1ba-4ec4-a907-13de66811430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702199ff-47f4-4df2-87e1-584fc8054ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14967743-35d9-44f5-b2b7-67b0b4d8019f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b24fbca-c0ff-4055-a9c8-e7a8fa9264ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402927cf-b59b-4cf2-ad7b-1c66a93e46aa",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48eccca0-fdab-4ea0-8613-da8a666117f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4609afc-951d-46d5-b86f-8056fa606880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "140ad7f1-360a-4d01-9a4c-a160ce831ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17306e3-be2a-441b-8c1d-1c950ec04fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af126698-6559-4b29-9279-4e452f501f8a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3614f910-b192-4166-83dd-6657c06ac42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7868996-ad9a-48a3-a96c-907328c09e9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d65067-c3d6-426f-9d4b-c9c6123f92e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494c97b7-f187-45f1-bc10-b89242950331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa45d3e-7f33-405f-82e5-5944b3f04e2a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e8ac8c-d786-4aef-bccb-9270b6f254e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0f2a6e-e9cf-45a3-8037-06ef2042a3b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e65267-5c55-4af4-87f7-e77e808d82d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81589297-f693-49d4-af19-54ac84303788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d33eeb-411b-4f72-8d94-18d89427e8f0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3443247a-5816-41d9-b002-df7da340f6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1454f23-11f3-43e8-8ab4-c664da41d8e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5601264b-b8e0-44e7-9484-7b5875e10c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08f17cc-c91b-4725-8868-42cb42170c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1daed175-0dd7-4ce1-b5a9-85036ec4cffe",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d2a66a-44c2-47ee-8f2c-f79545655cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d8bf26-1e40-4373-bfa5-a9b2ff9580a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d8b1cf-c7c5-4a4a-9630-43779fab7808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd00c21a-a077-4b40-acbe-bca3a69b11ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81c59ee-dc11-48c8-8183-419d9d870f25",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48a1bc2-372e-499f-99ac-bae3d13cda45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129b37d1-ae52-4c50-9985-4ec29c7cfc90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "690634ce-bace-41c8-94ae-e152ec346fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0664b51-1b11-467d-8339-13fa19d5f890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1b13b3-ee42-48c2-8092-8e699728e85c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a4a259-1e78-4e9b-a172-889f2794062b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea50250a-4754-4fda-8568-2944b2ed04b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69025917-eed9-4d3e-99c7-3b934382f202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "609f76d3-3692-4e44-aef3-1f15ed875e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09608d1e-3ea2-42f6-bcce-61203584e249",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604d274b-d2b3-4c10-adb7-7e4e39f2c649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67253fa-746a-435c-862c-f3a2ec78f8fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04593d34-cf48-4683-be3e-39a35e04035f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0954683f-9cf7-47dd-ae1d-c278c4b787c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0e3586-e4a1-404e-b161-78c3de4e7fa3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed35b1c-4985-4ff4-9cf3-0ea0e20fa406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e790ff65-7fc5-4985-8ea8-3cede65613dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5f5290-b833-4062-83ee-92834b0e4a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0532ade-6be0-4f72-b5c2-e6c0c3f39ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3354e88-1b1f-4e6d-a89f-1900127fc984",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc902227-8b51-463b-9ec9-1fe7e844596e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faaae23f-152c-445d-9507-b77f59417445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e78dfd3-4f3e-4731-b4d4-a35224b70de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa65dd76-578a-46ad-b0a5-d922b790095d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a857fd-e001-46fe-b970-b0d25410db9d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a48a9c2-accb-4b7e-952e-e4e675db3045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888bfe53-2e4f-4a27-9ac4-e419a5513991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "928eef83-70b6-4a41-a194-a0d721b1510a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e655d29-2c9b-46e0-baf6-5e3d40aeb71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd9fe4e-e326-48ce-ac84-d9585254291c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65023111-299b-44f0-b924-4c568cd13cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef2f47e-99ef-471f-9e11-be387e0cd258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "960afcc3-54b9-459a-83d1-aa5ad0e95682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55bd4d73-4334-414a-9eab-49c42695287b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc10aa0-4267-4cf4-a881-551e4485a442",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbef85c8-3063-48c0-84d1-21404f7fced9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4010d2-6f19-44a3-9a05-b20faec5cdf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c13ab66-4a34-4702-bc50-94f2958bbefd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d1c03d-70cc-4750-9d80-229890f98d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c199d30-d5f7-4022-9f74-320ce83d19de",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598ffef7-086f-4fc9-9639-69bed2bbfb5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "895896c4-9d6f-473b-8b93-73943d529f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0659976c-744c-48e7-9b54-810720941ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e5201b-88b2-41aa-9dd4-0afb00d017a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3034b07-a34d-43f6-8299-a017c96b2055",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880aa503-66d4-4881-8b68-7b6cf2b37a88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15fe1ea7-b80d-47b5-9105-96f1e96064c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc359de9-b6cc-46ae-889e-3ffb34b98350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de5e4a7d-cd91-4ad7-8d5c-157f5912c540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7da72a3-fcb9-4ad7-a65d-14f3e183793c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7360e158-f35f-4762-8781-a3f8b7548f39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "464bd45f-f2b1-4d58-b866-1aaaa36a83fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bf5acb-2823-4fca-a8c5-c3fffceaa359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8857ee0a-2b7f-4d45-86c3-ec8bedbd9fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681729a5-468d-4b29-b600-fbf5d64be453",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b73107-1b7e-4e18-abbf-f1d2e023973d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db2d3ac0-775b-497a-abee-86704d50f683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce052ebe-9b0e-435e-9a99-d26f3fcfdd9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed79710-632d-4037-89c8-c914ac074f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c1cf6e-7037-4c40-99cd-4e703a851bc2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9c5710-6155-44d3-834c-c3ae089157df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dec1cab-d545-4a78-9944-122badef0275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf7899c-ecc2-435f-84de-979030a51e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca31ef3a-b1ae-4e92-8337-07bc8ce31486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c81b827-b7c6-45e4-9bbe-4aa09fe7c526",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fa03de-5dfc-4019-b230-299ea25ce1fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aa936fd-f124-4e02-bf79-5f380c74ea9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc16f9b-0f10-42fe-8915-8951579e455f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bb5620-7892-4e4e-989f-26729c43f9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c573a4-0031-4463-8307-efedfabfdb52",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8de3c2-ed1a-48fe-9e4a-032e1ee387d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "189383d8-823a-4df1-8df9-58ea4635d90a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd85557-81fd-464d-841f-f4fd4bc6856b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13dc4ffd-ae36-4246-948f-608531884cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99989ca-81e0-4c3c-9b12-d1dc94ad571d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8555fc-8129-4024-9136-e5744dce55b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b87ca68-bcff-47be-b7bd-623c2c57dfb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ff597f-97dc-482a-8c89-bca31068f115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25482624-782b-4b28-89d1-88ef01aa8c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d240cd-b452-410e-a6f6-42fd5472b433",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3a6702-d811-4148-813b-da7631b77ea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e5ae20c-2f5e-48a4-a5a5-022f44d47ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3614ab03-5eb4-4cbb-a225-d55e944cb93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9042453d-c40d-4ad0-979a-abd1a635d908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eac2115-d9fa-432a-8b64-cbb2d4c0c97c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9656a0ca-9ae2-449c-b197-3b3ed0f20c69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95cb7dda-c844-4b35-bbbc-42e948a482ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1cd7bd-df59-42d6-b86f-0a31150b34ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a2b6743-3112-4aa8-a583-e752bb43517e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0772b1e-4767-4a4b-a616-7292edf22bf7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d194806a-a41a-408d-9a37-3e9a1d563bdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "322f16f9-7220-43a4-aca1-31a15f272388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc02eb5-eea4-4ccf-ac2e-d69833b5abf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9eb5a5-e620-4162-82d5-6e4a79708485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8239abe-f077-4a5f-a619-8470e0b78be4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b6f651-2265-4214-9f31-d06577143eca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34d6ac7a-40fb-4a00-8b2b-32e8c06aa060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f812030-de20-4eec-b51b-f6a140bb8513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0524d4fb-290e-4652-a8ee-195da768f2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fa6523-17e2-436b-afc7-edbcb5f7a1fd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7a56f2-cdee-4ea0-a5bb-851d5f0f15c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e70d154b-ceb3-4d3e-bf7d-a03c29bc360d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d316c4a4-d88b-4607-96a3-91c88d12c372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef63a66-d240-418a-aaac-ca23c58f705c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca068564-cda1-48ac-b711-618f949a1f80",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d099392f-545c-4524-accf-9ffa11923b34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32a62e5e-5def-4b1a-b203-9b9a54aa2357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "161cf8b4-9e81-4f61-ad97-fce9d7fe068c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad10cdce-a1c4-4e7b-81fd-9c611a49da88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f299f9-d21b-4a41-9d33-c5214d759dd3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42064772-d307-4dbd-9304-fe1f7de99335",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e524fc29-322f-47e0-866e-aa52eaf2f5c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf0d3c0-201b-4eca-8398-3fa08fea54e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8185f363-9040-4f83-aef2-62252215065f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2723814-5ce6-4223-a2a4-96383c3ecfef",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd5327c-1009-44e4-a8e0-3df211069eb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa3907ac-f49b-47cb-8b80-f200b4f060f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0ce533-f8e3-4095-a4cc-1e8671fe837d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65722388-f5b8-425b-93fb-f6846f64ca61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61597247-d65e-42de-95c0-f929b8dcd87e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1a10ac-b408-442b-b553-6cbec9e0fc4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "098d09f0-d891-4098-a0f8-9be8c2c607c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea54cce-37ef-4146-b863-a8fd459ebc46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00428820-1382-4581-9c41-844296e9ea71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcec0bc-eb11-4b69-a3eb-883c3e0114d6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5ae898-b3fe-48d6-b36e-7a228b21240a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "143ad25f-5f50-4f39-aa46-b741010bde7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c511e4-c3dd-43ca-8a07-649e315a824a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7f51ef-3c97-4b63-86f4-fb7e64f2c6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fdfabf-30c5-4fe8-a5e9-8c448b621a1b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb5b2c3-c29a-4d0d-b1ba-1454216ef613",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab3fce8c-5723-44d5-a658-558739c6eaae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c2bd60-ea5c-404a-99b9-9908806fc73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf56166-1da8-4696-99d6-91447c074ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f8464c-0900-4067-b6cd-0a504ece23e5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d358324-6265-49b2-bde8-a73b7d86e246",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16c6ac3b-dd8f-4121-890f-65c3473a6a7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197f242b-152d-4f58-8887-4e09f0d8352e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80530b00-391a-4e7c-8171-8f81ac804e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568b05e3-956d-4196-8700-c3baffb7feae",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7132be8d-aba3-4d1a-ae03-5bf68248d0f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa8792e9-d6c4-4d19-b902-1b0a69c9e118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28636c4-c968-4b75-a055-9b7e740e0f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14abc9a-b2d0-4848-8d9f-f6c967d09e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9607f8-f335-4998-bcae-fd44c95811fb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb7a650-d026-4a71-98f2-997e48120a6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "848aec41-54e3-4872-86ef-eadbc98c7b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d2f8db-2522-420b-a6f9-807459cf6ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96635853-2205-49b6-9c72-1b66168e0e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7905d6c-b01c-473e-9f03-5178a1d1e7d2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a96fa7d-1410-4730-96b3-2f5e192d60ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27f54025-d45d-4040-b4bb-ec8e98afb9c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99eb4c10-b8d2-4a70-8c54-dfeacb89d125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ae8b08-1265-4d46-a8f2-0b2710adbb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ab4a5e-4ee1-4d09-b27c-dc4eb8404b8f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ec1e11-4975-4de8-9c7b-3217efa85c75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8db25654-dd62-45fd-a77c-5fc61e1cba91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d442db89-9057-4fad-829b-c90f6b998d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0942d172-a13f-475a-8f3d-7f551cef1e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2999d00e-b25e-4a0a-ab53-0c325b4949b6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2316fcf-db9d-4dbe-8c25-c7351f17eff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0939800-fdb9-40e6-b779-bbe9e643c981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61eb32ad-d244-4f43-a2ee-78867243e55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2256768-c25f-4fb0-afff-68f37276078a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295fd6ca-2063-40dc-876c-10ef1065391e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120f31b3-373d-4432-a92c-0457bc59715f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed867cec-be80-4bab-8f14-fb64ea50651f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b2a1f8-a876-4191-859f-99fa30ac822a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827577d7-8a7d-4b9d-8d70-2978df4004ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9111db0f-585d-461a-8cbf-a5b28c079dc6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3792eaa-5977-48c7-b43d-55f6a2abefd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70341bf2-dc7c-40b4-929f-64ceabd022fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4471b01b-521c-4ebf-8ea5-81f6f5807213",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e49513-7a69-471b-8af1-dcb3ea75439f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bdd105-9243-42eb-8c80-23b7e24a9049",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8758951-66c9-4c52-ba25-bc819c85c4c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c798a9e-70b7-4f70-8c12-4e8a919c06e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4f628e-4360-4d9a-b5d1-9b593ac88006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de6ec60-2c42-4249-bdf7-534d00b7b79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc1734d-2559-48b5-be7e-7a39285ded6f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2ea8d2-3d38-4f7a-9ab5-0a194b741dd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "771656d3-a41a-4512-a803-e48db18873f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9ca1e1-4e61-4697-bb14-d7bfb3e01f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89afe5f-c237-43a7-83fd-52122d26edf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ba6c72-8b99-4fbe-98b7-47b3383d3ecd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addd0ba7-2723-4c1e-8bdb-ac0269c5ae45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0a6a9e9-a0c8-484e-b33f-928d0328ab76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffc56af-d307-449e-a8d0-969908a2c8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cbf582f-317e-4245-b567-4b36f149dbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f03080-e754-4c28-922b-d7071f9edf80",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9099c39d-ee2f-40a0-bb3c-254c5617b5da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c78ad21e-b522-4891-ad0c-1699a2803bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde1deb2-b298-4459-bbb0-e0a0cd90688e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55945af9-a9e9-4652-9da4-f3e5abde33c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b998be71-8a70-4253-9bb6-61e5ba76e84e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5215c9e4-7a67-4ebb-9942-41ba98df1702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87f66fcb-533b-493e-a0a4-6ccc930096ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8763a2-62fa-4663-b096-9c051ca35dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8232f73-6851-4b6a-bd1a-2ffae11bc47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77bf585-8869-4aeb-90fa-85a9f1b9791c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da06459-6d4c-43fc-a27c-8aa4e1664450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1a512ad-3814-4989-b2d0-a850bf7ec121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a52d43f-16cb-47b7-8fe6-107b1240cb44",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e724e33b-ba0d-4ad5-ae21-b5c97b02f2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572bcc60-140c-4ef7-9506-1700bddb53c6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92601bfa-f959-4060-aa53-9d6f36015290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a9d8a7-8c98-4ca4-92f5-349f7430a17d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6a8407-565d-4f75-ab36-d3f98adb21f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317dae9b-4c8e-47a5-9715-932c0c225a86"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4dc722e-54cb-4611-8e8d-fa9be1904b4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cba9bd4a-8649-4229-ad69-f777b5cecd6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d65fd76c-1557-4134-b6f8-6e30be5170d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ff57cb5-101b-4e12-9476-c39b3953fbdd"
                    }
                  }
                ]
              },
              {
                "id": "3dbecb30-29fb-4802-afae-07dc2c0bb990",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fc73987-4e74-4c3f-ab58-07fd412b3160",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec69f388-944c-4a86-8e1b-2d0c1f84954d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ca4c6ede-2ad8-40bd-99ea-75ac377383c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac7f584-f517-41d4-b9c0-3aa83d0364ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "656056d0-435e-4df8-b09c-a22ece54f783"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90dc2ff2-33ab-462b-b156-3812f86a41f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78415cf4-da6e-4be7-a87e-e0b7b06035c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19555c8f-36eb-44aa-a96f-9922560fe91c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d873e172-8cc4-4203-a608-06d8c5ce0155"
                    }
                  }
                ]
              },
              {
                "id": "7e90aca6-63cf-45ab-9a24-4f69d5719069",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "339c7689-9a38-4860-bad9-105c818d7749",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28449b24-3a94-408f-8a2a-74ff0562aa31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a81f1b14-9910-4065-a275-b7917264b8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15703dc1-0c07-4d63-9373-d1b6496af871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef83624-da8d-4a18-8e77-e7e8efe6f7eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cd9796e8-ccf7-4024-a29b-fe605cc42c59",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9aad1c0e-b54c-404a-8e59-60442002ec07",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90c5352b-8256-48fb-ab59-5cb167bc544b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0695cd2a-f8e0-4f1c-935f-60cac69ba69b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37bf6f7f-0060-4dc0-bccc-71bb723f6e0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12b9220f-7bce-4266-9ea6-732ff70b0aa2"
                    }
                  }
                ]
              },
              {
                "id": "a6ea19a5-a3a1-471f-8017-b7ece46d8243",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0550446a-f3a4-4c19-8f1f-be940e4deaa7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e251f6e8-5d1a-4480-a55d-b242bcea99f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a91dc4d-c26c-4a61-8d9d-bf8640cc8c86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44ce89c1-7fc8-4a2a-8cc4-0cb4a376c99a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8fc16dd-60ce-4f14-ad5d-6cb60a2216da",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "56575263-f195-4a0c-b4cf-b154d3795186"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d302db4-e059-48e9-8faf-1b8764fd0397",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f557b36-187c-474c-854f-b789990948e8"
            }
          }
        ]
      },
      {
        "id": "b4fd262b-fde1-4e60-b67d-4e5832932342",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6c8fa703-c6e3-40f1-9f3d-7cda697f2a56",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30bb2ece-cb05-40c1-9eed-2aad297b727b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3b4cd50-97bb-471d-8a57-db7904937298",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c03b40e-7286-4312-92ee-bd65f0ae9feb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5cdf6db4-8b4d-4abf-806c-521a6d6985f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e147d70-47ad-4f8f-8770-392e23fd5bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a107417-154f-479d-9437-4b97ce900e6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cf958ab-fb5b-4146-bc38-a770611d6b3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1ca964a-29d3-40df-afee-2be7859d28a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08eac988-0c38-4d44-b9fe-20b578239174",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8311e551-928f-42f7-bbb7-f88baf1c583f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be540e9f-1866-4bbd-8b7f-fb0e706a52bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0f898a92-739a-4572-90c8-34e17a11fa1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3856e5e-f630-4095-86e0-58fec8d5d35f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43a7859c-6815-4e6c-b363-f89373a1a903"
            }
          }
        ]
      },
      {
        "id": "d90b468c-c9e3-4b4a-9b4b-d63c649574cc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d97544b5-a5cd-483b-b1ce-928fdb1ceb0c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8114165c-535e-4798-851f-49d84eeb2399",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "049dec95-192d-4601-b76a-cebdf6bfb446",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0caa5d-7a26-432b-8b26-30b5ffeeae57",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5813158f-98e9-481c-9080-e5c7338cae75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7db395-a228-40c8-9a02-d96ea2406cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "721779bf-0275-4c20-ab57-47c1afe406be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfe50641-252a-474d-8dd8-11b9993c1062",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce7fbb80-d9a0-4aa8-a24d-9ef0b7ece9dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9a95488-d120-4709-9e11-73579d49199c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b72909c5-9d8f-49f6-9d3a-ff30277f4e38"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b15cacc-ab6a-4468-8c60-0a60d8384a51",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bc12db0e-06ee-477e-9ce3-534ecfc046b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9909752c-d756-4ad9-8831-500841ffe68a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e01b0be-733b-4986-b545-f56d8b58314d"
            }
          }
        ]
      },
      {
        "id": "a493d1dc-f202-4622-b149-d15cc7e986b0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "464f6790-11ef-4197-8f2d-457cd7cea738",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eba9cdd5-01d9-4ea8-a550-86e652af2333",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "679329c5-6a7f-4a15-9458-db95feadb1de",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f00e6c5-429c-48b9-bd4f-f870ac93d657",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fd5ad50-4036-46ea-971c-6463f80ad37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee651694-e044-434e-89f7-3d6affce0280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c66e91b-9785-4325-8fe4-822dee9dfca3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cfb39df-9e48-4fe1-8072-2e47ddb12ef4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "332eb191-1124-4c30-b838-27799a87f2be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44d3b3ca-7cd0-4623-8056-6db45e40f40e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f1b8137-a205-4d1d-8154-09f01a555071"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a5788a7-066f-4a55-bc75-69e2724a58f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "19e3d2c0-d0eb-4d16-8164-9467534accc5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fdae4b6d-b63e-4415-940c-2b479d6ce557",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76c1fec6-1bbc-4ee6-b1ff-734ea7e7bdb7"
            }
          }
        ]
      },
      {
        "id": "af213cfe-8f69-4537-9b9a-9d2d4b4610ed",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ca25e51-8297-431b-8d89-06c6218ec415",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fff9b940-01ed-48a5-8a0d-d2fb5469993d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "47b9ce05-142e-4054-96ea-03c38ab46c72",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "317b357d-23fd-4be8-9110-c503c08949b6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4c163a1-844e-4aee-8b22-48437eb83c20",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 122.9285714285714,
      "responseMin": 9,
      "responseMax": 9727,
      "responseSd": 692.4967042334205,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1714437285177,
      "completed": 1714437324390
    },
    "executions": [
      {
        "id": "7aa11962-c6fb-4712-90f4-e7be785cd6a9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f48845e3-bbe9-4cfc-8539-266bb6bce76e",
          "httpRequestId": "5f69dc97-a7e1-4df6-8d2f-e02e80f4ba1d"
        },
        "item": {
          "id": "7aa11962-c6fb-4712-90f4-e7be785cd6a9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b76dffae-d2d7-48ca-9571-a1158c5a3f1f",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "b151df4c-897f-411d-ae07-2e66bd255275",
        "cursor": {
          "ref": "c2f6bb44-d713-489b-9cf3-8883b94b85e2",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "df7f9aa5-5397-4826-bee1-4e6487dfb54c"
        },
        "item": {
          "id": "b151df4c-897f-411d-ae07-2e66bd255275",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0e769699-d7e8-4ed8-92b0-fa499ff7a33d",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "485a82ba-3ad1-4410-bcd7-8bf03fbf9d67",
        "cursor": {
          "ref": "b331fa31-cf29-4d07-b80c-e26d949173f8",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0687bd52-2ca6-462e-8ba3-6a744027014b"
        },
        "item": {
          "id": "485a82ba-3ad1-4410-bcd7-8bf03fbf9d67",
          "name": "did_json"
        },
        "response": {
          "id": "73714612-1619-437f-b535-01e7ed0bcc7a",
          "status": "OK",
          "code": 200,
          "responseTime": 316,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6594af-5ad7-42de-b2ab-56c97b46e8c1",
        "cursor": {
          "ref": "4e7e6aea-d4f1-46a7-8055-131274347b69",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1ae8d936-9008-48df-81a6-70427fdea01f"
        },
        "item": {
          "id": "2a6594af-5ad7-42de-b2ab-56c97b46e8c1",
          "name": "did:invalid"
        },
        "response": {
          "id": "ed92e977-8f9e-4922-af79-1a9e6213707e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 547,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6594af-5ad7-42de-b2ab-56c97b46e8c1",
        "cursor": {
          "ref": "4e7e6aea-d4f1-46a7-8055-131274347b69",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1ae8d936-9008-48df-81a6-70427fdea01f"
        },
        "item": {
          "id": "2a6594af-5ad7-42de-b2ab-56c97b46e8c1",
          "name": "did:invalid"
        },
        "response": {
          "id": "ed92e977-8f9e-4922-af79-1a9e6213707e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 547,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5aa87d-9254-4e23-937d-37174ffc6617",
        "cursor": {
          "ref": "46dc997e-d34f-4bfb-9567-39bbc391abd0",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a999dec5-e866-4120-876c-4af44956c7df"
        },
        "item": {
          "id": "4e5aa87d-9254-4e23-937d-37174ffc6617",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3f4a1e15-7823-4c76-90e5-1df03d297cf2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373844a4-4ee5-400f-a784-47c69887f295",
        "cursor": {
          "ref": "185dd7cf-64af-41d2-971a-a94fec0290f2",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9dfc7af2-fef9-425d-ac86-7158d3121f4a"
        },
        "item": {
          "id": "373844a4-4ee5-400f-a784-47c69887f295",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "001459a1-55ff-4a57-956a-7c58050aa90b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 54,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5a581e-8b39-4a31-a15a-e4651e88f05c",
        "cursor": {
          "ref": "0cc29ae6-da83-40a0-9c3c-4686b2658772",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8753a5b0-a143-412e-a560-022f211d49d0"
        },
        "item": {
          "id": "cb5a581e-8b39-4a31-a15a-e4651e88f05c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c792d352-66a1-42d8-8649-af517679b034",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b412f3f-d527-4dab-8a15-758c0c3c5bac",
        "cursor": {
          "ref": "1a07e3ac-15c0-45a4-af11-33b147084ec0",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6c7e9d7e-453f-4d5f-bdc6-30b7ac25b0d5"
        },
        "item": {
          "id": "4b412f3f-d527-4dab-8a15-758c0c3c5bac",
          "name": "identifiers"
        },
        "response": {
          "id": "3b8bbe88-a3e5-4aa8-86cb-3ff856d4ac26",
          "status": "OK",
          "code": 200,
          "responseTime": 143,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96cb18e-97c3-4956-b583-7d8aad10444a",
        "cursor": {
          "ref": "5956e694-e7a2-455e-8ad5-50b41ede57bb",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4c95d28c-9f51-4965-a503-3ce1613eca2a"
        },
        "item": {
          "id": "b96cb18e-97c3-4956-b583-7d8aad10444a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4bceee33-b46e-4ed6-afd5-f113dccb90d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d0b5c4-f638-402a-a6fe-9af5d1b5a6f8",
        "cursor": {
          "ref": "c70a14fc-57f4-4998-8ab0-0838c283e418",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "13118ac6-c400-498a-b33f-0f6c5ee288c9"
        },
        "item": {
          "id": "f9d0b5c4-f638-402a-a6fe-9af5d1b5a6f8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "dc3cfc03-4df1-43b9-82e1-680c29922e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf078cb-09d1-49a6-b8c1-849aabf48526",
        "cursor": {
          "ref": "461fe7e0-fede-414b-b87b-0e0b11cf2c84",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4c5c0d99-4975-4e43-bbe4-2897b38892a1"
        },
        "item": {
          "id": "edf078cb-09d1-49a6-b8c1-849aabf48526",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4381001c-1297-48cb-95e3-f80e98dfa2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9553fbcd-d877-4d99-a81b-425c2ef26628",
        "cursor": {
          "ref": "77654dc8-7ed0-4302-8442-8fbd91af570f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "80e2fd53-d8ca-4626-a941-288443af16c4"
        },
        "item": {
          "id": "9553fbcd-d877-4d99-a81b-425c2ef26628",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9d80049a-e7db-48e6-975d-b056eaf32fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88795d14-02ab-4b99-9db2-9d9753a820d6",
        "cursor": {
          "ref": "1b934767-3222-48ae-a483-90a8c121f784",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "354c0075-3b83-4993-91b8-1ec556d4e6db"
        },
        "item": {
          "id": "88795d14-02ab-4b99-9db2-9d9753a820d6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "67328388-d749-4e84-9914-fe46cba2037a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f82f4f-2a74-46b2-90da-62314af8e62f",
        "cursor": {
          "ref": "febc9884-e37d-491d-9de0-1082469f8671",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "07db453b-d7c1-4564-94e0-7c8039f1c3b4"
        },
        "item": {
          "id": "82f82f4f-2a74-46b2-90da-62314af8e62f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "755e79b2-a669-4c31-be5f-0b746335c1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2016adfe-2f93-4fc3-9b27-f84b15edabc2",
        "cursor": {
          "ref": "409107cb-033d-432f-80fc-3cce2ee73885",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a80eb85e-a277-4ef5-ba1a-dbc7ba4ecd6d"
        },
        "item": {
          "id": "2016adfe-2f93-4fc3-9b27-f84b15edabc2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5bfa1551-b392-4477-b5a5-abbabd0fdd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327ec65d-e619-4d36-878b-ef263614c3a0",
        "cursor": {
          "ref": "97ce19b3-2a1b-4fd7-b656-d694907d50b2",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "198e89b7-8cb8-4970-8997-a4f46991933f"
        },
        "item": {
          "id": "327ec65d-e619-4d36-878b-ef263614c3a0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "15d89235-8a4b-40de-8a86-1c792be8778b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421c3149-fb3f-44d0-b14a-194a8abc1a86",
        "cursor": {
          "ref": "dc2a007a-eced-4ad3-8551-cb0f9dbc590a",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a388c797-6da9-4d4d-b60d-a123593c1344"
        },
        "item": {
          "id": "421c3149-fb3f-44d0-b14a-194a8abc1a86",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fabdf95c-ea24-44bf-a437-d8e36803a04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ffc6ac-3882-4288-bf50-7a42922384c6",
        "cursor": {
          "ref": "9e2e88c1-686a-46ad-8b09-31eb1aab54ba",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "92e0f13f-d06b-4b8c-a873-53d023dff4fd"
        },
        "item": {
          "id": "f7ffc6ac-3882-4288-bf50-7a42922384c6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2f890b79-36e7-4a25-b5dd-8e46c3920d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8be28ad-8b28-4e57-ae2b-b2b177e0e71c",
        "cursor": {
          "ref": "6a431c28-747b-4a1a-827b-99d442f671aa",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "21467287-51c7-475e-bba2-6025c7cbcea6"
        },
        "item": {
          "id": "b8be28ad-8b28-4e57-ae2b-b2b177e0e71c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a09e8df2-8527-4c32-a501-dbe3945aa15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbf0ff9-bf70-478a-b862-e95b42db9bf7",
        "cursor": {
          "ref": "8d9b76c5-c14d-4640-8321-7b1c2580c943",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3bc92726-cdd1-499f-92ef-089557a25ef0"
        },
        "item": {
          "id": "9fbf0ff9-bf70-478a-b862-e95b42db9bf7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "87e03dd3-8922-4e77-9927-87cbcf1f2f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fb5930-46c5-400b-b9bd-867dc9312640",
        "cursor": {
          "ref": "294a2bc8-a691-4472-9523-58d9b72beb1b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7af5a211-2d14-4478-8ea7-9925ee0f0718"
        },
        "item": {
          "id": "b2fb5930-46c5-400b-b9bd-867dc9312640",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4c878f83-91ec-47b1-b1e8-49a80ec7a2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e15d4df-a9c8-458e-84c6-8a67fb56ece0",
        "cursor": {
          "ref": "666cfdaf-6dc3-48cd-b6b3-e3185137530d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "997a4d62-c116-4488-aa08-caeee37d78c4"
        },
        "item": {
          "id": "3e15d4df-a9c8-458e-84c6-8a67fb56ece0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cc45c1fe-4154-446e-8059-2788e02865c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64dfd80-fe52-4ea0-b096-4857f4c3c6c5",
        "cursor": {
          "ref": "53a85251-e985-4b3e-a5f6-3f7f4594d3ec",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ca2c9a4f-4b84-422f-a597-58c6ecc5f47f"
        },
        "item": {
          "id": "a64dfd80-fe52-4ea0-b096-4857f4c3c6c5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4407540a-4adb-4758-b21c-955794c454bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f323857-0dab-4e7c-b55c-004730dc02ef",
        "cursor": {
          "ref": "b7f73d42-422b-4a43-82e0-a4c410d838eb",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3d0f3f8d-b6c6-4be0-afff-6db4ca19f0b2"
        },
        "item": {
          "id": "1f323857-0dab-4e7c-b55c-004730dc02ef",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "42cee9be-bc88-4e19-ae2f-5725fb589bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3596a9-1267-4b1d-a68d-9b7b9449fb06",
        "cursor": {
          "ref": "27d84cf3-26df-4eb0-b408-415dd2773ba1",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cc9ad19a-2c1a-4070-8a79-b0c873e8f554"
        },
        "item": {
          "id": "7a3596a9-1267-4b1d-a68d-9b7b9449fb06",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "24d4f8b0-7532-42de-91e7-fc5a9ffdc222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c35f46a-73f4-44e1-8685-f30572905a5a",
        "cursor": {
          "ref": "e6bf5db4-1b1f-48a8-bc80-a7f0e05a352c",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "876a8283-60f1-4a52-bfa1-d27a3a750f61"
        },
        "item": {
          "id": "0c35f46a-73f4-44e1-8685-f30572905a5a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1551b0cd-530d-4cbd-b393-2c4f07f8d096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36d86ad-0063-40e2-9fec-c6ec23a6e19c",
        "cursor": {
          "ref": "8ee838b3-c30a-47b1-896e-868b02cd4901",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3025708e-4b8c-43e4-a79a-ab6f1e31f5c5"
        },
        "item": {
          "id": "d36d86ad-0063-40e2-9fec-c6ec23a6e19c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "693ba558-1ae9-4e4b-a813-35b32130e85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b3df41-4f6d-426b-802c-9b3178869a69",
        "cursor": {
          "ref": "8b1af1f0-b5ae-4dc9-8d58-dc72857bfa90",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "21e0e7f0-4c8b-4040-b75a-f523f5869111"
        },
        "item": {
          "id": "d9b3df41-4f6d-426b-802c-9b3178869a69",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e7042ad4-b0de-40dd-9ada-f708533f9092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27aa6f9-f06b-435d-974d-179f7c2f935f",
        "cursor": {
          "ref": "9a703d85-f1af-4b43-9f6f-267904ce8f76",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "128afbb2-94e9-48d3-a451-cf4fbc33bdd4"
        },
        "item": {
          "id": "a27aa6f9-f06b-435d-974d-179f7c2f935f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d317a118-5620-4d2c-baba-96a247d28f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f08172e-c13b-4328-8250-3ba1eaf84b69",
        "cursor": {
          "ref": "f4ce4580-7d06-4999-881f-5afea303030b",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7d5cecc0-e165-4a2a-b744-19618bd77e0f"
        },
        "item": {
          "id": "2f08172e-c13b-4328-8250-3ba1eaf84b69",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f0998c0c-765e-40cd-9400-1129b5e3531c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b23dfae-4e1b-4a6a-a50f-f71f77666d4f",
        "cursor": {
          "ref": "10fada10-6cff-4a72-9286-ba0df2028502",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fb9dd9af-13fb-4612-ac0b-7450d479055b"
        },
        "item": {
          "id": "7b23dfae-4e1b-4a6a-a50f-f71f77666d4f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c39ce5f7-b00e-431d-a87b-a9faf9be88b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce4c3ca-6ea0-42f2-a24f-9e9419016882",
        "cursor": {
          "ref": "616e717f-e711-45f6-9714-91805d1b5da8",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "dc20b713-cc99-4f7f-a66f-468bc6489777"
        },
        "item": {
          "id": "0ce4c3ca-6ea0-42f2-a24f-9e9419016882",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "889d6439-39e0-43db-8b00-e25b7cae9762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f4cc62-8547-46b9-bb09-647b577f7b27",
        "cursor": {
          "ref": "131eab1b-8a27-4569-bccf-38fa6a218520",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6b44cb38-9686-4360-812c-4058da18e5a6"
        },
        "item": {
          "id": "32f4cc62-8547-46b9-bb09-647b577f7b27",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2b8102e7-9c50-45cd-906f-d41cfcfa5532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32057361-cef6-4431-aa90-8074a6799f19",
        "cursor": {
          "ref": "50300b90-f116-4b16-ad34-eb68d644b4dd",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "636c6f8d-1b38-4790-b913-f058aa5f0d89"
        },
        "item": {
          "id": "32057361-cef6-4431-aa90-8074a6799f19",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c8773406-7c31-438e-847d-fb831ab768e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973b9bc2-1c7c-49b8-80cb-8b18a2f06576",
        "cursor": {
          "ref": "a9a85ad4-07f5-4959-b65b-5eb15617d03f",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c76620ed-59bc-4562-a243-1f89f131865b"
        },
        "item": {
          "id": "973b9bc2-1c7c-49b8-80cb-8b18a2f06576",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a8cdd999-be2a-457d-adf5-bf91e92c4d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2689ed0d-36d3-4128-b28e-d34c9ef7aa15",
        "cursor": {
          "ref": "00e1fb8b-609f-4504-9df6-e3f71f556ffb",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1f67f2e2-511c-4506-9749-0e1e79269404"
        },
        "item": {
          "id": "2689ed0d-36d3-4128-b28e-d34c9ef7aa15",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "df129686-70b6-4ff6-b380-9cff7a606246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b24c4ae-a13e-4713-9e9d-ed6fc7679630",
        "cursor": {
          "ref": "be85cbc2-bc45-47bd-84f3-ec5e12f5a428",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "48ad0065-3f7b-496d-8895-3c43e63d581e"
        },
        "item": {
          "id": "7b24c4ae-a13e-4713-9e9d-ed6fc7679630",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b4faa880-4920-4f3a-a40b-7aa9caf47e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159731af-95c4-4f95-89fd-ae86c3397a10",
        "cursor": {
          "ref": "7f5b968b-6e9f-4849-b1f1-f289c81c4052",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "756c8748-dcad-4f03-a9a5-6d0fe0324f76"
        },
        "item": {
          "id": "159731af-95c4-4f95-89fd-ae86c3397a10",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e7d3a4b4-5564-499c-9b90-186251469288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05c0743-b22f-4e5c-851d-669ffd1b4f02",
        "cursor": {
          "ref": "63d6889b-cdc4-4ae8-845e-4b2f7e6cec40",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f62fe67a-6965-476f-8679-a4c6d543230a"
        },
        "item": {
          "id": "f05c0743-b22f-4e5c-851d-669ffd1b4f02",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a41d60c6-8853-4f26-9bc6-7c5ddc066aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec088f3-f544-42da-a70a-82e015d3349f",
        "cursor": {
          "ref": "77ea98a3-220e-4eef-8e81-e4703997254f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1e61a82d-0bae-4261-9262-0787ca736bab"
        },
        "item": {
          "id": "aec088f3-f544-42da-a70a-82e015d3349f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "34a38e45-22a9-4202-89d5-5835e85ecb99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06758c68-8243-4bb7-8e8e-690f53e0f8d2",
        "cursor": {
          "ref": "9b0fe584-27ed-482a-9a44-fdef17180c99",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "92c6e689-9b74-4ed9-b0ce-58acbd8143ee"
        },
        "item": {
          "id": "06758c68-8243-4bb7-8e8e-690f53e0f8d2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "696af9b8-75b0-4e3f-998f-0d0e685edec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06802e7a-5a97-4e5e-8d09-182c4038b04a",
        "cursor": {
          "ref": "9c2a6dea-6ea6-41de-bb0c-452c3e9b7f59",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c1b18f19-c27c-4a83-bf2b-d0e86a364826"
        },
        "item": {
          "id": "06802e7a-5a97-4e5e-8d09-182c4038b04a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "66a809f8-4612-48d4-b492-e6e1f4f8e522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655200a7-00ee-46f7-a069-79bb2bb98664",
        "cursor": {
          "ref": "89f3cce9-dc06-4801-b7d1-7401d19966d5",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8e97efb4-44ac-44f2-9783-c905a2850956"
        },
        "item": {
          "id": "655200a7-00ee-46f7-a069-79bb2bb98664",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d0bbfb08-ff81-4f60-8dd4-61f7a3ebd3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cf9400-0544-4e94-8d2c-29634bb6c409",
        "cursor": {
          "ref": "42af503e-8675-43b5-8bc0-a543558c212b",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f7f47f2b-c180-4499-8c41-f4cb9bf3c674"
        },
        "item": {
          "id": "41cf9400-0544-4e94-8d2c-29634bb6c409",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3e219bf9-2ec0-44a8-ac22-582fa1ca7804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bb27bf-5c0e-497f-adc1-05fa22a6a560",
        "cursor": {
          "ref": "5ceedc95-d60e-4a2e-aeff-47e635aa4745",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e5f15c92-3656-4ac4-ac22-de81799b097c"
        },
        "item": {
          "id": "13bb27bf-5c0e-497f-adc1-05fa22a6a560",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ea43f7bb-7d09-4528-937c-0518a9eb1ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10ca140-97e2-41f8-aca9-fd67bc410de7",
        "cursor": {
          "ref": "9de0491c-0c7e-4109-9b31-da9b9bbf33e7",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b6e20787-fd9b-4bab-8a07-82fad56a0faa"
        },
        "item": {
          "id": "e10ca140-97e2-41f8-aca9-fd67bc410de7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0a6d7069-45f9-49b6-801a-ef8e6b8a77d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a509cb62-541e-423e-8166-1a965aac5cba",
        "cursor": {
          "ref": "2ba5fecd-5e24-42c2-ba2e-407e2e686a32",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e4c0b286-b2de-43f0-8324-2101dc18bb4b"
        },
        "item": {
          "id": "a509cb62-541e-423e-8166-1a965aac5cba",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "43df95e7-e2e3-4e75-9ca7-c7d6263810fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7857d1bc-5a4f-4545-b04b-34e1e152a8db",
        "cursor": {
          "ref": "d93c8cae-5326-410c-a03a-b5d0865b3000",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e02a3e9a-eeda-481b-b4f1-f991ec1120c0"
        },
        "item": {
          "id": "7857d1bc-5a4f-4545-b04b-34e1e152a8db",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4f9bcd0c-246c-4cac-9e08-d2c4505a6827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c82bba7-1fbc-4bd0-92d3-d33cd8421bab",
        "cursor": {
          "ref": "e535bc16-580f-48c2-ac90-361a5fb67aab",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "04542426-09cc-4f72-a41b-64742de4be87"
        },
        "item": {
          "id": "0c82bba7-1fbc-4bd0-92d3-d33cd8421bab",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4da6d4de-4743-4bf1-9fdf-0455eaaad3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5090d3f-5c07-4578-9cbd-3c69d3020eed",
        "cursor": {
          "ref": "10611baa-30f3-49ee-b812-c9e6e8172411",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "18f53246-7cc6-4abe-bea8-0aa000945477"
        },
        "item": {
          "id": "b5090d3f-5c07-4578-9cbd-3c69d3020eed",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "14d49df3-98e3-4957-95ac-d19b710be662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c816724-0d34-4fbf-b675-f100d20163c1",
        "cursor": {
          "ref": "92b3eb11-710d-46d9-9483-1b9296dcbd9c",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5c750196-97c3-4887-902a-c5c1527ebc2c"
        },
        "item": {
          "id": "7c816724-0d34-4fbf-b675-f100d20163c1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "53260c93-1407-450b-a4bb-e56ff97314d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a5570d-1a94-4985-a2ea-32d55f5c0a51",
        "cursor": {
          "ref": "cb56d6ea-3c22-4981-ac1e-bbd6949573b6",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "57a01f64-6a93-4348-8237-b31acbc42cde"
        },
        "item": {
          "id": "65a5570d-1a94-4985-a2ea-32d55f5c0a51",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "985a7e8a-9579-4590-9a5c-0999b1b3a1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90bc4e3-3324-42b8-a4ca-0be323f23269",
        "cursor": {
          "ref": "77f34bbd-95fb-425a-8d53-55fc62a6518f",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "08ded549-e071-4c2a-a1e2-10058a1f6676"
        },
        "item": {
          "id": "d90bc4e3-3324-42b8-a4ca-0be323f23269",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "adbe7dba-70be-4430-95cb-4c1f30a41e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d75ac66-a2d0-405c-95f3-3adfbb27c303",
        "cursor": {
          "ref": "5932f503-c57f-4db4-93cd-04a6a7f9ebb9",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4efda14d-baf5-4ea5-acfa-881b72877554"
        },
        "item": {
          "id": "6d75ac66-a2d0-405c-95f3-3adfbb27c303",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9424ef73-3521-403c-a107-5241578deb16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db9e649-cc24-4035-b327-82340ba347aa",
        "cursor": {
          "ref": "cb84e3be-a7f7-4553-ab85-04f6bf547ed4",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e7a624ea-df8d-44b2-85fe-6d85a766367c"
        },
        "item": {
          "id": "2db9e649-cc24-4035-b327-82340ba347aa",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "003ad8d8-40d7-4823-a3a6-6c334320c54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca43e48-0f5a-43b2-992f-a2d1e385f7dd",
        "cursor": {
          "ref": "2b4eeef5-5f3a-43f4-af8f-a894b4f8a45a",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c1cdfd72-5f25-4d52-a39e-fbf4c17f3046"
        },
        "item": {
          "id": "6ca43e48-0f5a-43b2-992f-a2d1e385f7dd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "61353127-abb3-4b01-aba0-547fc9d0a79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcf21f6-4d32-4751-aff1-7e44bcea5584",
        "cursor": {
          "ref": "356e7019-353f-4f2d-9c3f-9829620e8767",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8e720ea0-c327-4bc4-ba2b-9ccc6bc634ee"
        },
        "item": {
          "id": "5fcf21f6-4d32-4751-aff1-7e44bcea5584",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6c383bc2-14c4-4362-8458-db4e48c18768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab571a3-fcde-4fcf-96bf-99faad02a5a6",
        "cursor": {
          "ref": "49bb3270-b682-4df8-af9f-aefddc83d105",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b0b90b24-7125-46ba-b505-07e4c679bbc4"
        },
        "item": {
          "id": "aab571a3-fcde-4fcf-96bf-99faad02a5a6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "32a686b6-13b2-4e35-8206-bdfc9c0e0274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4356fe28-f93b-4cf6-8549-cfcfdd3aede8",
        "cursor": {
          "ref": "06cc2de3-a6b0-4671-9a55-3b5345bb5047",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0cf06916-a5d4-496a-aff7-ef1dbec7eb5e"
        },
        "item": {
          "id": "4356fe28-f93b-4cf6-8549-cfcfdd3aede8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "aebebb0e-0a8f-4e06-afa4-cda531c06879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c41412f-fcbb-4279-b9e9-baa7840df6d7",
        "cursor": {
          "ref": "1f8f0ed2-0dd6-44d5-a385-071ea6627633",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cea0f0ae-2301-4261-bd9e-b6a37d1f4081"
        },
        "item": {
          "id": "1c41412f-fcbb-4279-b9e9-baa7840df6d7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0cba7d7b-9c9a-4940-b463-09c5aa60c680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef024919-5bc2-49e8-80a1-155ef790b57b",
        "cursor": {
          "ref": "781b1f9b-1def-43f8-8391-0abbcb04906c",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fd38beda-7f45-43fa-9f1b-4ee77733e34f"
        },
        "item": {
          "id": "ef024919-5bc2-49e8-80a1-155ef790b57b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e54837a3-1a0c-4a66-b3a7-a909ee992f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2ac488-bae1-4125-8635-221cc120917f",
        "cursor": {
          "ref": "9526e735-ef03-4652-8076-70e3e4c950b5",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a63c6287-e77d-475f-8f95-c5e676e95fcf"
        },
        "item": {
          "id": "6c2ac488-bae1-4125-8635-221cc120917f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b2bb8c04-7e7a-472c-8256-2cd39100ada0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c442e62-72de-4d0d-a6a8-5a58134ca3bd",
        "cursor": {
          "ref": "e955c41a-4757-46fa-bb3f-e0c01619a283",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "30466a1c-6903-48cb-924d-612ca586db41"
        },
        "item": {
          "id": "6c442e62-72de-4d0d-a6a8-5a58134ca3bd",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "43f65bde-37a9-43a5-a17c-f16ecead3335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef455dba-282b-4fd3-9fc4-4a40d70cc2d5",
        "cursor": {
          "ref": "2c6a70ef-6d41-4d3d-a4e8-f93e3c43210d",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7fbadb2f-2ece-405a-b473-1b124095fed9"
        },
        "item": {
          "id": "ef455dba-282b-4fd3-9fc4-4a40d70cc2d5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3e99a67f-d274-460a-8ff2-a8b68deb7ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfe48b8-daa9-49e7-8afb-5d8f6404fa64",
        "cursor": {
          "ref": "04bec199-a59d-46da-b494-abe1035a9f1d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "994ccc21-06ce-437c-92df-a94b531d58fe"
        },
        "item": {
          "id": "8dfe48b8-daa9-49e7-8afb-5d8f6404fa64",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b6014c8a-fe26-40fb-8d88-f8f62d3e88e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b85a168-dc52-4691-bd67-9d7708a043b0",
        "cursor": {
          "ref": "579fc3aa-cc02-4492-82a4-b7686b8dc57d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f0987f88-04bd-4153-b1bb-4905058d8c2e"
        },
        "item": {
          "id": "2b85a168-dc52-4691-bd67-9d7708a043b0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0ad7502c-8775-4ed7-9751-414b029aff27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab2be77-829b-49ea-ac0f-b4c0562a67a6",
        "cursor": {
          "ref": "92662d7b-2046-4b63-bcba-a70851a3549c",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "118ee43e-6773-4094-b96c-8b3f2eafda6c"
        },
        "item": {
          "id": "aab2be77-829b-49ea-ac0f-b4c0562a67a6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "37923807-8957-4b0a-b878-b9184c13e769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d71dc6-f309-49f2-a659-7021d03159bf",
        "cursor": {
          "ref": "1072137a-7c0a-4491-8203-350e45c78f9c",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9cd2c6c7-25d8-4722-b48f-a99106a035a9"
        },
        "item": {
          "id": "61d71dc6-f309-49f2-a659-7021d03159bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bbdbc7bb-a582-44ad-94e9-4c2b786b13f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d93238d-466a-458e-9a9e-4326320a87f2",
        "cursor": {
          "ref": "2dcb7314-6f20-48f9-92e9-b376d9fa0d68",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fdc7b2fa-b1be-40d9-a649-f9fa05e85f30"
        },
        "item": {
          "id": "9d93238d-466a-458e-9a9e-4326320a87f2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f741c9f2-cdd8-451d-8612-7344ff21833d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978b563a-b81c-4f65-a984-265e4634965f",
        "cursor": {
          "ref": "92532999-5c4e-4bf4-bcfc-9901700f607e",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cca4e569-6518-42c2-bf81-fe4c7c29ce00"
        },
        "item": {
          "id": "978b563a-b81c-4f65-a984-265e4634965f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fad306f9-93cd-41c4-8e7f-b9a062867fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c22709-52fe-4c5a-9ef5-d401c5b0e51b",
        "cursor": {
          "ref": "eacc8199-56f0-4051-9194-e44420ad8a87",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e2d73740-fbe7-4bb8-aeeb-69696e7d2ee2"
        },
        "item": {
          "id": "05c22709-52fe-4c5a-9ef5-d401c5b0e51b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8de15c99-37c2-479d-abc7-0de2efbb27a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3f12ca-1e18-4e8a-ae4c-581223dc2876",
        "cursor": {
          "ref": "2137607f-3b9a-4b65-9a48-ed77a9017e31",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1c06707e-7a88-4214-b4c3-3c8079fbc88c"
        },
        "item": {
          "id": "2e3f12ca-1e18-4e8a-ae4c-581223dc2876",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5e62d371-2781-4081-a535-41e4b25817ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eed5179-3b72-4cde-8bf4-557cd231f412",
        "cursor": {
          "ref": "11715ec9-c640-4379-97c6-57bb8cf20096",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ed9a38fa-d11f-4e4f-9396-af40278d98fd"
        },
        "item": {
          "id": "1eed5179-3b72-4cde-8bf4-557cd231f412",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "06f323c3-345c-4c48-955d-838c5973b946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8400a5-bdac-424c-853e-efc232c4bba5",
        "cursor": {
          "ref": "f2a4c88f-2e9a-479c-87fb-fc4a98860ecb",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8837836e-79ce-42cc-9a01-41046000bc55"
        },
        "item": {
          "id": "5d8400a5-bdac-424c-853e-efc232c4bba5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b7494ff9-8dda-4114-b11d-e3128bb43d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2853e873-4c69-435a-a3a5-a382ee5abe81",
        "cursor": {
          "ref": "f9e19bb4-be1c-4015-a06f-3b54777d1178",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "07b63b95-25d0-4c5a-8ed9-449e9d2c68c6"
        },
        "item": {
          "id": "2853e873-4c69-435a-a3a5-a382ee5abe81",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fe2a6e21-b395-4088-84c1-139dba7d95f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7c929e-9b4c-486c-aabc-973a3b2e7724",
        "cursor": {
          "ref": "9c24acde-ac16-4e58-abbe-3835854bacf6",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7dd956ac-14ee-4957-ade9-b41e937af0c9"
        },
        "item": {
          "id": "ff7c929e-9b4c-486c-aabc-973a3b2e7724",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5ec388b4-516d-4796-b725-16317fcb4e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4a15e0-103e-44b5-bb30-f67ab4f91f71",
        "cursor": {
          "ref": "9e4169ed-7385-4c4a-9bcd-b0400d3583a1",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8e6a354d-466e-4768-b701-2bc9b16f40fa"
        },
        "item": {
          "id": "6e4a15e0-103e-44b5-bb30-f67ab4f91f71",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f500ab9c-36fb-44e7-824e-b9261ef8ac61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f11ebd0-1f19-44bc-85c8-6adcbeb5de65",
        "cursor": {
          "ref": "55088ca9-fdd7-4fe3-8dbe-f6e1094f6852",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d63316d4-8a11-4843-87d0-94d17deeed17"
        },
        "item": {
          "id": "0f11ebd0-1f19-44bc-85c8-6adcbeb5de65",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c6e0b872-3dd0-4d49-a1ea-7ccbcc2437de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074edd54-7224-417a-8c93-490b1a46a364",
        "cursor": {
          "ref": "179f07a8-39ca-499a-8de2-31b48114ce52",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a2ad79f4-f8b5-475f-bd55-a075110429ae"
        },
        "item": {
          "id": "074edd54-7224-417a-8c93-490b1a46a364",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2dd06b3a-d6b4-466d-bd77-782aa7463376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2674f20-6530-4f62-9f03-612c79299e5d",
        "cursor": {
          "ref": "aa65a61e-9450-4f48-b0d3-d41a4d368941",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b8427d27-5448-4fee-b6bf-628925b75d47"
        },
        "item": {
          "id": "a2674f20-6530-4f62-9f03-612c79299e5d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ef4fe2ed-399d-4335-9f65-c09337fb185f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783cb828-a881-4d9c-b673-ec50ef4f9e0d",
        "cursor": {
          "ref": "d41c28f2-87e3-4d12-ae50-cc2e7d65850b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9d5fad44-c2b9-4aa6-a172-dc77395d2269"
        },
        "item": {
          "id": "783cb828-a881-4d9c-b673-ec50ef4f9e0d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "27bf61dd-c160-4b03-9d53-5e74248a5b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade1b0e5-3f5c-440c-804d-fb47d1b0e6ee",
        "cursor": {
          "ref": "6e921009-f0ba-4deb-a490-0564e5bcd1aa",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7cf84e34-2c8f-4e36-83da-e41c702656f0"
        },
        "item": {
          "id": "ade1b0e5-3f5c-440c-804d-fb47d1b0e6ee",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "85f918f0-cdcd-47a2-bfad-21b7ef3a178b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16806873-0f1a-47a0-bef5-87bca6da83d9",
        "cursor": {
          "ref": "aa97e3d8-b64f-41cb-9a0d-7b9d024acec1",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "23f2359b-7f2e-43e7-be0f-44f35a884925"
        },
        "item": {
          "id": "16806873-0f1a-47a0-bef5-87bca6da83d9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "aba2a143-ff19-4fad-b3ac-cb336348b0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fdf3ee-515c-4acb-a431-15cfcd999e0f",
        "cursor": {
          "ref": "c60b33c4-7768-46e3-b62c-5f2afa34feb3",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0c2a7bb1-6582-4bb4-8318-950d5126c2e6"
        },
        "item": {
          "id": "26fdf3ee-515c-4acb-a431-15cfcd999e0f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "cc59014b-5be4-41e5-b0c1-3edd2ca5df04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0caae99f-5f64-4d42-b50e-1dc778dc79fe",
        "cursor": {
          "ref": "420c78b4-3f02-4c47-b7d5-07dc804d34b9",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a380887d-cfb3-484f-981f-b4eb39635778"
        },
        "item": {
          "id": "0caae99f-5f64-4d42-b50e-1dc778dc79fe",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a22c7ae6-81b7-4a64-86c8-e9ed62456e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71465bea-1a5a-4fa0-a95a-aa0a2da89806",
        "cursor": {
          "ref": "bac1135c-85e5-4ef4-b293-7ca50b3472eb",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6804e826-b649-4406-b3b4-4a0d365be235"
        },
        "item": {
          "id": "71465bea-1a5a-4fa0-a95a-aa0a2da89806",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "537c04b8-5b00-47a0-800d-5f286cf57a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8510b93-fc25-4f24-8e79-74cfcb7c85b9",
        "cursor": {
          "ref": "afd46f0d-76f8-41a1-be34-b239c68a6c4a",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c0a7a4b5-04bc-42a4-950a-de4de036713c"
        },
        "item": {
          "id": "a8510b93-fc25-4f24-8e79-74cfcb7c85b9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5a3a8934-8b34-4eeb-a405-c6de3dccfc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9a2e4e-ae74-44ce-84df-ec3d42ff1145",
        "cursor": {
          "ref": "216eda64-b166-4c94-bfa7-814df43b86d2",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "27ac835d-bbd4-45e7-9282-1e21c542759e"
        },
        "item": {
          "id": "8e9a2e4e-ae74-44ce-84df-ec3d42ff1145",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "490b449b-c62e-49ec-b4f1-533e2d568918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e10f446-3f38-4cca-9482-133f3be3c251",
        "cursor": {
          "ref": "d91db3ea-121d-4972-bd6c-cb6c60dd6106",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a41ee26b-228b-41b8-8de0-13ff051e3cad"
        },
        "item": {
          "id": "7e10f446-3f38-4cca-9482-133f3be3c251",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0f8bf6bf-eda5-45a2-9d4c-14d287b4874d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52acefb0-de16-431a-928e-9ec6c8515004",
        "cursor": {
          "ref": "3573426f-a8a5-499d-84ec-14735d71e143",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1d7d3ff4-4bb5-4d3e-98af-670fbcf3b3be"
        },
        "item": {
          "id": "52acefb0-de16-431a-928e-9ec6c8515004",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ab071d0f-0593-4d99-a3a0-80b5e3591e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b92fc5-c674-4c6c-af2e-918954c3bc94",
        "cursor": {
          "ref": "b146e3d3-d1bf-40e2-85bc-4c3c785d0a33",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "102d60ed-3554-4ca2-87bf-dfa91fa33402"
        },
        "item": {
          "id": "a6b92fc5-c674-4c6c-af2e-918954c3bc94",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9c674181-7970-4b80-a2ca-172ac53e4609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cec566e-8adb-473e-932b-b546b323796c",
        "cursor": {
          "ref": "3fccf002-a346-403d-95b6-83b286dcd3f6",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d95a0479-15c4-48a5-bdeb-98b070988c50"
        },
        "item": {
          "id": "6cec566e-8adb-473e-932b-b546b323796c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5e4b62ba-718b-48ae-80bd-f7d03046d6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467c6c45-5bbb-4448-b0b7-4840e3f975d1",
        "cursor": {
          "ref": "56394f54-3905-47fa-b5e8-eaae61ec6746",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "abf83b24-49fb-42b8-9021-8dcea402d9bf"
        },
        "item": {
          "id": "467c6c45-5bbb-4448-b0b7-4840e3f975d1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fb528c32-858a-486c-a5ac-bdbbfc4ce757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396045a7-5eb0-4b98-b674-55b698d70d17",
        "cursor": {
          "ref": "6adab152-277c-4087-98c8-bf665834f3c4",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "dfb38fd4-5621-47ad-ae7c-f6d7336b47dc"
        },
        "item": {
          "id": "396045a7-5eb0-4b98-b674-55b698d70d17",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9c1dc39b-22a7-4190-94ff-7a028a23bdeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1daf95-3744-4d21-a5f0-71f1505d804c",
        "cursor": {
          "ref": "528cf817-2bce-4a43-948c-1fb47ec0c3d1",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5f4d544b-dbee-4dfd-bf5d-cfa0f433395e"
        },
        "item": {
          "id": "fa1daf95-3744-4d21-a5f0-71f1505d804c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d7daf5b6-2faf-44a7-aad2-4a7823c43e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339b62ec-c884-45d6-8eb0-e240b5eb54b4",
        "cursor": {
          "ref": "07026092-cfa9-4350-9b3b-268cfeaa73f1",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "48d018b2-dbd0-4242-87fa-5bb30fdd01aa"
        },
        "item": {
          "id": "339b62ec-c884-45d6-8eb0-e240b5eb54b4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d2944bf4-55ad-45c2-aadd-55c4e3ae7129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea680026-9444-4fce-80d4-0bb33afbead9",
        "cursor": {
          "ref": "77b999b3-b56c-41b2-b167-eb0fcb68a3ec",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ec08e6e0-6470-42dc-a8f6-3442a82702c9"
        },
        "item": {
          "id": "ea680026-9444-4fce-80d4-0bb33afbead9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "64f70d0b-3e49-4203-bcfa-b4a41a2ac8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720368cd-837a-4a93-ae04-0832875c02cc",
        "cursor": {
          "ref": "3506f529-1139-4f42-8643-5389edbe541c",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7ae3c8f1-269a-4df7-ad13-647e8913f5a3"
        },
        "item": {
          "id": "720368cd-837a-4a93-ae04-0832875c02cc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d8211a8c-a7ef-4dd1-bb81-f48d5beca6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80c78d5-708a-44fc-8a58-e97b24076d5c",
        "cursor": {
          "ref": "06e44e11-ce0d-4217-9c8c-aa6f1de13435",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e64f81f9-e8fd-4df0-8cf5-35b4b70c17bf"
        },
        "item": {
          "id": "d80c78d5-708a-44fc-8a58-e97b24076d5c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bfa8349c-712c-44d9-8f54-555f99b0a8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62a72c5-3121-4dd8-b769-e970db562170",
        "cursor": {
          "ref": "2a96782a-119a-4392-95c5-48a223a590d2",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4e7006c0-bf61-4dc4-9b91-9a2b89b215b7"
        },
        "item": {
          "id": "a62a72c5-3121-4dd8-b769-e970db562170",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b353764a-d8e0-472a-beda-cbd9f8d4f19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9a0a02-b100-453d-8a65-07ce9993bfd1",
        "cursor": {
          "ref": "5cb42cc6-10a4-46b4-9b69-1491d6fa8feb",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "63f6cb45-ee03-44b3-b0f9-e1b3e41a7f9f"
        },
        "item": {
          "id": "9b9a0a02-b100-453d-8a65-07ce9993bfd1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d847dcbe-f551-482f-a608-7469b490024e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e684375a-f502-4139-b4a9-3089dccc3961",
        "cursor": {
          "ref": "be3e4de3-7adf-4955-aef7-eade7948d74d",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "199be855-f62e-4b2d-af84-4029b141facc"
        },
        "item": {
          "id": "e684375a-f502-4139-b4a9-3089dccc3961",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "bce8d864-7191-476b-9c43-1807997f27fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "de49033b-eb6a-429d-b120-365c5464e577",
        "cursor": {
          "ref": "178bfe8b-8ae8-4794-8bfa-da41e2b7509c",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "709bd284-767f-4662-b0c2-9a60bea4f8b3"
        },
        "item": {
          "id": "de49033b-eb6a-429d-b120-365c5464e577",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b3d479b0-bb5d-476c-8c14-c57ac1bef576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4c76b301-76b4-42f0-9ea1-16d2ce88b30a",
        "cursor": {
          "ref": "83a1a44b-292b-464f-adfb-cc8141597235",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b9074e9d-a76c-41a8-b10c-7454b9ee331b"
        },
        "item": {
          "id": "4c76b301-76b4-42f0-9ea1-16d2ce88b30a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ba64ac1d-82b2-45da-b744-9e3421c16ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "90883268-e770-4e99-92e2-6a6457c680b0",
        "cursor": {
          "ref": "705cbf27-9878-475b-9d18-d9f28bc0842d",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c14c0c81-fbb8-4ff5-a57e-2d5f1ebd899f"
        },
        "item": {
          "id": "90883268-e770-4e99-92e2-6a6457c680b0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "542919c6-9d9a-419c-bf0a-98e4c42afa29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a71e6e22-410b-48e1-995d-ba299b14768c",
        "cursor": {
          "ref": "7e83c9a1-82c1-41e4-a65a-56613e169f1e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c92abe7a-70ad-4de2-a5e5-cae89686307b"
        },
        "item": {
          "id": "a71e6e22-410b-48e1-995d-ba299b14768c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "61e1fc53-d7b9-4a3b-9bed-13681354164e",
          "status": "Created",
          "code": 201,
          "responseTime": 9727,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "69645212-9d18-418e-aeff-c7c5c47f0b2c",
        "cursor": {
          "ref": "cfefbfac-4d8d-4ea1-988f-aa42e8b43423",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "48e09098-80be-4c67-be73-f85b29446fbb"
        },
        "item": {
          "id": "69645212-9d18-418e-aeff-c7c5c47f0b2c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5982f31d-6e24-4120-bf57-e00db9ccb7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "8582ae5a-6c27-4a9c-8907-534d08e5672e",
        "cursor": {
          "ref": "44eed037-5d6f-4fd9-a628-1298dc5b8434",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "480fe4ea-e535-4a2f-9ba5-17b78cc742d1"
        },
        "item": {
          "id": "8582ae5a-6c27-4a9c-8907-534d08e5672e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ceb49c3a-8542-43ea-bb66-779eeba19c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "fe198f5c-a374-435e-bb6d-8a1b56646820",
        "cursor": {
          "ref": "cc7dffdf-b131-4845-b864-2343c90d6523",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6d2e655d-c8e7-47cd-acc2-0f9aa68a5bfc"
        },
        "item": {
          "id": "fe198f5c-a374-435e-bb6d-8a1b56646820",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "81431e11-8b67-4f34-b295-142da0b531e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce16dafb-d843-4e5b-ad3e-f02a018e06ed",
        "cursor": {
          "ref": "6ab7648f-4d0b-4031-98c2-8327225b2a7e",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9d8d126a-9048-4a61-a0cf-a39cc6aa9be2"
        },
        "item": {
          "id": "ce16dafb-d843-4e5b-ad3e-f02a018e06ed",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "28085c93-3a3a-4aaa-b8db-a735eef2037c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113ef554-df9a-482c-92f9-48652188f218",
        "cursor": {
          "ref": "c620bfb8-15b5-4b09-b91e-ff448bd557fb",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "479795a8-9369-4a10-8feb-412b07678538"
        },
        "item": {
          "id": "113ef554-df9a-482c-92f9-48652188f218",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "066a1d7f-11ea-48c1-8e34-919b648f64ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fb753c-e51e-469c-b768-1f882e543160",
        "cursor": {
          "ref": "c7bc7b54-8bc8-4930-90af-c400d0ebd174",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "43983e3a-d580-4bc0-8d7a-6011ecc38641"
        },
        "item": {
          "id": "81fb753c-e51e-469c-b768-1f882e543160",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "90c795df-b913-480b-9d51-1cfcf3887ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ebca4a-2be3-4168-888c-032814f4c702",
        "cursor": {
          "ref": "890a6867-fb43-4ef5-8376-7aad4841133a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d55b594a-1da1-4aee-ae65-995e8872e3e0"
        },
        "item": {
          "id": "99ebca4a-2be3-4168-888c-032814f4c702",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6dfff402-dc29-42d1-aab9-9ffe0a252b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9699b7ff-4789-48f8-bb95-0fc6038560d4",
        "cursor": {
          "ref": "8272890d-7210-4886-8ef3-74adf30e3bfa",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "01c7e15a-e74a-467c-91ba-09edba61998a"
        },
        "item": {
          "id": "9699b7ff-4789-48f8-bb95-0fc6038560d4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d2d62c8d-7be3-4bf4-9fe6-05bab5d8f7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f44c4d-c625-4f37-92c5-ebffe45a7445",
        "cursor": {
          "ref": "b1e25e02-4763-41a9-9706-f5eb3f667834",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4aeb91fa-5d7a-4906-86cd-e7dbe74b2b55"
        },
        "item": {
          "id": "c9f44c4d-c625-4f37-92c5-ebffe45a7445",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "30c8629d-a6e2-409b-a1c9-abaca22e0810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d338109-40ff-46cf-8c43-2a82b753f9a0",
        "cursor": {
          "ref": "6cb05bdf-15d5-47bc-b89e-2aa5a44df11d",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d67b3c32-0bbf-4a89-944f-874e6eb1454b"
        },
        "item": {
          "id": "2d338109-40ff-46cf-8c43-2a82b753f9a0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cbe6c93e-487c-43bc-a6ed-3d54c5dd5f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd2815a-6cf7-45dc-93a8-2b6637167f2a",
        "cursor": {
          "ref": "ba9e1e4b-cee2-49ad-9f3d-24f08e31effc",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "72a44607-a353-4570-9bb4-b768310e5cb4"
        },
        "item": {
          "id": "dbd2815a-6cf7-45dc-93a8-2b6637167f2a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9df37310-c3e3-4579-a691-1ae5b7089888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00c798c-47a9-4b3d-b09f-240027b82df5",
        "cursor": {
          "ref": "1118f9dd-2c48-4bcb-9cf7-970722f8d3e3",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d5b3d189-44d2-45c1-b3ad-2f02e38b6f89"
        },
        "item": {
          "id": "d00c798c-47a9-4b3d-b09f-240027b82df5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "93b875c2-3c4d-466a-82b1-0ca4c373500c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f084b828-729d-43b0-bb16-002ee6c1ec30",
        "cursor": {
          "ref": "bbe94eeb-79a8-43ad-b593-5a5a6c74dcda",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "da75cc27-ebab-48c7-a7c6-082561cb08be"
        },
        "item": {
          "id": "f084b828-729d-43b0-bb16-002ee6c1ec30",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "559e8205-041a-43f4-9bfd-3462b30a2e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 946,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2661247e-9303-490e-bf95-527c5a47b5eb",
        "cursor": {
          "ref": "2a0f6c4f-caaa-42f7-8e34-62a268125579",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8dae983f-02cf-4dd5-97c7-3a7e4369d0d6"
        },
        "item": {
          "id": "2661247e-9303-490e-bf95-527c5a47b5eb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a1eef051-fb1d-499c-9d95-b5f707c131db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8029956-8a37-4473-b096-4a8ce2da6e53",
        "cursor": {
          "ref": "474ef918-6f14-4bf9-b641-a612ab45816b",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f51f475d-c34c-4adf-a3d2-5eaeb7ec6ec5"
        },
        "item": {
          "id": "c8029956-8a37-4473-b096-4a8ce2da6e53",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e5c6bde7-efd7-4398-b909-4d90bb46db12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6a43b3-ecde-430d-a9a4-e7368b2e006c",
        "cursor": {
          "ref": "364e8bd9-a63f-457f-8526-de5e259e4e11",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "10bdca4f-38c8-4fe2-966d-fafa16992567"
        },
        "item": {
          "id": "1a6a43b3-ecde-430d-a9a4-e7368b2e006c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0e0cd546-331a-4271-a772-9d08c00b1aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa37b00-6003-4580-a70d-252710d65e33",
        "cursor": {
          "ref": "ca20d399-9bae-4027-9974-2b0ffa9d6103",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8f7542c4-359a-46e6-8e30-035c334669e3"
        },
        "item": {
          "id": "8aa37b00-6003-4580-a70d-252710d65e33",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2529983d-8951-4523-a5f1-0e6b9e8753f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d826bd57-6d99-4463-a7f6-28c93fdcd4e2",
        "cursor": {
          "ref": "e1961c8d-40cc-4f51-8683-c69f33b4df95",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "44d73d78-84a5-4c7d-a0a2-71867e9efebe"
        },
        "item": {
          "id": "d826bd57-6d99-4463-a7f6-28c93fdcd4e2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "67ff3da6-dc72-4b6e-9aa2-08fa147b8571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2e2c1e-3ea1-4099-b14d-ab1df76fea7c",
        "cursor": {
          "ref": "0033f643-c116-464e-acd6-d34133d3d487",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2ff7feed-09ba-4acf-9de7-b4d538d01124"
        },
        "item": {
          "id": "6b2e2c1e-3ea1-4099-b14d-ab1df76fea7c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f54cc006-f8db-4891-8091-453bd6c1ef51",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "3085ebf5-7473-4607-a7ae-093013dbc45e",
        "cursor": {
          "ref": "94518c6e-b597-4ac2-9057-396bb607213e",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "14bb9143-cb8b-452a-bc7a-a7c4489b6fbe"
        },
        "item": {
          "id": "3085ebf5-7473-4607-a7ae-093013dbc45e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1e4ea962-99cc-487f-a57d-2a86bc1822a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3cc0828-ec44-4698-812d-8ced9173890b",
        "cursor": {
          "ref": "95399c01-a45f-491e-b594-9d5cc8ba09c1",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a0347cde-196e-4f61-8d7d-8af2669895fb"
        },
        "item": {
          "id": "d3cc0828-ec44-4698-812d-8ced9173890b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "eeb5ccea-0cb1-4725-b0d1-eaf849649939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e492b70d-e674-4b52-a0a5-655cfc23dc3b",
        "cursor": {
          "ref": "0f8f8b87-a964-4990-9d6b-2977b59a891e",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ccca6909-2dd0-4a9f-81b2-1b892abfd024"
        },
        "item": {
          "id": "e492b70d-e674-4b52-a0a5-655cfc23dc3b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3362767b-ece5-4ad1-b451-a788332a1a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eac93cf-1db0-4cad-9eeb-f5c6ace486f6",
        "cursor": {
          "ref": "be67d610-e60e-406e-80d3-32a1544e44e3",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "52b9ebc6-379f-4ddd-8286-ca048ef91bcb"
        },
        "item": {
          "id": "1eac93cf-1db0-4cad-9eeb-f5c6ace486f6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1ec6ea21-85f4-4e02-8e89-0e56b01a26f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f7538b-0bf7-44d2-aca2-e352d360cd80",
        "cursor": {
          "ref": "c684f164-38df-4699-9f42-15bfdc30e7b9",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d284f164-7e00-446f-8b00-522a019bb38e"
        },
        "item": {
          "id": "47f7538b-0bf7-44d2-aca2-e352d360cd80",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7881439c-81ba-42ae-b773-357bbe3ab70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2216a7-7826-445c-8b9b-854953c9f555",
        "cursor": {
          "ref": "e1613615-1322-43d1-b6cc-e3b2a36bba2b",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "881429c1-356b-4b15-b321-64f3998a5d5d"
        },
        "item": {
          "id": "3f2216a7-7826-445c-8b9b-854953c9f555",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "60e3e48c-b0f9-4c02-9806-c3cf03e34e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb0661e-6a87-4d17-a77f-5919258498b6",
        "cursor": {
          "ref": "03103f5d-797e-495a-bad1-3e0feebbab32",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0a675b50-0179-4243-9c3a-cf02ed3c97ad"
        },
        "item": {
          "id": "ceb0661e-6a87-4d17-a77f-5919258498b6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "87aca3ea-cc8c-49cf-a250-f7c312c510b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ecf964-00f7-4946-a736-ae042f178c85",
        "cursor": {
          "ref": "4a089b26-18e3-44ef-a78e-c3533d14b3d6",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2fefbb46-a8ed-4d17-a31a-f637eafc8332"
        },
        "item": {
          "id": "b3ecf964-00f7-4946-a736-ae042f178c85",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "103c9c57-fc54-4736-b7cc-51caf58ba6ad",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 52,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "d8c818b7-b0d7-472a-8d16-624b171dcad5",
        "cursor": {
          "ref": "2ed54854-c431-4e57-a06b-abf08f662e03",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e804b39a-af7f-4701-afe1-bb2bdd532351"
        },
        "item": {
          "id": "d8c818b7-b0d7-472a-8d16-624b171dcad5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8368e101-fce4-4610-bea3-350f92ab6dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc11d357-56ab-46dc-af9b-5afdd19996de",
        "cursor": {
          "ref": "9366df6d-0df6-43ac-abd8-f1ac5205037a",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9a876ec6-c211-44a5-bceb-b52472436420"
        },
        "item": {
          "id": "dc11d357-56ab-46dc-af9b-5afdd19996de",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b4672295-1e0b-4dc4-a1ad-8e05a1c45ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4102ce0c-08f6-4119-b5dc-7c096738b1ee",
        "cursor": {
          "ref": "54d0ac6a-b81d-4afa-a9dc-e92ed8200e47",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ddb6c9a3-71d3-45e3-bb78-7eb135742a46"
        },
        "item": {
          "id": "4102ce0c-08f6-4119-b5dc-7c096738b1ee",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3748a843-d5bd-4e1d-88f9-fc6c7f65d7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9575e93f-9c3c-417a-83c6-00e67ba4a783",
        "cursor": {
          "ref": "ecb6d0cc-6a17-41c3-babc-8ab8accefe97",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "86043621-bb31-40f6-b8ff-0a2477728e1f"
        },
        "item": {
          "id": "9575e93f-9c3c-417a-83c6-00e67ba4a783",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bcf0c56f-f5d7-434c-b6fe-c68744a5f8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809da5c9-c006-4e7c-8ea8-c15a622d6b52",
        "cursor": {
          "ref": "6d92dc62-15a2-4789-a734-a99b89373d26",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2b547d2f-8971-44c2-8a83-58bf41ee4e0e"
        },
        "item": {
          "id": "809da5c9-c006-4e7c-8ea8-c15a622d6b52",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c4c1ec95-8e15-4225-85ad-8376cc3096ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd0c3e7-691f-478b-bae5-9be25ad5078a",
        "cursor": {
          "ref": "e513e724-c9da-4599-ab63-9ff2fdfc30dd",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "238f701d-f474-482a-a503-ffda7b88f244"
        },
        "item": {
          "id": "abd0c3e7-691f-478b-bae5-9be25ad5078a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d85560db-0337-4b58-89c7-b135b08ff327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345a8b1c-20ba-4743-8075-42a3117b108f",
        "cursor": {
          "ref": "8f517b1d-8037-4cf3-a785-867494ba3bf4",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f7d7a1f2-e6ca-4d3c-987f-bcc8bee55a7a"
        },
        "item": {
          "id": "345a8b1c-20ba-4743-8075-42a3117b108f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ca03094d-69fc-4407-b038-ad846adfba78",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "c1dba698-1f65-410e-8b65-9e0093cc5958",
        "cursor": {
          "ref": "3cce0a09-a3d7-4477-9a26-5a1b801a9cf7",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "33d60bd7-0904-4335-b311-14311c5b4741"
        },
        "item": {
          "id": "c1dba698-1f65-410e-8b65-9e0093cc5958",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7cbd4fb1-e6cc-4d00-ba59-ca1939e58cb3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "2a12dc6a-2b2d-47df-86e5-a261823b3663",
        "cursor": {
          "ref": "8a7318df-5254-42f2-bdbb-7eeb80437e9e",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a4ee453f-5645-4507-a4b9-5d443a68a0d2"
        },
        "item": {
          "id": "2a12dc6a-2b2d-47df-86e5-a261823b3663",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f30bd0cb-e7e7-4f02-a562-44b48feabd53",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "069e3429-6b62-4171-98a8-dabfd7a050fe",
        "cursor": {
          "ref": "dca62fb3-7063-48b4-84d7-ef4076335d44",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "95e2f573-e5a1-42e7-a273-c446e7447083"
        },
        "item": {
          "id": "069e3429-6b62-4171-98a8-dabfd7a050fe",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2ca06b4d-d233-4278-82bf-429a24f1819e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "4f50a56d-47bb-4f62-8f5d-5709f074049f",
        "cursor": {
          "ref": "69d4ff7a-735a-49fc-9c95-d3364efb4666",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c36fc9e9-e0a5-4905-afb1-b5991c302eb9"
        },
        "item": {
          "id": "4f50a56d-47bb-4f62-8f5d-5709f074049f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "49b87d1a-247c-45de-adfc-0b59a58f3019",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "88bc4ee6-14ec-423d-8c7f-0199fd31cccd",
        "cursor": {
          "ref": "a34b28d7-d84f-4016-9eb5-12c664c244bc",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "96cde61e-c5b2-4773-b011-a20c1d92cd8a"
        },
        "item": {
          "id": "88bc4ee6-14ec-423d-8c7f-0199fd31cccd",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d81c3b5c-fdbe-48cb-ae13-4743d08be7df",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 94,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "9d32a624-6ea6-4315-83e5-394c8f0c5163",
        "cursor": {
          "ref": "b0f13c4c-482d-47a6-934b-3bc8468022ee",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ae00deb3-8eba-4e53-a9b5-f4badc210422"
        },
        "item": {
          "id": "9d32a624-6ea6-4315-83e5-394c8f0c5163",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2df96ab3-b15c-44a0-b23b-f15c1b8bb4b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799bcbb9-b724-49cc-9596-4e404f6eb630",
        "cursor": {
          "ref": "d39ebc42-08f3-4162-9774-f4352e03ab71",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9664d1c5-4ec1-442a-8864-5b35202d56a2"
        },
        "item": {
          "id": "799bcbb9-b724-49cc-9596-4e404f6eb630",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "eb9c1044-aeb5-40d4-bbfa-dc607c83b92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0f678a-7850-4e4b-90c0-6d8c17e7394b",
        "cursor": {
          "ref": "1c3a87f1-538b-4f22-88f5-6ae15a59b554",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5f892163-3f95-4fb9-98ab-d22def567ab5"
        },
        "item": {
          "id": "5d0f678a-7850-4e4b-90c0-6d8c17e7394b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ec2aeb27-8453-447d-8502-d09799f21b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89de7d1-edbf-4de4-8611-a2b703fdc12f",
        "cursor": {
          "ref": "8d0de19e-f55e-455a-a374-ed3c912e2250",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "22529b0f-bfb7-4d1c-a608-6e7388d243d9"
        },
        "item": {
          "id": "b89de7d1-edbf-4de4-8611-a2b703fdc12f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6bda6bee-875e-4fde-9ad0-38713c504831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da22037-9060-47d9-a5e9-581e0087b1cc",
        "cursor": {
          "ref": "7e78edcd-407b-42c6-b02c-c47b4548d551",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "54ea9d02-0626-460a-a5d6-151833dc6547"
        },
        "item": {
          "id": "6da22037-9060-47d9-a5e9-581e0087b1cc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6e066906-3b80-48a1-8cc2-8c49b1a9e037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf99b0fd-6f71-452d-a526-11dbb58895d1",
        "cursor": {
          "ref": "bdfb7087-477e-4425-9655-a8f40a19db55",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f9627043-efcb-46f0-87f3-831822173425"
        },
        "item": {
          "id": "cf99b0fd-6f71-452d-a526-11dbb58895d1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a73b6b56-5d30-435c-860c-4439526d4df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd84547-0fe5-4e0d-8fc7-6da1a03f5311",
        "cursor": {
          "ref": "109d5910-0f89-4123-8018-4690bc0f579d",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ab912ffd-2a6d-42b8-8db1-3bc3cc5a6b09"
        },
        "item": {
          "id": "5bd84547-0fe5-4e0d-8fc7-6da1a03f5311",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1d956cf5-9399-460b-a658-a8127b5bcd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5d9f06-ad75-4e4f-967d-d73eb6e32fd3",
        "cursor": {
          "ref": "6a12ae91-a927-4386-87bf-f090105eea89",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fcccdd38-c844-4638-9295-6c37645794d0"
        },
        "item": {
          "id": "6a5d9f06-ad75-4e4f-967d-d73eb6e32fd3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "87bd2a50-fb6d-4012-ab5e-1083be99cc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074f8f82-f34e-433c-8664-05b86e881352",
        "cursor": {
          "ref": "bf9c7d77-4054-495f-a1c8-4c9f4868c9c5",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "89b0092c-1415-4484-ba24-a2a8036a0329"
        },
        "item": {
          "id": "074f8f82-f34e-433c-8664-05b86e881352",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8f6c699d-6e24-42d8-a988-2f6ef7c977da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6774c577-9ed8-401b-9ce3-2e01c125bd05",
        "cursor": {
          "ref": "8740d22f-5d00-4dad-ae9a-fed4d96bf0f4",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "50b37ba8-6aeb-4bfa-87f0-472bdb58e10c"
        },
        "item": {
          "id": "6774c577-9ed8-401b-9ce3-2e01c125bd05",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "59f962b2-a80b-4fbb-ba3c-15b7f5c442da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb7a64a-bd38-4882-a646-efbdfdeee2a4",
        "cursor": {
          "ref": "08e0c315-4681-4531-bb2d-5b87c405c330",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9f1262a8-6d2a-4c77-898e-88e3d58d1d2e"
        },
        "item": {
          "id": "3cb7a64a-bd38-4882-a646-efbdfdeee2a4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a4d21211-1f5a-4711-8a0b-2811794291da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a4bbeb-9a04-426f-9700-0d899da51af3",
        "cursor": {
          "ref": "276be2fa-6e0d-495f-902c-6fc06851eb48",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3a8c29eb-a31f-4c1a-bca8-a8fab4eb2c63"
        },
        "item": {
          "id": "63a4bbeb-9a04-426f-9700-0d899da51af3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7e575d53-30c4-46b8-90e4-ee6e5892623c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff84271-a5b6-4259-a070-08618c745f53",
        "cursor": {
          "ref": "d681a164-2b9c-4ac4-a3c8-12f4c42e9f52",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0a10886c-0e5b-4a2b-93e6-df1b500cfdaf"
        },
        "item": {
          "id": "4ff84271-a5b6-4259-a070-08618c745f53",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0740982c-47dc-468e-bc0d-eff78b76100e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e5b36b-ab1d-4d29-8b87-2b355ec914fd",
        "cursor": {
          "ref": "cda4b075-e7e5-436b-ac6d-dec9079975f0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "703499af-9ef2-4ff5-9290-9dfa29e9cc18"
        },
        "item": {
          "id": "b0e5b36b-ab1d-4d29-8b87-2b355ec914fd",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9068cc34-5a45-42d2-ad0a-b1aab721484f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56aedc73-aad2-4913-a0c0-af27d4055bec",
        "cursor": {
          "ref": "7fdfa744-c975-464f-a775-c51b7fb9cb1c",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4e4549bd-9571-4033-99b9-8ccfdee2aa41"
        },
        "item": {
          "id": "56aedc73-aad2-4913-a0c0-af27d4055bec",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "de305878-7cfb-4f76-a64d-a62968eeac25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e35a46-3b47-4b1a-b44c-919c384403ab",
        "cursor": {
          "ref": "396867e9-d393-46a2-be0b-02ee78abf791",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "78348c2e-e760-47bb-90fa-05674262fc45"
        },
        "item": {
          "id": "d5e35a46-3b47-4b1a-b44c-919c384403ab",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6d8a8477-3471-4718-8df7-e9ae2e03afee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d21c5f-0ec5-4659-9783-2cd46f50b807",
        "cursor": {
          "ref": "79fe8bef-852f-4d97-b61b-51d1955f9f39",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f122d351-9738-41b1-be2e-6a6bb3546f22"
        },
        "item": {
          "id": "78d21c5f-0ec5-4659-9783-2cd46f50b807",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1424f2fe-8f8a-4318-9a19-7826692ee066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e03d44-53f0-42b0-9f46-bef9a0f98280",
        "cursor": {
          "ref": "9153da6f-3513-4d4c-b709-20b617bf0061",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5fcaff7b-2f6c-4539-b6c6-ea0d19f1e923"
        },
        "item": {
          "id": "65e03d44-53f0-42b0-9f46-bef9a0f98280",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "73ce3d80-c73f-4be1-8d61-5a69692c8046",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "3a8ce215-205d-48c5-aadd-0958781156dd",
        "cursor": {
          "ref": "679730ef-5f21-4cfb-b091-5618fb07fb00",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4d409a24-1a5e-48f0-9fad-e39ab53ec9b0"
        },
        "item": {
          "id": "3a8ce215-205d-48c5-aadd-0958781156dd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "79133660-fce8-4d00-947b-618c02f8ef39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f4ff05-c615-4b6d-876c-1e1794bd9340",
        "cursor": {
          "ref": "354e84d5-fde1-4df4-b88e-da95402d08d9",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "85ddc76b-12e9-4559-8869-511d2648796f"
        },
        "item": {
          "id": "a5f4ff05-c615-4b6d-876c-1e1794bd9340",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7a806e9d-d230-416b-9af0-6293539e245d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e5d15b-f9fd-45de-afac-2a27b0a44800",
        "cursor": {
          "ref": "fa7c4a75-0beb-4631-9402-47b08d7677d4",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3028aff3-d41b-4690-b1c1-9471f930fbb2"
        },
        "item": {
          "id": "a7e5d15b-f9fd-45de-afac-2a27b0a44800",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b4c032c2-e546-40da-8d10-447977a44239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a195824-54f7-44c5-953f-ea08d1358f50",
        "cursor": {
          "ref": "0a827dbb-67d8-4c37-8295-d8f554a99925",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b3a5530e-479d-4f45-a6d5-bcdc99cb3fcf"
        },
        "item": {
          "id": "0a195824-54f7-44c5-953f-ea08d1358f50",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "857f047f-2e53-46c8-a74f-12fe54f1ed65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ca400d-079e-4715-8758-c0735358ab3d",
        "cursor": {
          "ref": "a87de388-e3de-4ef4-96c4-568e8d5683e2",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0d8d39cc-ce82-47f3-b567-6122e287f91d"
        },
        "item": {
          "id": "d3ca400d-079e-4715-8758-c0735358ab3d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "16468808-85a8-41f4-9ce0-12e3f0299812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac60c71-b6f7-40d6-b1ac-126e0de72d37",
        "cursor": {
          "ref": "28c51411-113d-4fef-952a-7bc2efe4e2cd",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2b3145ef-8aca-4131-a5bd-735f522d8731"
        },
        "item": {
          "id": "1ac60c71-b6f7-40d6-b1ac-126e0de72d37",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b863219f-ffd6-46cd-a703-3d3642f3b368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1d4675-4872-47dc-b1cf-281985d60d6a",
        "cursor": {
          "ref": "4fa65da3-702c-4272-aa02-8feadf57be05",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "421b3055-f7c3-48fd-bea4-289038745e37"
        },
        "item": {
          "id": "0b1d4675-4872-47dc-b1cf-281985d60d6a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "047c0803-ec84-4e93-8bff-76a74351cdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f9aa1d-c52b-4a84-894c-f6119ac26aa5",
        "cursor": {
          "ref": "3b4aacc4-00b0-4d2d-99a0-3b2c393f74f6",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a6f4d2f8-660a-43f5-9566-0daf161610f9"
        },
        "item": {
          "id": "43f9aa1d-c52b-4a84-894c-f6119ac26aa5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ab95534e-7f4c-4e95-b076-9199d5be8c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3dbb1a-a4b2-4230-ac60-b7ce4ecbd2a4",
        "cursor": {
          "ref": "e0583d68-9ef8-4a81-ac8d-de6f0b7e9d8f",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "071ce243-2ed2-420c-9fab-a251c87271fb"
        },
        "item": {
          "id": "ca3dbb1a-a4b2-4230-ac60-b7ce4ecbd2a4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "99dead68-fbfa-4238-8f45-a95108df80e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1175ceda-60e9-447c-abd1-e1b5c8270e8e",
        "cursor": {
          "ref": "4144ce25-1b95-45bf-9e52-e897330e83c3",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "eb011047-ed9f-4235-9fc2-0c36d50e4cda"
        },
        "item": {
          "id": "1175ceda-60e9-447c-abd1-e1b5c8270e8e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1e861132-0713-4e40-a333-641560b38049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7eb250-6bf8-4332-9542-1a7d8edb7c43",
        "cursor": {
          "ref": "a9fbc523-f676-46d2-b96b-356c2fb2204e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0910ad44-e17b-4e4f-8916-50efdebddc82"
        },
        "item": {
          "id": "7f7eb250-6bf8-4332-9542-1a7d8edb7c43",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fb44e273-6b30-4c51-96a0-d6450de2e81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d53f5e-c202-46bf-a020-ef25bd52f54c",
        "cursor": {
          "ref": "4737dae7-f64d-4941-a087-fa4e7e3d67f7",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4c97cd60-aa8d-4584-9c4f-33fe4e4c265d"
        },
        "item": {
          "id": "d6d53f5e-c202-46bf-a020-ef25bd52f54c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "90284038-8f9d-4079-851b-27fa84e461ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e87ee4-c404-4b42-b6f4-2f4ef2c85170",
        "cursor": {
          "ref": "396062a7-1f8e-4f2b-8d52-c2d441250c6c",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5dfa0186-d3c0-472d-be50-48eb53dad6da"
        },
        "item": {
          "id": "50e87ee4-c404-4b42-b6f4-2f4ef2c85170",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0625c64a-7ae5-4f29-a50b-f00b3f49e8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096fa377-2063-497e-9f78-99d4d9670152",
        "cursor": {
          "ref": "e60e1674-cc6e-4e52-8d6f-5462af0022e3",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "13a67424-6f67-4f6b-8f3a-6fe32440f773"
        },
        "item": {
          "id": "096fa377-2063-497e-9f78-99d4d9670152",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "16cf4da6-de29-4f2a-9f03-b5adbdf747f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c31b597-d561-49d6-8db0-e0e0058068bd",
        "cursor": {
          "ref": "58666781-4d39-4844-b6ae-a6bd3d0d5129",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "97be40bc-6c2f-4b1b-aed2-ef3669fd6bf3"
        },
        "item": {
          "id": "4c31b597-d561-49d6-8db0-e0e0058068bd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8119b33b-08a2-46fd-9fdf-6100e4bf13f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bfb975-6ba2-4aa0-a51a-5755354aaac9",
        "cursor": {
          "ref": "40372dc8-6a1b-4a75-beb9-c63fc84eb9c8",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2add7256-a2cc-4123-b87e-11b3f54785e0"
        },
        "item": {
          "id": "64bfb975-6ba2-4aa0-a51a-5755354aaac9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c88fefd1-4ae0-4af7-9a82-282166fc1fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14ea057-4f33-4ceb-90b7-e58c10fcb788",
        "cursor": {
          "ref": "f972f4a2-d1cb-4465-80b1-dccfeca3b2f1",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d827918b-e4bd-42ff-ad77-2957acc5061b"
        },
        "item": {
          "id": "d14ea057-4f33-4ceb-90b7-e58c10fcb788",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "24a73952-3cc5-47ec-9040-76598ab955d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b145c5f8-141f-4640-8e34-c0a6739f2d60",
        "cursor": {
          "ref": "ffc9f2c8-9da8-4955-82d7-9f7171bf3fcb",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2f061718-74e4-465b-bb06-ce4baa186d11"
        },
        "item": {
          "id": "b145c5f8-141f-4640-8e34-c0a6739f2d60",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "95b28845-239b-4fa6-a82a-1c71291d30aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffb9912-d94f-43d5-9f82-fde669330862",
        "cursor": {
          "ref": "27ceff7f-9e41-41c2-832f-cba19d8df83d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0cdc7803-8547-45b7-9de2-cb24387a5e81"
        },
        "item": {
          "id": "bffb9912-d94f-43d5-9f82-fde669330862",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7fbdb90b-405e-46ac-af63-a2850bb02857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe0615e-1f12-4dfc-a77d-0a5691302075",
        "cursor": {
          "ref": "6938b9fc-3635-4105-a849-ecad8711a492",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3707b9a4-cd01-4ccd-936a-a88ee27162a1"
        },
        "item": {
          "id": "bfe0615e-1f12-4dfc-a77d-0a5691302075",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "69e2a72a-79f7-4397-b793-7bbc70d7adc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a47592-f7fe-4205-988e-a60be7076042",
        "cursor": {
          "ref": "25cd2576-fc69-4a7c-837a-124cd3cd3b36",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "253cbe6d-7721-4609-b046-963f08ee8c6e"
        },
        "item": {
          "id": "01a47592-f7fe-4205-988e-a60be7076042",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7ee820b0-b567-45fd-9487-8d34f0103880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd48d81c-0af3-4dbf-8fe2-249894ded497",
        "cursor": {
          "ref": "06a43f78-ecf6-420a-b510-199be2ff26e7",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3d5100c4-7f8c-428d-ac6c-68851b4e8b38"
        },
        "item": {
          "id": "cd48d81c-0af3-4dbf-8fe2-249894ded497",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0d8ab5c4-3cb7-4ea3-a608-303e70b067fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961fb1f2-8dc9-4ef2-9ee2-a75ca7153356",
        "cursor": {
          "ref": "ea1ca6e2-c9e4-4f69-85e8-11a566e3511f",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b50978cd-1993-4308-b262-80d5d7b34774"
        },
        "item": {
          "id": "961fb1f2-8dc9-4ef2-9ee2-a75ca7153356",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3167683b-7115-45fa-93d5-6e4b15ada6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10657982-b1df-498d-b81f-2e8241f02272",
        "cursor": {
          "ref": "ec0bef45-39e4-4459-aa12-5d702a4f7e81",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8d7c2808-52aa-42fa-aa62-7c548625bebf"
        },
        "item": {
          "id": "10657982-b1df-498d-b81f-2e8241f02272",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6015b003-0d01-4712-a109-f9e157c87412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7eafdca-5eb9-4e47-a57c-fe9cf4605d78",
        "cursor": {
          "ref": "a013f41f-d290-41fb-9643-aca5ff86066d",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "764b3c67-f05d-41e7-9d0f-99d44789c017"
        },
        "item": {
          "id": "b7eafdca-5eb9-4e47-a57c-fe9cf4605d78",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "94b89b17-7db9-4a0c-9d48-30aed0051024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c398732d-c3d5-439f-921c-6df8a989049a",
        "cursor": {
          "ref": "110c0d36-b9d3-414e-8266-a477faeccc15",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3e096188-fb40-4d75-b446-2e9c7ae3adf3"
        },
        "item": {
          "id": "c398732d-c3d5-439f-921c-6df8a989049a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a835cc8c-fe34-47ac-954f-c953a965d5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0c8c8c-af35-4b08-93d1-7d1abf8a094b",
        "cursor": {
          "ref": "61df4d6b-bc38-4951-b6dc-f6b98d31e1d7",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4bdac7cb-b7b7-45b5-b517-c586d42b3c75"
        },
        "item": {
          "id": "be0c8c8c-af35-4b08-93d1-7d1abf8a094b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4ec9a54c-9223-4404-b1c5-1cf1b54bba84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778ad3cd-20ad-4160-ae7a-353e678250b8",
        "cursor": {
          "ref": "4698a478-eb88-4c4b-b7e7-ad52c987250d",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "60a4ae3a-9ca0-46b2-85cd-6d335fea6d24"
        },
        "item": {
          "id": "778ad3cd-20ad-4160-ae7a-353e678250b8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3e055517-e926-4ebc-b96b-65622ed105a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f93869-5398-4f91-aa7f-7f66944c9723",
        "cursor": {
          "ref": "22f25b00-d357-4dad-99ba-12ceba3cff46",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5a8df236-839c-4d24-8fed-bb36c62aa972"
        },
        "item": {
          "id": "31f93869-5398-4f91-aa7f-7f66944c9723",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "286d2087-5e21-4e0f-852b-3288cf69b7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44185000-e127-443e-9915-042350862c7e",
        "cursor": {
          "ref": "3e40d395-0ff3-44af-8f13-a279dad5116e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e17f53a5-5c2b-4578-959d-7f1fc22bbf96"
        },
        "item": {
          "id": "44185000-e127-443e-9915-042350862c7e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7a892898-f389-4cb0-8ca1-7ca1c77fa354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22023c4-cb9d-436f-86c2-9c9d3f97a05d",
        "cursor": {
          "ref": "b55424dd-383a-46dc-99b2-1ba8ca8ba504",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cd932546-8f93-41cf-b540-2e8b8aa6ff64"
        },
        "item": {
          "id": "f22023c4-cb9d-436f-86c2-9c9d3f97a05d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "822b384c-85f8-4654-84db-193dc8bb8566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea650c1a-79f2-4dad-ab48-dc60be8179f1",
        "cursor": {
          "ref": "c03d82c1-89da-4e67-826f-21ebf0a7f12e",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d9b3c9c7-69eb-48ea-81f4-0bdbb13c0f01"
        },
        "item": {
          "id": "ea650c1a-79f2-4dad-ab48-dc60be8179f1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1c0bd559-7a62-4390-bb4c-cb7e0cd6145f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5ed731-cae0-4a14-933f-eadac345eab8",
        "cursor": {
          "ref": "d82e388d-102c-414c-aa8c-d2cd484fa414",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ef4d4cf1-a28d-47a4-9933-71750671cfc1"
        },
        "item": {
          "id": "ca5ed731-cae0-4a14-933f-eadac345eab8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "42695c02-bba0-4079-852f-64c74d43b4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402927cf-b59b-4cf2-ad7b-1c66a93e46aa",
        "cursor": {
          "ref": "d62d4c82-fa05-49d2-8a50-6d40018b8e4b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7a6f1cac-da38-4f36-8879-28fcfe094382"
        },
        "item": {
          "id": "402927cf-b59b-4cf2-ad7b-1c66a93e46aa",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d4a265e7-b57d-4379-8f21-74273ea86550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af126698-6559-4b29-9279-4e452f501f8a",
        "cursor": {
          "ref": "9500278c-7206-4cb3-a7f5-43ff02f7da6a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6eddc2e2-dfd1-4ce0-84ec-1948a5ced765"
        },
        "item": {
          "id": "af126698-6559-4b29-9279-4e452f501f8a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a7fe3b29-5ed4-4a67-af56-b5b5f0a3ca43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa45d3e-7f33-405f-82e5-5944b3f04e2a",
        "cursor": {
          "ref": "ad92ad8a-dcaa-4c7c-b3f9-14ba8f3deb2f",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "28afc457-e8a0-4829-bd11-eea546d83212"
        },
        "item": {
          "id": "0aa45d3e-7f33-405f-82e5-5944b3f04e2a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bde1a670-e81b-443b-83fa-c65c74269564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d33eeb-411b-4f72-8d94-18d89427e8f0",
        "cursor": {
          "ref": "d3b89b44-e1c9-4645-849a-6d15466bfa89",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "63916cd1-5808-46de-9edf-a6df67ef9cb6"
        },
        "item": {
          "id": "97d33eeb-411b-4f72-8d94-18d89427e8f0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "61ad3ac4-1515-4f18-832a-2024bf76df94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1daed175-0dd7-4ce1-b5a9-85036ec4cffe",
        "cursor": {
          "ref": "84dbf5d3-e6d7-4bd3-8e05-57a0ec25eea6",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "127fe511-31b4-46ee-8526-88da3c895ab8"
        },
        "item": {
          "id": "1daed175-0dd7-4ce1-b5a9-85036ec4cffe",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bff32dc8-0ae7-4ece-8a1e-c896396c4228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81c59ee-dc11-48c8-8183-419d9d870f25",
        "cursor": {
          "ref": "7888fe3e-4fe0-45c3-83aa-e558ad23d062",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9b278f02-560a-4119-bc91-80284df4c6b1"
        },
        "item": {
          "id": "d81c59ee-dc11-48c8-8183-419d9d870f25",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "980e2953-057b-4f5d-a895-6ca7240ba383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1b13b3-ee42-48c2-8092-8e699728e85c",
        "cursor": {
          "ref": "ac013f57-f52f-457f-bf08-d9d963c8703b",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f110d007-3637-4f4f-995f-4bb803a79472"
        },
        "item": {
          "id": "fd1b13b3-ee42-48c2-8092-8e699728e85c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2087c90d-5d94-4c71-91b9-d78e956f0163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09608d1e-3ea2-42f6-bcce-61203584e249",
        "cursor": {
          "ref": "0033572e-fcb9-4a60-b812-19248d34758c",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c3c627dd-aad5-4205-bb02-366e06c582d7"
        },
        "item": {
          "id": "09608d1e-3ea2-42f6-bcce-61203584e249",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0d605f27-b9b4-45dc-ace6-ce9523390779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0e3586-e4a1-404e-b161-78c3de4e7fa3",
        "cursor": {
          "ref": "516fecbb-983f-4ff7-8fae-2ac3027eab37",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9d96bdc8-9a72-450b-a8c0-85a745afd549"
        },
        "item": {
          "id": "bc0e3586-e4a1-404e-b161-78c3de4e7fa3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "28fd0f58-25cf-426b-9755-c1e649fec94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3354e88-1b1f-4e6d-a89f-1900127fc984",
        "cursor": {
          "ref": "5ba140ac-4928-4bac-a66e-616b309dd8ac",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c5321066-791e-45c5-b41b-86d31fa636bd"
        },
        "item": {
          "id": "f3354e88-1b1f-4e6d-a89f-1900127fc984",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d15d4119-9dc7-47dc-8982-116358d74de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a857fd-e001-46fe-b970-b0d25410db9d",
        "cursor": {
          "ref": "6a2c9fc5-ebb2-4f51-a36d-24dee6a636f1",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "aa39573a-740f-4c09-af22-7a9d4b2fdbac"
        },
        "item": {
          "id": "b6a857fd-e001-46fe-b970-b0d25410db9d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b6a38194-1138-45c4-9a62-4968211694f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd9fe4e-e326-48ce-ac84-d9585254291c",
        "cursor": {
          "ref": "71327953-b0c3-4b8d-9483-c735645c4a8c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "db7b2d79-77f4-4c79-a2ff-02531ae5b95b"
        },
        "item": {
          "id": "9fd9fe4e-e326-48ce-ac84-d9585254291c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "db201be6-7274-411c-924a-2e830a8893c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc10aa0-4267-4cf4-a881-551e4485a442",
        "cursor": {
          "ref": "65d725fb-73be-404d-b296-6ff45203f01a",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5d390d97-2f8a-4363-ad52-b979ee2a69d3"
        },
        "item": {
          "id": "bfc10aa0-4267-4cf4-a881-551e4485a442",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "eea117ea-08ef-4f0a-aed7-ec5ed41328d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c199d30-d5f7-4022-9f74-320ce83d19de",
        "cursor": {
          "ref": "6b8b012e-7b42-4ee0-bb34-496d66c99fae",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "aa5a1b31-db27-4f91-9d89-baa448c1ced3"
        },
        "item": {
          "id": "5c199d30-d5f7-4022-9f74-320ce83d19de",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b842ce67-6f46-4b93-aac9-43ce217ca897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3034b07-a34d-43f6-8299-a017c96b2055",
        "cursor": {
          "ref": "958252c1-d744-4200-b80e-8a1b83fe2121",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0ea58d9c-fc04-49ce-b836-2bade3f24785"
        },
        "item": {
          "id": "c3034b07-a34d-43f6-8299-a017c96b2055",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b3123353-3f51-4890-a0a5-1ff5c4d53d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7da72a3-fcb9-4ad7-a65d-14f3e183793c",
        "cursor": {
          "ref": "82d91c65-63da-4b71-b7a8-fc1063080b58",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ee763da7-9313-4c0b-917e-3cb4c0460a81"
        },
        "item": {
          "id": "f7da72a3-fcb9-4ad7-a65d-14f3e183793c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cdeb8394-d276-4da7-8303-5c23971a7511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681729a5-468d-4b29-b600-fbf5d64be453",
        "cursor": {
          "ref": "47aa7675-acc7-4975-9dd3-749e44da84f3",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "26bf6f53-9289-4ca7-bf02-1bc4457ea540"
        },
        "item": {
          "id": "681729a5-468d-4b29-b600-fbf5d64be453",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b596aaa7-9bef-4b8c-9de5-3c2e0d480392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c1cf6e-7037-4c40-99cd-4e703a851bc2",
        "cursor": {
          "ref": "e66441b5-2e99-4d8c-876e-6b1396cacbc4",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3bf0487c-3f4e-4c60-8c38-3ef3ba5f63af"
        },
        "item": {
          "id": "b5c1cf6e-7037-4c40-99cd-4e703a851bc2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "268c00c4-ba2a-475c-beb6-2863a79e8dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c81b827-b7c6-45e4-9bbe-4aa09fe7c526",
        "cursor": {
          "ref": "0fe5a88f-f3d5-4234-9308-4e9eb5a4c34f",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "42e83c85-8205-48fc-b5ff-db214ded6321"
        },
        "item": {
          "id": "0c81b827-b7c6-45e4-9bbe-4aa09fe7c526",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ffc530e8-fdc7-44a2-bd90-6acb8960940b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c573a4-0031-4463-8307-efedfabfdb52",
        "cursor": {
          "ref": "543e6c83-20d7-4bd4-aac3-b2889e8049f1",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9c12fc29-319d-4971-a265-b9417d6e92b2"
        },
        "item": {
          "id": "98c573a4-0031-4463-8307-efedfabfdb52",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b13f1134-cfe5-48f5-a342-0bc7444d3772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99989ca-81e0-4c3c-9b12-d1dc94ad571d",
        "cursor": {
          "ref": "805f4eed-9141-48e1-a508-b29660f86a04",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a2acb146-cfc4-4d0b-9713-afa3bd1f0fe8"
        },
        "item": {
          "id": "a99989ca-81e0-4c3c-9b12-d1dc94ad571d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2214f96a-87f2-4fc9-beed-7c3f4a3cea8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d240cd-b452-410e-a6f6-42fd5472b433",
        "cursor": {
          "ref": "abd3e88f-c438-48a9-91c8-c27f04f23dda",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "19bece29-c768-4c2c-811c-a70ca5f11f44"
        },
        "item": {
          "id": "16d240cd-b452-410e-a6f6-42fd5472b433",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0e29648d-5ae1-40fa-98f2-ebb7748d77c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eac2115-d9fa-432a-8b64-cbb2d4c0c97c",
        "cursor": {
          "ref": "d3cecb8e-f8b8-41c7-a769-bf9984a16a17",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bb47669a-31ed-4ee5-af83-dff2237b7b6d"
        },
        "item": {
          "id": "0eac2115-d9fa-432a-8b64-cbb2d4c0c97c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bb5af097-c096-4db4-b6f6-e0f8781ee619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0772b1e-4767-4a4b-a616-7292edf22bf7",
        "cursor": {
          "ref": "aba5cdf5-3d44-486a-88b5-5251c745fc32",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c6661cd6-14fc-45ef-a48a-326c71fdd525"
        },
        "item": {
          "id": "e0772b1e-4767-4a4b-a616-7292edf22bf7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a9c4e593-0f55-4762-b138-51fd13c46030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8239abe-f077-4a5f-a619-8470e0b78be4",
        "cursor": {
          "ref": "d32419bf-dda7-4a77-ae2e-e88c5bc52e7f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "789cc9dc-d061-4b25-9cbd-98277a42a053"
        },
        "item": {
          "id": "d8239abe-f077-4a5f-a619-8470e0b78be4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6c292780-0817-4c65-9476-67c8bdcc8856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fa6523-17e2-436b-afc7-edbcb5f7a1fd",
        "cursor": {
          "ref": "e5f86165-669f-4296-9860-7bc40ddb8b02",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e774e6b3-c8f2-4748-9d68-37615f16b276"
        },
        "item": {
          "id": "41fa6523-17e2-436b-afc7-edbcb5f7a1fd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6d52f2a6-9140-477b-94da-76e1e27cceea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca068564-cda1-48ac-b711-618f949a1f80",
        "cursor": {
          "ref": "75b23653-1f93-442c-8c96-b219ae5ebf2b",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fbf3a694-4a0a-4514-93ec-50635f5e4d5c"
        },
        "item": {
          "id": "ca068564-cda1-48ac-b711-618f949a1f80",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b0070771-9013-44e4-b63d-3f87ced2f92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f299f9-d21b-4a41-9d33-c5214d759dd3",
        "cursor": {
          "ref": "f2e2af09-7f8a-403c-aec9-8b8d1e39fcaf",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "419694c0-d2f0-4734-97f3-e9289453fc95"
        },
        "item": {
          "id": "e9f299f9-d21b-4a41-9d33-c5214d759dd3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3e5760e8-549c-49d5-bc53-de32a570327b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2723814-5ce6-4223-a2a4-96383c3ecfef",
        "cursor": {
          "ref": "f716f79c-01f3-4f0d-9530-5f2b70a96a17",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "efff462a-b96d-4247-8cd8-e6c4647a5dc6"
        },
        "item": {
          "id": "e2723814-5ce6-4223-a2a4-96383c3ecfef",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fb63508d-a91d-4153-8c00-4b8cd4ea138f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61597247-d65e-42de-95c0-f929b8dcd87e",
        "cursor": {
          "ref": "43b0ff96-cced-4521-a603-1f8f340316e7",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f0570d32-97ea-4d95-805d-b0fa770307ab"
        },
        "item": {
          "id": "61597247-d65e-42de-95c0-f929b8dcd87e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "471990e4-2422-482c-b802-d8a4053d9c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcec0bc-eb11-4b69-a3eb-883c3e0114d6",
        "cursor": {
          "ref": "2850a2e1-edf9-44df-85e7-579a91c486b4",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0674afaf-389e-4e5c-8fad-ded5587464d9"
        },
        "item": {
          "id": "cfcec0bc-eb11-4b69-a3eb-883c3e0114d6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "be0b88fb-168e-46df-b033-4af83d9315c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fdfabf-30c5-4fe8-a5e9-8c448b621a1b",
        "cursor": {
          "ref": "aeb11ae1-e9df-4820-b74a-8ae54efcbcc3",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a770e4bb-7135-4b1f-96b5-28c0c3fa05bb"
        },
        "item": {
          "id": "10fdfabf-30c5-4fe8-a5e9-8c448b621a1b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "176fe32c-42b8-47ed-8fa5-2ee98444d7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f8464c-0900-4067-b6cd-0a504ece23e5",
        "cursor": {
          "ref": "b9c08cb1-33e6-4eca-a304-a0ec8411449f",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a4f70860-e5fd-43a3-9a69-13a47d53611d"
        },
        "item": {
          "id": "b8f8464c-0900-4067-b6cd-0a504ece23e5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "04cf1f29-ac84-4394-9615-efbd6e68fd06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568b05e3-956d-4196-8700-c3baffb7feae",
        "cursor": {
          "ref": "4b9f349d-66a9-415e-95e6-746fa2113fef",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6c633dfb-a8e0-442e-a319-46beca6e368c"
        },
        "item": {
          "id": "568b05e3-956d-4196-8700-c3baffb7feae",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "395e611e-0ea6-484e-a22b-fcd2d2c20e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9607f8-f335-4998-bcae-fd44c95811fb",
        "cursor": {
          "ref": "c4fe7d56-4788-4f85-91f1-8b5f49776c83",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "04b2dd9d-493c-4171-80c3-8adb4e97b4bb"
        },
        "item": {
          "id": "aa9607f8-f335-4998-bcae-fd44c95811fb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a96a0330-fccb-4013-a4fa-140c276b3a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7905d6c-b01c-473e-9f03-5178a1d1e7d2",
        "cursor": {
          "ref": "8eeefc95-0172-4124-81ad-870c753b73e3",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3f8d214e-3c21-4fe4-ade2-52c822b0aac0"
        },
        "item": {
          "id": "b7905d6c-b01c-473e-9f03-5178a1d1e7d2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5fa58620-9787-42dc-ba1a-ee08fdb18c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ab4a5e-4ee1-4d09-b27c-dc4eb8404b8f",
        "cursor": {
          "ref": "01ae8e99-46c0-4be9-b4e0-b4841d759022",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d7708494-0d76-4071-bd1b-b8dc630b093e"
        },
        "item": {
          "id": "14ab4a5e-4ee1-4d09-b27c-dc4eb8404b8f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cd30c6dd-9641-4594-8349-81a5c920408a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2999d00e-b25e-4a0a-ab53-0c325b4949b6",
        "cursor": {
          "ref": "7fc3a23e-dc46-48be-be7b-ae5d40145bcd",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "25b49685-e6f1-4cf6-9188-4399969150a1"
        },
        "item": {
          "id": "2999d00e-b25e-4a0a-ab53-0c325b4949b6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6c7a8267-5f24-4f7f-84f6-d6dcb53b3103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295fd6ca-2063-40dc-876c-10ef1065391e",
        "cursor": {
          "ref": "564fabbc-9a1c-4c2d-92f8-217b8f7acfde",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ef3fb002-6ed0-4c7f-ad61-09d4f682839c"
        },
        "item": {
          "id": "295fd6ca-2063-40dc-876c-10ef1065391e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "33f31eb0-5015-4e00-abf8-88166a49ac6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9111db0f-585d-461a-8cbf-a5b28c079dc6",
        "cursor": {
          "ref": "0cea0034-d214-4535-81a9-89ba086fff80",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "da022da3-148a-4b7b-a000-f122a1113baa"
        },
        "item": {
          "id": "9111db0f-585d-461a-8cbf-a5b28c079dc6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "869dc712-0dba-4212-a063-2a23509b493f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bdd105-9243-42eb-8c80-23b7e24a9049",
        "cursor": {
          "ref": "3bbd89d5-a0f2-4b2a-a3a4-c39805cdc9bf",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ae4ec41b-2018-4d57-8ee4-dc1c31160869"
        },
        "item": {
          "id": "f9bdd105-9243-42eb-8c80-23b7e24a9049",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2f381a36-d9cc-430d-9007-665d67001044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc1734d-2559-48b5-be7e-7a39285ded6f",
        "cursor": {
          "ref": "180a71f4-ad5c-4829-b30a-c7a639fbc112",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4e009e61-e5c7-46e1-91d8-289ee6c590a1"
        },
        "item": {
          "id": "ddc1734d-2559-48b5-be7e-7a39285ded6f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2b9811d4-bcd9-49e6-b7cd-a9478ec62c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ba6c72-8b99-4fbe-98b7-47b3383d3ecd",
        "cursor": {
          "ref": "23cf88ce-54fb-4daf-85ac-9da82c59cdfc",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b3d3cafd-e559-4a19-b0a3-48e77c5b0b8e"
        },
        "item": {
          "id": "01ba6c72-8b99-4fbe-98b7-47b3383d3ecd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d16bd884-722c-4089-8bae-d13331e77217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f03080-e754-4c28-922b-d7071f9edf80",
        "cursor": {
          "ref": "612f6c55-7029-4bdf-82c1-572f73a7adb9",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3f076abf-eaf9-4062-ae02-77c1b2edac14"
        },
        "item": {
          "id": "61f03080-e754-4c28-922b-d7071f9edf80",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a288f68e-33dc-45ea-ba56-b4978a093284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b998be71-8a70-4253-9bb6-61e5ba76e84e",
        "cursor": {
          "ref": "70e321df-9829-486e-9a3e-cb14b487f6fd",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "473c7174-fc0e-4f6e-8594-0122fc8ea2ea"
        },
        "item": {
          "id": "b998be71-8a70-4253-9bb6-61e5ba76e84e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "979eed8a-6821-4f82-842e-5b2e07fe6012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77bf585-8869-4aeb-90fa-85a9f1b9791c",
        "cursor": {
          "ref": "3ab194c2-684c-4623-b8ff-2586d73da72d",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "86aeb257-0724-4699-81c7-4743f309f793"
        },
        "item": {
          "id": "c77bf585-8869-4aeb-90fa-85a9f1b9791c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1911f554-f6eb-4b18-9e0d-4da5646357a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572bcc60-140c-4ef7-9506-1700bddb53c6",
        "cursor": {
          "ref": "be541085-081c-4a91-9bc6-243d59dd6ad8",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b59b3349-e682-49d7-8e70-934aac881d87"
        },
        "item": {
          "id": "572bcc60-140c-4ef7-9506-1700bddb53c6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fd63655b-4fb5-4f30-98c3-1caeb94ca9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc73987-4e74-4c3f-ab58-07fd412b3160",
        "cursor": {
          "ref": "8f2cbf11-2cf4-4903-809a-4aa42ca1eca5",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "926cc505-51f4-435a-8ab3-93de96e48f34"
        },
        "item": {
          "id": "4fc73987-4e74-4c3f-ab58-07fd412b3160",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "faca016b-2fd7-4bd3-8d36-8b9f08efd0a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339c7689-9a38-4860-bad9-105c818d7749",
        "cursor": {
          "ref": "6e4dc4f6-ab62-4678-bbf2-acacdbbf4e2b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a7f46a89-e145-4850-b91c-81444b9a7ced"
        },
        "item": {
          "id": "339c7689-9a38-4860-bad9-105c818d7749",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0410eca4-8160-4b6a-a5df-113b6bd7be54",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aad1c0e-b54c-404a-8e59-60442002ec07",
        "cursor": {
          "ref": "ae74a447-a484-4520-a209-6453413bd7ea",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5d7180f6-81de-4679-b409-388fb004d464"
        },
        "item": {
          "id": "9aad1c0e-b54c-404a-8e59-60442002ec07",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c9e97539-452d-47aa-859e-fa140d135b4f",
          "status": "OK",
          "code": 200,
          "responseTime": 3099,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ea19a5-a3a1-471f-8017-b7ece46d8243",
        "cursor": {
          "ref": "6de4baaf-b5ea-4f44-9f6d-db94b89766ac",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f570d21b-71fd-4394-a6d4-c4d3500b111d"
        },
        "item": {
          "id": "a6ea19a5-a3a1-471f-8017-b7ece46d8243",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ff227885-3b46-4c9e-a0e2-7c3ca21db197",
          "status": "OK",
          "code": 200,
          "responseTime": 3583,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b4cd50-97bb-471d-8a57-db7904937298",
        "cursor": {
          "ref": "bfe70bec-317c-43d6-a055-9cd1c12e8dc7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b249169e-2b13-4057-815f-7de5330fda8c"
        },
        "item": {
          "id": "d3b4cd50-97bb-471d-8a57-db7904937298",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9989df15-2643-4120-a053-106dda3e7cfb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b4cd50-97bb-471d-8a57-db7904937298",
        "cursor": {
          "ref": "bfe70bec-317c-43d6-a055-9cd1c12e8dc7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b249169e-2b13-4057-815f-7de5330fda8c"
        },
        "item": {
          "id": "d3b4cd50-97bb-471d-8a57-db7904937298",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9989df15-2643-4120-a053-106dda3e7cfb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049dec95-192d-4601-b76a-cebdf6bfb446",
        "cursor": {
          "ref": "9b2d1dab-346b-410a-a50b-a91955a7918a",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3efe13d9-c45a-4cac-ae6a-a914cd0179dc"
        },
        "item": {
          "id": "049dec95-192d-4601-b76a-cebdf6bfb446",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "79629275-7bc5-421d-9df1-c8101d708c0d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679329c5-6a7f-4a15-9458-db95feadb1de",
        "cursor": {
          "ref": "bfae0bf2-ec8e-48c0-b4cf-2b11fa3a0038",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f09e43d8-3f85-4428-aaf1-f20705434b39"
        },
        "item": {
          "id": "679329c5-6a7f-4a15-9458-db95feadb1de",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5e5d0087-c640-41c3-a0a6-1fcd5ea2492a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}