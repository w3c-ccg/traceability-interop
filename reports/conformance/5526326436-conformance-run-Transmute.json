{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5e4b9b6b-dc0e-4d73-aae3-ad8801ca7a54",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9a9ebdba-9b64-4497-a0ab-a90f88fee7de",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30c7c9a2-931b-452e-9cfe-2b902ff2c677",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6a874d10-317f-4357-937a-8ece8e2677b0"
                }
              }
            ]
          },
          {
            "id": "c76e1695-6bbf-408a-b1c9-1909efe9909b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9bae06e5-7dc4-4996-889c-e87ee21dd5f9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4e99eb19-ef17-4292-a253-fc718b4ff629"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "686a928d-a952-410b-b2a2-a2204f6cc048",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1196b001-4285-43cc-8b29-3d945952ab51",
            "name": "Positive Testing",
            "item": [
              {
                "id": "662250b7-1f31-45b4-a87f-1121d3d5436a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cfbebf8-4faf-45ba-9b7d-0eae9f2a1d94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0e83873-5c41-4ae7-85c4-a55a8736830f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ca07a27-d261-4a95-95f5-fd415af78091",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "347231f6-f356-4cd9-86b2-46cf07b5c1e6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4c3deee5-d0ee-4418-9e61-d899e18cf684",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c056ffa-2820-49e7-a04a-ffcc6b3b95d5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a83b153-87c7-41d5-9066-b700274b5e66",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6cbab05e-14d4-4f96-a3e2-ee97a9e2d5bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58ef108b-b75c-480f-84b3-6a295e5bd711",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4abd78b-e6e4-4d60-aa06-3bab3d1f5604"
            }
          }
        ]
      },
      {
        "id": "2b75f6fd-3396-49f4-9cb5-c20e6ae6f914",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6f4d4567-313f-4af2-84a8-1f24c31e8b45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6c774445-1b99-4d45-95dc-9c0e7ac7fa1e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5c030475-d758-4627-9ab3-4dd0c59f08a8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0d5b39-600c-48b9-be3e-eb82205d0979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5e95b89-fd7f-4d82-9b21-324b3f6d336a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc27af8-a298-4ce7-b9bf-1afc5fcd0bb9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84d6e41-283c-4b72-a084-3487f124ce19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40f7355e-3116-4d83-9706-f354bdbdd167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4acd27-2547-4cb6-91bf-49628fcc3486",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a2c232-5e82-499a-bb83-f8861c1ca4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49f5d948-d8e4-46da-bc46-ea677053c937"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0462e24d-7b49-468d-8bc8-10795bed123e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d00066f-90a7-493f-910f-13dbfe936b95",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335cdd4e-5133-4173-a30b-e694ad7f497b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b37f2576-628e-456a-964b-c502415ca53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fdbf72-3db9-45d0-91a3-5571fdaf65a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c16fec-ff5a-47d5-b2d5-fd65929d0744"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "53765e53-06d7-4e7c-a02f-c7a9b0791bcf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e81e5e2-1617-4541-b73a-b204869db703",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ec3caca-9d72-4c80-a4e4-5039146d22a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "69d1e4e5-9159-4ff6-92c6-f5e7e9ebf866"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3aba6dc-3b4e-41fb-a910-349655150332",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "606a2e0f-d9dd-47fd-ac28-2866a5cca08b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2666815-d00b-4e28-aab3-4068baea5acd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba3890a5-7fb5-4f66-90ab-b0886d402867"
            }
          }
        ]
      },
      {
        "id": "7f6ea78a-b402-48ff-ac7c-aecee9a41209",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0086ba8c-a55c-4b64-88d7-ae582782f39c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa96bf7c-48e8-4e03-99e7-591c75a54b1f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "df5edcc9-2dd2-4256-9d8f-6d0f872435a5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c59b98-65f9-43d3-a9e1-9e8b44f0ef42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16642081-8521-433d-a39c-84a2b746ab9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ad92b3-4b68-48b4-bbbe-52c714c59903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b11a312-96e5-4f0d-9fd8-3397d019229e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdce7fb-34aa-4e76-938e-c432305329dd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587a1c85-db15-4915-b70d-b7fae6c145b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "440c7adc-2cd6-434f-a30c-1451f10007d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec80c5a-837d-48c2-8ab9-4f3350e25706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8e86e5b-ea17-4d4a-a103-25b19ddb769d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5532079a-c956-47b3-8245-7afc48dcf895",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef9fd4b-c411-49ec-bb7c-223fca1f237c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42c0de8-41bd-4847-9136-b0fea37c314a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3ef953-6a79-4eb9-a9ce-a49f064f59b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bd1e50c-3b2c-47ed-a730-21171083ee2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec463ab-3063-4c67-9a95-0372b916c7a4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157c5ccc-24eb-4c61-8426-026191ae15da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ef2acc-43b4-455c-b4d8-cc3af776ca71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80462ccc-7e60-4d56-8e25-11d411434df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eea9877b-16d3-48c0-8ed8-7083fa084e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0cf72a-c086-4964-9f20-b517b4f20b91",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fbf5db-7fbc-4d68-9559-4cf681413cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c185c2-1458-48a5-a637-5a26061612b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584fc743-50c3-4137-b97f-bda0c9034fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf29a7c5-6197-44fb-970b-0f3cd427b918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f56cfd0-f191-4ea4-8213-dc334b828d48",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06362d77-f733-4d70-bc34-2aa71440e837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f09b038-c6a7-49b0-be70-90ed5b729e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4547a2b9-8083-4818-ae3a-d4c2491adca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aca826f2-c141-42e8-a4fa-465e317d0d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134ad1c0-4620-4db3-bc2f-27a2ac6f0e18",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb88ffa7-9f3d-4f0e-b932-7738606309fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7744a0cb-9b8a-498b-a50e-b7728b9c70ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3c1c96-52dd-4742-b970-8b63d60a9293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b0e7ae0-64d2-42c5-bb17-562a1f083868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25af9c4-cce3-4bbc-a828-f0e1330af561",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d67abf-9bf3-4275-a498-8ba8c435e271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1499e0b-32e5-4622-ac99-35d3e44fa38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c169df-0c4f-4c14-b499-f86148ecdfe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a1bbc9a-f007-4e58-bc71-062c74b59831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471aead1-5f67-476d-96ef-b50e7b54839c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638ab605-0b54-412e-a1ac-47cf2fc98097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84def387-d43a-4ced-afdb-1f725f2c66ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea9d157-91e2-4e7c-b04e-fe7e9cbd80bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3682aaf-186a-4cdb-a488-1272b2a405e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2807260-faba-4f16-ba11-fadb9876842d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36a1250-8646-47ca-9bb1-e159cfef9b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82159746-b847-479d-a4f0-19c389d85364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0add65d7-c874-4330-846e-90095627514c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46bf4595-7226-4b4a-b710-63f868bb7639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15b2a3b-412f-46e3-80be-c3c793fabade",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe19f1a4-0a6a-4c4d-8cba-17b95662f52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4bc4ea2-868c-4852-a8d6-17ea52105510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b17ba0-188c-4154-9992-1d949bb50789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74125bdc-7fc5-4267-bc80-4f7bfee6b47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c8bd23-1d39-4597-bf15-92bd969e91f9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea28a83c-50c0-4a1a-919a-fb3d785598a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a11f6f2-e84c-4e30-8999-574db9bbc4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bc95bb-5960-45d7-99ac-50c747a7b07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c271e72-af30-448e-9ca7-67180f3052f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881da868-ac9f-44ff-9fba-17db35223985",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa190a3-3d95-49b7-9848-b3f85f0260e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10cede0b-46c1-45c2-8059-dd490dea60cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49d6b50-392f-40d5-a4f0-94deefb9e966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2ff3651-866b-40aa-8f0d-7f125b99e5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e23f72-d12b-437b-974e-4279d369d0c9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342f5bc8-2856-4244-bdc5-f4e0a71a11a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43826566-5ce6-4afc-a3b8-c97a0f45687f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3966668-3089-4a08-9b9c-ac04a373233b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce940291-5f65-4ebe-a03f-2dd471d28249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe4746f-34dc-48e1-adc0-10efd2af94ee",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933effa0-8668-4f89-aaa5-39854b4c7f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ecebacd-1ad7-42d2-ab76-ab68180cae47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df7bbb4-6f2c-4f01-aa88-c77669ef288b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f794a895-9e83-4c3c-8a60-4999f5a3c1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824ba729-c636-4b51-a60c-ae800cec812e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3332f22-d5f4-486b-8c4e-65c60f5850d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cac97de-77d1-4e17-b064-ec07c0ff81ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277f6a0f-7507-4396-a7ca-f174ed7a0c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1956749b-c98f-4bb0-8d4a-967171eff4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f527a6f-3b68-43af-9698-1c2f4fb25fa6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0723e3f0-72e8-4b62-b330-4affc00f768f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ecb1c4-a151-4320-9cde-765aaa320808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c916a9-4790-476f-b686-a77e94831e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1050ff87-b820-4bc6-86a6-ff063ca17715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ba46ae-10fb-4cdb-b053-fefa753f993f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4e827d-670c-4ee3-b2d5-d53cbd537993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cac2360-c78e-48db-929b-22813fb30200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e86884-3724-4716-a88f-5dd338ed11b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "37336556-d314-4729-9b83-244582cf165c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da873663-bf9e-453d-855c-228adbb15dba",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c49457-2492-474a-ba8c-5949ddf86b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd380bf-bfec-41b5-9489-f17757b0acd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60105ec5-fa4b-4ef7-a171-d040b9b40413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35b0de5a-6b3b-46bc-8666-e57d382b1637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b74e6e-a154-48b5-ba99-99d3df85c552",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc0a93e-a401-47f5-95bd-3d3c2acd2787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b422e6bc-b5a8-4a38-9ec3-4292f6c5ed1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557098ab-79a2-4831-87f0-8c14656918e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cdcc7c1-d8b4-4a16-8e92-f252f3fbe00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc7c42b-8623-4179-aa82-c66db0b25ca7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a794285b-f6cb-49b3-b8ff-a99b661d39a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94367c4-30d7-4d4c-b0fc-57b0bc4bc09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ccbc5f-e62a-4b2c-ad76-6c6c4afefa2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa7125e8-355b-4250-ab4a-340e3b71bc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b2c792-863c-44c0-a1b1-063e6df23b03",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6c9572-9975-4ffc-8e1d-08b3faa8d0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c66a3c3-357b-4c29-800c-e58853bc55d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3092b3-b93c-47d5-8f3e-08a12a35cb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd087142-6cdb-4727-86f7-c86fdf1c13f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eae16d0-39b3-4bec-829c-653a97e648b3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6160ac-e0de-426c-8c5c-2d36487c4194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021c1163-5644-417c-aa1f-05cb5f57a601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ea75e2-6d8a-45f7-ac9c-be5861976ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "684ea24d-f4d1-4d96-8f62-0e0b645d56fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731f27cb-e54f-4260-8453-0b6dcf38dc65",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b5179d-cd7d-4105-b736-18cddea6f72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce2b7c5-2748-43ca-834e-fd01af91d538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c40e902-0dff-4afe-a396-3168d17c6452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "71bcfe86-c12a-4be7-b651-8db683b83cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b20c05-6744-436c-a59d-e49f7989c5a8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d477d4-910a-4841-a58e-ba38df3a7189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e178e3cc-e5e0-4abc-ad3d-8477acfe1ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff85d498-b0c0-4718-b836-59cda8b6246d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbdb0ce6-b615-4be7-9bf0-8c36e860d718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945a3d5e-17a1-4fcd-8d38-9b5b06b2fe25",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b75409-317d-4449-b8ea-759c8363f9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c394d844-60f6-43ed-be07-13648845c9de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2159527a-f732-437a-9487-b484fb47a232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa94b61-57ae-4dac-8f1c-a55d22ecf78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab67ce78-62e3-46d3-9a41-07df7455e509",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc200252-8224-4702-8802-d0c349d28a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b992fce-e7f9-4870-ade6-935e13b11852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b379aa-7088-4bf4-b799-3c54f9d5ff6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7038af0a-253d-4727-8e5d-d82facc10101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6d98ee-4664-4562-8065-ada23458955e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49387d2-5268-4164-87b4-ae1c1387af8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c9eeba-929c-4dd4-9ef4-f3fb184e1bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5052d082-dad6-409d-a139-1d8360203b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "484f15ae-d2fa-4fc5-a66c-400401f91bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddbb488-30d5-414d-9000-fa7d1ea6dcac",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf95bc0-8323-44b0-91be-50f928b3f89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044d5cff-a3e4-4b5f-b05e-b18c2b51809b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80402400-52c0-4aca-91aa-73d06674ed25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f8db7c-63f8-43ef-8895-a5d15240c81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2dceff7-abef-4b64-aff0-c5e8a21bffab",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad83fb32-7f14-4fd9-ab00-672c7aba766a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d47fed-abcc-4fbd-98cd-c418e525ec4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b3cc52-9a47-4c74-be37-d3e8992eb3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "075103e2-750b-4d44-a93d-a88a12a1e879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e757125f-04a0-47c3-ab47-12ed71cc2bf2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9616c7f5-63ec-4fc2-ad89-8462a020acbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81aabdb8-3bbd-4c22-b99d-67d72fd90099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e82348-87ae-4860-84c2-84f6a950a8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "649e2076-f3a2-42b5-ac05-546d99043be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fd32fc-c8a3-4dbf-8cfc-101bdb44c0ed",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a46840-f274-44ab-9a1c-5985f097c61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d5c368-01c1-4e27-8e3f-bce77224d354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a166d9c2-f4f4-4eba-a030-d74d0a794e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55a61072-cd9d-432e-a948-c214ea33f50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3436def0-6cd4-4ab2-9b99-815fe2f9ae9a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503d15ef-bdee-463b-8107-51c0de56bf78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adfdca7d-bc86-4758-ac37-05970210b1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6f5d59-09d5-4ea2-83b7-a8ba4d64ef3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0743bd-4b93-4732-9f15-7fa196a07709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f171b7a8-3c4a-41de-8f66-2dca6fef274c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc25865-4255-4a65-b98a-d50448ad9c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1826abc5-2478-46a4-8a1f-0162b636d437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c89529-49c1-4712-adde-2b80c83ba85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd60436-6179-472b-9d2f-25429558603f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b2cf90-17e6-4564-947a-8ca9f8147c1c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ca62f5-cfbe-4eba-a4de-96a6236217ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28033b1f-42ed-4825-bffd-ed383340306e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077496d5-6f99-4ea0-b2e4-204c1e9f84b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "29e6d12f-09d8-4f13-ba59-4275cbcfb75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58275b8a-8b86-4efd-a362-7c0864382fec",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759dd1f1-d3c0-4773-8615-be4b0883f609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28958615-8261-4946-9ca1-482aacfd27bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89aaeb8-3949-4c72-980e-d88740b37870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f81b5626-6908-4b34-b3b7-a4c81247a14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c357516-bfa6-44a2-afc3-37dd381e7acf",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e63577-f694-4f5b-bfbc-188e8c8c86a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb600fe-6042-49f5-acff-34df70cc0903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda9b25d-1c62-4a0c-aac2-6ba216c990cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81522614-1cc0-49e4-9c63-3864b1e79502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50202d8c-188b-4d41-87be-de59fdd2a31f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f87ce50-7ef5-419e-b02b-0cdcd64dedb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f71e355c-d5aa-4840-8c91-71c586a5939a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0397d7d2-fc15-4a85-a52e-55002fd3d50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf94ad2e-7d3e-4982-8595-359869bef6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec72372b-bad2-4347-a36c-0ab856b06cb6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4fadfe-fc4e-45c7-87c2-98d5efa96b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9978dc-3dd6-4f55-a16f-bee7e0609fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3638525e-6fd4-490b-b90a-64883d6dbc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "baa30015-01dc-4f91-b952-aaa6ab3f6315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffba884-0f02-4ceb-8f94-820ded025429",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb1df9f-361e-4fd7-b77b-4346158f5b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932c83eb-2c31-420b-a20d-380f0ba27b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9927a500-5440-4ed3-98b6-c63ba8a00ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ddbe690-629c-4bcb-b75c-90d47c7ddcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8014d232-c28c-49dd-8076-c131a2f5ea42",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60563f9f-3669-49a8-b901-051cba36d029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7f9864-1af2-4a80-912b-9006e013539b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d192dded-e74d-4232-baed-ef22d958f21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "51524747-a5d9-4de7-97cc-877ce5987e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b2e181-4008-4806-923e-e065380f770d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5404cd9b-28f7-46b9-9065-cbe0ca69f43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16fa1ef-4051-4c7d-beeb-a00f3f3eb625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ef31d2-97bc-4db1-9f8e-eac695cf82b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e51d0c-71dc-4e09-aece-ec00134a4578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c9c843-8ed2-424a-acbd-5262f268b3b5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da712de-83e3-4909-a3bd-cbd39e960ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d669182-ee1e-4e73-82bb-d72ad7f3b641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36268b8b-0291-4773-853e-5b591052b3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c1aefc-f3e8-449a-8039-6b043c07afa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7343338-d32f-446e-976d-9ed4b0f5d7e8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758ceccc-92e2-430b-bb3f-48ec762dcd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3357a0bb-8f37-4e96-8587-a0c86d063306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003bcde2-97db-4c21-b398-5bc0c6265449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae257dd2-37a3-4d48-be15-c0217ceb98b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70abf66a-5f17-4026-af4c-392503e0aaab",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3d4047-e0af-4049-9947-f92f572ebfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260c37ea-c4f9-4d65-9f0c-817f1a51a6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76340b68-a390-4c29-87ac-bb4fd0b5764b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "68ca8337-4ecf-402b-a725-89486ea7f509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63d26ba-baf7-436d-bccc-50fd229ecd47",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df32b210-d3cb-4f90-bb82-4cc1a8c3a7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3481f5-3d2a-47be-a0fc-7ac2319fa57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed2bf46-12d8-4405-85a3-a3882860c204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e51faf6-9445-45c0-886c-aca39323ca8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f9b092-919a-439b-883a-b87baae27268",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f583e17-6bda-4088-9650-3c5569ecd767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716076dc-ee24-43e9-ba88-5ee7a6e2e18c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2a5339-f174-41a5-9913-803f04b35d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfe99c5-baa2-4380-a938-c403b810de40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc79eb11-944d-4919-b7eb-98c408ca7be9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01caf2af-3a59-4ec9-b219-c929e136107f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66c42e5-a5c5-4b5b-8835-182ce66333b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f43a7d-2573-42d6-a16b-e7a72162f86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4567b42-bd20-4a88-9ef4-3c18fcf1936d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595e3758-1199-4fa6-8f38-51c21015b005",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32476e9e-96ce-4e4a-ac56-cd9604c95abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacd78f9-ad7a-44fb-bc95-11ca079dde4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65363c6-4ec7-447e-9a37-ccc2b123dbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e5ff107-dac1-402a-8b17-de273829e74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b475dafb-cdce-4919-a78c-7f2c60f7b8d1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c998e4c-ea08-4489-b43b-c9937bd3b064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9dafbf-2864-428a-b54a-56e00f7716ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326f23a7-0696-4c7d-a836-52105b074e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7d6c45-e27c-4e68-9241-741901d199b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5132ea7d-88e1-436e-8ed0-da8b42b9a899",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c7bd4c-bb17-4cd3-beed-92294bb9f2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f85ea25-271b-4a5e-8716-a0db4f34e486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa35610e-9188-465f-9f93-2ac4de4452d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "24410447-b043-41d7-a99f-8c38b3c95828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be57b6d-dc91-4375-8368-6be9f79866b7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2c5162-d574-4dfc-aca3-b97ffbfe9dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "843ee5b2-b767-49b1-92cf-818e7d9a9309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac77a65b-1e87-4f78-9660-d59abd9780d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdfef6d5-378d-4b98-9e83-c43448732540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00493cf-d091-46ca-953d-dab299d5ef8f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416161eb-802b-438d-91eb-643098fc17b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c4b1d4-7343-4c27-80fa-dd69af402a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8a08f2-b507-4f6e-9f30-958a8335d997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de439cd2-34b4-45af-a9a2-d65f1e648c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774aa904-c541-4d59-ab4c-8d0626b33ccd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b1c0d2-81ff-4b9e-9f46-4fef4bba8a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca89e06-b6b8-4c28-9b57-f9fa9a6ae6ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ccb8da-7582-4604-b86d-18e813979c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c10787-3173-4ed6-8583-63fe895242cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1e381e-c853-43d6-9573-35fe442fc9f9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ab4ae6-65fc-40c6-9cf5-e87eb745db43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8406954d-6f6b-464c-8199-f216eb8664a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b23ac5-d074-4e30-93f5-d96323170c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77ddbdab-977e-4450-8f0b-c95fe0bccbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dcdaeb-00fe-4fc8-9b99-0620d4c2762e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc5871d-573f-4335-9d71-c251db296e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e15d91b-072a-4e2a-a1e8-374c949408f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4941016-1edd-4f96-976d-b87235594fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0f4cd869-4ba9-4e1e-9264-3780bdedd4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfec5d13-3f7b-4701-9eb3-9c3cd66a94ec",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47f785b-acc1-4324-a191-bdcdc8c45f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659d12d7-16b9-49fc-adc3-28255fd635b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666e5857-e14c-4344-a04f-79f1d31eed38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce05dae-cdd6-416f-8b61-c028b062d62b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b623f8c4-62df-45b4-a044-122a7cef11f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af305cc0-4d15-4c2d-951c-0ee650c92350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b1c9b6-92b6-4468-8d49-1869509faecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d285607c-3344-400d-b336-a835e909fb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b6a795-1f83-44b4-9a92-6bae97ca2ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155445fb-33fe-4795-908c-6fcc65353486",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf1d569-bd3b-4309-ae5b-32a34eca5be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06998e9-fd11-4cb5-b11f-41a2186dbbe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf756cb-948a-4e54-99b8-baad80b0c3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b844babc-03ec-449a-83d2-9914e4b2b9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efe7de0-ad25-43b7-b857-879e7567cdfd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5016ab9-564d-45d5-adb7-4365646979b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64145cf-5d20-4a9a-a1ad-5297031f8eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97dc48d0-ef2b-4417-be0e-55de011f6440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c4ec23f-ea64-47eb-ada1-b9976ac7f8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69323715-53bc-4789-9e0e-24aad009cb24",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67da12b9-5f3c-4258-8222-dcdf33ddf257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e05cb45-6a45-4c25-8269-3d7806e6bcdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f76a7cb-a21c-4540-94b1-05a362af359c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a9cca6-d6ad-4b19-8444-61946dd91043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff8e131-871f-47f1-9ca2-603ec2f28a45",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9145794-8bf1-4269-bce0-34760495924f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64273ed-2058-42c9-b659-58900959a274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b06fb9d-c594-4a23-8b93-3613d5896d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f9106d-26cb-4250-b3ec-2d4fe147dd90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14f6914-e6f8-4af2-90cc-51e8c9a6b1d5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89aec7c4-5369-40d6-844c-014595ca772f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9e69b8-42b4-41c9-b57a-4b0fddf5f199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26387eb-d1f2-4cff-b1a7-c0739d58bbc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "63dad9e1-879f-4896-b352-56aa612207e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3acd44a-df38-4324-b1e7-18c979246e05",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3572c9-3ab4-4de7-a3e1-d11043ef92db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2abe842d-1662-464a-89a5-f21109ab85f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6623a67-60a6-4445-8341-beae8fb30a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa95c8e0-14f6-4f91-830d-e1a058c78e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbadf57-2064-47fa-93d7-0b7f895695a1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b030fa9d-b271-4737-accb-63c84e89cc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60fc0698-227d-4e3f-acb3-c2fbbdbe8525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f8f0fe-2db0-4f6c-8ef7-e68239c790ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67dc161d-640d-463f-9a16-514d012c1671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4919264b-10f3-45df-9bc8-bdf4c33ca9ba",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8dba6f7-cd6b-40f0-980a-0a8d1faa3f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63de7658-db8d-47e9-a1ad-2ab91e57c7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3d05e9-5d31-425b-967f-ded43e66aee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c694ff5-8f7d-412c-a992-dc0cc9867e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e97fa3-ba97-40cf-b3e8-10dc2ee970e2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07215a3-5351-4676-b65b-6027cfafabc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c6a18b-ff18-4e3b-a0ce-c6545d82ba84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b696f207-8fe7-46dd-9eff-f08cb9a96e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5535d7bf-4d2d-424c-86de-05687b222027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba81de5-b2ca-4c67-a300-e89da1cef8f1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9d3d2f-9704-4610-9b33-a4f3411c8633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64eb8b14-3d5e-4d42-a56c-3011f8e8e8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2086503-d64c-4050-81f4-0af0aa4121a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "569db178-afa3-4421-aa7a-2a6269f9f22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdb2ddf-62be-44fb-938d-c57c9a4cf3c4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f430e9d-a4f7-4921-862e-487295e3a51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0545e54d-dbb9-4860-afb5-8f711e5d7a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef7a16b-161a-4257-8c89-c2864d67d7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5984368-e4ca-4391-a570-9a2ad9de4319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8513466-60b6-4e4d-b964-930340b16b02",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d672105e-6091-437a-96cb-0118d791161a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c47ee4a-1a38-49b9-8e53-89453855ee58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552defa2-40a2-43a2-8d7c-24e2b2bf06ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2058f20c-53fe-4f6a-960b-8441a61e5515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22795263-43e6-437f-8576-19892b32826e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0637bd9a-9159-45ae-ab27-995696001ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79923149-ade4-479c-834a-d54bbc428d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26eec708-393c-4fbb-89f6-d0734340ab9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89309761-5b00-4b98-a7cb-5fa14d66adfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bfd1c7-16c1-4fa6-934b-21a6c7e96b97",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a666683a-39d2-44c5-b587-24b6598475db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e8b73c-ea27-434d-bdf0-79bd6cf1573e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354e6a4d-2b7f-439a-92dd-70a948070cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92863eba-9257-42fa-9002-514bab00fbec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26843c6-08f6-450b-a5bb-ed59cec1e61c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e025c87f-2156-41a1-87e2-e9dc2f64c9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6416bcd4-a562-4663-93fa-faa8ab6bfb03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5db573a-ccf0-4e07-b815-98e3cbc32249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f0b206c-f479-4eda-b4c0-b9ebf8f86c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a9b362-d2bd-455f-935f-5a196f898f34",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4c984a-d69b-46a7-bf16-2c1b6a9cd19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47aedf0c-579e-4a2e-b166-af7ef6e36dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51259d0-eae4-4773-a663-bad40881ffdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "56443b25-cc44-4232-ab39-46b81d658e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d88aa77-1cd2-4ea7-9dd9-9bd13160c6a4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a925c3a9-3e4e-42d9-89df-9675f450fe2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f9206fa-eaec-4ecb-8865-c1f25e7818da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab071ea-eece-4de4-b80d-2eae56f07eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8be3b1bb-2a03-41b1-b71f-74a2f24e261c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8b9178-3b73-4053-a516-166b6a7fd15a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d102961-2d2a-4d2b-829d-e0fb28f101d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa5f9aa-6a92-4c4b-86ff-00807fd240cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76057951-bfee-48bf-ae2c-32f9063c3260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3910952-d81d-4960-b81d-7968bcdd9d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3eb47d-01b3-469d-8201-645d5f04a2dd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bcaf2f-7fd4-4cf5-9a3e-edfdcc80c0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2474a9a-06e9-491c-9531-517999715f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9c4641-3065-44df-a662-b76892adc703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64b15c51-226c-495b-a7e2-7a2c8d55acd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da554362-31de-4308-b66a-514214f8beb8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d03856-8055-42b7-a814-f0a7394eed91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea038291-3dcb-4829-b0cd-f2c361edd801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b26a5f-eca6-4ffe-ba4a-13b7c7901b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca85b0f9-85c2-4cb0-9b06-de425fa88aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c98d520-4282-4744-b4e1-f5d3113ce9e6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fc4958-8881-451f-b84f-6a56faf1f361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2499bf3a-c6fa-4dc9-970e-deb6c07d752d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e53004-7e29-41cb-b4b9-b2530174b7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1cbf590-e53e-4857-849d-9c9fba91f473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b53ac7-8e7d-493a-bd3b-1744c0a18603",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5224dc-d26d-40ba-b1f7-1c4fab8b58c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9898d843-901f-47c4-8fbf-2a4c79a652f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60dbf63a-cdfc-4c93-b4a6-ca17b4cfa276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83f0d3ef-4245-415c-8e03-1a1c2a3ed0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c97d6a5-c08a-4aca-9526-ef6cc2a440d2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948f026f-a95e-4e31-86e8-3e14533d49a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b3e54d-52cf-43ed-b4d3-af99b8cc9a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b17e01-fce8-4ce5-904d-7d187693a8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0c8a57-d546-4c65-8fc8-9c00209cfda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7add288-c496-4474-84e7-4da11398c2a5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918e8f2f-3d46-4254-af85-43f9623b7e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d409d9e-799f-418e-aaef-350fae474f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a241a67-280d-440f-a2e5-cdcd77459f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2ee679-5561-4344-96a1-b22fc7ce1744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89405f4d-b652-48ef-adcf-6a1c0e8dc3e3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc0bdad-1678-4aab-b4eb-bd38b12a5f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e43546-e11a-46e8-a2e0-b371a57c5c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55e8a8d-8bb0-4508-af18-6404b444027a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f00fb40-75b6-46e6-bce7-4f578259d36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c91766a-8122-42ad-8a39-0d825dd4a1cd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078f0556-7d22-4016-b351-0a5a98c08f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbff923-d631-402b-84ca-3efe2cfe564c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e4369c-2ae2-4d4a-8dec-7dc2b9dac2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34b1ace0-b248-4e71-829b-1bb23656986f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb17364-b50d-412c-a9d1-f85e1f152b7b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59d42eb-78de-42cf-b8f2-7a74062b6909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f5cfd1-96af-4e88-a842-b5e828adf354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03efbc8c-7d67-4e89-addd-418811de9cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ffdfe7-072c-4df1-bf4c-17c5cbaddabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c3ebf7-3ff6-4b02-a7b3-618d7e6cc547",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45358acc-cec6-4a99-a3fe-337adf5ddf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0fdb87-688e-45f1-acf5-eff54b66d287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275d6614-4cd0-48c3-adb7-bde348c22f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "271166a1-cdcf-4ef5-99e8-a2d2c1e1e89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61878f51-adbb-4a7a-8481-e9d5fd39e820",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00df4f5c-979b-4987-8231-01252de2bad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d984335-c14f-4a07-a43f-c527bc339fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f53a94-a865-4443-999f-a66f5e92c70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "389c4677-158b-4678-9f22-d13d8ad948d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be45d9c-eff4-4ace-86bd-34a186cc77cc",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe3ac59-40fb-41ab-94cf-2618c035ae30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7109a823-b02e-4821-9ec5-a938f8b5e2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8347df9b-e0a3-448b-bb04-77afc66dc075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "992d2922-3336-4b80-973f-649b88fbedd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11967ace-13f6-4909-9cb9-5cdfbe5d8965",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbe0dc4-13a2-4b09-bf58-a928b0a46757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21227332-d6f7-4055-ab41-3b31b5c84e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763f91e8-019b-42f8-9231-89e3f5f8aa64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f0ffaa-baca-4a4b-b600-0e8df5ccea24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ce6783-17c4-4508-b67f-b09e8c3bbceb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1304505d-124f-4fd5-98e3-0443e953c44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75eb98f0-5ae1-4f98-92d9-4ff78cb18fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40c3177-7d48-490e-87fc-ea13d2f2a82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "36d64514-84d5-4825-9145-d9f6e3992901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580dd818-6d1f-4a52-9f2c-bb21cf723b1a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112609bc-5756-40d3-8b38-f29e97d22c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c101a16-6986-4233-b7f6-b7202c9bdb26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fe7c01-806c-47b5-9077-fb71b82fb6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2758c0d4-3b30-4d59-a9ab-e510d7c3c2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0866614e-0594-4d96-929b-1907ad715e41",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a565af-d26e-47f0-a0e3-db97819a37ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "db20d28c-1d98-48ea-9a96-5c156cf93ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffe2d02-5dd2-4664-8f73-46a860924204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "521d908b-10a1-4d08-aae8-31ee9ef45731"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c48e8ed8-6b9a-4428-bdee-cb03e14db182",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fceb3def-e4e2-4cc7-84b1-9406b41d43da",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8176122-d388-42d9-bd6c-2ce48cc99259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1e2a0d1-1fb3-4db9-9dc8-047c5726442c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7730df7-ac34-45b3-9077-0477cfb19b33",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13e74ab5-0438-45a5-83aa-c1449ccd9eaf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d5e7f11-e20b-4423-8b0a-80126919858c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e5ad78e-c6e6-40c4-9a86-7b401c1013ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54f84816-722d-4291-a976-405c12f9fd7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd2ff673-927d-4241-9e41-3604eadfb0cd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7984bb2f-370e-4ccd-b368-8db3457c6e86",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "df0d28d6-0d27-41d9-be3a-153674c22cb5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4bf22051-4caf-4132-9bf0-be3fefe1962f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ecb053c3-8889-4553-b76f-83bef8aaf035"
                }
              }
            ]
          },
          {
            "id": "47f03e78-0516-4d65-a2da-feb4d3472bec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "005a1dad-0adc-43e7-b3fb-5ba6f72c6223",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dc45541-f182-4b69-88f0-093f6e7c9108",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6fdcce9b-0674-4e5d-bf71-dcccbba469bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02d8e7c5-1538-4463-9f9f-10e8120c9551",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b14c3aab-51d2-45e6-b56c-baf689081a1f"
                    }
                  }
                ]
              },
              {
                "id": "fc018f8e-a6b6-43b6-92c2-7d09459a909a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "356fae72-836c-40ae-b1c8-54b934d418eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01d11754-013f-48c2-a559-939b07885779"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0ebed1e-6e33-4ea6-9811-8950f7bea861",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "733936e9-85a2-45b6-9c21-18d4a5106902"
                    }
                  }
                ]
              },
              {
                "id": "c3b9f121-973d-4948-a6b9-435c785963bf",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fedb7576-60c9-43b1-b580-cd769b8394cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ac7c2b3-59a1-407d-8313-553e1c212144"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "594dc3f1-aa0c-4137-acd2-138bf0da820b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "49c67c91-ccb7-49ba-9641-867850cd6064"
                    }
                  }
                ]
              },
              {
                "id": "95f3651d-d000-4a4a-9327-7a239208e784",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "743ed5b8-0a1a-444d-8a63-ad7e1378549a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae676ea8-86bd-4e42-952f-ef289d410d6d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26b0007d-83d6-4bdf-96fa-5a1847a6e689",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "310b797f-cd8d-424d-9d0b-46eb3b1b76c2"
                    }
                  }
                ]
              },
              {
                "id": "78396b71-74ff-471e-8ae1-da5da6954331",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58d15d85-323f-4df8-8ec8-4465971b9257",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35bc557d-be73-47f3-9540-b4dcf2baf00c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61eee7d8-e8de-44f3-8d8c-2ab96db1ad6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "94b7501d-dbb4-4983-b6d2-fe8429bdbd4f"
                    }
                  }
                ]
              },
              {
                "id": "8899af47-dfb0-410f-b0fe-f304479d3004",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "edb3c2cf-baca-45ad-90ca-4e819f7406f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "335e1ab6-9c83-4492-a9b0-95a7b558c6ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d162af5f-f72b-482a-82f1-07dc15c88a5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8769d969-f9f9-4492-86ce-81e4211ac9a6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd43ea49-e862-4bc4-812a-34559dfbd47f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ea8a0cf-f893-476c-998f-7f638c97619e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9a7a0094-eca8-4597-8d04-863703098dd3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ac8d6c0-4596-4a93-b14b-27a2c6b4ce51"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d37cb478-c9b2-40e7-979b-1d73f30c99d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "791104bb-de64-452d-9beb-54bfbc2fcbfd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e904c7f5-51a1-4cb2-91d9-0ffad86022ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "802fc86d-b6e9-4b42-80b8-c860ee314044"
            }
          }
        ]
      },
      {
        "id": "4954ed5f-309c-495c-a1d9-f0f051113914",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8005d0fc-20bb-46c7-8d90-54ea31b0672b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c40e8871-096b-45b7-a93c-06cbd9d0f80f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cfad2d3b-353b-498c-bef1-855f655f4abe",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdca2a7-2690-499f-b08b-88c7a0264136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0001616-3952-4553-bf3b-50883121db6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42066bdc-b98d-46da-b836-d8bcfb56bb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c051596d-381a-4866-a43c-6c33a90286b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43baaeba-4bd1-41c2-839b-f74a79b6e341",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b2e8ec-cf9b-4434-bf8f-34f3074a219f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f980cac-30ce-4843-88e5-6f7dd762e370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5e9314-6b0b-44c0-ae5e-4cb4fb96074b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "03170ece-c5fc-4023-ae59-5eef20ddfaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a698f0-5c0b-47ea-9908-9d24be00607a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74df324-0bfd-4d06-b89d-6558fdfec275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53c58f5-2cf0-40e6-acf1-715739a4a9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fd7d19-a3a3-4335-9139-40869feb0e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ff5047-3467-4135-82c5-c7c36d1b2a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecfae1f-3678-4a1a-8317-10345cd6ca2a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3f9500-d22e-42d4-b997-e61450f335d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b16bae-4c27-4142-b08e-98c72bdd029f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754731ac-c52d-41ed-aa49-2c0561748ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "547391ed-6c0e-4ab7-915c-fcb202a512f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac78491-5fb4-4e7e-904f-ab0fcb9e959a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddf5295-d70d-4855-bd88-7418cc2f10eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7a7da6-7cc6-4ec4-921f-5183461756f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cb4e46-559c-40df-b977-ad069ceabd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd55c75-4971-46e7-a35a-4934a6b2bd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fe77fa-5e20-4f43-b613-6d19d4676ca2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a7823b-f316-4c26-9a44-d0cdab8afa62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa48144f-fbcf-415f-bf2f-200c2a359fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f31368d-1699-4e4c-bc81-136352e3e7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "986da51f-49d8-4876-8a44-ee1c4c082433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971448ed-00e0-4c5d-9f8c-f0e0d44aa473",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8a7ea5-b3b3-4c96-8d18-cda99ce2229a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffac8225-5528-43a1-bb1a-2c3fd5d24990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ad60ff-f492-438c-868c-a29029381bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8146a975-a335-4db7-a271-9de631c115bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07e4db9-0c0a-43f7-8711-2f116cae5f5d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3ba327-d392-480b-baf7-e685818965d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e889bd-e8a5-4f3c-ba56-16c648be2ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa35a4f7-aa3a-4bbe-bf3f-574c43dd0a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dad829c-cf10-405e-9c50-eee74ec4bd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c903a1ae-6f10-4b18-933e-d0c932413e1d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f816d6d-7d29-4867-97dc-3e70b260720a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f2c5c4-75e2-4404-b474-e5cf1195da81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ec252b-306c-451e-a965-5dc1ee6e1bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b674430e-ce23-4fb0-b8ac-836996ead537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7535367-604e-4be6-85c6-9b9a2a4c2473",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a534e7-88ad-4062-83f6-f3f4a646ae5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986a5325-7d25-4756-92d5-f5dba00f59e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d2600f-65c5-4405-9125-d4d0bc551b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6022ca54-4a6d-47cb-a3ad-106a4ef54500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246b4504-7c76-426a-9192-5d0e611eed7f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8d4805-8c57-4c8d-8540-5571bde3349c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cbdb8c0-932b-4ab7-89fe-c865e1a58cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d16442-ac5f-4f73-acd1-9f750cf9e7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "27b9f2c2-ecf8-4355-9624-3a58b43c0d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf83de4-d1b3-4d2a-b197-e0630ac56148",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23f40a2-7686-4def-bd5f-ee09121a7bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c203c9f9-2436-436e-9dc7-3fa36e1a3ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a4d38b-2c6f-4d04-99e5-3aa9a2648bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf3ce9d5-e9fb-41fd-84f1-6ae192d0ca3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0302772-b5e8-4ff1-9d58-58d5389bb452",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694a84c9-d9cb-4cf0-9788-4eeb1eff0321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383903af-d40a-4344-bddf-a488406ac59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0095ca-2a9f-4d7d-96aa-8ba23e93f515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "514be500-8124-40c4-842f-5bcb5e1627f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fba5c3d-ec8f-463f-8b39-aa23b87767cf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d467577-e612-41b1-9e5c-bb62322b9165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14d72e1-45c7-4951-87f7-09c80616492d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9fd5c9-6322-471d-a770-f40b6db9cce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "119611f3-e499-42ad-bce9-a4b6aac7d20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb33eca-93d3-4a16-93fe-b9f30dbfb710",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b040d6-1346-4e2d-9f44-d2cd448f2995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0156e8-e5ff-4036-a2a2-d08621400209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218fa0b3-b880-4bd4-a34b-0f3e195bcd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e05a30e-3470-499f-9823-4a33e90a002c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ba048d-1c88-44dd-a446-4f05b445eea4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407e800f-c944-44ec-b4b5-d65ab4f125cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9da6d1-026c-4ca7-b156-d1cea4af2839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d542aebf-6dc5-4ae0-a9da-6a0593bb1272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c180f19c-5be2-4b27-9627-8b23befc0cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8bac13-e010-4b87-9f15-85e8a9a472a0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c33b64e-e9a4-4d17-9c10-000a777bcdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d78fc3-15a9-491e-b4c4-75bc7de7bd1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d09eb70-ba63-46ac-8433-e56781ab0025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a06e98a3-cc12-42ef-8deb-734f9752c34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec3d8bb-e5f8-4907-8ce8-34e00628c356",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2af4e0b-7c81-405c-b9d2-730ba22a46e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deca0fa0-58d2-4fc0-b454-9319998f337d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205d3ceb-e313-4a58-946c-ed470ec51560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e8fe88-a9e6-4373-a30a-367cbaf3e794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ca3093-d131-4d2d-8404-9e27a301e547",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab698734-3885-45c7-a343-79387c4b1d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee1711c-f1cf-40a6-ae90-022da59f845d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5744af-a906-41fd-bdad-24798c549172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c398ae9-85d8-4862-a696-f5c724f6f70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894e10cf-6430-4ece-9ad6-671f51a1eea4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb0a4b3-985f-4939-9675-1e449fbb1456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd59337-c248-4c8a-b048-2ece7addaa59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c3fe45-deab-4ea1-9362-79a13315125e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a4d9ad-bad1-4460-96c0-febbf2dfa1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47af9c1-9106-446c-9b81-5d1e847d7c01",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb614c3c-90a3-4672-93bc-e5c53b1d31b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d255d8a-dca1-48c6-b70f-02db89c04c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e597d7-b87f-4c95-8998-88d6157e735d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d251e49-7c7d-4f4f-b561-b4dbd6e369a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25de8196-6b61-4a3d-8e5f-5fd5f3cd7fa0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ba8ca5-6eb3-40bf-9954-cc7183c48e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ddff6db-8c05-4c50-b0bd-a60a4f8d32b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c135259-1bf9-4ed9-a972-ddd90a94457d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f82a3963-6c94-4baf-b9ae-8926817c3d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907c2b86-a726-4982-845a-5e4cd0624318",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbef663c-9037-43ce-acce-97ce073a0d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28528c4-5584-4123-a680-b84336a3f500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254774b7-ae33-4c1a-b8e3-cc97599c1a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e483fe1-36fa-4b0a-a388-b5574e8dc845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7e5e8d-1787-4bce-ade5-0027bc471cac",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3911ad80-2835-4390-b9de-f23c5d4aa1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945ab63e-2abc-4fde-aba7-631041e0aab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0405795d-1e4d-42bc-9ba4-6d0bf424bba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0a9e35-05ae-4407-846a-f3fb0788bd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8579971-4fe0-4196-bfea-b83434cf1587",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135c9cfa-4bc4-4cf1-85fe-608793348743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3d669d-8a56-4d2a-bf0a-435bf8625f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d59341-6920-42f2-8b11-2e08b2c76d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42d29f92-e618-42b4-a455-ec9c90258754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba72e3fa-a445-465d-b018-eea2c2d103ec",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f622aab6-a17e-4b37-87b1-fe8504e81707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3b056d-11cc-4d40-83fd-1a55bf4628f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e02ae1d-0041-4b9f-88e6-f843ebad09cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "481b576d-f8fe-412c-b3a5-d458caca159f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70cf018-21f4-4d29-b152-65ea52c91aae",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6be9f02-a315-4c92-8485-8c16bf13db5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2649c3e6-5ca5-4171-9ac6-519041a03626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16dcc475-ec20-4e45-adad-520df1e080fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fab6aa5-bf9d-4d1c-a260-bd3251df244c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c691cf77-cee9-49a4-9f63-be3995796728",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bc1e1e-b5bc-4e95-a66a-9c4b970fc031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b17d8b6-2f2e-4261-93ff-3f671e535fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2aeecbb-ca6c-4bce-ac48-e71df56d0b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "898522d2-8119-4a2c-a93e-4906ce4a6817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4076c1f0-20db-4977-8fa1-b6d687e485fd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420b3f81-658e-42d8-9fdf-8870a8cd8e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a81658-0fe6-4300-a23e-8b824b14ff61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d5d718-71d9-4b79-b0c8-acb5a52466bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d482a41-55f5-47aa-ae23-ec283f92713c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b944f3cd-87e3-4802-b081-2fee0c22bab5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a32c1c-3ffa-4a10-bcca-d29b40150ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a202de-6dd5-4716-b792-0d27c78ee3c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb06970-8238-4f3f-85ee-1844174108a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cdf2426-0474-4afd-956a-31ac2a3f1716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7630de99-6edc-4cc9-91ab-6ab9b137cab1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83ea25f-4239-4537-ace6-b4b9199ef975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9faf7d96-bb75-4eab-a1cb-06b224b4d39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae80e79f-d650-4920-b182-5676bab10f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7702b54-2357-4ea4-a55f-b124d46e0651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194573a5-fc10-4667-8619-9657114031aa",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca8f7a1-b978-4d11-98cf-8bf5189e276c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7de1ce-cb64-4acd-854e-dc90bb5f4894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74abbfbd-8d32-4f3c-aeb0-0ec016c8794a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1cb2b1-0f36-4fce-af7f-bf141b3dfbd3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "93fb206f-7fc0-4a07-8985-81573bedcc17",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7bc27546-04e7-437e-9c31-16f588eaf5a5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023e5061-5e33-47d3-a246-de6e8352a1e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f3aa440a-e810-4542-83d0-873220d835be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "059756d7-1b95-4411-b4bd-408b2193a59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2af6cc4-d3e9-4f58-869a-38bbe931a985"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e77b12d3-42e8-41e1-9e51-613eaf64ca0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a8ae67f-2b0e-4dab-8321-6e463b542773"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ceff46d2-f68a-46d3-960e-9d09c084f2a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b61686b5-0a66-4398-be56-d41f5aab8389"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ab5af60-d701-4321-9b29-db215cf25b21",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2990573c-3fcb-4f39-b6c1-a5fedf22637f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18636b8a-4cfe-4761-ab80-30cef1479eaa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4cf0f5d4-0716-410d-b9d5-a3991d61ffee"
            }
          }
        ]
      },
      {
        "id": "443616ee-a49e-4783-9591-b976d1aa0346",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1e6f24d3-5bc8-43b5-ad96-cb34236bed73",
            "name": "Negative Testing",
            "item": [
              {
                "id": "383de99b-f775-4abb-9573-df900cd87a31",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c52733b3-aa65-48ca-bdea-62ec6d8b6007",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8d7616-fca4-46f5-989b-cac4094e4335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e136977f-61a9-47be-95be-e7acf65b9981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7dbd6be-dadd-418f-8f84-dd4fc0dbe72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d20bbc54-bd75-461c-a8c2-837802f56b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c76f10-b162-47f7-bd73-f04d39133814",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b54e2f-2b4d-42cf-9e07-b78e12cdf869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e5be1b-33ef-4f78-9e71-5065e5fe9145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab6b52b-ca13-41fc-a3e5-8fbeee557c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0dffe51-5e45-4806-a49b-de494fcea100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadec3c2-1134-493e-905e-9361f4511c3a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c6d2a9-afe2-49fa-917d-cc469fa8ef8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39048825-3462-4345-829d-e2b0066ab581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04548457-1443-4060-b2bd-41d5b8601bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1d220d-9b7f-485e-905c-be87c391d4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a779ce3b-b0e2-430e-9ee7-41cf6e4f9f3b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793ae0d3-5eb4-49f0-a284-d1a7ee5f1293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e093ede3-015e-4f08-8822-e7bcb9875dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee972bc-20af-4859-b9f6-77746c6e98de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be5e857a-e7e5-45f4-befb-7ad30eb9d41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00e7a5f-5115-4c4c-86c8-b528e6263d14",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c857de-0484-401b-88c7-d6bf548e20c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210b20cb-c9bf-4fbb-8a8b-39f41c997360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7a9453-592b-4c26-8541-9f9024234294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca60dcd-1a64-417a-9ccd-31d8101e0a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061a77ea-737b-487d-b917-f6812f015de1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdbd60a-e4ae-418b-abb8-907eef61eb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8661ffaa-e9b7-4e8b-b577-f478a98fd680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3eae13b-48af-4934-b21e-bdcfc4b179d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc505f3c-588f-4ace-9db7-fcdb1ef75bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddeac765-af5e-4d0b-8dcf-031583ba79b7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f2df85-888b-4b86-bffb-22e4da795277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee5162c-e195-4d0f-a599-5a76a96dcdef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817a5837-2cde-4833-8598-0f56cfb2d335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa19b6e-b1fb-4c52-962f-c33df95381d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754791b1-0cfc-4686-ae37-75cac6097afd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb6085c-2dfb-4c02-bbeb-5c41027a2e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef1991c-4373-43ab-9dbc-f8d649428c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a36fa7-dfba-48ab-b26b-ccfad776bcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48715016-4411-41f2-b11f-9c9233310d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c6623d-a218-4897-9231-8913e5aac7b9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99926eeb-9438-4665-958e-d948660fc028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bbf3ad7-2fa3-4eb7-8066-31a41d736077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cee9104-4a60-4ac3-befb-68869c1c7f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca11de73-7fc9-42fb-9b68-c575c4cde4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669a38da-92d8-4f18-a5d3-173bf6df301c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca269db-f5eb-401f-a1a6-f32c5518a367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7ec61c-600f-4433-9609-b1f92768bf61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b032b97-16ca-4d1b-89a0-ee4719e1697b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b01241-1f4e-4343-9d06-2c96234926a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787dfd72-3a66-44e2-93d0-faa364dd651b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2669cbcc-1866-477f-aed9-75337208cc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0acaaf-8fbb-4b17-a5de-fa2cb771476d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d4f571-318d-45d8-ae81-1b6483227437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "096d7901-736f-4ce9-8482-bfd517d2e849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef19200-0496-40d6-879d-83fd8ea87eb8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fa586d-a44c-49a4-8d44-8cd550bdbc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd98a378-96e7-400e-87e2-883e498b4d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475a99ac-3054-44e9-a27c-02748f98776f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1cb634-1618-49ad-97de-3c52e75b58ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7714f05d-6876-44fb-bec9-780a9a3e8d2c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9654d3f2-0995-4994-9474-d5e568265944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7589534-e524-4970-8564-102bdcb49328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4aaaae-ca70-43ef-9e45-5ea48d7086f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f47ec296-2389-4470-b039-9baf4e2c60b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17b009b-6572-4210-9333-118054ba84c3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73463f9-95b3-4ea9-aeae-a3b1bde496b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6dddc4f-2cf7-4627-b7f4-9c5393afe860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36183d65-2127-4da3-8ab5-f3df58a581c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c57b6eb5-5b32-4f2b-9e7f-cad9ba5d3e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9d7080-96cb-4d69-bc48-28f379aa93da",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab3bd2d-873a-42c7-a42c-36ff97f35f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1f5d4b-7b6f-4c32-8719-9397e2db6170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d819e4-adec-40d0-8b55-4e22d5cf0d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1d3bb2-dfd2-4243-93c4-4c07de76bbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec549c3-7a91-4473-b95d-8c8c22f2b723",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ba6c40-d675-4afe-8b62-713f82bd2eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9758bc1c-7c1e-40e7-8466-966fa79e34b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb365fe-59b1-44bc-b85a-d02f269d0ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "60b51fca-5b2f-4c34-b2b7-7562e8982893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e12a99-b71f-447a-ae44-168f14752611",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0142ee2f-3c05-4c24-bcc2-92440312275d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3bf1ad-3682-419f-891a-14527f43c78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbbe4ce-060e-488b-9f96-0c502dafe0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2181a14-8891-4572-9314-77b10e9b74cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a43169-f667-488e-a23b-0bad93f4e187",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e7367b-43ca-4717-b482-8eb09b9f14cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3b06b6-4954-458d-a34a-58cc158835e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d06deee-8ce8-48c8-a6f8-1913bdd0bf72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9aded2b-a0a5-4f43-bd01-fc344b438c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31d1305-9317-48c4-8141-bb85eb1188da",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcb0709-79c3-4865-90eb-f427f24ee8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29be80f7-5c91-4ddc-a37b-da5b84d46ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cd2563-9d0c-47e8-9ca2-2ad5515ca2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97843aa3-1980-4ca8-949c-cc532d7d7162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bfa38a-e524-4e89-91d0-d5bb95249d86",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb26ec75-b773-4a68-99c2-89c9cb6d5385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c76669f-a88d-4d58-946a-833ab1dc9603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278cf154-83b0-4320-83ec-1d8ba84f1b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12090f89-e00c-4414-9c0b-c45ed8871c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62b35a8-5e01-4211-8558-790c00f64f1a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec97a476-4874-416f-bf77-eca5bd137fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a97ddc4-95e3-450e-b902-066a28308200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18014095-895b-4c9c-8ce2-d3125a356699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "051a0272-b835-4170-aab0-dab3d6d856f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ca8096-2082-4a67-a623-14d9a5082f00",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fde2d1-d50e-436a-b990-d0003b7b0216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63278c38-ce93-481a-8c68-3e5de4e70e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7028c1bf-26a0-437f-a568-fb26b998af7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48d8e592-3b29-4e62-86f2-17c5e0adfe24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aea5315-64c6-4dac-aac5-0244eabe1f57",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d21c4b-24b3-4191-b019-417319f16851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ff8d9d-84a3-4b7c-bb13-bca887b19f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17631feb-c37a-4c9b-af89-32a06a77916a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a57fb1d-bdec-458a-9b1b-4214aebe2987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fca7caf-ff4b-4e56-acd5-cf31c8e270b1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e62eb61-9e7f-49b8-b7a4-1ba657345f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f9d2fb-c64f-4376-8b87-c114a242981f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0eef83-a827-40a7-881f-e2a648db5723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d2f1762-25ea-4a0f-b4a8-4bf2a4f14295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8154036b-4d14-4a56-ad5d-5d43c8ac48cf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35daae42-6398-4c51-9390-18da4ca6fb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a234a515-6d73-4345-8212-09497c97f507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908066f0-5e26-46e8-8288-f20215af3653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc05a4b8-68c3-4023-9c77-cb47ef6fd710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e710220a-698c-4185-bada-de12467c16b1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1e7371-b669-457c-b06f-8f8f26702a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60b86a9-6451-4308-970c-d1ee5d067d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53986bf-bbfa-4229-8e25-a7de1ab26532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40a8a2e8-8d5b-491f-a0fc-69f117db78e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35fc0b5-25bd-41dc-8807-265872e20981",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c9387a-dd98-493b-9814-025ce13ac43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5305023b-d53c-4c77-8aa0-65df7bd2d525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7032a62b-e3a7-4359-9133-471e842ecfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a704732f-0b71-4e68-8cc8-3a5b554b3067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f96d3a-b72a-4490-8697-6dace1518469",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ea682d-5080-448e-abc8-6827de38aefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750c79f2-c32a-4886-8829-d6eb8b3616f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e66809-c95f-430d-a130-14103ccd54b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5df29d3-ad8e-4325-b170-555f54fa345d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386fb2a9-93b7-4840-b9f5-25628088f6cd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79136b1-7d80-49a7-9515-29efa75318f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0adcf89c-2f7a-4c6d-a153-42fee6720d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab24fccb-81c8-433a-9f1f-e77b85c5e671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf647b7-cd85-443f-be61-091834d872bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca79d50-c859-48b5-837e-edac5247fce0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3bcbf0-a20a-4d31-87e9-4a9abdc6946c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7beb4433-68a4-47e9-a5e5-fcff7b2c003e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daaf6282-f4fa-4eb1-8440-6b9782d4a988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9204cb9-595a-4f80-ba26-9ed22e7f4a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1dc7a2-577a-4636-81a3-f47f5b6083e5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bb6e87-e1d3-49b4-af86-33c165362c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25e749f-ac15-4489-8c99-6c6161ce3a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed21e6d-5538-43e2-9d85-fb9d700c368b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c922148-3dca-4227-9bad-bb797f6f1fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaaf7d6b-b33f-4d31-b273-422939d5365d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bdda08-6930-4d26-a7e6-69cb17c7e70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417dbddd-e7fd-4a87-95f7-cf4d977a86a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af37abb-48bf-4a89-b833-65d270e340e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d185b76-f34a-4518-acc6-b7b593a80a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c7991c-8889-4da7-9301-466ac31f11a9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078064a8-84b7-4aa9-b923-f3b26a7c8c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca3e879-03ef-4cde-9bb9-546422353606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f67e27d-beca-48ed-b0f4-a7ffd9e0054e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6d7ad6-ddcd-48b8-b03f-bcf7861317e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968c1b94-3abf-4f9d-bf21-c395b7860369",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797f7d58-c0ff-42b0-8459-e2920bb2de0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67fa150d-1d66-49d9-85b8-12488f94a9b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd05585-c542-44ff-96bd-41434b269be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9bb83f-6f3d-42a3-8c56-d29f18d6952e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6cf989-c283-4212-99e8-d8147a868b47",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce80c30-8e50-4991-acce-72b22d86cd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9a81a8-fa6f-4660-9a97-5f5d9d656835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21303d91-3851-407b-81b1-95a6251e5c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2d0aa4-7d16-499c-b086-c5575ad1fe16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b66c81e-2258-430a-b1ef-bc155539e78b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9d66ed-5921-49dc-afc8-a9cfe015b5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7522504f-a4fe-4eb2-ad23-a3d2f4637bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d189b0-f39a-4629-9bf3-c2ac00c1225f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25c7ddec-09dd-4115-9335-9650d5f283ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600e8932-40d7-4258-9987-2995b6cd1e32",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69f4b82-b402-4228-854e-e7b229c5dddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a0f5da-ee72-40b1-ada8-711041be8f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47760b2-9fbc-43f5-82b1-9bb3570fe1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22d2073d-4e3c-4d5c-9f79-3fa0da7b98b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "265bfe17-3b54-4768-aefd-d77bb0538c43",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3b09712-3412-4700-9a3e-a9a694d62522",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723e077b-5a8b-45e8-98ab-e29650af5e51",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "66db7706-315d-413e-a534-bcbcc72ec285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32ea69b-875e-420e-803c-7569bafd81c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b302cf95-6495-46c5-b302-4f1e28bc8e8c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37f90bd7-1fd4-43e5-9b1a-2bd64743373c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79d334ce-1a35-43bf-80e0-46f26c417c24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc94d715-ad8b-4b71-a812-e91d1ea7b1f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04975585-2a5c-44fd-be54-c56bccb71c54"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92dac977-9024-4840-9ead-242aa7842c9a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ad513cd2-f6c4-4367-8510-ba833983a162"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ad98cf0-6dc3-4018-841a-10a0748fe597",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44453a9c-bd47-4f2a-888a-467cebaed126"
            }
          }
        ]
      },
      {
        "id": "e6f645dd-51ec-4eef-954c-bd111857a027",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "495c048d-7e1f-4b72-9349-fdef31d6e34c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09c7ec5e-91f5-4af5-8c15-42c7c9cc5b1e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "80a11592-76d1-4b94-a6cc-ea4117ebaa0f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93b76fe-a68e-4a32-bae1-3d1d43b32700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c40f2b8-2bda-42b8-a4d4-1e0be6043548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebadcff-d91b-457c-8e6a-ab8099939440",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4660b8-a1f7-41df-ab9c-b30044ddea23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd216d5-b329-44e0-8a53-aad07833a961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e450dd7e-36d3-45f6-9af0-df97996924f2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538855b1-7d94-40af-ac00-b0dc5f497402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd95336-5e2d-4a9b-898a-9237c0a83bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3981ba5d-8bbc-492d-8058-2277d07fd234",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777eac5c-d4a5-4b33-be00-33b074de4e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46434ecb-6519-4e43-a2d9-32814b297bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7186a60f-99f4-4483-86fc-693c4a84cc07",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdabd42a-0f5d-40a1-afd8-d751f2f449b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06253fa1-d911-4a67-a663-8c8928beba5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30597f32-9e27-48df-a53c-34e2953162f0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe9fd06-7701-4fcf-8c38-faf50966e2f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1c7042-da27-44b2-aebe-e78b347a76d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1833d5-a4c8-4d7d-9950-3b00549bf44c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe2faa0-df49-4247-b879-486b550faadc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daebe7f9-9be5-4121-8eb1-6aecfaa358aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e64e8a6-e454-46cb-acdc-ff8502b44316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2538751-7f6c-464c-8eaa-cf554ebc53e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05ae1ec-249e-4cdf-89b0-b00776d5c731",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d47dade-f20a-4d03-b709-0e8a83655f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dcb2461-dc06-4cfe-a1ca-59de2e675204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e369ad26-4c16-42ee-bf80-1577b2a5c1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4904c160-dcf5-4973-aff5-361f5824475c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73855f8-89a1-475e-ada7-cc2ea084ef8d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0294be15-5240-47af-afff-2f58ce282da1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90c55dcb-2ee7-48c9-bf00-74fa2dac2827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cf9c5e-b9de-451f-8339-84935e240c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f45f710-e4c9-4e55-afff-10dc1501145d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b67b44d-1e2d-4701-87ec-0fba0a0ea8ab",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b251aac-bd79-43fc-8b61-6b003cc29ac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df9eb516-0f41-4823-b91d-51e1502e228a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47dbe10-f75b-47c3-b583-d8a5c1f4fe1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42b6614-0b42-4d4d-a005-95881034a34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad95fb2-a2bd-43ba-9a24-50750a821fc7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a74c2b-3337-451f-86d7-4c51910ee624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9d095b-472c-429a-91c7-a787b5a651e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0259726-2135-4860-8966-9790a5224ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d6303e-4057-4ede-a0ee-04a48b6ab891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bc42bb-4d46-43ad-9ee5-ca6f03c14553",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b703e1d-46f1-4a94-9d0f-1988f95830b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f36dd8b-2c05-49ae-815b-1ca82d1b5b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73647056-dfdd-4750-8601-c1ac8d746999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02eb2c5a-c404-4e01-8ff3-f8a0f8e67453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471242b9-2f14-43cc-98ec-7eec1a4ac0b0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4464e43-aeaf-4b93-be12-2648b2a5270e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc67f6fb-6431-42b4-9f88-aba8c0a7c159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2523716-9256-4932-b13b-f25ad87ca93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50aec73e-6d54-4e5e-9acb-6d4d477d575c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab169129-9dcc-4565-b0fd-b704ac789d0c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a67ddde-72bc-43e4-ad31-542a3fd4f072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03bda7eb-be30-4a7a-a3e7-6c660d92ddc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6b1f1e-67cb-42aa-81b0-23dea10d528e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057df50c-451b-4df0-8a60-61202f7d615e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de73ea37-8232-40c4-8bb4-d898aed58af4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7280243d-3d86-4304-9307-79c28e024d31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9dea4ee-6753-43a3-99fb-e1ca5a20606a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a3ab5f-8c8d-4027-8292-36b1d22db56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be1b9bc-a734-4c1b-a0ab-bc6d15023d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaca8683-46ec-487b-8046-650bec2f6f6c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ba5966-e801-4a02-a153-2765fb7cd763",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b199c84-3c37-4646-a11c-b6956d770baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "733bd229-445e-43bc-95a6-fa347174c0ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904d6e13-ef51-4712-b153-03c10936e72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7715698-346f-478b-b1b4-007703edc5d8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e16bef0-0a2b-4e3e-89dc-8d52f405e430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b268db-5172-446f-a5a6-4ba15215d05c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9232f67-d6bd-4e73-a925-117fdd195e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de47a84-40fd-435b-8b90-9b8f9cdf52f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d9346b-9c87-4e09-8bf0-8dbfcf762e35",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab88c99-5cc3-4e7e-ac1b-77587170f042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996de4f5-5086-461a-abed-876c872db920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3577ed1-fb36-4ec4-8ba9-8927cf35c3bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d064a97-6ed1-43ca-8989-9bedc645f724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfeb60d-8188-4e20-a462-b034043c32b0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f899e192-0693-48c7-a15e-370b3d41eb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880b63b5-72de-40ad-9ec9-6742b46f64f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccf021c-69b9-4820-8268-4e9a6e1919e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c44b1fc-de03-413b-b71c-7dfe63a4a9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9de739b-f441-47d0-83c6-ac6cb2b335ff",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717dce4a-825d-44cf-a67b-5a0f27e2436d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "268e3de1-8583-40f3-809f-38ab5fcb7c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c5ecc2-7321-4ac2-993d-b563e6d259ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b3a284-ebed-4dd0-aeb1-2f8e9681088b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384a0be3-8fd4-4d02-9535-2814cc6bb118",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e71214-9155-447b-8e9f-7ba94647582a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7aa12cf-806d-4d2a-9cff-cc9cde36942c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdeba03-e1bb-4b61-bb21-231c84b68e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8530b99b-c2a9-4b8d-a4d7-998957497aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0624cc-de3a-43b9-982e-37cbb1d04139",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb635cc-3b6c-4b4e-9abf-a24438eeee35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604f414c-72cd-4a07-9b9b-54f9c8985380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6f2c77-77ad-463c-932c-2b32d291c802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26c0a93-6d04-4f36-8280-6cd8e2b0b0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff67ed8-f253-49ea-bb74-6eb9b0690c0b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d2b367-6570-438e-a3b6-270574b584da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00655d22-2432-4238-9081-f99bbe48936b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfd081d-7be0-4d68-83e4-c38aa76dd5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494cb227-d3ff-4eee-9bfd-b60047a8eb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a69845-f638-4b3e-9ad4-8be579babe58",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5776779c-14b3-4053-84d3-957b6e2f9b10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b55c0eb4-03ad-404c-9f6d-7f8e9123ad08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fff5ac-8f6a-4650-8e0b-b8ed8ee207e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d321ce93-d2fc-40c6-a9ab-fffd5f876673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ca8bc8-7099-4048-b390-399546c3595c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cf953b-0cf8-40af-9587-7133340c73ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1a31248-617a-4f6c-b768-3eab5b1d1f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51460fb8-9512-4af8-a883-cb757182c61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c73d950-916c-4cca-b9f0-de6a535ed7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a4ce07-0507-4918-a37d-133376041b62",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9678a48-83cd-482c-9c08-f2d9918543be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01b8c503-371d-45b5-b565-f3c2e03bfb01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d82714b-782c-41ef-9155-f32a796fab85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c17a447-b4aa-4d0d-a417-cabc4de05cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8bb5a3-1474-4827-8ec5-581ff36e4f70",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae6eedc-4228-4f02-90bf-2c611881e678",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eac5775c-9048-4b19-9334-a78e89746dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a80095e-fd3b-4b96-9ab4-d3b1ba80373a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e2683c-9d3c-4ec4-82cd-f43ee3e7fae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29127059-c025-40f3-9e4b-f9754ba7ae16",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fbfdf0-4091-4c8e-b18b-a184ba29b4eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae79ea1-33b0-4af2-974d-846a411c1285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb61153-fc1d-4305-bbc6-9d85ffaf9623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7517867e-bbd0-4ebb-9e34-bc3626529735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302dc9e3-ce35-48d7-9397-d4d4c2841ec2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd09f1e-7fc4-495c-81c7-a13bf93f278f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86c008d9-5838-4bee-84fd-aa0662db1026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7a2de7-af39-4782-94bf-f03059723cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1ba477-cbc9-448b-bb42-560eb1657d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439a6666-37bd-4914-ae1a-34de3e689da5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8219af2c-489d-4f7e-b579-47dde70f2706",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf6686b5-54ce-42f1-88e5-389f028de6a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "176d657e-b69e-4768-bf66-91118922dae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb55ad51-026c-4d3f-8f48-183add049b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9468f64c-6011-4583-96dc-4524d9834760",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf8eb99-5ad2-49dd-ba3d-a75638adef8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a24d806c-e2bc-4470-8990-0555fb8015ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9c3233-a03c-48dd-afd6-0f5081ac1563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70a6488-0f05-4003-bd6c-205c4391638c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09440b8-1e76-4d14-880a-5ff948bcbd2e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfcf041-b75c-4ec4-9a6a-866a21fff998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8acddcac-d099-40f0-913b-1130e50db3c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17654bef-488b-4bfa-8dab-13ae32c5310a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a0fe9e-7e0e-4552-8643-02ad99afae3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f86127-7370-4788-9a0c-eaaaad4ac05e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92571c7-51e3-48ff-bc99-4a728d1dfc00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad8763f-93d6-40cc-9d63-18fb8c149cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "853f974b-8dce-46cf-ac67-b44461cabde9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75886dd7-d3a3-490d-843b-3042eaae4143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb816fa2-fb59-4431-8014-a740b97339ea",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c27a8f-5784-49dc-8e4b-b6f7aba48579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bf7ba09-4961-4149-9662-8ae6dae486bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608dfdec-3c23-4bfd-889a-3d01ec5acd41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ed358b-14ed-47fe-9c56-cf1d3349c2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d970f06-53ac-4a64-bb15-05cea30c00dc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df92fa5e-b35f-4349-a2d7-8945734cd0ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3413dbfe-9506-4e4a-88b0-f137775324c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58e867c-5241-4295-aa39-b2fa20318f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9abed4f-7ddc-46d9-89f5-65c000c708d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aeb6ac2-3114-438b-902b-63d1a8b91374",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4c897c-ea42-4d6e-bad8-a0d7c2f0211b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6cdd0b-e2d2-4065-b87a-40a11e7b245e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd5b8b1-2f4e-4e13-8d8f-3adf32021233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0406e528-7f7b-42b2-9398-b894527aacc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b081b8a-5f61-446e-95a0-f5aee5ac07d1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942c04cc-39dc-4e2a-a5a7-3904ebd4fc15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e594db-9b8e-47a5-8d65-a90821fcd249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4beca6-c170-4ffa-82fe-edf34738856f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ef89db-820d-4275-9261-fdf76603afc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811633d8-f6a8-4c26-b48c-d576492a0e9c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd9e30e-d992-4ffb-980c-f2bb66c46139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0851f07-3df4-4ffb-a402-fe2a11253f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc0df5f-5ac0-4991-b635-ad711588ede5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87912324-f10c-4a57-bdf9-16f790d47164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db8c512-9bb7-4257-8d36-43fc720c9a80",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268d5c22-4b3a-4376-a715-3f60f9addd15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc8eaf14-ff3c-4ebf-ae90-2c9067369c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd16ef7-18fa-433b-afcc-12044741a363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bdf3282-ed51-47cd-992a-ccee0b31a37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3eaa851-a443-4e66-be07-4c40a429c75c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c275ba72-7938-4e2e-a568-2b816a5216b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94e3deb-72c7-42a4-91e9-af0a32ee7d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6366aa97-66af-41ad-8378-fb39bcf9f0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c10940d-bb78-4e59-a0e9-2a59949dde7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e627ff-4464-404c-96a2-a77db09e8337",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2461876e-4a0d-46c1-8b05-16b55b5c609b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b4304c-7041-451f-98ad-d41b2f3a8ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d035516e-d987-4847-8637-bdf32a56fcb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0617db-6d9f-41a6-b955-6599b6437e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b70618f-2623-468e-be8c-5dd55d559488",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76339a98-f3df-4648-b932-5e48ca9abde3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c32aff9-84c4-4134-baf4-79cc6f172d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685d1927-507d-432e-813e-e13b5fc76bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90dffc19-0109-416d-9eec-91a958ce04d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d25924c-7805-4861-a262-2667506f6fde",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61dcd277-c0f7-4deb-9d0b-386503c2729d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351e16d3-bb7e-4d25-9a34-78e45ff05bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdf0910-1a9b-47c1-8aa0-1d1763e4594f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142561d0-fc48-4de9-a0d3-07333a686548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf3da76-7a70-4ef3-9599-21b97afa6029",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2692d3-3050-4530-a5b8-83c588175c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc48e29-bce4-4632-b501-af2836fbde33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "575d0d92-9eca-475f-a24d-8ca985222643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4325ee-fc38-46c2-889a-ed80195c9a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7067a55-0d43-4432-b96c-c9dbdaaf0277",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e03f41-3ad7-4471-8986-9bec45b7f88b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa232d7-2c24-42c2-90e3-65db55edf2ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ed3be3-5221-42d6-8210-cb9ef6e174c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9010bbe-f84c-4a31-8a52-b83b23a483c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66535cc4-3209-488a-ac9e-c635a3b8acdf",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f137c5c-15bc-44a4-91fe-08f7d3ad61fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d78745f-4963-4636-b590-335eeb5800de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d85c8b9-6a37-41a2-a52b-9fa543d79676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba504d9-5a18-4741-a011-c91c25c48a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad72a5e9-84d7-427f-8033-5ab85c27f4fc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28efd34-6983-47b1-9696-db19bffe906b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c18276a-2370-467c-ba17-ecf2d81399b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7385b506-64ee-4144-9f77-ef388e40b72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0e757c-8490-445c-a40d-4b8169f5c73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90346058-84c5-42df-ab42-4ba5c74bd3ac",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c65bddf-019e-4862-88d3-f87520987d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb915b1-89a5-4729-8753-9c12397b3e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2f2ce5-d7a7-4fad-8123-be055cd339c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99d131da-d99a-4188-a008-acc4d4089304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cb3690-afbb-46a9-afe3-99585f19b36f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71acb47-96a7-4179-991d-a544d36ea9ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4dbfaf-69e0-416c-bdab-a4f5f7561057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb49ba0-c421-4e66-9e34-6ec7a0dcef42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c907b3bf-ed8e-47d1-ae6c-819facd4d4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816bd91e-87f3-401c-9d3f-8c4bfb0850f3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9c0b1c-a700-436d-828e-45b4fc9f6552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea07426-c447-4a11-b0d6-a55ba3af0856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c57e5a1-dc67-4039-9cde-80bb389f8210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58629730-edbf-4aea-9d1e-6b6665d5e8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2714a629-7b1d-4d2a-8944-4d4997dbc9fe",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f876b2-e15b-4f3e-9299-7bcd946537c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c29c81-d2d8-477f-9507-c6b50c80fe1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6251a8fc-61f9-48a1-a85e-ff5d6b995365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da1eb6a-97c4-4baf-9be5-883f398b86a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732685d1-b4ee-4847-b8bd-0e3d37dcfd3d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888fb4a9-6fc5-4f49-9c4c-27faf0128783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a5e8d8-c9a3-463e-a1da-c3525af8074f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517b1ff1-8fcc-4d9b-9973-a7c97079d606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3d2de3-dcc9-48e6-a698-d24cbccba9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5982c3-edf8-4845-92cd-1590869d7b80",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb2a722-be52-414a-9c27-b90bb5e96642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c7aa80-fb27-4315-9572-bf20980daea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3603900d-35db-4e7e-b31b-cced8d6c2c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f99420-a865-4ea8-b779-e02b4668d91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc3fb6d-d9cf-43c9-b4e8-867dae5ca4dd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef50de6-b100-448f-81ef-ca75dfbb8849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb74b420-8b1e-40d3-8ccd-63fa9deeec67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d393cc-91a2-42ec-bd0b-63ef66a041ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5489f7c9-15e0-4ad0-9085-60d9171739bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2043cfb-0604-4c32-b9e7-222e65bfe2ce",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6623bd-466f-4bd6-8fb0-a89fbd0d2226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a4a475-166c-48a0-a16e-f7694cfe5860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3e665e-9c90-45b2-995d-c2b347236821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1750ce4b-358a-4ef0-979f-1be42cd02d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8504f1a4-4f79-4972-8101-742a1c5a0169",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09228ab3-2444-4485-86c5-eb48b0539160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b1516a-64bc-4e69-bcf0-2a7791e7fdc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0e932b-d8b5-40fe-a0f4-7a8d0c56f027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "304b341f-5b58-4ed5-910f-e9c0f1b25fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd265f1-f9e1-4749-ba6b-22d4b485deaf",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5591119e-a060-484f-b16d-7602ac6ba9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07bc54bc-eab5-4040-bbd3-85c0f92162c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e965018-6459-4bf0-95a4-eb93e0877d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d762a3b-4c95-485a-9492-991d7ecb6145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ce88db-b5c7-48c5-892a-4000b3052935",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b325eef1-17b9-4edb-8500-21ae599d348e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209bb769-b3e8-4044-9998-f74bb6b04ed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d10f413-cc37-4e4f-b607-4b5423da363e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83355fce-2a8e-49eb-abac-04171d44efed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9815577c-f044-40a8-a282-8b4255fa6b3c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a422e6fc-0fd0-436e-9b95-b8ec33a4c1b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e93bfa4-b1d9-41cb-8c06-14adff5624a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa66029a-ae76-489d-86bf-6198b7842a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cfc1d95-9b74-4dfc-b67d-12e8671b65f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9dd3a5-ffd6-4f08-a053-efac4900d47e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7ae280-143e-4ff1-b831-faa4f04cc0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d231a3-92fc-402d-8977-80d6af6f4c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fc60f5-167d-418a-b38e-fe3c8e958153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779f4f15-786d-4fd2-a355-641a5c7dad86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f444641a-7d1f-4d97-829f-caf2533e926e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167b6a88-09a1-4757-95e7-bd43063437f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a35484-4eeb-4ad7-8b09-667f24ce3743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d42249-0957-42a8-a77f-a13ae7616561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8117926-7bc3-47ac-91c6-33d741d150b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2192ed-aed1-495b-8c69-111fec0642ea",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c081edef-966b-4c8c-809b-7d3311040fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb7fd7c-3dcd-44de-870c-97d740af5e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d88ab2-5e90-43f2-8710-ffe853174f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1daa0a2-e5a7-4dab-bbf6-5f65b89dbbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6a2eea-bca4-4317-939f-b996ede0b68b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e4fe10-958c-4cff-8141-3bdf11ff51bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2ab7a0-84f1-47a2-b04c-995653505222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47d5393-9eaf-47db-8b74-3253ae0dc049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eeed90a-9752-49ae-b60a-bd4cdbf639fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3260437b-edaf-413f-b70e-329845c83f6c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa905ce-1b03-43eb-9a1c-66ed39a0f679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0a6f668-a11a-4f5e-be45-e12dcb4d8731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa14b2d3-90ac-42e3-9c5a-7d258b4b27a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a9e1b9b-c262-499b-abe8-03248676cea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29ac1ae-4b11-42af-9d91-734d18334feb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bc4117-cda6-47e8-a84a-02bccccf8922",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65c819ce-e54f-4ec8-9d86-ed732937d586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1124e381-38a1-4470-9413-6665dabcc178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddfaa907-dd08-4ba4-94b4-70ae7412748c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff813f0-7e6e-45ee-845e-8670d8e99821",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a84b6d-eea4-4bdd-b5ad-9058129236fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "026516c5-70ab-4cf3-af1e-ef6dd5d92d18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e933d6f-40c7-4aa0-a3d4-de5e2f00c83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b6a577-7556-4597-b98c-bb0964cb2e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522a6f2a-9a99-48ac-accb-73eec84349ae",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6900106-668b-4749-86e3-f1ef2d0df153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6df9b241-fe82-4ad7-9df6-ff86f87929ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "309a2a7e-3b95-4b69-bb6d-35d1e4ca241a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b93abf-3f88-421f-9df6-14b7b982bb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0a3f61-f3f4-4c49-8eda-6fcb6f3bd456",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9ed76f-ea50-431f-8acb-590bb0495c2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c6ec6ca-b1e6-4fc5-813b-612403ee6fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2006f13-48ce-4806-8ddd-ffe2765a1473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80ee990-3bf1-41b7-b38a-1c2441615400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db0fb8d-e72f-46f2-ad51-cfed0ba93eb8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0592a91f-bf9c-4902-bf7d-fe17de9bf630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2607a76e-9cc5-4b11-898a-441293f05209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3394ba-34bc-4729-9a2e-b73ec7b810b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f923726-5c1a-4617-a87b-57bdf69db08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc8fb76-40dc-4517-9cf6-d0de8b51d99f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7882b67-fdbd-4b69-923d-51d1edafdfa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f559c0c-ddea-4cf8-bbb4-256a46eefc02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc244ca-994f-428c-8897-dc495d205f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1fe952c-6bf6-4c65-a67d-248c41d9deff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0578e92d-a2ca-4491-ae4a-9793f6c52e50",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec592b2-9aaa-4f6f-a40e-ea93824050cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "603351d8-28a0-4880-b6cb-6877a7247867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88533d9-99e6-4ed1-af8d-4a7a9698dadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5313088f-719b-4925-b851-46cb7bb81aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4058a8aa-0704-4aa9-a1c0-bf54c3f35eb1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b5201f-0666-4d56-992c-749bfd549953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39f18685-c476-42e9-a96f-beb60864190f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b5ca6a-8472-4fc9-a035-4071e9d7cc6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a185a94a-701a-4ea8-b023-bb2693d7944a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0bffbf-5f41-4fc4-aec6-4c8bf354d50c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37b4216-d860-43fa-998a-574294d27e95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c4f4387-6b3b-47ce-b8bd-9efdb23a2c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02576a0e-cdc3-48ad-a08f-77a8b2916cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04df9b3b-e881-48c8-9db0-aa5c496d5805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e1c80c-06d5-4ae9-a389-5c8a742e0ea8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49dc012-587f-4d2a-a420-a56c11ca97b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ed58640-ef0e-46fa-bf40-da96d0bed6dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf2b656-e84c-4cf7-83bd-706a47cd844e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016a108d-32db-4beb-84e9-ee539f069fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75184ff-2b8b-4509-b07c-ca4b6694f206",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a473a1d2-e865-4c93-864f-98c736e8f494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac42df5f-4f15-45ea-a9a9-94257e8e58df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5a731d-ee0e-4465-b645-1856d6b0fafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5283b99e-f043-43da-bd6e-ffda2aad25b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7d08f7-2963-469d-9394-982d068726e8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88fd3c3-a3c5-47ce-9295-7df9d86d3ebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7a16ee5-d84e-4818-9ebb-50ddaf811c88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4099e48-9e46-4b3b-889d-58149b8b0365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea1228c-12ce-47c9-8ca7-8c4d654a62e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e25779e-4c55-4c7b-b50d-7e6802566d98",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cead47a-a32b-41f4-8282-e1f8df6a3e19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06beb318-bcd7-45bf-b07c-86d0dbdec22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac93032c-ca77-4d46-a8f8-e31091b11779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ef2317-0349-45ce-80f2-ef66bd5747ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75665640-a6d7-4054-874d-1c00f5d47247",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f86e54-47a9-43e8-bb28-e95b65170b6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f000325-8874-4b41-81b6-580d7119886b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55045add-aac4-4f00-b505-604b6c3c4cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76fd74d6-24e6-48cf-9485-d2b5c432ae3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ddbefa-7f61-4f59-87f3-df8fd824fd64",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede66080-8339-41c7-8f16-eff551d26c73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0c6d8a8-5885-4698-a3aa-cba69658eb7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b47470-8809-4bb4-a72f-ca1149994963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5af1df9-165f-4434-8f62-105c25b14094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8f2fca-a1e5-40d7-ae7e-2279d180a73d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a59ac7-bfce-4e04-b324-9208cde3db99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fe6e8d1-b2c8-4dbf-bb98-2b01402959f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a0cb18-8eff-4437-9eab-e2a7409d4083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12eddcd0-ff47-4cb5-aef1-7a400174091f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb14f2d8-dc96-4f8d-b365-61c4ca71d9ca",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c14110-70b8-4e0f-9de5-e15235ef1968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cd35411-fa27-4c7e-87e4-8781d674552a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b74fe2-cafd-4a85-b3c3-1eafbb11f048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d926fc-014f-4c56-971a-19b48cd3ab23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d692d17-1a65-467c-9dfe-b6b67ae3c225",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bdb981-62e4-474c-971e-a1c08206e0a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6e881a8-4095-402e-ae95-399a0974160d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25faf31-9ca0-4b8f-9c35-139b13e5a4f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebcb798-76df-43b7-bd80-5b862fc402ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985a8977-f3df-4fd2-b263-4570d194f455",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bdca04-bfc7-44de-9968-a6ef5dede75a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b817bdc-7b4c-41cf-b01a-7b559d81bbb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aff256e-5562-42db-abb5-a7e7e90140a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a38500de-1193-4ae8-89d9-414ad6adfcb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04808ba-9560-4e4d-9727-5d194fa4db3d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e729a8-36f3-472f-bda3-3c4502f2722e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd7c1b47-a530-486f-8c54-9fc007572101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2205da94-9f58-4468-b525-b9f662578ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2565661-7e78-44e9-8f24-64d3dbcf37d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2fb36a-3fca-4eb1-bc29-63d03e06d833",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d99313-5b33-45dd-a87b-78305f07b640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f897ec26-710b-4949-9d47-22fb75645138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e506f61-c99e-426b-8d30-26c791f17986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a36754-59f5-43d7-bcd3-b3a91d4814bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ca4ce6-e9fb-44bb-a656-5db0b1a3afb1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81e448f-10a5-430f-964a-24c1dd6063e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2d892da-18d9-4cce-b1ea-b959f511430d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cb2c00-c444-4799-adc0-6a7756b1d8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1751af3b-ea58-459c-a5b7-4e8bd7568f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac31583-66a2-4321-af2e-0bf3f7cc9b13",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d281c52-523c-4b9c-8817-aa9012b743bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec3355da-a66d-4767-ba6b-af505475c946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053b4ceb-4023-4e97-b840-86843230eacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f5af32-8a6d-479c-aa8c-931ffe4c26f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2d3d87-8c20-4c42-9cbb-92e41869b85d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e5618d-0d8a-4090-ae53-e056ed7eec42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa37ded2-0482-4492-8439-eed7a8628ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77cd773-2477-4748-9a90-932fd7a2cc02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba7af7a-8f64-41f1-94b4-c6a4adeb2566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc24805-5600-41b0-886e-65cf4a3d5005",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99c22f4-367f-467f-996d-88c2395be671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f70426d-7343-4d46-8ebe-8f0f4390a5cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b68409-b0eb-4334-8cb5-ef5df536005e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3483f3d-055f-4df7-962c-0189c9c4857f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf971217-5712-49dc-8f9e-037374f3cc8f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1fddc3-86b3-4b9c-a4d9-6f130071b8ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55cdb21b-4f26-4347-9f4c-ae771a08488e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739c0015-a1a0-43e4-9dd3-6d92dda5a444",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3472a490-669b-4c58-afc9-a70461393b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93795e8c-b093-44b6-91ef-86400225e8f6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c696413-5643-4ff2-91a7-e65d603082de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "205a93f6-ec24-45a2-ac23-b708579365f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8092c8-13c7-4f8b-a060-5538728e88bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd61abbd-a07f-49d7-b111-2e6b86c804a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5506f08-d43c-499e-9650-33ab66dc7420",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8850beaa-e672-4ef3-b8be-b8832fbdf39b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3dd5afc-3e79-43df-b5b5-06aa6a64d974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f92d57b-8696-4160-ad87-c1cc6f88b759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d278a3-cd46-4f78-be48-a018d7a76fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db54b7b9-7aaa-4f9c-a460-519c7345aa7f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99f22b6-aa27-407e-92d8-e06cda3ea507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecb487d6-db28-44d1-be0c-789ad6665095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dccba1c-036f-422c-b600-c33bf5980792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc6ed56-688a-47ae-bada-06a0d47358c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f405a5e-b933-4d0d-b786-714478dc5cd4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748ef803-794b-4f13-be71-76df25d3d3fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb312f9d-dc08-413b-98e0-2260db3e2561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90711db-e476-47fa-8ad5-0cf8ddfa8baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "734f4810-f30a-4dd1-8d82-9aee45374bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb24151f-074d-4b7d-9f08-7b9fcead4de6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8d59a6-554c-4189-a0d2-9e58148b7614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c82caa5c-18ea-43af-b34c-016e06089b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afe35de-ec97-4780-9446-87ea80f1a995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e43176-965c-451d-8ced-dcde813a3795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0853ea6f-44a2-4eca-bc28-8e3d5d4c7c37",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8606e5-4a65-4711-8dfa-03438513452f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d3d0f69-713a-4b3a-a955-3b2bb5711ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29006f57-652f-4958-9174-0c0f885ddb0d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e053d4a6-ded0-4a16-a988-1e746f5b32fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5517b85f-18e5-4f2c-af88-3e8d6e60650f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cc8594-3ee7-4125-a2f9-0cf2d1e80372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f77577fa-6f71-4208-a369-1efcbc124a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b6042f-f505-4eb0-aea7-a554790de9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487ace84-dc8d-443d-9fcc-7d05acee9d5a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abee97c9-3e5b-4d9e-a6e5-ff2c72f03088",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a34e5650-5f20-458d-9e15-7067c73a1a92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fc13ae2-2995-43a3-89f0-776bfa4f3db9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "08029f28-81f4-43fd-9733-3255d57fef0e"
                    }
                  }
                ]
              },
              {
                "id": "b5b59ffd-ecd4-464c-8d88-14e876f5d731",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e0788a9-5814-47d8-a723-8104927dc486",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3280e6c7-78b9-47b8-b94d-ae6240ecffd7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4d1613db-aee3-4e00-a2af-733967299257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34af257-da8b-4f38-8d1a-bb7065f676ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63dca260-b3d5-48e4-aaa2-afae581f38f4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46dd0b55-62a7-464c-8495-3558bfbdca8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e16d2ffb-c520-4fee-a66b-fa8bf545e7e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "634c3dfa-ca99-427b-af39-d648ea3f9032",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1200dfc-8453-4b78-8b90-fd2a19f69e7f"
                    }
                  }
                ]
              },
              {
                "id": "f79e1f57-9ef7-42e4-81fe-05af2d58517d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b43482ff-5765-4fbf-8d4a-851ff2e8e804",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5494be67-30b8-4803-957f-2bfdddcec976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7c6f3ee9-bd42-48d6-8838-7aca222695e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849bcbd9-9b3d-423e-9cc5-cbc3aa908fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7771b4e2-58c1-4356-a690-b8a19e2361f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a6bc1ef3-603d-4b0e-a40b-13d6667ad77c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e0941e18-a71d-4abf-a131-66ee7643b283",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bee88dc9-e4ff-4c04-a980-5e7ce131554e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "12399ce5-c579-4a81-99d7-5a6f5e344bf3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49fb7666-dee3-46d0-ac40-0998756a4a46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5faba17f-2a2b-4b06-ab50-e140a1ff764f"
                    }
                  }
                ]
              },
              {
                "id": "f8f54970-0020-428a-916f-a110cddc22a1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e75acce6-2124-452e-a20d-728e356e0108",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "17b8399b-85d6-4ef2-b3b7-7f1526b8ae28"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46038851-c805-49df-bc5a-bbe2bc377be6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05c4abdc-5152-4547-abcf-d63be9de76f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c23e5dec-754e-4d05-a4fb-1d3a10807215",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2a0e6d03-5a5a-4456-9303-c086210d94c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52d7c80e-0da6-4059-b8db-50fb75c130a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5799c0a9-462a-40da-a6f6-e03d42398205"
            }
          }
        ]
      },
      {
        "id": "a13c18d8-925c-4445-bac1-3af6e0131e5e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "191ea429-34e6-4dfd-9005-ce235fa0039a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bd934ecc-be21-4329-8848-85249def9609",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05a5d23a-45bd-49f3-87a9-4c990d6eb7e6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe71114-65a2-4a3f-ac8b-6dd3e0b84aa2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d347c2a6-5be4-4547-be6d-0c46681e5032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c9c69c-1206-40a6-8a2c-2aeca03720b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6b9121d-5920-4761-903d-1c8f33ccdd8c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfd7fa85-637c-4b38-a637-b5c43fa441b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a50b333f-9752-4ae3-a96e-b519cd3154f2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d95d9bd4-79ed-499c-9c00-aefb278bae67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24781c1e-2a7a-4d5f-b3b9-7812ea562c95"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05fd93e9-f73f-479d-9392-e0aa9e31d7c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c50c799c-a269-4200-bb6d-64b1ff6c25d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "caf21548-1757-48b7-8c87-d618773e6964",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8dfa726d-25e6-42b6-ba23-d47bebb8f2cf"
            }
          }
        ]
      },
      {
        "id": "8827ba98-49f0-48bd-8917-7f234f75dfe2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1dcf86bf-03aa-4e56-a755-60e1c0b64d9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb433757-b21a-460b-97af-57cd55ebbe1d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "517fb7ec-bb06-415f-a053-7bfa7087e575",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17de187f-be91-46ce-8589-c4f38ce8f82b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03f343d0-c7a1-4136-9bca-b1225adf61c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0217504-b4a1-45a5-8f7b-3767eb13a8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e53fd862-f9a5-4e01-a66f-15bc5b27dd7a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1c9101a-b49b-41a7-9c2c-ce7869955141",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37631688-96f7-4fe0-a757-71e8cf292224"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fd5e1b8-90e2-4a73-b63e-8742ab507fbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "808418d0-43f1-4779-9baf-afa15d4835b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c94ac902-b0be-4d43-8242-bf87b1105d92",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7d03ab77-fd39-4a56-a03a-c51b06c21794"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36482141-0359-49ef-a970-948783f400cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6167ad9-a1bd-4aa5-9055-60427067f741"
            }
          }
        ]
      },
      {
        "id": "3a3a0e36-edf5-4189-ad2d-864df6d53e9d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "38450f3f-2408-435b-b194-065595b93aca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "158b5dca-0c31-4a43-ad1e-544c3d6fd13e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73e3367a-5536-4f15-a3cc-cbd46d415d06",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f40e96-5b99-4459-9deb-eceab4c36274",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c4ab1b6-203b-4b06-be03-d0daebc1deb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1980080-a33e-4f8b-abc8-b2cb52151e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27de19ad-5c99-40f2-92c2-3f28f57466db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb7b6560-f1f4-45a7-a48c-a7df9489261b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2fee01e-327c-42ef-80ba-c4eb37ea27f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8ea7377-f4d3-4151-90c2-6b9aa629e00f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf69812e-5dce-4170-9b94-ac5b4b1fbce9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9ff9430-abc5-4265-9267-baf3fd62cc70",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "249e9a3b-69c6-42a9-a62e-0720160b15cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2520e4c2-14a2-420c-b30c-912d747eb64c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c630e4e-3da1-4d20-b336-9d7e37a277b3"
            }
          }
        ]
      },
      {
        "id": "2b68f3cc-cf2d-4bca-b463-b629e517ea00",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ec73004-5cf3-4436-8dad-5fdebd6531c4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c34701c1-da1e-4801-8f63-7324caea0b36",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ef6d3a32-a856-4334-9b29-15af99f568eb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "420b4dd5-d589-4e21-951b-871d39ca7fa5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01c7bcef-8a3f-44e3-aca5-635e39f53bdd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 244.25352112676077,
      "responseMin": 14,
      "responseMax": 6260,
      "responseSd": 406.65871313236977,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689122927972,
      "completed": 1689123013504
    },
    "executions": [
      {
        "id": "9a9ebdba-9b64-4497-a0ab-a90f88fee7de",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "033b6f7b-3023-426b-869d-7d86d0c78154",
          "httpRequestId": "22ea62cc-f6bf-4b32-aef7-a089f2a7f368"
        },
        "item": {
          "id": "9a9ebdba-9b64-4497-a0ab-a90f88fee7de",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3169b312-18df-4184-b767-3e11d5f6209b",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 0
        }
      },
      {
        "id": "c76e1695-6bbf-408a-b1c9-1909efe9909b",
        "cursor": {
          "ref": "fb03ecec-0fb4-4d79-b841-d888c2165e48",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "370543f2-b1c1-4d13-92c5-5cb1358aa991"
        },
        "item": {
          "id": "c76e1695-6bbf-408a-b1c9-1909efe9909b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "66b482bf-6c03-4756-bc18-f3482e58d8a1",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "662250b7-1f31-45b4-a87f-1121d3d5436a",
        "cursor": {
          "ref": "5d77aa5c-564a-45ed-b806-9bd5e2b0add8",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5d597d59-9610-4f1d-a3a3-9e87b5c7fd15"
        },
        "item": {
          "id": "662250b7-1f31-45b4-a87f-1121d3d5436a",
          "name": "did_json"
        },
        "response": {
          "id": "0c2f4f74-186d-4626-a20f-63622191c775",
          "status": "OK",
          "code": 200,
          "responseTime": 1547,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c030475-d758-4627-9ab3-4dd0c59f08a8",
        "cursor": {
          "ref": "119e2819-9501-4f6d-ac1b-3eb0c224baff",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "937b29e1-ec7f-4590-b776-88c8623466b2"
        },
        "item": {
          "id": "5c030475-d758-4627-9ab3-4dd0c59f08a8",
          "name": "did:invalid"
        },
        "response": {
          "id": "6e60b91d-4b84-4e06-85e7-0d2832e3db25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c030475-d758-4627-9ab3-4dd0c59f08a8",
        "cursor": {
          "ref": "119e2819-9501-4f6d-ac1b-3eb0c224baff",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "937b29e1-ec7f-4590-b776-88c8623466b2"
        },
        "item": {
          "id": "5c030475-d758-4627-9ab3-4dd0c59f08a8",
          "name": "did:invalid"
        },
        "response": {
          "id": "6e60b91d-4b84-4e06-85e7-0d2832e3db25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc27af8-a298-4ce7-b9bf-1afc5fcd0bb9",
        "cursor": {
          "ref": "a9e30b2b-38ae-42f2-9cfe-b0e4a96cd46e",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6ac6cf32-3550-49e2-9e88-a7e2c9def3ed"
        },
        "item": {
          "id": "8bc27af8-a298-4ce7-b9bf-1afc5fcd0bb9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b26f46f5-1e03-4853-b263-c0762e4dbe30",
          "status": "Not Found",
          "code": 404,
          "responseTime": 617,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4acd27-2547-4cb6-91bf-49628fcc3486",
        "cursor": {
          "ref": "6901b6ea-6628-4899-9f07-60bda90ac0f3",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ff11bbfa-bc63-4af9-99f1-9ce6fe57d82d"
        },
        "item": {
          "id": "bb4acd27-2547-4cb6-91bf-49628fcc3486",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cc8f96ad-1e4f-4e82-a472-5deebc035d6b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 345,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d00066f-90a7-493f-910f-13dbfe936b95",
        "cursor": {
          "ref": "f0bf2079-0d3b-4bab-b991-b302abc90df1",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c10315d7-1672-4369-af41-dc45f5c7177e"
        },
        "item": {
          "id": "1d00066f-90a7-493f-910f-13dbfe936b95",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "71127248-28b9-4818-9da7-5cb667f30bbf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e81e5e2-1617-4541-b73a-b204869db703",
        "cursor": {
          "ref": "b4d176dd-550c-483f-91f6-7a5bd7d90bf9",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d13d11df-5118-4ffb-ac36-08cc0d1c78ef"
        },
        "item": {
          "id": "8e81e5e2-1617-4541-b73a-b204869db703",
          "name": "identifiers"
        },
        "response": {
          "id": "0f7e65dc-38ab-4f0a-bb5d-532d37ae90cf",
          "status": "OK",
          "code": 200,
          "responseTime": 1326,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5edcc9-2dd2-4256-9d8f-6d0f872435a5",
        "cursor": {
          "ref": "6f8e6a05-fdd4-4267-8282-35157d77296f",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7d8070f3-82a9-413d-9cf2-a3ad9a3f280c"
        },
        "item": {
          "id": "df5edcc9-2dd2-4256-9d8f-6d0f872435a5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ede015d8-6576-47ef-a79d-bf9395987ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdce7fb-34aa-4e76-938e-c432305329dd",
        "cursor": {
          "ref": "fc4bf680-0a75-49bd-98c4-1711bc4365db",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "86fb2365-6424-4822-958b-4cf8cf676505"
        },
        "item": {
          "id": "9cdce7fb-34aa-4e76-938e-c432305329dd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "211cff3d-7ddd-4c7c-9d07-d8125e743b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5532079a-c956-47b3-8245-7afc48dcf895",
        "cursor": {
          "ref": "a11312db-284b-4229-9ae8-26d080335f8d",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "07485b34-c940-4137-a3c8-8e2c916869e3"
        },
        "item": {
          "id": "5532079a-c956-47b3-8245-7afc48dcf895",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f715c08b-c2f8-4279-a5ec-6687eac7ad47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec463ab-3063-4c67-9a95-0372b916c7a4",
        "cursor": {
          "ref": "7416f483-1fed-44a9-abd8-67bd4583313a",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ef5e6143-6c79-42c8-a0f5-c46af9fa8cf7"
        },
        "item": {
          "id": "6ec463ab-3063-4c67-9a95-0372b916c7a4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "92321fcd-c6a3-4ed7-9bfd-2730232bacd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0cf72a-c086-4964-9f20-b517b4f20b91",
        "cursor": {
          "ref": "1f6d3ed2-beb9-4c71-9fba-e22852b112fa",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "97891a26-0267-4b53-b2de-4f2dfe9b0b82"
        },
        "item": {
          "id": "db0cf72a-c086-4964-9f20-b517b4f20b91",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ed2d4eb4-65dd-4cfd-bdda-cfed8b440cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f56cfd0-f191-4ea4-8213-dc334b828d48",
        "cursor": {
          "ref": "69733ada-5e5a-4408-9652-48883e6891bd",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "837f45b0-09a7-4f4f-9b50-2ac77980c380"
        },
        "item": {
          "id": "9f56cfd0-f191-4ea4-8213-dc334b828d48",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9561659d-91de-4e39-8424-777c768eb5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134ad1c0-4620-4db3-bc2f-27a2ac6f0e18",
        "cursor": {
          "ref": "8874235e-06da-4a6e-9b8e-fa1f9d91e01e",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b221f04e-14eb-4bb6-a40d-d546f348e8b1"
        },
        "item": {
          "id": "134ad1c0-4620-4db3-bc2f-27a2ac6f0e18",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "97fc8a04-14cc-4957-ae15-d557b85d15c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25af9c4-cce3-4bbc-a828-f0e1330af561",
        "cursor": {
          "ref": "10070de5-5a26-49f4-94e4-b11564a16322",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a4b0a4d4-d656-4ee7-bc20-a42cb0b5f80b"
        },
        "item": {
          "id": "f25af9c4-cce3-4bbc-a828-f0e1330af561",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "99e3239d-cad3-4898-a1fe-930a34274adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471aead1-5f67-476d-96ef-b50e7b54839c",
        "cursor": {
          "ref": "ec5d7f59-5f3b-4c5c-bba1-38aad2f0a69f",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a296f243-b14f-4755-9b92-4c250ff85f7b"
        },
        "item": {
          "id": "471aead1-5f67-476d-96ef-b50e7b54839c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5d867783-9fb0-4009-a9a8-c0987105c9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2807260-faba-4f16-ba11-fadb9876842d",
        "cursor": {
          "ref": "8a537b5e-9543-4a1e-8a1a-1e1cdd9beeb5",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0f356f48-33e8-41fd-8026-83436a1b6128"
        },
        "item": {
          "id": "b2807260-faba-4f16-ba11-fadb9876842d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4b804721-b734-4fbd-a644-403c866f43c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15b2a3b-412f-46e3-80be-c3c793fabade",
        "cursor": {
          "ref": "bee61a85-bafd-4a34-8c07-79e42b6ed46e",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "32d12d1e-28bf-4a0b-89a6-aaf22745330e"
        },
        "item": {
          "id": "d15b2a3b-412f-46e3-80be-c3c793fabade",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "43c40fe4-770f-4e43-8465-ca39fd0144ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c8bd23-1d39-4597-bf15-92bd969e91f9",
        "cursor": {
          "ref": "ce67fd03-357d-4f76-9f15-381ff7b760e3",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "618b00ad-e77e-41d9-81de-29e866204801"
        },
        "item": {
          "id": "c3c8bd23-1d39-4597-bf15-92bd969e91f9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2a9fc48b-4180-4d35-a603-06570b8b42a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881da868-ac9f-44ff-9fba-17db35223985",
        "cursor": {
          "ref": "034920e5-4aa6-48fe-9ed3-7cc4d67e02cf",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "65c9a76a-1b07-45c7-927c-d9f264ca42f7"
        },
        "item": {
          "id": "881da868-ac9f-44ff-9fba-17db35223985",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "25de772c-b6ee-4cfb-be13-6a0f3ce1b8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e23f72-d12b-437b-974e-4279d369d0c9",
        "cursor": {
          "ref": "212696a4-d367-4c4e-b1ed-2602fda9885e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ec35d54f-1f38-4835-859b-c2aa87dd9779"
        },
        "item": {
          "id": "e0e23f72-d12b-437b-974e-4279d369d0c9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6054432a-b6da-4178-9322-b1bb4edacdbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe4746f-34dc-48e1-adc0-10efd2af94ee",
        "cursor": {
          "ref": "ec9f1881-3f1f-4b67-a375-e16335f81c46",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a63c666b-35a7-467d-9492-364d08c87b5d"
        },
        "item": {
          "id": "6fe4746f-34dc-48e1-adc0-10efd2af94ee",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6f8e60ac-1e83-4bbb-a96f-33e400a0ab53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824ba729-c636-4b51-a60c-ae800cec812e",
        "cursor": {
          "ref": "86c07b33-a1d8-4716-b715-7a8ae9659194",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "934c76fa-3708-4684-8666-f42e669ef9fd"
        },
        "item": {
          "id": "824ba729-c636-4b51-a60c-ae800cec812e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5f523c4c-f3e7-45c4-9e60-674cef2eacb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f527a6f-3b68-43af-9698-1c2f4fb25fa6",
        "cursor": {
          "ref": "05a005e7-3670-4de1-927e-d0f7baedabac",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f2523e5f-244a-4b30-8380-8aa592bb60c1"
        },
        "item": {
          "id": "2f527a6f-3b68-43af-9698-1c2f4fb25fa6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8bb9da81-dd5e-4b78-945d-bfd709b9504c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ba46ae-10fb-4cdb-b053-fefa753f993f",
        "cursor": {
          "ref": "c532536b-aff1-4de7-974f-1cfef1b75e35",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3450d2cd-560d-42a7-86d0-1dc35d183491"
        },
        "item": {
          "id": "b8ba46ae-10fb-4cdb-b053-fefa753f993f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7863a92a-e5f8-4c3d-a819-8d597719cde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da873663-bf9e-453d-855c-228adbb15dba",
        "cursor": {
          "ref": "29e307b8-fb7c-4260-9e6e-5c15ea012672",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "55a27148-1257-402b-91c9-1672ea6520cf"
        },
        "item": {
          "id": "da873663-bf9e-453d-855c-228adbb15dba",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "377adf26-e592-4777-beb9-ecd9d3057abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b74e6e-a154-48b5-ba99-99d3df85c552",
        "cursor": {
          "ref": "a81d5e3e-0bc5-46ed-bb2f-038f3577429e",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e77abcec-8dec-46ec-8b46-6e7fceaf3df4"
        },
        "item": {
          "id": "f0b74e6e-a154-48b5-ba99-99d3df85c552",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "63e746ae-1891-41c9-a7b3-7b42785f2330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc7c42b-8623-4179-aa82-c66db0b25ca7",
        "cursor": {
          "ref": "ee63adb4-b866-4155-bd46-a4385aede9c2",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b77ee1f0-1692-4f48-b684-bd8b61335080"
        },
        "item": {
          "id": "7cc7c42b-8623-4179-aa82-c66db0b25ca7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5a9ca1bb-ad8d-41fb-8af8-6c192b73a3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b2c792-863c-44c0-a1b1-063e6df23b03",
        "cursor": {
          "ref": "3723c8c2-5a71-4a64-9e2d-4c43b7c9fa81",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "38cbc669-2bf7-4139-8a4d-f5be246096d5"
        },
        "item": {
          "id": "23b2c792-863c-44c0-a1b1-063e6df23b03",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "95be6b9b-6abe-4f30-bc66-d7b070f272f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eae16d0-39b3-4bec-829c-653a97e648b3",
        "cursor": {
          "ref": "06f8d460-5ad7-4fdc-b3b6-27141eb4c7d5",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c135d9a9-9aa3-4a6b-bd99-4360147622f6"
        },
        "item": {
          "id": "1eae16d0-39b3-4bec-829c-653a97e648b3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0b340679-5195-4f9f-aa25-2572ca5e664c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731f27cb-e54f-4260-8453-0b6dcf38dc65",
        "cursor": {
          "ref": "b047b088-5f4c-47d7-84ef-9e55201382bb",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ba8a933e-ce38-4b98-a427-d41de0b3a250"
        },
        "item": {
          "id": "731f27cb-e54f-4260-8453-0b6dcf38dc65",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "013f5628-fc64-4697-8e02-153914b25f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b20c05-6744-436c-a59d-e49f7989c5a8",
        "cursor": {
          "ref": "8fb4fd8f-f6a3-4e9f-9360-3a3b4a0455be",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6f127232-502e-4488-b6c0-4f1a198babce"
        },
        "item": {
          "id": "15b20c05-6744-436c-a59d-e49f7989c5a8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1c9098fd-5885-41ff-a105-0d1c7192175b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945a3d5e-17a1-4fcd-8d38-9b5b06b2fe25",
        "cursor": {
          "ref": "6b726827-4b30-48f2-ae62-556dc13833f0",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8b866cee-6577-4fb2-8b9e-c4cb0d2ac5d3"
        },
        "item": {
          "id": "945a3d5e-17a1-4fcd-8d38-9b5b06b2fe25",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ba179360-9926-48bd-b039-ed79767fe07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab67ce78-62e3-46d3-9a41-07df7455e509",
        "cursor": {
          "ref": "7c4c6f07-ab69-4f41-8ef4-eaa352f6d15d",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "acf4ed30-e366-4a0e-81fa-f9d67703b8d4"
        },
        "item": {
          "id": "ab67ce78-62e3-46d3-9a41-07df7455e509",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3ca591fb-f4a6-4f1a-8ff5-47c740cc4082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6d98ee-4664-4562-8065-ada23458955e",
        "cursor": {
          "ref": "78241cee-97dd-4edf-b327-bcbbdcb3699c",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ce24464b-a739-4d12-b017-7762e6135947"
        },
        "item": {
          "id": "5e6d98ee-4664-4562-8065-ada23458955e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3046acf5-13ab-4dcd-8d11-c6a28f77d729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddbb488-30d5-414d-9000-fa7d1ea6dcac",
        "cursor": {
          "ref": "886d1e6f-c6cb-4a51-8d44-a07d304424bb",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "333ed3b8-997c-4148-babb-da5ceffb9009"
        },
        "item": {
          "id": "fddbb488-30d5-414d-9000-fa7d1ea6dcac",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "021b2218-411b-4acf-aa4b-acec97b1ae2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2dceff7-abef-4b64-aff0-c5e8a21bffab",
        "cursor": {
          "ref": "a68859ed-f8bf-40d4-8aa9-9f97e3c2f67c",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "67a2fad0-96f7-4c72-baaf-3897f61ea634"
        },
        "item": {
          "id": "f2dceff7-abef-4b64-aff0-c5e8a21bffab",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "55af0a2a-683d-4e8b-8b40-e0a4b43b05c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e757125f-04a0-47c3-ab47-12ed71cc2bf2",
        "cursor": {
          "ref": "86c03f7d-d3f1-48e8-af5e-7a1f33f55f6c",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "42346596-2ff9-4303-80a9-fd22876eb047"
        },
        "item": {
          "id": "e757125f-04a0-47c3-ab47-12ed71cc2bf2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "70e8e5c2-8a2a-45c0-924b-4ee34c865023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fd32fc-c8a3-4dbf-8cfc-101bdb44c0ed",
        "cursor": {
          "ref": "486e2286-d5d4-45b9-8b3a-1a85ebfa307e",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9593aa62-1902-452e-b90b-bdeeaf589125"
        },
        "item": {
          "id": "49fd32fc-c8a3-4dbf-8cfc-101bdb44c0ed",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c3095c87-7bbd-48f0-83b9-756a77750069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3436def0-6cd4-4ab2-9b99-815fe2f9ae9a",
        "cursor": {
          "ref": "ecdc3471-ec84-47ec-bd42-e069cad158b6",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3e542dd9-193f-49e4-9b7e-3bfe3135f66a"
        },
        "item": {
          "id": "3436def0-6cd4-4ab2-9b99-815fe2f9ae9a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "046ad36c-9472-4923-aa62-4fefa34ef904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f171b7a8-3c4a-41de-8f66-2dca6fef274c",
        "cursor": {
          "ref": "6930ebf4-cbb7-4d45-a25e-0c8173a9409e",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c1aeb438-2e14-4d28-b874-c80f7c053f4b"
        },
        "item": {
          "id": "f171b7a8-3c4a-41de-8f66-2dca6fef274c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2bff2170-113b-4f5c-bda5-9f266e7a3af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b2cf90-17e6-4564-947a-8ca9f8147c1c",
        "cursor": {
          "ref": "513700bb-2fde-4a24-b56e-752cd208d593",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "252bcaa5-9b89-4cc7-b9f3-57fc0f4dfe08"
        },
        "item": {
          "id": "f4b2cf90-17e6-4564-947a-8ca9f8147c1c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e1018a85-ac51-4e3a-b41b-0888d8489c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58275b8a-8b86-4efd-a362-7c0864382fec",
        "cursor": {
          "ref": "06f03610-f326-486e-bffd-1f92b520f39a",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6213a80d-dd4a-4ef4-95b4-d446e2b8e08e"
        },
        "item": {
          "id": "58275b8a-8b86-4efd-a362-7c0864382fec",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9557e21a-bd02-48dc-b15d-5497a5e32d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c357516-bfa6-44a2-afc3-37dd381e7acf",
        "cursor": {
          "ref": "d10f6823-6496-4b76-a40f-f63cb866474d",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f4aeeabc-1d43-42d9-a1eb-09aa9095fcf5"
        },
        "item": {
          "id": "8c357516-bfa6-44a2-afc3-37dd381e7acf",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a33f6438-d9ca-4631-9d6e-63c89a68106c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50202d8c-188b-4d41-87be-de59fdd2a31f",
        "cursor": {
          "ref": "a1f70a33-7ed1-44bd-aaa0-1612c5ef270c",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8dc25efe-4da6-459b-8543-919ab1109eca"
        },
        "item": {
          "id": "50202d8c-188b-4d41-87be-de59fdd2a31f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0f9a9db3-652f-4136-bcc7-9aa883b7aee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec72372b-bad2-4347-a36c-0ab856b06cb6",
        "cursor": {
          "ref": "2ed7a07d-88bc-4eec-8dfb-67a5517b1013",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5ec1808b-7d70-4a8d-9647-bc3cdac91979"
        },
        "item": {
          "id": "ec72372b-bad2-4347-a36c-0ab856b06cb6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5264e2a8-ad33-4b81-9549-24a97944ed2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffba884-0f02-4ceb-8f94-820ded025429",
        "cursor": {
          "ref": "6aab1783-d0b0-4395-9367-76052b422b30",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b1e1e623-b3c8-4b79-ab02-6d97b12a9b98"
        },
        "item": {
          "id": "7ffba884-0f02-4ceb-8f94-820ded025429",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cefd975b-7808-4054-9b24-6188c3150415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8014d232-c28c-49dd-8076-c131a2f5ea42",
        "cursor": {
          "ref": "189ac9ee-3551-4d36-89a3-6e5ca4641bae",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d36e48d0-b704-48f9-8ad8-57b3a6b4e04d"
        },
        "item": {
          "id": "8014d232-c28c-49dd-8076-c131a2f5ea42",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4a24de11-91df-4e94-a107-495d0185ca73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b2e181-4008-4806-923e-e065380f770d",
        "cursor": {
          "ref": "cfd6bd0a-6f4e-4f35-9957-5ca7e0f49bab",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "61e5045a-adfe-4d9f-9181-cb72b3885651"
        },
        "item": {
          "id": "91b2e181-4008-4806-923e-e065380f770d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "157789f0-93ea-4d91-a53b-e11968bd1160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c9c843-8ed2-424a-acbd-5262f268b3b5",
        "cursor": {
          "ref": "5bda6b25-f8e5-4485-8cca-149cdeaaa373",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b954c9e4-1292-4a3e-a435-93472d8e9d8e"
        },
        "item": {
          "id": "e6c9c843-8ed2-424a-acbd-5262f268b3b5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f099c47f-af62-4956-857b-6b5c906060cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7343338-d32f-446e-976d-9ed4b0f5d7e8",
        "cursor": {
          "ref": "045b5c2e-d084-434c-90e3-11a767bee95d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "29c1c13f-9ae4-432d-89fe-bf221603fc68"
        },
        "item": {
          "id": "c7343338-d32f-446e-976d-9ed4b0f5d7e8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "025671a8-37aa-4aee-a199-987d3af9d1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70abf66a-5f17-4026-af4c-392503e0aaab",
        "cursor": {
          "ref": "4cf333f9-5df1-4a6d-99e5-5342adb6cfc2",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e627370e-1569-48a7-b150-6fe9cf1a0183"
        },
        "item": {
          "id": "70abf66a-5f17-4026-af4c-392503e0aaab",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9565c798-5d0c-4f3e-ae5f-2476894fb422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63d26ba-baf7-436d-bccc-50fd229ecd47",
        "cursor": {
          "ref": "84c91cda-5f9c-411a-8ef5-7e9ef88b84e0",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "38bcc447-edde-4cf1-b1f0-51e92dc7753e"
        },
        "item": {
          "id": "c63d26ba-baf7-436d-bccc-50fd229ecd47",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a95f0f28-ecf2-4690-b243-0beb8aeef055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f9b092-919a-439b-883a-b87baae27268",
        "cursor": {
          "ref": "3e802166-bbb2-4f2c-8cf7-dcdccb726df0",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "89245372-91d1-459f-89a0-09ddfe049ce1"
        },
        "item": {
          "id": "54f9b092-919a-439b-883a-b87baae27268",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f052d3d6-1345-4585-aae7-ff98ab6dbffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc79eb11-944d-4919-b7eb-98c408ca7be9",
        "cursor": {
          "ref": "5b058022-d0d3-4fd9-a963-5ff2eb9db885",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e5300735-91c3-42ca-b12a-ba6f6e91d0e4"
        },
        "item": {
          "id": "dc79eb11-944d-4919-b7eb-98c408ca7be9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "509731ed-6ebd-4c2c-99df-94c24222352c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595e3758-1199-4fa6-8f38-51c21015b005",
        "cursor": {
          "ref": "f839bc6e-0649-4d66-9895-738ee646d3ef",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f67a0e77-f7bc-4519-912e-b7692dd99511"
        },
        "item": {
          "id": "595e3758-1199-4fa6-8f38-51c21015b005",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "41de8f40-03da-4f77-ae19-75184b3eca2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b475dafb-cdce-4919-a78c-7f2c60f7b8d1",
        "cursor": {
          "ref": "f7403cc6-9e70-461c-ba5c-00424be58d3d",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0caf1dff-72bc-4124-960f-d910c2136f39"
        },
        "item": {
          "id": "b475dafb-cdce-4919-a78c-7f2c60f7b8d1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f008c7ee-6f13-4430-9b3e-8571b358e8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5132ea7d-88e1-436e-8ed0-da8b42b9a899",
        "cursor": {
          "ref": "dfc1871e-0673-468e-b95b-947efb88a482",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "02cbf7c9-68c2-41e2-a74c-97a89ea28685"
        },
        "item": {
          "id": "5132ea7d-88e1-436e-8ed0-da8b42b9a899",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a9fcab08-c23d-4166-8a34-0c58b41f35fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be57b6d-dc91-4375-8368-6be9f79866b7",
        "cursor": {
          "ref": "fc9ca070-ff52-4dad-a21d-7b8082eb4db8",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "50aef2e0-6d99-45fe-9cdc-7fafd65a594b"
        },
        "item": {
          "id": "4be57b6d-dc91-4375-8368-6be9f79866b7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f17ce28d-1da4-4832-9685-e2c70f11c404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00493cf-d091-46ca-953d-dab299d5ef8f",
        "cursor": {
          "ref": "3154a0c9-f1bf-4f5d-8200-c9d215a68a63",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "091d393e-c98a-4366-af1b-cbafe73e0368"
        },
        "item": {
          "id": "a00493cf-d091-46ca-953d-dab299d5ef8f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a0c1fbb0-d464-407f-ac1a-62675ec878df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774aa904-c541-4d59-ab4c-8d0626b33ccd",
        "cursor": {
          "ref": "3b767359-ea2a-43c5-a93c-63d04f6f26d7",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "489e5f77-149c-4dff-8203-648e2e59d295"
        },
        "item": {
          "id": "774aa904-c541-4d59-ab4c-8d0626b33ccd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cdda27fd-03ed-45c2-a6a6-05c9d04a88c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1e381e-c853-43d6-9573-35fe442fc9f9",
        "cursor": {
          "ref": "6a71598d-dcab-4b43-9338-2b6a09b2239c",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "95449687-94a4-4e41-a138-d418595f11b2"
        },
        "item": {
          "id": "ce1e381e-c853-43d6-9573-35fe442fc9f9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "929c88c1-808b-41c9-8f26-464566f39c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dcdaeb-00fe-4fc8-9b99-0620d4c2762e",
        "cursor": {
          "ref": "8c7e9984-58b4-4eb2-81c1-2e9d79de4279",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e2660263-2c2d-45d8-ad84-120fc2d8a427"
        },
        "item": {
          "id": "35dcdaeb-00fe-4fc8-9b99-0620d4c2762e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "018e0579-9b8c-44e4-970e-e9d067b11459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfec5d13-3f7b-4701-9eb3-9c3cd66a94ec",
        "cursor": {
          "ref": "b9cba211-3dca-4468-b96a-f8b57aee5360",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ae2ddf08-668e-4b8d-8d02-e5ab216bd451"
        },
        "item": {
          "id": "cfec5d13-3f7b-4701-9eb3-9c3cd66a94ec",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "24edc23d-64b3-4ca5-b31b-d4e6946d2203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b623f8c4-62df-45b4-a044-122a7cef11f3",
        "cursor": {
          "ref": "fe3ef60a-49fb-4efd-8266-0feb1ebd8070",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "75869b62-e162-499d-b394-c636bba1cf0e"
        },
        "item": {
          "id": "b623f8c4-62df-45b4-a044-122a7cef11f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "791ef8b1-9200-4c63-97eb-e5e9e93abef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155445fb-33fe-4795-908c-6fcc65353486",
        "cursor": {
          "ref": "88561793-0c4c-4ca5-a3c6-e60588b07940",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "16a82d8d-62fe-4f1b-9736-af352cc95698"
        },
        "item": {
          "id": "155445fb-33fe-4795-908c-6fcc65353486",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ec655037-5ef9-4b1a-9170-cd3c32099a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efe7de0-ad25-43b7-b857-879e7567cdfd",
        "cursor": {
          "ref": "959fb02b-5344-4cfa-bc91-17fbb22980bc",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "924a6bef-c3bf-43e8-b58c-25ebe685de8b"
        },
        "item": {
          "id": "3efe7de0-ad25-43b7-b857-879e7567cdfd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6690ae17-b298-4da3-a530-ee2c7115970f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69323715-53bc-4789-9e0e-24aad009cb24",
        "cursor": {
          "ref": "7f0bed16-3e8a-4904-849a-9c1c1f30f905",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "07dae95e-d450-4b01-9196-00d3ed038bd7"
        },
        "item": {
          "id": "69323715-53bc-4789-9e0e-24aad009cb24",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4f302075-77f6-47f6-901f-aa8a48609555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff8e131-871f-47f1-9ca2-603ec2f28a45",
        "cursor": {
          "ref": "d992f24e-942e-45f0-a7e1-031b44f3e7d2",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "03072b87-86ed-4d06-858f-29a939e80616"
        },
        "item": {
          "id": "7ff8e131-871f-47f1-9ca2-603ec2f28a45",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ad60266d-7a38-4635-9705-e086750f98ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14f6914-e6f8-4af2-90cc-51e8c9a6b1d5",
        "cursor": {
          "ref": "6ec82d09-857f-4bdf-ac06-794acbbe685f",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "345aaa3e-e454-4681-9547-2b65dac34b49"
        },
        "item": {
          "id": "b14f6914-e6f8-4af2-90cc-51e8c9a6b1d5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0530b5b8-58cd-4e49-bbd2-d9aa2540d097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3acd44a-df38-4324-b1e7-18c979246e05",
        "cursor": {
          "ref": "34720cb9-24d0-4c28-852a-78218fc58308",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5e3b0afb-af16-498f-8d78-4641098d87d4"
        },
        "item": {
          "id": "c3acd44a-df38-4324-b1e7-18c979246e05",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ab7feded-f048-4ba9-96a9-bab592109b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbadf57-2064-47fa-93d7-0b7f895695a1",
        "cursor": {
          "ref": "1849bf6f-8c98-4026-8f9f-cda542733977",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d2e3dce3-ed22-4c24-bea2-f434f1a22118"
        },
        "item": {
          "id": "7fbadf57-2064-47fa-93d7-0b7f895695a1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ae825e0b-e01e-4504-810e-def367686548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4919264b-10f3-45df-9bc8-bdf4c33ca9ba",
        "cursor": {
          "ref": "682efbf0-ce84-4d22-b539-7416deab0d34",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ba6dca6f-6ca4-49bf-815a-92780e8b26e1"
        },
        "item": {
          "id": "4919264b-10f3-45df-9bc8-bdf4c33ca9ba",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bbbe069a-a088-451d-8346-9a8dcd4d31c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e97fa3-ba97-40cf-b3e8-10dc2ee970e2",
        "cursor": {
          "ref": "e7a1d700-11d2-4f18-80cf-e049b781c17d",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "77d9317b-d46b-414f-abf6-61940c178a9d"
        },
        "item": {
          "id": "a3e97fa3-ba97-40cf-b3e8-10dc2ee970e2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2b219b24-5edf-4d30-a4eb-aa7d25b22243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba81de5-b2ca-4c67-a300-e89da1cef8f1",
        "cursor": {
          "ref": "64c0d905-2434-4233-9b9e-e1452d58cff5",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8c44f292-cfdc-422e-ba53-dd01bfb9de4d"
        },
        "item": {
          "id": "8ba81de5-b2ca-4c67-a300-e89da1cef8f1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "76ee6f45-ec6e-45df-bfd4-3cd9ad4fecad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdb2ddf-62be-44fb-938d-c57c9a4cf3c4",
        "cursor": {
          "ref": "dea58ee4-6610-49c8-9f36-b00c50cc0c42",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4082d20b-c17e-432e-b74c-c2397f53159b"
        },
        "item": {
          "id": "afdb2ddf-62be-44fb-938d-c57c9a4cf3c4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d2db1508-8ab7-4767-b5da-1fdfa9d2a974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8513466-60b6-4e4d-b964-930340b16b02",
        "cursor": {
          "ref": "a8c8c033-14dd-456d-a190-1a57f1af8651",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a1ff2e86-4c0a-4594-abb4-19c04270679c"
        },
        "item": {
          "id": "b8513466-60b6-4e4d-b964-930340b16b02",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "79092b3b-79c8-4446-ba95-55d2b0bb86ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22795263-43e6-437f-8576-19892b32826e",
        "cursor": {
          "ref": "75b685e7-139a-435c-ad64-440b87656859",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6eb1bb37-bc50-42a6-8265-0c92943e86d9"
        },
        "item": {
          "id": "22795263-43e6-437f-8576-19892b32826e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "51562e64-6e46-486f-9ed9-1adfa64fd856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bfd1c7-16c1-4fa6-934b-21a6c7e96b97",
        "cursor": {
          "ref": "c9055e9e-bbff-4450-ab8a-8cdb70484689",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "56ea41d7-0d6c-47d7-9b8c-d34bde7da549"
        },
        "item": {
          "id": "73bfd1c7-16c1-4fa6-934b-21a6c7e96b97",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ee0347c8-e9e0-483e-be80-ed404c21d91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26843c6-08f6-450b-a5bb-ed59cec1e61c",
        "cursor": {
          "ref": "9d20b6fe-13d3-4998-9942-24338ceb02a9",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3ee2b204-2819-4c05-8969-7238916007b4"
        },
        "item": {
          "id": "a26843c6-08f6-450b-a5bb-ed59cec1e61c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4ca1fefe-30b2-4af2-9f93-04cee147adfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a9b362-d2bd-455f-935f-5a196f898f34",
        "cursor": {
          "ref": "e22ffb37-1eda-4fd8-9ae2-934a75b43899",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "567073e6-cdde-4595-8c06-0851684c83bc"
        },
        "item": {
          "id": "e2a9b362-d2bd-455f-935f-5a196f898f34",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fb608222-0f41-4a4e-864d-fb4a81742717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d88aa77-1cd2-4ea7-9dd9-9bd13160c6a4",
        "cursor": {
          "ref": "90421218-9bef-4350-9d04-622a5fa37922",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "87045523-50dd-44d6-9f22-9b16a3cfa0e2"
        },
        "item": {
          "id": "3d88aa77-1cd2-4ea7-9dd9-9bd13160c6a4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f5c7a66f-845b-4c45-84c2-ea8e3a800e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8b9178-3b73-4053-a516-166b6a7fd15a",
        "cursor": {
          "ref": "3e6802bf-3e40-4439-91a0-1ca9363b7e96",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "88c44bce-ef90-4d80-b772-a42773b37a95"
        },
        "item": {
          "id": "ec8b9178-3b73-4053-a516-166b6a7fd15a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "12f99a98-b431-49ef-95d8-4f1ca4181f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3eb47d-01b3-469d-8201-645d5f04a2dd",
        "cursor": {
          "ref": "5018125b-e630-491e-b6b7-fc1b857768d0",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9ed489f6-ebf4-4c39-bf11-7c7f509941f8"
        },
        "item": {
          "id": "4f3eb47d-01b3-469d-8201-645d5f04a2dd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d19c6a46-d76e-4ca9-9d5c-0b126f1b5370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da554362-31de-4308-b66a-514214f8beb8",
        "cursor": {
          "ref": "db428669-6130-42c6-a34f-c8f26ff6fd0e",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "184c5a32-0932-449d-b022-2f54346329ab"
        },
        "item": {
          "id": "da554362-31de-4308-b66a-514214f8beb8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a5df8e36-dba2-440e-b059-e285001b8214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c98d520-4282-4744-b4e1-f5d3113ce9e6",
        "cursor": {
          "ref": "0c36f9cc-edc8-4bb9-8a9d-1ab21a7b16f6",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f623c2dc-1366-46c3-a46c-a2a3d1a54774"
        },
        "item": {
          "id": "1c98d520-4282-4744-b4e1-f5d3113ce9e6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "af6b76c3-a8f7-4980-884b-88fdb1154c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b53ac7-8e7d-493a-bd3b-1744c0a18603",
        "cursor": {
          "ref": "f34a22f8-ce92-4558-88c0-7fb9c4726dc6",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "38930f82-65fa-4747-b023-d7c7c9962ad0"
        },
        "item": {
          "id": "c0b53ac7-8e7d-493a-bd3b-1744c0a18603",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1f93111c-fb2e-4085-aeb5-cf2098538a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c97d6a5-c08a-4aca-9526-ef6cc2a440d2",
        "cursor": {
          "ref": "8fe353cf-3ed5-4189-bd21-a9fcd7d658d1",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f556ba4c-c8ac-432c-90c1-b5a8a990b81b"
        },
        "item": {
          "id": "2c97d6a5-c08a-4aca-9526-ef6cc2a440d2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d01f03f6-9dd3-4e93-9377-4317bd688843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7add288-c496-4474-84e7-4da11398c2a5",
        "cursor": {
          "ref": "209ccf7d-7820-4f8b-bd1f-da72c63a8ddf",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "34e7ea11-3ce7-4000-b526-a99508517c5d"
        },
        "item": {
          "id": "a7add288-c496-4474-84e7-4da11398c2a5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9230a1e1-20fb-4b39-8130-ec35bcfdba53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89405f4d-b652-48ef-adcf-6a1c0e8dc3e3",
        "cursor": {
          "ref": "f07f1bfb-3ad9-4e1e-bcfe-14c5cae93c07",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c10c9eed-d006-455d-a374-7edb4bd7272d"
        },
        "item": {
          "id": "89405f4d-b652-48ef-adcf-6a1c0e8dc3e3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9910794e-0191-4fe4-b2b2-b1fe734af1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c91766a-8122-42ad-8a39-0d825dd4a1cd",
        "cursor": {
          "ref": "d91d6253-5a7e-4181-a1f2-bb29f2b401f7",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8f37bb69-6848-4d2b-9766-86076aeacfa5"
        },
        "item": {
          "id": "8c91766a-8122-42ad-8a39-0d825dd4a1cd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d737a233-f69f-4513-9aa3-58467a3f5974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb17364-b50d-412c-a9d1-f85e1f152b7b",
        "cursor": {
          "ref": "49ae47a4-b956-40b9-94af-4f2329549f70",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7036ecdf-a164-4497-8152-01ca7765c14d"
        },
        "item": {
          "id": "6eb17364-b50d-412c-a9d1-f85e1f152b7b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b1e2b5e9-8449-43a3-9d93-b03629b64148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c3ebf7-3ff6-4b02-a7b3-618d7e6cc547",
        "cursor": {
          "ref": "571bbc6b-c54f-41d2-93a7-d3c1ff8ad545",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e9986476-a433-4885-9e96-899253b5f448"
        },
        "item": {
          "id": "91c3ebf7-3ff6-4b02-a7b3-618d7e6cc547",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "72451eb4-55a2-4df0-9b26-1a6b3d8ad562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61878f51-adbb-4a7a-8481-e9d5fd39e820",
        "cursor": {
          "ref": "aa1fb9e6-4773-446d-ba5a-d0f09225c53e",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ce4bb62a-8b08-4872-8f4f-1bf374f63364"
        },
        "item": {
          "id": "61878f51-adbb-4a7a-8481-e9d5fd39e820",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2cb5f23c-4da8-4d39-aa9f-da971c1c9047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be45d9c-eff4-4ace-86bd-34a186cc77cc",
        "cursor": {
          "ref": "5c220970-7bed-49ef-bfbf-6bda64d15abc",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "53f63176-c278-4fc2-bdfe-913462dbfac5"
        },
        "item": {
          "id": "3be45d9c-eff4-4ace-86bd-34a186cc77cc",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "98575f9c-24f0-4a7c-b507-d1caef2fe411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11967ace-13f6-4909-9cb9-5cdfbe5d8965",
        "cursor": {
          "ref": "21864dc0-904f-4ae8-a665-1c18bed92e15",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "29b9c768-f6e1-4e70-8197-8926731dd0b5"
        },
        "item": {
          "id": "11967ace-13f6-4909-9cb9-5cdfbe5d8965",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9603dc56-f72b-4dec-9fc1-0def6aee8dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ce6783-17c4-4508-b67f-b09e8c3bbceb",
        "cursor": {
          "ref": "110f2417-3499-4fb1-9a48-aa642e072ed2",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4acbcdb2-fa22-4355-ad89-f0b3ae9a839e"
        },
        "item": {
          "id": "28ce6783-17c4-4508-b67f-b09e8c3bbceb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b346f75d-4326-461b-9b08-146e7ff821a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580dd818-6d1f-4a52-9f2c-bb21cf723b1a",
        "cursor": {
          "ref": "04a7444f-f374-4c08-ac86-27a2bb94a6c0",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b1eae661-29cd-4e04-a2b3-8765a09051e7"
        },
        "item": {
          "id": "580dd818-6d1f-4a52-9f2c-bb21cf723b1a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "83331fa7-2875-4052-a8cb-7a8a4fcdc99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0866614e-0594-4d96-929b-1907ad715e41",
        "cursor": {
          "ref": "6a0fa7f0-130a-4595-ae72-f21fdb91420b",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ce37a27b-e9b2-4563-a18f-c9cd0e0767a5"
        },
        "item": {
          "id": "0866614e-0594-4d96-929b-1907ad715e41",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "217fafa0-e494-4094-99be-971a2868e721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fceb3def-e4e2-4cc7-84b1-9406b41d43da",
        "cursor": {
          "ref": "57b486ef-76f8-4b5e-b01b-dbdd307c32fe",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "69eb44b9-a4f9-4357-bd03-acbf9036baea"
        },
        "item": {
          "id": "fceb3def-e4e2-4cc7-84b1-9406b41d43da",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fdc1edca-0ec8-4a71-ad88-0f71b16c738d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005a1dad-0adc-43e7-b3fb-5ba6f72c6223",
        "cursor": {
          "ref": "f158fcbf-a2ad-4dd6-aacc-9ef0f12c6db1",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c24df6be-040f-4743-abeb-a50dcbbe56d7"
        },
        "item": {
          "id": "005a1dad-0adc-43e7-b3fb-5ba6f72c6223",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4742d4b3-4709-4e6e-89fb-cd05d6711c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "fc018f8e-a6b6-43b6-92c2-7d09459a909a",
        "cursor": {
          "ref": "24105a7c-38f3-427c-9091-1da1ad8b71d3",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4b3f136f-faff-41f8-bf33-20cecf6115e8"
        },
        "item": {
          "id": "fc018f8e-a6b6-43b6-92c2-7d09459a909a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "cf17dba2-424e-4651-9903-47a78d513f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "c3b9f121-973d-4948-a6b9-435c785963bf",
        "cursor": {
          "ref": "dfa4daab-c0e5-49ad-a18b-bc1454fde1f6",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "01af6188-3866-48be-931f-f1ffe559d5dc"
        },
        "item": {
          "id": "c3b9f121-973d-4948-a6b9-435c785963bf",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "dd765652-4b9f-4f50-af6c-117c6a1fd141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "95f3651d-d000-4a4a-9327-7a239208e784",
        "cursor": {
          "ref": "0127bd9e-a812-4efb-9173-2251df740a17",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "25c09081-3550-4e1d-86cc-a0eb6cfb36af"
        },
        "item": {
          "id": "95f3651d-d000-4a4a-9327-7a239208e784",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "31d65746-899c-4388-8e2f-143204d7520a",
          "status": "Created",
          "code": 201,
          "responseTime": 6260,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "78396b71-74ff-471e-8ae1-da5da6954331",
        "cursor": {
          "ref": "f60c37b5-be4e-46ea-a1c3-e413d14d7e32",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a943b5f1-6e42-461c-bae5-249b363023e8"
        },
        "item": {
          "id": "78396b71-74ff-471e-8ae1-da5da6954331",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8946256b-826b-456c-b64b-4cdae31f4c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "8899af47-dfb0-410f-b0fe-f304479d3004",
        "cursor": {
          "ref": "cc7d093b-fa6d-41e7-9e87-ebd6a5a065f7",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b426af32-72a3-4725-9879-b82493f4d587"
        },
        "item": {
          "id": "8899af47-dfb0-410f-b0fe-f304479d3004",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "60a0f1f4-a21a-4ea2-846f-91b9c28a558f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "cfad2d3b-353b-498c-bef1-855f655f4abe",
        "cursor": {
          "ref": "ad6214f0-cd5d-4c5a-8c27-2be43397a9bd",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5f66ab98-24ca-47e8-9dc9-aff6e8d251bb"
        },
        "item": {
          "id": "cfad2d3b-353b-498c-bef1-855f655f4abe",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fdc44d8d-dd2b-484e-bbaf-258f78274ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43baaeba-4bd1-41c2-839b-f74a79b6e341",
        "cursor": {
          "ref": "3eb0ab1a-6afa-49e5-b74e-9d238ec543ad",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5bd63fac-d32a-4ead-ad03-100b568fead6"
        },
        "item": {
          "id": "43baaeba-4bd1-41c2-839b-f74a79b6e341",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9fedbcde-45e7-4564-adc6-62ccc9798699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a698f0-5c0b-47ea-9908-9d24be00607a",
        "cursor": {
          "ref": "4a47ab9f-aa00-47c7-94a4-b0c12fd3a8cc",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "025777f3-557c-43c8-a5d2-f2f4186c2001"
        },
        "item": {
          "id": "09a698f0-5c0b-47ea-9908-9d24be00607a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "168f23ff-838b-40c8-a78c-cf91abac5f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecfae1f-3678-4a1a-8317-10345cd6ca2a",
        "cursor": {
          "ref": "0aaaaffd-2a53-4f90-be7a-e5a2607f6406",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2ef623c9-29a9-4698-891b-1f69baa9f772"
        },
        "item": {
          "id": "7ecfae1f-3678-4a1a-8317-10345cd6ca2a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "507f0675-a971-4cdf-b96d-a408b189c941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac78491-5fb4-4e7e-904f-ab0fcb9e959a",
        "cursor": {
          "ref": "be88a152-0145-46f7-b3b4-591b736ee37b",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e0c6d748-651a-4e1d-9e53-b98e30960de0"
        },
        "item": {
          "id": "cac78491-5fb4-4e7e-904f-ab0fcb9e959a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b8a73432-c6e3-4358-ab51-1e0532b5df5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fe77fa-5e20-4f43-b613-6d19d4676ca2",
        "cursor": {
          "ref": "4c58cd0f-9f79-4135-87bb-31ddb5c11858",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f7c86d14-38e7-4062-91d5-14b05ca23047"
        },
        "item": {
          "id": "e1fe77fa-5e20-4f43-b613-6d19d4676ca2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "13ea74f3-06d0-4a7a-b7e2-be5733115f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971448ed-00e0-4c5d-9f8c-f0e0d44aa473",
        "cursor": {
          "ref": "42a3f34d-db62-4ded-96d0-6b53e1cc7df6",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "05cc32ec-1c6e-4f94-874a-6005976d9540"
        },
        "item": {
          "id": "971448ed-00e0-4c5d-9f8c-f0e0d44aa473",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ded8f98a-23ae-4099-9e80-1481481921c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07e4db9-0c0a-43f7-8711-2f116cae5f5d",
        "cursor": {
          "ref": "44dd26fd-b0b9-42fd-9eb1-248c597f651c",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b25b5f4c-b61c-4474-af4b-c8b697441ec5"
        },
        "item": {
          "id": "c07e4db9-0c0a-43f7-8711-2f116cae5f5d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "02d4e272-b928-4224-b445-534740c92f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c903a1ae-6f10-4b18-933e-d0c932413e1d",
        "cursor": {
          "ref": "a11310dc-fe6d-482c-8eee-508fc506b9b6",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9d4c36d6-9d04-4266-bdd6-2e156532540d"
        },
        "item": {
          "id": "c903a1ae-6f10-4b18-933e-d0c932413e1d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8248c7e9-5929-4d53-98a7-1a671c30d867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7535367-604e-4be6-85c6-9b9a2a4c2473",
        "cursor": {
          "ref": "de7282cf-1786-4fe5-b234-fba0e3f57899",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "704464c8-41fe-4cec-80f1-f511bd602d57"
        },
        "item": {
          "id": "a7535367-604e-4be6-85c6-9b9a2a4c2473",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "739337d6-4df1-4ca2-934a-28627beed56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246b4504-7c76-426a-9192-5d0e611eed7f",
        "cursor": {
          "ref": "a89af501-59b0-493c-b757-7ccab7e33719",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "692cafa5-0987-41aa-b3cf-fb987c566a28"
        },
        "item": {
          "id": "246b4504-7c76-426a-9192-5d0e611eed7f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0573877d-512d-4b24-ad08-e60073fa8abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf83de4-d1b3-4d2a-b197-e0630ac56148",
        "cursor": {
          "ref": "51fb16a2-b86e-4a00-b0c8-f31b6c8bb825",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bf0eb49e-7e72-4090-ace0-db9616343000"
        },
        "item": {
          "id": "faf83de4-d1b3-4d2a-b197-e0630ac56148",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8b31fec6-aabd-4356-957d-312ba0166ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0302772-b5e8-4ff1-9d58-58d5389bb452",
        "cursor": {
          "ref": "6fce2ae6-ccab-4cb1-9bf5-f27b2dabbe8b",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "980d51b4-f81f-4555-b4b6-305b2d8a14ed"
        },
        "item": {
          "id": "d0302772-b5e8-4ff1-9d58-58d5389bb452",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "897701fe-fc34-4079-af11-fa6957da5a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fba5c3d-ec8f-463f-8b39-aa23b87767cf",
        "cursor": {
          "ref": "88da591b-38f0-4dfa-8335-e8218a41ee7e",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f31a2035-f271-4b47-9df1-2c390083ccc0"
        },
        "item": {
          "id": "8fba5c3d-ec8f-463f-8b39-aa23b87767cf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fc677392-c973-4685-aafe-508b7e67a63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb33eca-93d3-4a16-93fe-b9f30dbfb710",
        "cursor": {
          "ref": "51c59832-5741-4b9c-a60c-0dbd4bce4f07",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0ff39e0f-9d91-430c-943c-350f79aff6a0"
        },
        "item": {
          "id": "ffb33eca-93d3-4a16-93fe-b9f30dbfb710",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e09944ad-606f-4b1f-9aca-7fd01908ebcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ba048d-1c88-44dd-a446-4f05b445eea4",
        "cursor": {
          "ref": "169d8608-60c7-4f07-a91c-bc89c2f25f4c",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0b1bbc61-c6bf-4853-8c4d-6ff751f7bdc2"
        },
        "item": {
          "id": "75ba048d-1c88-44dd-a446-4f05b445eea4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dd12c8ee-c32e-4546-9d07-9f9dd58076a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8bac13-e010-4b87-9f15-85e8a9a472a0",
        "cursor": {
          "ref": "cc150d7e-b4c0-4a4f-84ef-dddf74100582",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8c9c8b29-97b3-4d8b-9f48-08cdc009d7af"
        },
        "item": {
          "id": "8d8bac13-e010-4b87-9f15-85e8a9a472a0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5a6234e5-eade-4868-826e-ac3cfd8fba5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec3d8bb-e5f8-4907-8ce8-34e00628c356",
        "cursor": {
          "ref": "115228fb-02aa-488b-95c8-093b1adcfec7",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2417fd5d-278d-4115-afe5-fa8b2ea5b2e1"
        },
        "item": {
          "id": "8ec3d8bb-e5f8-4907-8ce8-34e00628c356",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1ead3fa2-30df-407c-af72-0c116d2c8e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ca3093-d131-4d2d-8404-9e27a301e547",
        "cursor": {
          "ref": "432fb696-ec82-486b-b04f-3a959bb1ca95",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0bdba1fa-6f24-4c04-935e-73ef8d025894"
        },
        "item": {
          "id": "13ca3093-d131-4d2d-8404-9e27a301e547",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "195eeb38-f21c-447a-af1d-af4a9f3dd2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894e10cf-6430-4ece-9ad6-671f51a1eea4",
        "cursor": {
          "ref": "de34008c-3a97-46d9-b39b-499c01ef0536",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4971cc46-3171-4499-b64a-9d895ef9d24b"
        },
        "item": {
          "id": "894e10cf-6430-4ece-9ad6-671f51a1eea4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "af18a924-0be1-459c-9dbc-08905efd5f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47af9c1-9106-446c-9b81-5d1e847d7c01",
        "cursor": {
          "ref": "b11616e2-ea3d-454b-928b-0fd191ddec77",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1fefd12a-9aaa-4584-a87b-efeabe2d04ee"
        },
        "item": {
          "id": "f47af9c1-9106-446c-9b81-5d1e847d7c01",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "08b1343c-b2d8-4c34-9455-ca1abca0569d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25de8196-6b61-4a3d-8e5f-5fd5f3cd7fa0",
        "cursor": {
          "ref": "0fd3d197-8b14-4496-88eb-b4d862c8db41",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5f14b3c4-4923-426d-b9da-439e5159d6b4"
        },
        "item": {
          "id": "25de8196-6b61-4a3d-8e5f-5fd5f3cd7fa0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e0493d0a-fbbc-4d68-ab8e-76b65bc87f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907c2b86-a726-4982-845a-5e4cd0624318",
        "cursor": {
          "ref": "933a1e22-b1d3-4fe9-a9cc-54c470b737f6",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3cadd296-f8b9-47f0-991b-046c3dd4c629"
        },
        "item": {
          "id": "907c2b86-a726-4982-845a-5e4cd0624318",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1060eb34-3fa4-4c63-bc20-db43d35de2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7e5e8d-1787-4bce-ade5-0027bc471cac",
        "cursor": {
          "ref": "0fa528df-7faf-4032-a683-b4d30bee1753",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "68de2787-a79e-4e9b-a2fb-57bf8fdd8ff8"
        },
        "item": {
          "id": "2a7e5e8d-1787-4bce-ade5-0027bc471cac",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ee2ba620-af76-4e11-8f14-516d8d32e799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8579971-4fe0-4196-bfea-b83434cf1587",
        "cursor": {
          "ref": "66897d8d-1d8c-4bea-a798-fc139bee8fa1",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bc3d486b-8a78-4d45-9625-c1f9d06784dd"
        },
        "item": {
          "id": "a8579971-4fe0-4196-bfea-b83434cf1587",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fac43231-bf54-43c4-87df-0c3cbd3e257a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba72e3fa-a445-465d-b018-eea2c2d103ec",
        "cursor": {
          "ref": "d5dadc56-5d0e-444b-bd86-5fce0859c6eb",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "81032965-82c3-4673-804a-532a12a7c25a"
        },
        "item": {
          "id": "ba72e3fa-a445-465d-b018-eea2c2d103ec",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fc8d90f8-86f9-4c6a-a9fd-a27ad98e724a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70cf018-21f4-4d29-b152-65ea52c91aae",
        "cursor": {
          "ref": "1aeaae56-0a9c-4db0-9246-3bd50835e17b",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "56362912-0494-46c3-9797-ea5a095748fe"
        },
        "item": {
          "id": "a70cf018-21f4-4d29-b152-65ea52c91aae",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1fdf072b-91b1-4190-9907-526b4371d547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c691cf77-cee9-49a4-9f63-be3995796728",
        "cursor": {
          "ref": "3b0c0dea-64f3-461e-a9ce-71b82516b849",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5a62d276-ea7d-448b-88bc-dde7d77a98f8"
        },
        "item": {
          "id": "c691cf77-cee9-49a4-9f63-be3995796728",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fa06dc8c-7ab1-4654-8559-eec49fcaa0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4076c1f0-20db-4977-8fa1-b6d687e485fd",
        "cursor": {
          "ref": "de8fd2f6-7e7e-435c-9542-95cf13a6ddab",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e69c0981-d248-42b5-b4eb-9352b3f29239"
        },
        "item": {
          "id": "4076c1f0-20db-4977-8fa1-b6d687e485fd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "28d3ef95-1d18-4e1a-a1d8-5ee25cec6711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b944f3cd-87e3-4802-b081-2fee0c22bab5",
        "cursor": {
          "ref": "13b3fdac-aa73-44d7-9470-a6604cc61fe9",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "56319c1d-52b1-4c8e-ad9e-9aa463b9a6ff"
        },
        "item": {
          "id": "b944f3cd-87e3-4802-b081-2fee0c22bab5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4af77a5d-4782-47c8-84c2-f85e66568742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7630de99-6edc-4cc9-91ab-6ab9b137cab1",
        "cursor": {
          "ref": "d6c0c8ca-f72c-42a1-a4f3-abe67a7f3ab6",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7ebe6083-c8ad-426f-bb61-4672bce2738c"
        },
        "item": {
          "id": "7630de99-6edc-4cc9-91ab-6ab9b137cab1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "75665c63-4f9b-4dc1-aa5b-340bb795c24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194573a5-fc10-4667-8619-9657114031aa",
        "cursor": {
          "ref": "d8eeffc2-263f-42cd-ab4c-a457d4997756",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "35af187d-b40f-4560-ad0b-4aebf0e45100"
        },
        "item": {
          "id": "194573a5-fc10-4667-8619-9657114031aa",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6fac259a-9606-4961-b5b1-0f167ee043b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc27546-04e7-437e-9c31-16f588eaf5a5",
        "cursor": {
          "ref": "1249107d-a46d-4f61-8188-660c8525e284",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cdc304a1-93b7-4376-966f-dd8483f8faae"
        },
        "item": {
          "id": "7bc27546-04e7-437e-9c31-16f588eaf5a5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9602e0f8-40db-4bec-a63b-65dc3e3a36a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 97,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52733b3-aa65-48ca-bdea-62ec6d8b6007",
        "cursor": {
          "ref": "720a2b79-6d20-41bb-a91d-9d704cf84098",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5cc2d6d4-71af-45f4-8529-0221e9604ff0"
        },
        "item": {
          "id": "c52733b3-aa65-48ca-bdea-62ec6d8b6007",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e5583c9e-19c3-44ac-b5bb-b3849a6428af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c76f10-b162-47f7-bd73-f04d39133814",
        "cursor": {
          "ref": "3d73ec44-5f93-4ece-b2b7-50be8dc99c11",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d4eccb93-ce83-4b68-8368-73c5c5801992"
        },
        "item": {
          "id": "02c76f10-b162-47f7-bd73-f04d39133814",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "64da5ed4-0a15-4f8a-a9d9-64a5ecef761c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadec3c2-1134-493e-905e-9361f4511c3a",
        "cursor": {
          "ref": "e58487fc-e575-466f-a6bc-69191e454b23",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "641c5dff-5698-4171-94e3-c36113c97095"
        },
        "item": {
          "id": "fadec3c2-1134-493e-905e-9361f4511c3a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c88e0447-58b2-4ed9-903d-7e95c9977c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a779ce3b-b0e2-430e-9ee7-41cf6e4f9f3b",
        "cursor": {
          "ref": "432be45d-ff96-466a-8f9d-cada3593c7aa",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "351a93ef-4875-49dd-9088-409cd7c5d309"
        },
        "item": {
          "id": "a779ce3b-b0e2-430e-9ee7-41cf6e4f9f3b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7213c960-a2c0-4f91-a82c-e2dcc94318b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00e7a5f-5115-4c4c-86c8-b528e6263d14",
        "cursor": {
          "ref": "3c711638-1815-432c-95e7-23da7323c4fe",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "39c02dc5-0876-42f7-bd51-2b06abe93147"
        },
        "item": {
          "id": "e00e7a5f-5115-4c4c-86c8-b528e6263d14",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e84fa170-5977-4498-87b7-e577bf210dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061a77ea-737b-487d-b917-f6812f015de1",
        "cursor": {
          "ref": "661a97c1-eab2-4447-ae2c-5caf4b9fe135",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e72308d9-fa1a-4c23-8872-ff4c098879e7"
        },
        "item": {
          "id": "061a77ea-737b-487d-b917-f6812f015de1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c7a25f86-0309-4301-8ca7-1dab75e79580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddeac765-af5e-4d0b-8dcf-031583ba79b7",
        "cursor": {
          "ref": "bea255df-63fe-480c-ae54-12f0c8bd3062",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "acac0668-c8a2-4e22-92a3-34b9a2b4cd33"
        },
        "item": {
          "id": "ddeac765-af5e-4d0b-8dcf-031583ba79b7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d77353b8-3b1a-4125-ba80-f8a912cc4958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754791b1-0cfc-4686-ae37-75cac6097afd",
        "cursor": {
          "ref": "a7e964ea-84ce-4f0a-9a01-20bd0102819d",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e3cd5149-c04d-451c-aeeb-cba3ce435086"
        },
        "item": {
          "id": "754791b1-0cfc-4686-ae37-75cac6097afd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "476d8de7-932b-4b8c-9db9-916a7b31af9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c6623d-a218-4897-9231-8913e5aac7b9",
        "cursor": {
          "ref": "d42b729a-4ec7-4bf2-896e-d82c364aea36",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "05eb7139-9ddd-499c-96a6-07c2d0786d95"
        },
        "item": {
          "id": "f7c6623d-a218-4897-9231-8913e5aac7b9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4032e43e-ee98-442f-8073-15cce68be4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669a38da-92d8-4f18-a5d3-173bf6df301c",
        "cursor": {
          "ref": "c264d715-2d93-4d6f-8789-36ca8fee9ba2",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "668e84ab-a358-4626-93fc-eb2103ebb58f"
        },
        "item": {
          "id": "669a38da-92d8-4f18-a5d3-173bf6df301c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6c93893c-489c-48f2-96cd-085c8cb586e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787dfd72-3a66-44e2-93d0-faa364dd651b",
        "cursor": {
          "ref": "056bb479-344b-4291-bfff-462a3ef21db5",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fa10d809-5420-458d-914a-042547f3c9db"
        },
        "item": {
          "id": "787dfd72-3a66-44e2-93d0-faa364dd651b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d6d8f865-8a56-4535-a1ee-11bc93c816fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef19200-0496-40d6-879d-83fd8ea87eb8",
        "cursor": {
          "ref": "a870436c-9eba-45d7-aa6b-5e9670d1a91b",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "09553eb4-9f2b-4c76-ac95-aefb954c277a"
        },
        "item": {
          "id": "7ef19200-0496-40d6-879d-83fd8ea87eb8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a91bf9eb-e4da-4dc1-9631-5a0135944e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7714f05d-6876-44fb-bec9-780a9a3e8d2c",
        "cursor": {
          "ref": "0f598936-5802-4a32-9f4f-e3dafd55f97a",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "58bfcccb-8c3d-4cd5-be7c-b869086afc10"
        },
        "item": {
          "id": "7714f05d-6876-44fb-bec9-780a9a3e8d2c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6e12c05f-5e07-4f52-85fa-280afae25771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17b009b-6572-4210-9333-118054ba84c3",
        "cursor": {
          "ref": "ea8a1fe2-ec64-4b15-b47b-02d4e20600ff",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cf13e1ce-27e9-4416-8c0c-21f1647789af"
        },
        "item": {
          "id": "b17b009b-6572-4210-9333-118054ba84c3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "109c6ff2-4fbd-444e-b634-73de30421d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9d7080-96cb-4d69-bc48-28f379aa93da",
        "cursor": {
          "ref": "874a8d95-92a3-49cd-bcbf-d94fb9295af5",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a3c906b7-1c7c-4a88-91a1-8102a53aca44"
        },
        "item": {
          "id": "ed9d7080-96cb-4d69-bc48-28f379aa93da",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1aea7815-9056-48a2-aa72-71175df9fb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec549c3-7a91-4473-b95d-8c8c22f2b723",
        "cursor": {
          "ref": "bdb8fdbd-fd67-419a-acb6-a69a4ee31ee3",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "456d6406-6437-41d0-a2ec-ef417f104261"
        },
        "item": {
          "id": "bec549c3-7a91-4473-b95d-8c8c22f2b723",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8da83197-99cd-4dc2-90a3-7167626629ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e12a99-b71f-447a-ae44-168f14752611",
        "cursor": {
          "ref": "d7a6731d-64b1-4ed4-9613-f950c4fea2d0",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c62ed764-5a9b-4bfd-81c6-a5e5a3ac59e3"
        },
        "item": {
          "id": "55e12a99-b71f-447a-ae44-168f14752611",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "366783f9-6466-405f-b2c7-1713d350759d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a43169-f667-488e-a23b-0bad93f4e187",
        "cursor": {
          "ref": "29a0e706-5f56-49bd-a29a-646464bafcf8",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3a96e565-4fed-4654-9dcf-2df24cce90f3"
        },
        "item": {
          "id": "40a43169-f667-488e-a23b-0bad93f4e187",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "29b9733e-aa3e-4b91-b431-5a99d3e61420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31d1305-9317-48c4-8141-bb85eb1188da",
        "cursor": {
          "ref": "737825d9-8974-445a-8e33-251c2b603692",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "05e649dd-e095-48b7-96f1-cbce25d626e3"
        },
        "item": {
          "id": "f31d1305-9317-48c4-8141-bb85eb1188da",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d1389435-6dff-4dc1-97aa-b452c1e32e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bfa38a-e524-4e89-91d0-d5bb95249d86",
        "cursor": {
          "ref": "11527334-cf5b-4578-a0f0-a4ac270bcc22",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2cce0f0f-8380-4739-a675-3e0dd6a7fca4"
        },
        "item": {
          "id": "c7bfa38a-e524-4e89-91d0-d5bb95249d86",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "392040a2-6476-41b3-9d7a-51524a3cec9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62b35a8-5e01-4211-8558-790c00f64f1a",
        "cursor": {
          "ref": "8096f746-b0be-4f27-8c9e-2d230780d7ce",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7df1318a-bf0a-4410-ac91-725ff1dfb6f5"
        },
        "item": {
          "id": "b62b35a8-5e01-4211-8558-790c00f64f1a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "76845aa1-b9ca-4e0b-934c-1752af5b27f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ca8096-2082-4a67-a623-14d9a5082f00",
        "cursor": {
          "ref": "0870e865-77f0-4067-a1a4-f5bf7551c69c",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "592beced-8287-4539-a6d1-68424a8e7162"
        },
        "item": {
          "id": "64ca8096-2082-4a67-a623-14d9a5082f00",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6e8f8ca4-b706-4659-a97b-7808e133494f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aea5315-64c6-4dac-aac5-0244eabe1f57",
        "cursor": {
          "ref": "7c21385c-f6de-49b5-b00f-5448853808f3",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5846e56c-0ec9-4bd9-bf39-9a65274bd82d"
        },
        "item": {
          "id": "4aea5315-64c6-4dac-aac5-0244eabe1f57",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9ac8ab46-9743-4dfa-82dc-7c75b71967d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fca7caf-ff4b-4e56-acd5-cf31c8e270b1",
        "cursor": {
          "ref": "8b8e44b2-dd9f-4051-8c07-a79e5ade0319",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2ff62bd4-36b0-4fc0-877d-12e30079641c"
        },
        "item": {
          "id": "3fca7caf-ff4b-4e56-acd5-cf31c8e270b1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fbbedf72-d2de-4bda-abef-11d2fe3d617e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8154036b-4d14-4a56-ad5d-5d43c8ac48cf",
        "cursor": {
          "ref": "356e7691-eb56-4f5d-baae-7508c89cf457",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "18dd6c8b-e22f-41f4-86a8-7551c714fbf6"
        },
        "item": {
          "id": "8154036b-4d14-4a56-ad5d-5d43c8ac48cf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c6e099ab-f64f-4cd2-9e2f-6eccce4578c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e710220a-698c-4185-bada-de12467c16b1",
        "cursor": {
          "ref": "d147beb5-5422-4342-9eaa-fc5bb6927261",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "22fd3299-a7bb-4d82-90e4-edb3505de0ec"
        },
        "item": {
          "id": "e710220a-698c-4185-bada-de12467c16b1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f740d504-2c5f-41be-a9f6-f15b1e06b8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35fc0b5-25bd-41dc-8807-265872e20981",
        "cursor": {
          "ref": "9a832498-09f0-4eea-8289-9b1c93d6dea0",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e03f830b-99ea-4337-817e-bb990a9e45fb"
        },
        "item": {
          "id": "b35fc0b5-25bd-41dc-8807-265872e20981",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8a04ba24-0c39-48c0-ae43-4a274edb3fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f96d3a-b72a-4490-8697-6dace1518469",
        "cursor": {
          "ref": "fd5aca03-d062-4cd2-87e7-904ce40aec79",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e7b84ada-b6d9-414f-a6ef-d23ce7cc8b9d"
        },
        "item": {
          "id": "25f96d3a-b72a-4490-8697-6dace1518469",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "759c9d1f-bc56-490c-b139-a874e97e1d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386fb2a9-93b7-4840-b9f5-25628088f6cd",
        "cursor": {
          "ref": "a6c51007-8a93-4adf-a7c9-ea898ad0cc51",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fe807215-2236-4cc8-b61a-d6a193d58cf7"
        },
        "item": {
          "id": "386fb2a9-93b7-4840-b9f5-25628088f6cd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "219b985c-36cc-4510-9382-2547b48142ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca79d50-c859-48b5-837e-edac5247fce0",
        "cursor": {
          "ref": "e82f4e93-066b-44b6-a4a1-9b0b3cc53245",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "99175247-2d9d-4b1b-8334-79f3a1aa9279"
        },
        "item": {
          "id": "6ca79d50-c859-48b5-837e-edac5247fce0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5b9eb15a-6d44-461d-897e-0d8959322bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1dc7a2-577a-4636-81a3-f47f5b6083e5",
        "cursor": {
          "ref": "addfebb9-e2cd-48d8-a4a6-31c13b626b79",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "082ab38f-8785-4c9f-852b-793a9cd7a5f8"
        },
        "item": {
          "id": "4e1dc7a2-577a-4636-81a3-f47f5b6083e5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8f960a57-64ae-4b7f-add7-d5de3064da36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaaf7d6b-b33f-4d31-b273-422939d5365d",
        "cursor": {
          "ref": "55029a66-4bdc-4029-af6f-76eb0573cdf8",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b605eb58-e49d-48e6-bb04-3d878a9f62a9"
        },
        "item": {
          "id": "aaaf7d6b-b33f-4d31-b273-422939d5365d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8fc0a9ec-adc4-41b3-a71a-3a88a66139c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c7991c-8889-4da7-9301-466ac31f11a9",
        "cursor": {
          "ref": "a311075c-f7a7-4976-b0d6-ea52d08fac22",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c67f837e-6477-4cb1-9efc-3579b916f703"
        },
        "item": {
          "id": "99c7991c-8889-4da7-9301-466ac31f11a9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e121fe2e-b1e8-4499-b6bd-d5f2e786dd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968c1b94-3abf-4f9d-bf21-c395b7860369",
        "cursor": {
          "ref": "71f9cf3f-a1a2-4a2b-b94e-0045384b49f5",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "13813bce-8b7f-4d34-9659-eae44868f829"
        },
        "item": {
          "id": "968c1b94-3abf-4f9d-bf21-c395b7860369",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7d913715-fd55-4224-b1d4-f2f5234791cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6cf989-c283-4212-99e8-d8147a868b47",
        "cursor": {
          "ref": "3775add9-9ce9-4b4f-bb1a-d3a27362627b",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2bb4146b-a2ca-4c93-bca5-7c1263348bb0"
        },
        "item": {
          "id": "5c6cf989-c283-4212-99e8-d8147a868b47",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b4bcc6eb-bbe5-4a94-a137-6fe9571dcbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b66c81e-2258-430a-b1ef-bc155539e78b",
        "cursor": {
          "ref": "7eb6fdb0-176b-429f-a84a-debd65cc8f4f",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1d2f61c2-30a9-4ce2-b740-d229a211ab79"
        },
        "item": {
          "id": "1b66c81e-2258-430a-b1ef-bc155539e78b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "23840765-580e-4306-a4ea-6cf96ecd227a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600e8932-40d7-4258-9987-2995b6cd1e32",
        "cursor": {
          "ref": "17d84065-57d8-4f1d-abb1-0344563549af",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6561a070-a19f-413e-8173-3bee99b01d43"
        },
        "item": {
          "id": "600e8932-40d7-4258-9987-2995b6cd1e32",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "04a9c1af-38a5-41d3-8e45-9055fcc389d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b09712-3412-4700-9a3e-a9a694d62522",
        "cursor": {
          "ref": "66fd9ff4-9929-45d0-a901-8a51d986289a",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "083d5b29-ab17-4fd1-a0bf-3c88b9ee6b74"
        },
        "item": {
          "id": "b3b09712-3412-4700-9a3e-a9a694d62522",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "21ba7505-4048-4e89-8b4e-1a4bb0192d23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a11592-76d1-4b94-a6cc-ea4117ebaa0f",
        "cursor": {
          "ref": "68b30d2d-92b8-4b47-929f-112acba55bff",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5025a330-140c-4c99-8b0e-1b2e8d293589"
        },
        "item": {
          "id": "80a11592-76d1-4b94-a6cc-ea4117ebaa0f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dbe00db8-0d60-4e5d-b233-23ba79407849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebadcff-d91b-457c-8e6a-ab8099939440",
        "cursor": {
          "ref": "e69db037-63bf-47bc-9be1-403fb2eaf926",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "70751c0f-7250-442f-bc8d-742dc1496f77"
        },
        "item": {
          "id": "5ebadcff-d91b-457c-8e6a-ab8099939440",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d857087e-81bf-4198-8ffc-97a89101f807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e450dd7e-36d3-45f6-9af0-df97996924f2",
        "cursor": {
          "ref": "efee5588-7836-402c-8541-9b97fd214b4e",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7e06f3dc-35f5-42fc-bffb-8181efbb0d4c"
        },
        "item": {
          "id": "e450dd7e-36d3-45f6-9af0-df97996924f2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5db84d9f-dc8b-4545-bef7-84866bc6f7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3981ba5d-8bbc-492d-8058-2277d07fd234",
        "cursor": {
          "ref": "6e0d2b12-1d12-4fc5-8396-238e977a8914",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "49e3ce1e-7f8a-47db-b60b-57d94f6e7bba"
        },
        "item": {
          "id": "3981ba5d-8bbc-492d-8058-2277d07fd234",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cc71f01e-2dab-48be-a77c-53d5147523bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7186a60f-99f4-4483-86fc-693c4a84cc07",
        "cursor": {
          "ref": "ab022dcf-3f2c-47b3-8f9f-0ee3a0d4eb61",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cd6860c8-e227-4ffe-9eca-a4fc0ef4c21a"
        },
        "item": {
          "id": "7186a60f-99f4-4483-86fc-693c4a84cc07",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b6c90790-a7e5-4a77-b671-dc332128677c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30597f32-9e27-48df-a53c-34e2953162f0",
        "cursor": {
          "ref": "603dbfc0-46f7-4247-b1e0-74f2129255d7",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e59cb159-3b93-4463-a871-186e5dc10acc"
        },
        "item": {
          "id": "30597f32-9e27-48df-a53c-34e2953162f0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fcbebfb4-3f68-43ea-9965-33634055bb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1833d5-a4c8-4d7d-9950-3b00549bf44c",
        "cursor": {
          "ref": "cb95e18a-fcec-4e64-829c-8f1bc3285888",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2c253f2d-ce2a-411a-b8d6-fc2d8c1ee818"
        },
        "item": {
          "id": "1a1833d5-a4c8-4d7d-9950-3b00549bf44c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5ef0f7b5-d75c-4409-bd0d-353f7a6e923f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05ae1ec-249e-4cdf-89b0-b00776d5c731",
        "cursor": {
          "ref": "a4898e6f-9c14-4d80-8cce-718868225228",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "77fbf45a-7f60-4a5f-89ff-46e4668e4cf2"
        },
        "item": {
          "id": "d05ae1ec-249e-4cdf-89b0-b00776d5c731",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "eb1ef6a7-8d25-4f12-9087-0e3bfb8cea81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73855f8-89a1-475e-ada7-cc2ea084ef8d",
        "cursor": {
          "ref": "9ef82cd1-6e76-43ab-95d9-8de2e390b63b",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "afb2255d-40b2-4d16-bc65-27af8642276e"
        },
        "item": {
          "id": "f73855f8-89a1-475e-ada7-cc2ea084ef8d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "280f4310-cc75-45c1-8cd8-972c94883deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b67b44d-1e2d-4701-87ec-0fba0a0ea8ab",
        "cursor": {
          "ref": "3b607d04-b523-4b18-9c9e-bb63b424c6cb",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0a22abae-d5f8-41ee-b6f2-c117c8c92b22"
        },
        "item": {
          "id": "1b67b44d-1e2d-4701-87ec-0fba0a0ea8ab",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3458bf23-4c8d-4cc3-aa25-f02acdaf8ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad95fb2-a2bd-43ba-9a24-50750a821fc7",
        "cursor": {
          "ref": "4355160f-ee70-4527-bd8d-a557f70ea308",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d968aeca-e454-4897-919c-ced8e14f6bf1"
        },
        "item": {
          "id": "7ad95fb2-a2bd-43ba-9a24-50750a821fc7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "88706125-f037-4dea-99f7-e58550052b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bc42bb-4d46-43ad-9ee5-ca6f03c14553",
        "cursor": {
          "ref": "d2b29a1e-54d2-41ab-bc3a-4a8c0bc78100",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "97d23d17-6d9f-467c-bae1-605811e051ea"
        },
        "item": {
          "id": "d7bc42bb-4d46-43ad-9ee5-ca6f03c14553",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b9f8db3d-fd0d-4d08-b451-f261cd3b0235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471242b9-2f14-43cc-98ec-7eec1a4ac0b0",
        "cursor": {
          "ref": "9c216b39-3689-438b-8c59-1ff0456488c8",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "deaaf46d-d307-4790-a0b9-2b5d7d29bb51"
        },
        "item": {
          "id": "471242b9-2f14-43cc-98ec-7eec1a4ac0b0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4254c48c-3027-4661-9dd5-eb5c21b5a4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab169129-9dcc-4565-b0fd-b704ac789d0c",
        "cursor": {
          "ref": "47ea77d9-825d-4c15-8d12-83df40613b06",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c9fad960-496a-4fdd-993f-dc1dab40fd85"
        },
        "item": {
          "id": "ab169129-9dcc-4565-b0fd-b704ac789d0c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "30bf3eda-629a-4b1e-98c3-9d5b463c4cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de73ea37-8232-40c4-8bb4-d898aed58af4",
        "cursor": {
          "ref": "7a5cf57c-57cc-4afc-b6df-d9acdd4fb920",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "12640039-ebbc-4f8d-8e9b-592e9b3c27ad"
        },
        "item": {
          "id": "de73ea37-8232-40c4-8bb4-d898aed58af4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e9acd72e-c3cc-4f1c-a00e-771664036076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaca8683-46ec-487b-8046-650bec2f6f6c",
        "cursor": {
          "ref": "88c67ffd-8d2d-4b29-ba2d-647b0459a1f8",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "62716970-a45a-4ea3-aea6-e9a6c3c8bdb8"
        },
        "item": {
          "id": "aaca8683-46ec-487b-8046-650bec2f6f6c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f73b336d-4eb6-47e3-8eb6-b97b482b1823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7715698-346f-478b-b1b4-007703edc5d8",
        "cursor": {
          "ref": "0ac8bf96-c74c-4d68-82f6-f4ce165f2b79",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0ac730c8-2215-4bad-ae88-2267bab5004a"
        },
        "item": {
          "id": "a7715698-346f-478b-b1b4-007703edc5d8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "934f29fc-81ae-4cc4-94a6-914199371544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d9346b-9c87-4e09-8bf0-8dbfcf762e35",
        "cursor": {
          "ref": "f2e2ebaf-f01f-45d4-8755-f4698584388b",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "481d9b88-9cb4-4906-841d-ad82ec2a9452"
        },
        "item": {
          "id": "04d9346b-9c87-4e09-8bf0-8dbfcf762e35",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a629cdb0-be3e-4fa8-8339-7102226d8a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfeb60d-8188-4e20-a462-b034043c32b0",
        "cursor": {
          "ref": "4d7cf303-9689-429f-925c-076f0756adbe",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b4aa189f-3255-46ac-bd98-2307c8ff6a38"
        },
        "item": {
          "id": "bbfeb60d-8188-4e20-a462-b034043c32b0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1d4672b2-37d4-47e6-ae5b-3b69d7584128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9de739b-f441-47d0-83c6-ac6cb2b335ff",
        "cursor": {
          "ref": "9f8abc2f-90fb-4f42-9a9c-a48a5f4a8566",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9dca9dc2-b28a-44b2-b531-133c3afd71e0"
        },
        "item": {
          "id": "a9de739b-f441-47d0-83c6-ac6cb2b335ff",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b32866cc-6c5a-4092-a7a3-390d5ec6c667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384a0be3-8fd4-4d02-9535-2814cc6bb118",
        "cursor": {
          "ref": "0f341c85-db0d-4e4a-a48d-9645c9fa140b",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "eb0c2273-c5da-4582-b04a-73e9a4c96ab7"
        },
        "item": {
          "id": "384a0be3-8fd4-4d02-9535-2814cc6bb118",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "07465300-01ed-4f8b-a1eb-4dab5e70a007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0624cc-de3a-43b9-982e-37cbb1d04139",
        "cursor": {
          "ref": "14afc9dd-5733-4046-8b62-c02d851783fa",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5ff17180-56ef-40f6-add7-8366df2a198e"
        },
        "item": {
          "id": "ff0624cc-de3a-43b9-982e-37cbb1d04139",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "331093f3-bb52-4241-bb85-25c28c3a41cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff67ed8-f253-49ea-bb74-6eb9b0690c0b",
        "cursor": {
          "ref": "24a4d595-6a56-48a3-b2e0-a349f4df16f9",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1cea0a76-802d-4dd9-b511-34c91429fe07"
        },
        "item": {
          "id": "7ff67ed8-f253-49ea-bb74-6eb9b0690c0b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2db5bf43-678e-4a9d-8152-b39220a938e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a69845-f638-4b3e-9ad4-8be579babe58",
        "cursor": {
          "ref": "09d899c4-3d43-41cd-9005-d461423e19ec",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "dcec2f7e-bd12-4bdf-9da1-b0553c387892"
        },
        "item": {
          "id": "24a69845-f638-4b3e-9ad4-8be579babe58",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "acf86ca3-5cfc-4eda-afdc-78279ed298e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ca8bc8-7099-4048-b390-399546c3595c",
        "cursor": {
          "ref": "3a3b7645-1f77-4890-90c3-13425c70364a",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bcad9b59-e3d3-43e8-b7ad-4cd5767033f3"
        },
        "item": {
          "id": "07ca8bc8-7099-4048-b390-399546c3595c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1e495b6c-25d4-49a7-9efd-9321dae73050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a4ce07-0507-4918-a37d-133376041b62",
        "cursor": {
          "ref": "0faa713e-cbc7-449d-b55c-5842d0781225",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "791f170f-69a3-41d2-904e-899abe55448e"
        },
        "item": {
          "id": "a3a4ce07-0507-4918-a37d-133376041b62",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8b17925a-6f9a-48d0-8d6e-1d3393f05a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8bb5a3-1474-4827-8ec5-581ff36e4f70",
        "cursor": {
          "ref": "f70754da-5dc8-4395-a423-b60e34ad9361",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "171148bc-f02a-4aa5-b4ba-e96b080d8c2e"
        },
        "item": {
          "id": "6d8bb5a3-1474-4827-8ec5-581ff36e4f70",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "90172b3a-71f5-49c5-b77d-4da8323b149b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29127059-c025-40f3-9e4b-f9754ba7ae16",
        "cursor": {
          "ref": "911c3a09-fb68-4aa1-aa28-400e19060ae6",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b7cdaed6-0bed-4b42-9bb2-d577d7e93f24"
        },
        "item": {
          "id": "29127059-c025-40f3-9e4b-f9754ba7ae16",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "603a65f8-8552-423a-9457-2aba784febe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302dc9e3-ce35-48d7-9397-d4d4c2841ec2",
        "cursor": {
          "ref": "4d7d357b-fea1-4fbb-888c-eacb34c5daff",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "478e195b-f88f-4703-83ea-98e9a5792550"
        },
        "item": {
          "id": "302dc9e3-ce35-48d7-9397-d4d4c2841ec2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3a5fcc9f-6c4f-4ee5-b95e-71b6cec24edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439a6666-37bd-4914-ae1a-34de3e689da5",
        "cursor": {
          "ref": "c9ea614f-5091-4215-b94a-87f2b3f3c9a7",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6c03bdb7-c133-4620-8e3f-4759db183c14"
        },
        "item": {
          "id": "439a6666-37bd-4914-ae1a-34de3e689da5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0f258cb3-0c22-4039-b45a-bc26aaaeb841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9468f64c-6011-4583-96dc-4524d9834760",
        "cursor": {
          "ref": "3e4bcab3-4c01-47d1-b071-7665e2a00323",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "02bfa5ec-dbba-4de4-97fb-bd9b415164dd"
        },
        "item": {
          "id": "9468f64c-6011-4583-96dc-4524d9834760",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1f98c311-3618-4c92-8ea5-4b48593d6636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09440b8-1e76-4d14-880a-5ff948bcbd2e",
        "cursor": {
          "ref": "e55a958c-5fc7-4017-acdf-60cbd00d0975",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dd1aeb0d-3f5e-4428-a491-71d647b68df7"
        },
        "item": {
          "id": "e09440b8-1e76-4d14-880a-5ff948bcbd2e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b58b0c13-63dd-474d-bc99-2ebf6f86e89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f86127-7370-4788-9a0c-eaaaad4ac05e",
        "cursor": {
          "ref": "38d52a3d-ff38-46da-b202-fa1c1328cd64",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9ce967c2-8447-4fbe-b03b-8a0066ef2d16"
        },
        "item": {
          "id": "e2f86127-7370-4788-9a0c-eaaaad4ac05e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "98bae8d4-f080-493e-b2db-fb7b9be20fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb816fa2-fb59-4431-8014-a740b97339ea",
        "cursor": {
          "ref": "f7f63155-d02f-4c39-a1ad-8fcd641496d7",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "68460367-1778-4271-b497-59ac713183c1"
        },
        "item": {
          "id": "cb816fa2-fb59-4431-8014-a740b97339ea",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "92837dd3-95af-4846-bfc6-1fe2b8f35715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d970f06-53ac-4a64-bb15-05cea30c00dc",
        "cursor": {
          "ref": "3f84c65f-63c6-40ee-a5a9-9d593710f2da",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e8f4f507-87a8-458d-853c-4447e04e7a97"
        },
        "item": {
          "id": "5d970f06-53ac-4a64-bb15-05cea30c00dc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6907d771-dfc8-4452-8f64-1e4453fa54ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aeb6ac2-3114-438b-902b-63d1a8b91374",
        "cursor": {
          "ref": "6968e15f-a8fe-46c8-9ded-dd2e520a631d",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7f4f6027-012e-4000-8a9e-8f3f4e8c28f6"
        },
        "item": {
          "id": "8aeb6ac2-3114-438b-902b-63d1a8b91374",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e4932f7f-8648-4a99-a2dd-d26d327002ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b081b8a-5f61-446e-95a0-f5aee5ac07d1",
        "cursor": {
          "ref": "e1d29e60-df33-4527-8d34-6214b84dc2e9",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c29b328a-e44b-4d34-b86d-ebf432e9d806"
        },
        "item": {
          "id": "7b081b8a-5f61-446e-95a0-f5aee5ac07d1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f85924ee-64e7-4445-9311-aed731e3b1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811633d8-f6a8-4c26-b48c-d576492a0e9c",
        "cursor": {
          "ref": "de582dd4-c7b2-469e-abdb-6b07af6df516",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "92c32e1c-af02-4ce9-be18-d05daa2f38a3"
        },
        "item": {
          "id": "811633d8-f6a8-4c26-b48c-d576492a0e9c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9c5cbfb4-23d1-4feb-82ef-9fd91e06a04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db8c512-9bb7-4257-8d36-43fc720c9a80",
        "cursor": {
          "ref": "b60230b1-5688-4fc2-b339-d0b8cd96a5a8",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e7bc674a-ccce-45d2-840f-960a7d4386fa"
        },
        "item": {
          "id": "8db8c512-9bb7-4257-8d36-43fc720c9a80",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6ff170a8-c923-40ee-a5f3-2c46fab93af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3eaa851-a443-4e66-be07-4c40a429c75c",
        "cursor": {
          "ref": "fca7bc5a-2663-4260-bb02-0807e0bda076",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "945cfd24-0614-40fc-afe6-ac04ea434b3b"
        },
        "item": {
          "id": "d3eaa851-a443-4e66-be07-4c40a429c75c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2952e3c3-89e1-4d12-9307-dbc975fdc9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e627ff-4464-404c-96a2-a77db09e8337",
        "cursor": {
          "ref": "2bd55151-fb18-46dc-bf08-aaa156a38777",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5d1d3556-9b1e-4e6e-b0f3-86268fede421"
        },
        "item": {
          "id": "42e627ff-4464-404c-96a2-a77db09e8337",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2b7332ca-a29d-4577-b6b1-2bf15dca953e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b70618f-2623-468e-be8c-5dd55d559488",
        "cursor": {
          "ref": "d4eaaa27-8f79-4527-b039-577571c5b13c",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b36e3965-9de8-483e-b37f-196ea14b28b7"
        },
        "item": {
          "id": "2b70618f-2623-468e-be8c-5dd55d559488",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "beafa71b-6640-4525-bedb-e212f149c1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d25924c-7805-4861-a262-2667506f6fde",
        "cursor": {
          "ref": "3004195b-7dc5-4a8f-a484-21c470ddcce5",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "484564ff-a02e-4328-b079-c40c12981b5a"
        },
        "item": {
          "id": "0d25924c-7805-4861-a262-2667506f6fde",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3c217304-1bf6-42f4-b262-8e487ee1244c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf3da76-7a70-4ef3-9599-21b97afa6029",
        "cursor": {
          "ref": "3f2ff99c-de1d-44cd-9d4c-9d6dfa0e13c5",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bcea1c98-0fd2-4a27-9a11-c05b60250e0c"
        },
        "item": {
          "id": "ebf3da76-7a70-4ef3-9599-21b97afa6029",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1337cea9-ddc2-40e4-af6e-a173eea68527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7067a55-0d43-4432-b96c-c9dbdaaf0277",
        "cursor": {
          "ref": "22586f2d-32af-4a86-9e6e-15b8bb2d295c",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cd4084a9-2159-47d8-aa25-11fde687f463"
        },
        "item": {
          "id": "e7067a55-0d43-4432-b96c-c9dbdaaf0277",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8ebf9367-b45b-4157-afbf-b6daac2a79be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66535cc4-3209-488a-ac9e-c635a3b8acdf",
        "cursor": {
          "ref": "4cf929b2-5643-4c2d-a2b7-4d8f98cc95fc",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e28c6e0a-569c-4c80-88bd-ed0bb2b8cacc"
        },
        "item": {
          "id": "66535cc4-3209-488a-ac9e-c635a3b8acdf",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "949a34ed-71c3-4708-b0a6-d904a9c99b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad72a5e9-84d7-427f-8033-5ab85c27f4fc",
        "cursor": {
          "ref": "1a9f104d-52d1-4ae1-bead-9a19f1653409",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c2b37bab-47bc-4b0a-b8a1-b4982f3d0f0d"
        },
        "item": {
          "id": "ad72a5e9-84d7-427f-8033-5ab85c27f4fc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d97f95d4-aa49-495b-8767-1eff6b2dab89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90346058-84c5-42df-ab42-4ba5c74bd3ac",
        "cursor": {
          "ref": "034d164b-ca3b-412c-9e67-e7ce097ed867",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e6b5dd6e-0f68-4b11-af0a-2e1e9878048f"
        },
        "item": {
          "id": "90346058-84c5-42df-ab42-4ba5c74bd3ac",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "60f7a35f-8305-42d6-9009-d4dc344d8515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cb3690-afbb-46a9-afe3-99585f19b36f",
        "cursor": {
          "ref": "82e5c7cb-2e1c-4f8c-9d08-e7014b6f4771",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3f8afaa2-de8e-43dc-806f-64860d643ee8"
        },
        "item": {
          "id": "33cb3690-afbb-46a9-afe3-99585f19b36f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6bdf0c00-6c5a-4f98-af09-36a8244a146b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816bd91e-87f3-401c-9d3f-8c4bfb0850f3",
        "cursor": {
          "ref": "7207a1af-acb5-4414-bcf6-40bf8e68920d",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e8d116e8-56d7-45f5-923f-34b43fc1e281"
        },
        "item": {
          "id": "816bd91e-87f3-401c-9d3f-8c4bfb0850f3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c121b52a-2d17-4ced-8175-cefff224b2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2714a629-7b1d-4d2a-8944-4d4997dbc9fe",
        "cursor": {
          "ref": "19a9c2bb-2122-4c4f-92b1-05445416c998",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6ba7d0a3-bcaa-4900-89f2-7176a33b620d"
        },
        "item": {
          "id": "2714a629-7b1d-4d2a-8944-4d4997dbc9fe",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7f617eb8-ac9b-4fe6-b23f-0ef4bda12b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732685d1-b4ee-4847-b8bd-0e3d37dcfd3d",
        "cursor": {
          "ref": "971beea5-a408-464b-9fde-99ae4b9a7bae",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7b2840d1-3ec7-4e7e-ad2d-71b6e983a2fb"
        },
        "item": {
          "id": "732685d1-b4ee-4847-b8bd-0e3d37dcfd3d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c43cd3b3-7495-469f-affa-ccb884932d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5982c3-edf8-4845-92cd-1590869d7b80",
        "cursor": {
          "ref": "d02493d9-a6b1-4e36-baa7-bf187bbeeb3f",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "27e6815a-e397-4af3-b3ba-bfaa509ef6fe"
        },
        "item": {
          "id": "ba5982c3-edf8-4845-92cd-1590869d7b80",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fa16103e-7b27-4d4b-83fe-dd81f46a4b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc3fb6d-d9cf-43c9-b4e8-867dae5ca4dd",
        "cursor": {
          "ref": "810159a4-811a-40f4-83c3-50d80cc7fa1d",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8ece58f1-df74-4417-95ae-99fc2df053f0"
        },
        "item": {
          "id": "abc3fb6d-d9cf-43c9-b4e8-867dae5ca4dd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e9cee17e-ab64-4078-b320-c36a348e334b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2043cfb-0604-4c32-b9e7-222e65bfe2ce",
        "cursor": {
          "ref": "1b49454c-0f29-4c52-954b-0fcb86cecfc9",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "83339687-40f2-4a4d-ad93-b04723ae7970"
        },
        "item": {
          "id": "d2043cfb-0604-4c32-b9e7-222e65bfe2ce",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2add155e-7bb5-42f9-a5ba-534f39a04aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8504f1a4-4f79-4972-8101-742a1c5a0169",
        "cursor": {
          "ref": "49b3b94d-23b9-4606-b42d-29e04e7cff32",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bc7b4acc-7839-4e54-b1f8-ad7c336553ed"
        },
        "item": {
          "id": "8504f1a4-4f79-4972-8101-742a1c5a0169",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2a102a29-fe4d-4b8f-bd4e-6b009688c5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd265f1-f9e1-4749-ba6b-22d4b485deaf",
        "cursor": {
          "ref": "3fd44a78-64c0-4ae4-857d-5bf342ffa594",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e58ee00f-415e-42dc-b086-78c545f18adf"
        },
        "item": {
          "id": "7bd265f1-f9e1-4749-ba6b-22d4b485deaf",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1603a842-5a26-4cce-a368-a5803cecfbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ce88db-b5c7-48c5-892a-4000b3052935",
        "cursor": {
          "ref": "7fe47ab8-b47e-42af-bc2c-7355df376324",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cbb339c7-5194-4729-86c6-9eee0e0759bc"
        },
        "item": {
          "id": "d2ce88db-b5c7-48c5-892a-4000b3052935",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "62b2b6cb-84d9-4e32-88d0-b83abf63af20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9815577c-f044-40a8-a282-8b4255fa6b3c",
        "cursor": {
          "ref": "1adc80c8-ad1f-42e1-88d5-765faabe0938",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e677353d-0317-4a7b-8ad5-956e05af1f2f"
        },
        "item": {
          "id": "9815577c-f044-40a8-a282-8b4255fa6b3c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "34962acb-7d40-4289-8f23-f9504fca2047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9dd3a5-ffd6-4f08-a053-efac4900d47e",
        "cursor": {
          "ref": "73cef707-8668-45f5-a8f9-1000035c0fa1",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3ea9b009-cc13-4d65-9550-652273564b50"
        },
        "item": {
          "id": "da9dd3a5-ffd6-4f08-a053-efac4900d47e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b244b1a4-3355-4818-8f0d-c289470b8a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f444641a-7d1f-4d97-829f-caf2533e926e",
        "cursor": {
          "ref": "d7ce3293-3b77-4a76-9f00-15299bcf8e9e",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b86785ab-28e2-45b0-93e5-2855b8b0b9d0"
        },
        "item": {
          "id": "f444641a-7d1f-4d97-829f-caf2533e926e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ea69c7f1-ac8a-4a5a-bb3c-df27a86975e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2192ed-aed1-495b-8c69-111fec0642ea",
        "cursor": {
          "ref": "16412ce0-e36d-460a-9c58-22b99950f7aa",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c80a4543-8f72-4484-b7bb-2256733d03be"
        },
        "item": {
          "id": "3a2192ed-aed1-495b-8c69-111fec0642ea",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b10a4c2e-f85f-4949-88e7-2b77e22a1d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6a2eea-bca4-4317-939f-b996ede0b68b",
        "cursor": {
          "ref": "1bed8de2-823f-4210-b449-b3eb8b953d32",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2c820165-6f4e-42fb-92ac-58dc7084b9c0"
        },
        "item": {
          "id": "ef6a2eea-bca4-4317-939f-b996ede0b68b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "66d3b857-a0c6-4212-bd5d-f43535410b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3260437b-edaf-413f-b70e-329845c83f6c",
        "cursor": {
          "ref": "8a273483-dc6a-4f37-87aa-ab099f03ef46",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "22aec23b-15fa-497e-b098-3ded83fc44e8"
        },
        "item": {
          "id": "3260437b-edaf-413f-b70e-329845c83f6c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b2302103-009e-4a26-b4fd-5be442c8153a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29ac1ae-4b11-42af-9d91-734d18334feb",
        "cursor": {
          "ref": "4a070d1c-9e4c-4987-87cd-e5e2249c2e5c",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b176fa74-4031-4953-a905-527bf6ae1a33"
        },
        "item": {
          "id": "b29ac1ae-4b11-42af-9d91-734d18334feb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d7013719-e6bf-40c6-b3a3-d84621790d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff813f0-7e6e-45ee-845e-8670d8e99821",
        "cursor": {
          "ref": "b6a02400-e132-40f1-866d-38118c75168d",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5260d4ea-5fdd-4bcd-9b70-bef506b4bcf8"
        },
        "item": {
          "id": "dff813f0-7e6e-45ee-845e-8670d8e99821",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2ac19a7d-9ee7-41f6-9257-548d61842f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522a6f2a-9a99-48ac-accb-73eec84349ae",
        "cursor": {
          "ref": "680909fb-d7a7-4aa6-b02b-0b62688defff",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ac24f816-a604-40f7-a33c-6fa928d2ed6b"
        },
        "item": {
          "id": "522a6f2a-9a99-48ac-accb-73eec84349ae",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d467d3ac-9261-4241-bc10-ff2cdd3d6b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0a3f61-f3f4-4c49-8eda-6fcb6f3bd456",
        "cursor": {
          "ref": "edada370-48dc-498f-acc8-4877f2106642",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b0ee8df3-fbe2-41a0-8c87-aa8c30505ae7"
        },
        "item": {
          "id": "1a0a3f61-f3f4-4c49-8eda-6fcb6f3bd456",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c2934495-c44d-4fa6-923a-50c01a7a6a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db0fb8d-e72f-46f2-ad51-cfed0ba93eb8",
        "cursor": {
          "ref": "4390368b-13ec-4142-8e79-f519fbca9631",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3281585b-28c7-4fae-9a74-6bfc478e1acd"
        },
        "item": {
          "id": "1db0fb8d-e72f-46f2-ad51-cfed0ba93eb8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "57888c05-180c-40b7-a55c-ee7f5020d326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc8fb76-40dc-4517-9cf6-d0de8b51d99f",
        "cursor": {
          "ref": "1a59d567-eb3d-4131-b9fa-2ba4dfadc214",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "076062cb-4351-4f7f-a819-24985319785c"
        },
        "item": {
          "id": "afc8fb76-40dc-4517-9cf6-d0de8b51d99f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "71e59408-dafc-44b1-8e3f-4373d3f31cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0578e92d-a2ca-4491-ae4a-9793f6c52e50",
        "cursor": {
          "ref": "f8608ef7-5a62-49ba-9e21-554fee968e78",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "74614bdc-2309-487c-a3e3-efd330280d14"
        },
        "item": {
          "id": "0578e92d-a2ca-4491-ae4a-9793f6c52e50",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b3cf549f-e4d0-45ad-87b0-3ac552f07d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4058a8aa-0704-4aa9-a1c0-bf54c3f35eb1",
        "cursor": {
          "ref": "8e8d585c-ac37-446d-b24e-d8735fb21137",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f62be0b9-ad24-440f-914d-49b0d7235806"
        },
        "item": {
          "id": "4058a8aa-0704-4aa9-a1c0-bf54c3f35eb1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e9e84be7-771e-42fa-b1d7-eadbbd7e7e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0bffbf-5f41-4fc4-aec6-4c8bf354d50c",
        "cursor": {
          "ref": "5fbde9a8-fbfd-48e9-aecf-e78931dae5a4",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "dbc03c83-d3cc-421c-a60f-5c50a9ab2ca1"
        },
        "item": {
          "id": "9f0bffbf-5f41-4fc4-aec6-4c8bf354d50c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f0dbffa1-aa73-4173-92fa-5df3fab48124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e1c80c-06d5-4ae9-a389-5c8a742e0ea8",
        "cursor": {
          "ref": "b1fffced-754c-4385-9959-90ab269202e0",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "13a754cb-8123-4d00-9dcf-b0a1afbde69c"
        },
        "item": {
          "id": "73e1c80c-06d5-4ae9-a389-5c8a742e0ea8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e3bd31f7-79f1-4dfa-b917-165828477998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75184ff-2b8b-4509-b07c-ca4b6694f206",
        "cursor": {
          "ref": "4205a0fa-5ca9-45eb-8864-cc29ec84605e",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9a4d282f-0a6f-4185-a902-71b7e1b26cde"
        },
        "item": {
          "id": "a75184ff-2b8b-4509-b07c-ca4b6694f206",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f3d9545f-f2a7-4ae2-a18c-edf4053a2809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7d08f7-2963-469d-9394-982d068726e8",
        "cursor": {
          "ref": "c23270fe-31c6-49d0-8f0e-9d932dd48533",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b429c822-ba06-492e-b748-65c13bb61176"
        },
        "item": {
          "id": "5c7d08f7-2963-469d-9394-982d068726e8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "554e973b-c019-4180-9f9d-913f95ee14ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e25779e-4c55-4c7b-b50d-7e6802566d98",
        "cursor": {
          "ref": "09b67919-b1f4-498a-8326-02c9c7a088ae",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1bae548d-fc78-4813-8056-5ebe461190f0"
        },
        "item": {
          "id": "9e25779e-4c55-4c7b-b50d-7e6802566d98",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "154152b5-c006-4d3f-864a-e82f14722c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75665640-a6d7-4054-874d-1c00f5d47247",
        "cursor": {
          "ref": "ca2ff4da-37f9-4768-b59a-f6b76bad7088",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "02d99404-4ab9-4106-8637-1f661df0015f"
        },
        "item": {
          "id": "75665640-a6d7-4054-874d-1c00f5d47247",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "17e72487-4e6a-4c5c-9723-ae66f6687c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ddbefa-7f61-4f59-87f3-df8fd824fd64",
        "cursor": {
          "ref": "28daa513-c353-4fc6-bcaf-c8192373ede8",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "3f9c5960-6bc6-4e2e-956d-9682c598df42"
        },
        "item": {
          "id": "56ddbefa-7f61-4f59-87f3-df8fd824fd64",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f3f6a710-2f90-48cd-adb5-509864b5d245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8f2fca-a1e5-40d7-ae7e-2279d180a73d",
        "cursor": {
          "ref": "3c20208a-8621-4229-bc69-6ac58cb6aac7",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ff7a9eac-e21e-44e1-b12d-56b3cc334b29"
        },
        "item": {
          "id": "4d8f2fca-a1e5-40d7-ae7e-2279d180a73d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "eb747a6f-7154-41a3-bda2-99ccdbd9a33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb14f2d8-dc96-4f8d-b365-61c4ca71d9ca",
        "cursor": {
          "ref": "3bebf946-ce75-4816-9443-ec3a5e95a841",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "042d6f47-2aad-41f1-87d6-96d53276d045"
        },
        "item": {
          "id": "bb14f2d8-dc96-4f8d-b365-61c4ca71d9ca",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7fd14639-17fd-4201-a0c3-2ce05e72f19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d692d17-1a65-467c-9dfe-b6b67ae3c225",
        "cursor": {
          "ref": "cc7f81cc-3a5b-432d-b6d1-5135959d0fa0",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1727c7fc-36dc-4a63-a6ec-0c2f00b014a9"
        },
        "item": {
          "id": "5d692d17-1a65-467c-9dfe-b6b67ae3c225",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ba1b61c4-aace-4a58-a0de-5df571bef6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985a8977-f3df-4fd2-b263-4570d194f455",
        "cursor": {
          "ref": "00ea4fcc-f8de-4448-b59b-f56ab7cba7fe",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "8f8a3af7-b107-4dc7-995e-0b794101ab67"
        },
        "item": {
          "id": "985a8977-f3df-4fd2-b263-4570d194f455",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "57bb15d2-73a9-49bb-b455-80c84a43440d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04808ba-9560-4e4d-9727-5d194fa4db3d",
        "cursor": {
          "ref": "cb2bfbaf-37b5-46a2-9f37-5d060127ac85",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bf28226e-3c54-4b8c-b500-d93c85a8897e"
        },
        "item": {
          "id": "e04808ba-9560-4e4d-9727-5d194fa4db3d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1779c4f2-da6b-4999-afc7-d9cf33f425d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2fb36a-3fca-4eb1-bc29-63d03e06d833",
        "cursor": {
          "ref": "cc811979-3c9e-4f76-b7e5-54ad01f701ec",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "155654da-88ed-41f0-bbed-032d3a08de8f"
        },
        "item": {
          "id": "6d2fb36a-3fca-4eb1-bc29-63d03e06d833",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2eee8270-5099-4eb8-91f5-1e18252b1320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ca4ce6-e9fb-44bb-a656-5db0b1a3afb1",
        "cursor": {
          "ref": "356839f4-91d4-4d55-96fe-c82816e37304",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f6eec3d8-e3a8-4962-8bb0-0edc57cde65c"
        },
        "item": {
          "id": "d0ca4ce6-e9fb-44bb-a656-5db0b1a3afb1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7937fc0a-1946-4a67-8cea-d51564b61a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac31583-66a2-4321-af2e-0bf3f7cc9b13",
        "cursor": {
          "ref": "f0bef729-2488-49b6-8e9b-f4a398623c59",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e3d6c32e-51f4-4a6e-90ab-a875e54f5e11"
        },
        "item": {
          "id": "0ac31583-66a2-4321-af2e-0bf3f7cc9b13",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9c759ecb-27dd-45d9-a468-0b84dc270344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2d3d87-8c20-4c42-9cbb-92e41869b85d",
        "cursor": {
          "ref": "47bcdd71-c35d-4114-831e-b10574b4a36e",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f8e80bc4-aa00-45e1-9f43-fec29f70b44d"
        },
        "item": {
          "id": "9a2d3d87-8c20-4c42-9cbb-92e41869b85d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e638752b-20e0-4c01-afe7-d0408f10d067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc24805-5600-41b0-886e-65cf4a3d5005",
        "cursor": {
          "ref": "226fe31c-46d9-4344-aa8a-feb337ec3b5f",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "8210a34f-5a22-4e8b-9cb5-efa5859362da"
        },
        "item": {
          "id": "adc24805-5600-41b0-886e-65cf4a3d5005",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "28d78604-920d-4869-87b1-c6a8fe22bab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf971217-5712-49dc-8f9e-037374f3cc8f",
        "cursor": {
          "ref": "e1b843ba-2ef6-472e-9cfb-9a1e7ad9fbcf",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "bf73d8ee-a83a-42db-a044-c40928bbc8b5"
        },
        "item": {
          "id": "bf971217-5712-49dc-8f9e-037374f3cc8f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "81aa7d4e-b0ee-4590-b8ee-6f63808c55a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93795e8c-b093-44b6-91ef-86400225e8f6",
        "cursor": {
          "ref": "0565a05b-bcd3-4fff-ad17-e799fc090d0b",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ff98137b-8187-46f8-b879-e7d104e57882"
        },
        "item": {
          "id": "93795e8c-b093-44b6-91ef-86400225e8f6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0d683b1c-d650-4ae6-9b55-9219f5f668a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5506f08-d43c-499e-9650-33ab66dc7420",
        "cursor": {
          "ref": "3a18a79c-5d62-4e7c-b825-5f00f79eda1e",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "dc4b186a-5a30-46df-b0c1-c0f8d29860ef"
        },
        "item": {
          "id": "a5506f08-d43c-499e-9650-33ab66dc7420",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "bc8448a3-b7d4-4499-80d3-3db8b5db9444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db54b7b9-7aaa-4f9c-a460-519c7345aa7f",
        "cursor": {
          "ref": "e896fdef-13b0-4fba-bc1c-065f3d4d5356",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "20f00377-7078-454e-8dfe-4f05e0033a04"
        },
        "item": {
          "id": "db54b7b9-7aaa-4f9c-a460-519c7345aa7f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8b3f86dc-3d34-486e-af86-ec08ecb5608c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f405a5e-b933-4d0d-b786-714478dc5cd4",
        "cursor": {
          "ref": "f0e0fc3a-bc0e-41c6-93eb-6a7a3e9e64cf",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e871d87b-706e-4ae7-8780-fc649eee06f0"
        },
        "item": {
          "id": "6f405a5e-b933-4d0d-b786-714478dc5cd4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d8cca33f-7229-497b-a713-c8c634595daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb24151f-074d-4b7d-9f08-7b9fcead4de6",
        "cursor": {
          "ref": "b0708e0a-c3e6-4024-b0fa-ec6b50b3d05b",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "10a8a859-e5f5-43da-bdd8-9ae644a3bc6c"
        },
        "item": {
          "id": "fb24151f-074d-4b7d-9f08-7b9fcead4de6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d0d84627-221c-40a2-9fe0-c2f269815b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0853ea6f-44a2-4eca-bc28-8e3d5d4c7c37",
        "cursor": {
          "ref": "21d08277-c3b2-4647-bdf5-244f781cb45c",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8e318327-f180-4bcc-9ca5-b1b0c46acc76"
        },
        "item": {
          "id": "0853ea6f-44a2-4eca-bc28-8e3d5d4c7c37",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "04515842-8a0b-435d-a4e3-3a6dfb6f1482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5517b85f-18e5-4f2c-af88-3e8d6e60650f",
        "cursor": {
          "ref": "cad82b61-9adf-461c-aa75-5c940abefed3",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "fc2d5cac-fb12-4575-b3b4-6a07b3e2dcdd"
        },
        "item": {
          "id": "5517b85f-18e5-4f2c-af88-3e8d6e60650f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "54d72173-1cba-4b63-a7ab-982405e834d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0788a9-5814-47d8-a723-8104927dc486",
        "cursor": {
          "ref": "e714abeb-aa94-4b7a-a356-0b3c0ad621fb",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9688d190-e11e-42ee-b537-6c0526697ea6"
        },
        "item": {
          "id": "4e0788a9-5814-47d8-a723-8104927dc486",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2ac62778-df1f-409f-9275-39e3acab3191",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43482ff-5765-4fbf-8d4a-851ff2e8e804",
        "cursor": {
          "ref": "843d27bf-277b-4cfc-b9bc-444a3d360a1f",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "dc001124-8e5a-4483-8024-0a4267b1d8da"
        },
        "item": {
          "id": "b43482ff-5765-4fbf-8d4a-851ff2e8e804",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a46ba1f9-c3db-4900-9194-241954138923",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0941e18-a71d-4abf-a131-66ee7643b283",
        "cursor": {
          "ref": "efa3ca9e-402a-4837-b190-86fec4ddbec4",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c44c0244-4ab6-477a-b7cc-3ac6ae4924df"
        },
        "item": {
          "id": "e0941e18-a71d-4abf-a131-66ee7643b283",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dd9d8cb0-4b6f-42e8-9acd-04e6f3157a27",
          "status": "OK",
          "code": 200,
          "responseTime": 1381,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f54970-0020-428a-916f-a110cddc22a1",
        "cursor": {
          "ref": "56cc4a52-3543-4762-a9d1-29e7be98ac80",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4beb8d65-1a38-44b0-b61b-0fe708faea8d"
        },
        "item": {
          "id": "f8f54970-0020-428a-916f-a110cddc22a1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b0a7dca5-71e7-4b53-bef2-8ccfa9b5809a",
          "status": "OK",
          "code": 200,
          "responseTime": 1714,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a5d23a-45bd-49f3-87a9-4c990d6eb7e6",
        "cursor": {
          "ref": "c23572a3-b3b3-4cdb-ab6b-16420215ae3a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cbb6c059-9fb5-43aa-9798-f26dc8ffb529"
        },
        "item": {
          "id": "05a5d23a-45bd-49f3-87a9-4c990d6eb7e6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e998a8d1-6480-44d8-9021-a3c60ce30de6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a5d23a-45bd-49f3-87a9-4c990d6eb7e6",
        "cursor": {
          "ref": "c23572a3-b3b3-4cdb-ab6b-16420215ae3a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cbb6c059-9fb5-43aa-9798-f26dc8ffb529"
        },
        "item": {
          "id": "05a5d23a-45bd-49f3-87a9-4c990d6eb7e6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e998a8d1-6480-44d8-9021-a3c60ce30de6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517fb7ec-bb06-415f-a053-7bfa7087e575",
        "cursor": {
          "ref": "64328901-a614-42ce-923a-02b67834f2f2",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "77943ff6-bdba-46d6-b543-795caf3687b0"
        },
        "item": {
          "id": "517fb7ec-bb06-415f-a053-7bfa7087e575",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bbaf5d0b-1f30-489e-bbbf-d5363fdf2ab2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e3367a-5536-4f15-a3cc-cbd46d415d06",
        "cursor": {
          "ref": "67848c8e-d123-4a0b-ada0-5562d9907da1",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c136df1b-8593-4426-99e2-01a54d7be95a"
        },
        "item": {
          "id": "73e3367a-5536-4f15-a3cc-cbd46d415d06",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d931d6c0-9fe5-4c93-ab89-da1cb1d443ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}