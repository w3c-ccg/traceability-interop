{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4dbd2ed1-cd1a-4619-99b8-ab0f1fb423d6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e990cddf-3b17-4958-9817-a3bcb6cd3167",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e78a086b-7666-44e9-8c8d-8d4dfb6fab90",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "853b35f6-1702-422d-98e3-6d03558fa25c"
                }
              }
            ]
          },
          {
            "id": "2e0d98c5-cfb9-4f67-b241-4447413d902c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fdebee35-a5fd-47e1-a53e-2034e0542360",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "75f8a0c2-60a8-4663-abf1-bb138dc7a7d9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "660e8d75-497b-4cc5-a7e2-350196d2261f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e5bca6c2-ce25-4ec6-b4d3-53bf5ccf6765",
            "name": "Positive Testing",
            "item": [
              {
                "id": "55b22155-8d4d-4e76-9c60-8b96bee3c21e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea617cd5-84ac-47da-8137-7703514b6a1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9de35ec-c24d-4f90-abbd-b7f794068dee"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18d37d78-c8d2-4ef9-9e6c-3e7ec4af1e3e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c1039a1-d9bc-454a-ae46-cdfcf98b1556"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "015a8a39-0673-4f87-afff-e0e62afb21cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c60051d-0a97-42ca-8184-9f0aa65be9b3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5f28409-1ab7-4b59-b306-ac92b0cbe88a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "98f4694a-f394-45a1-b9f9-93720ce2ba5e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7c0dc3c-3915-4a0c-ae4d-6184d334dfb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f031504-22c8-4844-9c98-3b378c5a55f7"
            }
          }
        ]
      },
      {
        "id": "44e7f885-cd4b-45b8-9bbc-91b4bf202ce1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "368a198f-1a65-4155-a087-20dd974da604",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2de31294-c9d2-4673-a28d-0245941efc58",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d999ffe2-2754-48c0-b512-1a08d4a1a8ab",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7648eb-5838-4302-8879-c1238fa9e002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69d6b973-7c38-4244-8be7-691d03c4ab5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc646a7-5bcf-4e37-919f-21e2cad5ae14",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36db70fb-4607-4fc3-ba4a-02f1ce8f1b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13116916-f56e-40be-883c-689d71c156ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b658aacd-f6d3-416c-907d-ca61232ecfff",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79334b1c-4d04-4c85-b71c-3017f548ec05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab51330c-f16f-404d-b05d-ae02806c8367"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "68ec7ef9-2a34-40da-ab69-f201d343c6da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b44901a6-9893-432d-a595-6b426b4159c9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73aec580-ad6a-42ee-9bfb-bdd39de5485c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ccf8f93-4733-47ce-99a4-d1f42db78394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9e5259-3992-40f9-a8e0-946aa41b33b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9b1d31-196d-4836-8894-f764d8885063"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ed91425d-def8-4f4d-b9d5-a1cb4949009e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b08e057d-8089-4dd2-9f35-2d8d5ab23799",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c04871d-9e1e-4a68-b8b8-8e4d5a820b77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a4248597-b263-466a-953f-c7209e49bdc5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4b22c1c-fede-4a6b-869e-f0db89f65775",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "81937427-5d2d-4eb9-8117-c4f4e0b67b14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17977230-a015-4555-89b8-afb6f129cd42",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a3e8538-2ce0-4839-9a29-be49eac4177a"
            }
          }
        ]
      },
      {
        "id": "0dd38a74-b4cb-4bc3-97d3-5cbe3b970d5d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5ec998ee-1674-4e9c-9f17-46c205fe3e87",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71319655-6851-431b-8397-1d365672efec",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9d37dadd-02f3-499e-987d-028af10648df",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb91e09-b2ed-4cd0-95c5-88fd95dc4cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d06aaf-13ee-48e7-9ebb-afe85e38489f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1334a79-4ed6-4ea9-a2ab-934544c0fb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8202a2a3-a47b-4ffc-b04b-b34b5ecbf5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ebcc1c-b91e-4ea8-857c-f0b73dc90255",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1bea25f-07e6-40ad-8bab-969d3bfca6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64ac5fe-15f3-413c-91b6-a4d3fad2d68e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e208c18-8c40-4a56-81aa-2a13127108b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0520ed93-de40-4ce4-ba95-69fd379d9611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0511b4b-ba59-4f15-8505-42e75953a548",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3d55cb-23d6-4738-a540-5b7350ee4ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c4a365f-2262-49a9-afb6-6d7f17774061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c4cdfc-33f3-4a28-9371-d9b4d59d5840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65ed234d-fea0-49ed-8ea8-f8f133cc9b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bdabca-f496-49fb-b090-3c00ed2533f6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191a605c-c9a8-40ac-90af-fa8e5039cc0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477b6457-c043-4381-ba6c-1f8ba08a7728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe418c0a-bb2b-475a-986a-ded4136c45df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fd8a7c8-1b4b-405d-802a-3ba23f69b15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032f807e-bfed-4551-9362-d1b37ac21305",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0a55d6-6681-4acc-b639-c3b0af24d7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ac135e-c225-4000-b4d9-3b7121049e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a204330-9696-4a8c-b661-65d2ee238725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b062af8c-ed89-4792-a8f7-6e5b707c5b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05dbfc6-bd35-47cb-955d-1af78c10b499",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cb554d-2719-4735-9fd7-057b6ec6be61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5edcb13-5e76-4d1e-88fe-0f749c1ede29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78360c5f-49b7-4b0b-b6ad-5d82f1b6f50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba08ffff-daa0-4638-9535-5ee3bfc3c91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce114ab-077b-477b-86a4-02d2f547f54f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d0250a-2146-4014-af83-c5c2f0d53ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe83b8b-b7cd-4f83-849d-e323ad5014c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48695bb3-1450-4d7d-81eb-58210b97e3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ad299a0-983e-4f98-81cf-1937d278c022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14312544-4887-4fe8-ace9-9711b54c1e18",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a139b6-5666-4b09-9d6c-688672e168f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb09cb0-d1ad-4294-bfe0-26581dd1cd33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70714a4f-7fc5-429c-a1e9-1b810a66c8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eadd6186-da5f-4d7b-86bc-7878c23112a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8416a1b-9dbf-4af4-90b6-d51ff8d92ad0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff346cae-3d00-4fbb-8594-edfcc13e047f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b39d6e2-c49c-48c8-b181-2481baa7eb25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e98900c-05d2-4d80-a797-96a9977781f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef0b41c5-614f-4b4c-800b-bd884911da72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658fef0c-b3b8-4103-b471-cc2edc509239",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61345c4-4184-414e-be72-2aa3f46c5d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b4d5ca-a046-4dfe-9600-9b823a3128b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9629b513-bff1-4341-b6c9-b7da3c625e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9ee21c0-ed23-420d-8a94-1773363b9ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b0e910-8280-46ac-ab3f-6ac20924eaad",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790ba8ac-a4c6-41a4-a88c-c4e767fb9393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b8e49a-a556-48cf-a570-780cc31bea12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620d8205-3ac0-404d-889e-f655db9d3b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2148c66d-6697-41d7-81b9-d58f6ab6d085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b04431e-446d-4263-b514-24c8d3e8f684",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb68994a-791b-400d-807b-9a74e7ffef27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116f7c4a-5ab6-43f6-ad25-a897323221f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54476372-834d-4807-93d6-6775c0e79a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8e343df-d8a6-46bc-8b81-87fced91a35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649afb76-63c8-4ed3-a187-0f13f4bc1e43",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b30f90e-471d-49c2-bef4-ad112bb399bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7aef2e-176f-4235-9347-6212924e51cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c776eaa-60c0-4f7c-9b44-35a902d96224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "742d2a86-dcd3-4447-b5c1-7be326206402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c256dd-fb80-4606-a4bf-4a5ba6c26fd8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c9669e-aa05-4c27-af61-d984f0c09c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd44a6c-5e65-4909-9893-1209d45f557e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e9ebdf-f4f1-43e0-951b-f9bad6ee3246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7f73b28-6838-4746-94e9-a686e374fe4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b1a728-40a2-44d4-8ae7-1de5aec3ad22",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c1ca22-f7d6-47b0-a405-36c4d2e260d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0474b8ce-6404-4904-89b1-41a535fca23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6442a234-d993-4923-9890-a1804a7fa367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31c23d2d-b9d6-473c-92fe-196982ccb773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb5a5df-f9d5-4c5a-9c56-37855a58da29",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db498fa7-25f7-489a-b718-1db72444bee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d6b802-4024-4e56-8d56-e3e9ae2ba724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a7c91a-5ef6-4e31-8c89-b5fbf4df8c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0274251a-1ae2-454d-84ac-208d474c61d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0f336e-f22a-4a54-a271-e9fc1c93c0be",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c405155-01ef-4d3d-bba4-5653693f5b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabbff49-6a0c-4a00-987d-45ac987bbe90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238a9694-c17a-4236-b13d-a23567822839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21281a5b-af79-4e92-931d-7b2c6bf849c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31519297-6e1a-496f-a229-d1a2bbcd3c67",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812dbbf9-4f2d-4453-b113-9af25b4e51b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bab6926-6b56-4ded-a73a-9e4550ddd117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89628ae8-a288-4f95-8a08-c8419f48edbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e13a3e0-c7ec-4c03-bbbd-c9b1ec3f17b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7071ff6-3e55-4880-bb14-7ee9b2f0fdfd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e82f0cd-c132-46f3-aecf-2e57ab66f836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715bc551-b4fb-4e40-a7b2-7a00171dc21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665777c0-9b0d-48f4-9de5-6e165d462513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "473e9af8-3e15-4a11-be5d-313efce1317d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0342c4f6-0358-41a8-858b-bd759955e19a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187ea000-30ad-4107-9ac3-5d8fda59eecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7efb1c-1a1b-45bb-bcd8-e3aa8e14e2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b01b7b-c741-4f0a-b294-0f6e5efc8b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca1ee7d4-4a7a-487d-9ce4-6b7c2ea5d565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65af6a8f-b61c-4193-bb59-ddf5e6d0c67a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0f030e-db6e-4bd5-829f-da7cf983ad83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183cc8b7-b645-4679-9c77-26bd85cd0a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8d00b7-2438-4965-a2e3-e666a9d99db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1920140-5424-416b-aee7-3bbf37ae6348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abceae9-57c3-47c0-8b40-5ddbe36f7da6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06a539c-d352-44b0-867c-095ac5016286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbab0648-c8b1-4bde-a2ba-9ea5e1050947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f525b5c8-2da9-49a5-8165-4b8e60077312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eead1718-e811-4275-a72c-2a6ab73c16df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9efb99-caab-412d-9cbe-81fc52c710ff",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1861b82-c222-49eb-8404-8d909473b619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ae08b0-aaee-4856-a866-7bedafb0c917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b654c4b3-184d-4370-a568-3a07ec1b1dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a27cd4b9-706d-4a58-9d4e-68e916e6b240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c280eb9b-5945-47f9-9844-31c7a52cd535",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9ca723-2a79-4c12-b24b-eb5c9b81b9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a801f86d-3143-4caa-b688-793258e5bbd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3648c9f3-172d-4e30-8d7f-ddb572e21ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb4bea67-0cd1-4f59-8cc1-23e2b40c1d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bed3913-43a2-431c-8fec-5566fac57892",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b596046c-6925-4710-b50a-3601e891e276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02d48ad-fb7f-434f-b5d1-dc9869375815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53553d68-2007-4f66-aaa3-e67fc9ca885b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "06bc6438-8da4-4d08-87bf-abde4937847d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95530d13-d4eb-43ec-b3c3-7fac8c86eb01",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419ad31e-0cc0-454e-8634-5fe0f128ef4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f6de7d-1035-4db6-b45a-ec445d65ddd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a68958-5093-4034-8c36-0bb1f9994513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "209529fe-c2bc-4586-9c05-8637c5e7d6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f713407-86c6-454e-9d1a-d254ed16f725",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c47374-eb6b-4d51-bd30-3828947f0469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f052c586-c51a-49d7-bb9f-7bf38c4de545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbdfc87-9ea9-491e-889e-95751ce3283a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "50881058-6a58-4723-b44e-83a7884ad9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d414e987-5afd-4d16-89e8-a88da030b225",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a97dc4-3d65-49f0-a313-4cdfd116fdeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a0a8848-3f4c-4c57-b7a7-737c8ecbe5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fb2421-8c5c-4fd1-819f-e962501b9819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9656b628-86c4-458b-af55-9f38b6bd2594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c7b1fd-73c1-445a-8785-a85ee334c06e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87639591-2807-4aa9-acba-41644661ed38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52119055-d184-4958-9a75-d4467fd82e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55118e45-05ca-465d-983c-5fe5b54e2e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8127b44-abe1-4604-a521-c4178c259fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca3895c-a497-497c-89aa-99681d5658ef",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cb3e52-3dc5-4ad7-85b9-d1fdadd053e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fde2017-2853-46b4-b441-b231643e353d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f330b07-d5ad-4cc1-b9d6-d619ee9ab2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "38562acd-14fa-46c5-9d2f-9492b8fbc32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b5c069-0464-49f9-842b-92ba587583ec",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6976b42e-70e2-4950-96f1-fc8114d69e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab229f5-f8ff-4260-9197-3b8ce9e911e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ddf7a2-40a9-45ca-b266-d246b3114913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5ac98e-decd-4fa9-9b3a-ce1b67e117ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bbfdf4-476b-45cb-9ea2-7b0bd05bf0d6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd816db-6d70-424f-9a4f-6b6d416444a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c39bbe5-2891-458d-b8b8-068e475c9a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2381cb-f7fc-4f1a-95e7-7684c92a9ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e144ac5-e832-46ee-9051-fe8dfd3291c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f428a05e-cef9-4c6e-9608-560f3db81670",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579a62ef-7fd3-4e0d-b4a7-c722f57dd968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c623b1-d5e0-4ad1-a3eb-008a856fa91e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981c8b55-6428-4e0c-924e-59c0f932eeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2efa89fb-9a65-4a76-9dd6-c8ae1a559738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d84d0c-afa6-4869-81f4-54fa6e891378",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91608c19-dee1-4470-a090-e23f64950b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca75f35-67b5-4e16-98c7-6dea8b6abcd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be10d17-7ef1-4c63-be0e-fdc55e316acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e404502b-f029-43fe-aee7-a400d7248429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546cfcae-6b9e-4481-8811-86d8430fa035",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d440286-fe26-4863-bf1f-c5c57cdf7b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6823a6f1-16c1-45f3-832e-1fcbd4761acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afe0e71-a642-4c80-89a4-342f186f6ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c2995dc8-d1a2-4df3-a50a-d0298af2daeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa42184f-c9f4-4a09-a230-b3d5f2317f3f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665957c4-d4e1-4836-9788-ac24279c635a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8f18ff9-bac3-4bee-b4a6-8e767d542bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a8f8cf-bb9d-4999-803d-c5d987fcd3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07a8f925-ad95-456c-b231-b4cb5a29b324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108e4206-3f03-4b71-b003-0dfe41811318",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40ed2b6-221e-4978-ac84-a09617927a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53bbfc4d-85d3-4910-b25e-b3fda847e448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f95e14c-5a67-4610-94cf-30cc1b472e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af8603aa-f84e-44f1-8797-f98f77441a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737491cb-2f4f-4996-9de6-1247fa5b2f32",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665d7d28-cfc8-41e4-8799-cc1d4a4c4f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0840b8-5042-47a7-9451-0f1d7d11da00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367b5822-6885-4020-b9f8-ec8ff4a7ae32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b130503-9948-4af6-8ad8-a767f783ea25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b353ccd-1ce9-45d3-912d-54e925886439",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66e5fe5-398a-449c-a395-91a2c46aba4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1d5b74-9cd1-4011-9e92-f740048c221e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83d7c07-4360-428b-b5b7-845c355857fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "be48fa60-4a0a-47e7-8f90-3e1810f024c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7304bf4-1787-430e-a707-2de243a3d881",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925afddc-f619-4c1f-a241-7e695bdfd89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19650ae-66c9-49dd-9132-c3a8fd3326b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376b4abb-e77f-4de8-a24a-e69797d2c1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e33593-20d5-4874-bb92-d36c58ec537d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be95bc70-0e66-4ada-8e0a-6bc13d71ee73",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9900227c-2f44-4491-b5b6-ef258bf34164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb8c349-6046-4e03-a41b-f7cd3e45a48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dd5d3c-c08e-4f83-8a2f-32cab85627ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a42ace7f-2a16-42fc-a13e-b344cd3fb7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ddaa2c-7add-4d1b-a7ed-3da1d08e202c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e5022f-c209-4a69-a869-8bcbb1881e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aad9879-8329-4ff3-a972-ddfb8886cce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d98344-fddf-45da-b360-a2ad1ec987c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "02c671cd-9122-44d4-8c91-ea626ca17411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cecfe82-af10-47b6-a7b5-2934824d939e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaad6ffc-a86b-41e1-9b1c-53044cfe1097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8cd020b-6348-4edf-9601-3b9a817a8986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf29181-84c3-4995-bdb8-726850406c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9eccc1b6-39c9-44f8-b4e4-4eda5cf10c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae28eb1-8424-40ac-9c6f-727437f637d5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7aab5ae-3428-4658-8af5-cedc1ae99eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e2497f-9b8c-46d1-86f6-27c87da1e97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4a731b-fc86-485a-901b-89acfc8a4e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ceaedd9-41d6-4cab-aaa9-b521dc1e2d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e9815e-1d00-425e-8618-ecb17508df64",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925df27b-4383-4e69-ac2d-9e869ef33945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6515011e-fd36-432d-8347-416e9d577fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6e5453-3d1b-4d59-b2af-7c714bf9e882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f38ce6cf-02e0-4764-adef-cffaa28d9589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325718a9-5bb7-4468-99ba-27aa8335c49c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbf4b19-7eab-4634-8686-7f74c23103ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ada2c0e-e1d0-48d6-b644-c38b0ba6a7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b17bb9-3f4f-44fa-ab18-12eee58ce3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4041f11e-1d8c-4f95-bbd0-f7930fe5faf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf4b85f-61a0-426e-996f-bb1f8f85ae9a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f441476-2eb3-4871-b930-9ce8d1aba660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21914fed-10b5-4251-9ac9-b5398f00b4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fc136e-527a-4d53-bff2-6bed988ff5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de8e2deb-45d1-4627-9eee-36201ca0bc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672b2d07-d1f5-4314-bb1d-e5897eea15c4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78cb580-4a93-45ba-85c3-f6ad748ff6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db47dc61-d0dd-4352-84e0-669ad93afc32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b46395-9e19-469e-b3a3-fd721de10400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "951f1da0-8278-4451-82bd-89d8d9d70be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48acdc1b-0f98-420b-b36c-b23a5e404758",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918645ce-e96d-48f2-96be-8d1ebd3df4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d9b9eb-ff6c-4c8d-8a31-863a491dd2ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b59c580-bd34-4cb2-bdb9-f37d0f15ead4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f870346f-a363-4543-9d9a-17631a13d672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e78ae37-8e30-423c-9012-4a67364f55ef",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05347c0c-8962-4b6e-9104-3dcbd60a9452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1a41e1-c14e-4f91-b98a-d9d0e08af7dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bd09f0-0528-4d7f-9d43-fbf04d9acaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e31c229-905c-4a3d-b181-02fec9572273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfbff1e-2276-4013-887f-593d54cca5fb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d3d467-1e2d-4ace-a0d6-192b18a1b6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1bdab5-b1a4-46f8-b618-8fd040b6aac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c6996c-d43e-4964-9ce1-496cea425b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "956fd614-7ff5-4ebf-a42c-a82f51a895eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491ded97-332b-431e-99f4-928f2ab70c6d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3856b3c3-d922-481a-b8cc-696b512fb00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d924448-7c5d-461d-9510-b11c4334ed0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02adcedd-1b4f-47bd-8e68-8a7373dfe856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50d26ded-584b-4559-891b-47b6e2bfd797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cc4031-064d-4c0d-b801-b5efd9ae2b05",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd44c17-af05-40f6-b14d-9a7d3f7a5842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ecd0a2-702e-4428-988f-a38844176538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad9cab1-3334-4d95-aa3e-2caf52071019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2d5109-4db9-427d-b6f8-736d09bf2378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931e6703-67e0-4788-b171-dab3cabad5d8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba7d5f3-57a4-45fe-89b5-41e677814601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6d7ab0-1f67-48dc-b5a5-0afae1d8c94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50df8aa2-dd6e-4536-8a4f-7b07e925ac40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c13352c0-2ec4-499e-a695-dcfc0762a704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5f1b8b-076e-44ec-9e18-073f404e5eda",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbacc8b1-ca0b-40fa-b197-0de1d70206d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd6dd2a-9f37-4fac-9bdf-0577b939b976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0748f3a-e15b-47f7-a526-622441d46a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf8159d-b321-4f4f-9781-126f0762155b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1004ecad-cf4f-46dc-bc4b-79495dea2223",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e52a2a-09e1-41b3-8dd2-027b7e2764fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02bdf3fc-6b5a-4ee1-a462-ac10e99eab15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea0b332-1a1c-450c-8387-71f0792fa5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e584a4df-ecee-4530-a497-f20fa9be38c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad1cac2-3d80-4b15-b943-5f6bdb111985",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd8a9b2-0f60-400d-8434-ec6be6bef382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88654c84-6464-46de-80aa-0fc4cd1de129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d5178d-e416-4d91-bf2e-fad226b509f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "faeecddf-3553-4f3f-a917-37de490ae7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240bdd28-468c-4eb4-ad31-46e77b456f71",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5718885b-3703-4e20-84ff-043328ac5ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45cf8188-1873-42b4-b848-3a6ed221610a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709daf5d-841c-4a8f-917e-2b7842319588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "25f408c1-5cf5-4f37-892b-eb20c8c4cd0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdfd86a-798b-4892-801d-f8af5dcc3d43",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50e0553-0325-4dfe-bae0-1ab80b6e96bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d306aaf1-e187-47bd-b7a4-75125322cdff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74299a07-45e4-4577-98e6-9dbea744c512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e69d109e-c4ce-4ede-8f6b-43acd9b2924a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674525a2-4f67-46c9-80a4-cb0368c2cd2f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87218be7-b77e-4cdd-9590-bd19927b656d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d2fc44-bf53-4adc-a202-781592b096b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ea65e1-5593-4e9c-bc75-127031ea26c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8805ffc-4f7f-44fe-af67-755eeea4d064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec037fd-0756-4ebe-89c2-bac1bd3d16ee",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339d4912-a2b9-44ab-a7ff-a764f009da43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acfa68bf-b7cc-4366-a850-cefbc1b01cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089671a6-8482-45f1-b874-27440b27eb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe6615b-e273-4dd4-a737-72e9cb151e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd944f0c-7d02-4deb-a1d0-55c3d0cadbed",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e6b572-57a7-4224-a34a-4b1596bbdaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ab242d-aa25-49fa-9385-2b76161099ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19447b13-98f6-422c-a772-1e5a45fb9d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e74f37ca-33f9-4536-b692-bd4a1da73998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57d9a97-e209-4936-9536-636d9f838605",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efc3fb0-e71e-435f-b692-dfc352e7b5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c240107-bec9-4235-a4a4-5b0c5bd7b743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82a2183-9314-44c5-8def-0bc9f43bd6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d72d4a28-dff0-4475-8532-2c9a7cfbda4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381cb842-2ae6-463b-a25f-e41707320356",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c40549-188e-4459-a3a2-e28fd6a2011d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56dba6b-9d9f-4787-85a8-89251302aed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236728dc-671e-445a-bfba-1f29c65150b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68e2232c-48b8-4c7e-9766-10220a578da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6ad23b-db9b-4734-bd0c-495b73593c5b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edaa9785-bccb-4355-8cd5-8afa20b7708e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7146e4df-3e45-4536-a2cf-5b5206f8612d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16ccd24-4ea9-4ae7-b54b-7d7f37e6d18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f177f5a6-2a54-41c3-ae9d-e986b5bb2d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc1d093-1593-4e49-a1d9-d436c372cd9f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81fbb10-9b5a-4b91-acee-b304a7e494c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513c9144-0823-4766-b500-231e32ece61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b233ec81-fda8-43a3-a09a-b2823e2cca70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9cce43a-570a-47ee-bf5a-620361c01637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d393533-f2e5-4627-aacd-3f643a9e4c15",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c614f30-76d2-475f-97c5-a8f1e4bc6bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd73f811-7501-4d9b-b048-700b40580e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098cfdbc-6b65-4fea-9811-6fdc5504ca36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b823aaf-097d-4fe8-8d3f-9642e0507970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a54645d-a1c3-48be-8ad9-afdfbc00e7e9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1acc31-481e-45e0-85c3-a3a42025f1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eef7051-ffbb-46ca-87ae-f6b1cffb9c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1296518-644d-49c3-bc84-289e9c1cd4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "97aa47a1-6c2d-4f2d-bf3f-36aa353f7398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a29f158-8d28-4d0d-b588-0d5bdafe9216",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b48fc1c-d35e-4e8e-bfd3-0cf1f42065b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac83f89d-b938-43ee-ba2b-a64fd2b2584c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9498ce-fa42-428a-9c0c-95b82ffb987f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "41d6ca8e-da51-4f13-84c6-111fbeceb92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18db4a1-97ba-4ec0-833f-e6c206cfc3fa",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa21ff1f-cfa6-4bf7-b7ad-7e7fb293eec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c48738-304e-42d2-81f3-8b68bc17a6fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825e14b0-8f54-4428-a848-1d9763542cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a55afb27-e8e4-40b3-b695-e0d1d8621b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ef91d8-11cc-4a58-9418-0bbb0db420bc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b374b4a-0478-42bf-b042-2d8589195d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59d0fe9-89aa-4a00-aa3e-cb74d5d0a168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db62d1d-b6f0-4ae9-ab57-82f4bb012f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3179e0bc-decb-40f9-a68f-3a315f55adf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d79dc1-bc37-44d8-bb15-580f37c03078",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2baafdeb-2c77-4ce3-8fe4-df68ec8f61d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6508c413-9f34-4053-a6de-cadf75426bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23efab67-8f82-450e-b029-cfd326001258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a448051b-fb83-4297-b862-3abcd942d929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409e7e09-8775-4c9b-a85d-3fba50a9f6bf",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575acfb9-d377-469d-aa1d-11207ffcb0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d19247-f335-41fd-93a5-d0c233e2ea27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64148956-2555-484b-9aab-883d75602525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6dac137c-83d6-408c-ba84-29881c99bb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bb47ba-3940-470e-ba61-17dd2adc32d2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a697f4b1-851d-4ef1-9de2-b545be95e33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c482bb0-8073-4733-9104-56fc5630cb8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f11040-bfad-42d6-81ad-be898f3fe7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb9552c-4b63-43ac-acbb-f4286bcd94f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae4ee3b-53d9-4ef2-aba4-e187599de237",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81d5f15-891c-43ea-ab9f-0e16b9acc3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8a8e13-01c2-49d5-96b0-9cbb3703cafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0c7700-1aa2-4920-aac0-58111c80ecf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f97a7b3-fa5c-444b-bc33-c68dc8f2b247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7220728-5212-4afb-a094-fbd910e01e26",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df82e286-c053-4304-aa95-bcc85db418a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d1d932-7f8f-454a-a316-6796de1a5f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5299dce-1d89-4c9b-97da-f93d69807711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "265a74ab-a446-45fd-a70f-ceb7f7d48864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc230e32-8062-4bfe-8a32-b0662e21dbc1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92252e2-cf77-408a-9718-5c3256cc8ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52a8e4d-14a7-4b4c-ae54-ae5793b2982c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f94f17-c96d-44bf-8581-d8101b29586c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "897006bf-7d9f-4c0d-91c6-b91a3b67dce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cd8b27-1031-46bc-afe1-bfab4efec222",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3b379a-eb49-44a7-9e8a-a4c014c89b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb86294-5d09-4b3c-9e8b-7cdc62ae013c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34032f4-c32b-416a-ad0b-7f62e0bab717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba25b22-fe1a-47b3-9134-38c7ab8bc0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c05f0a-e0b7-4950-a266-c8a5644680a9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3a88c2-6448-4f2a-9d11-55934d5ea80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132e9ee0-3a0d-40e1-85fb-85b4986522d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b18747c-413b-4598-badf-08cb4b599ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12de7c97-d6ff-4fe8-b0f2-d5eafb6347f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b080c2d0-ed0e-459e-b20d-b3b4ec9c346a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0b18cd-5ccc-4341-a5d7-8234bd2ca711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbe27ef-6d9d-4691-92df-73414cb6f5b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acf6a30-1c74-4bbd-9cb9-9dc3bd025474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b969cea4-9809-4cad-b3c8-516147417ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97991ebd-24f1-464f-b4b5-7f443d5f8b2c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75526c99-59cb-483a-a993-ecb6ef31b1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c9c939-0a77-42ac-86ad-1d773e80e310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbecb683-cb3f-449d-9fb2-083fcd750172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d32675e9-ba44-4467-88a2-d6fc217eba3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f752f2fb-117b-43e9-8235-842de62ec19d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9ebcb3-c799-448a-b2a5-42332f7665bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f9d4dc-25df-402d-8010-579ee760848e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e1eac9-2f94-4c0b-8a76-59951b7067b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa07b36e-12e0-4290-a7ca-c250411b1270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fe80b3-cd3c-481c-a6b1-c7f71e8bc77f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5670de3f-7204-4e53-ae61-f262aa766074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f25505-3a71-4591-a596-ec34a418b7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a059763-6301-4a09-b682-9e8f5b6d4f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e873eb56-d8af-4581-8948-e04f78c974c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9fc5c0-fd6e-4753-8ae3-73334a5c0834",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "343c46ba-9cac-40f9-8884-68dfbaaf47fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c84b76b-e4bb-4977-9705-64f5f7bf537f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869f0b5e-0892-4787-8764-04248d571f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7dba0ba-38c8-441f-b68a-98bd458aae27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d325553-8adc-478f-b480-81f4e560c341",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10df7d3b-0903-48cc-9bbf-d512cc9a4356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a411d888-2376-4671-bfb8-679c356e1ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5ff53b-56e6-4c83-b3af-d5ec228b4fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9406ce43-45ae-4075-a565-8b70306a320d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ddba5a-aacb-4690-b6c6-44404b0829b0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f33c3ba-3ace-4bee-8fd6-5b2cda40a492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb17f43a-2507-441e-9018-d9aab9cc8c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748e0e5a-f0c9-40a5-a9f3-f24961f52557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39a5c24f-860b-4797-8aac-4ff2747326fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70328ce6-3248-4c86-949b-07ad5ca8b527",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7533367-64f8-4181-b9dd-58996dc1d6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743331b8-bfc9-4d29-8115-11b7c5972660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe380329-3ffa-41ce-aab7-bff4af573230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd79785-2141-4bc3-86f3-09d81c8166dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5941a8-2751-4ff9-9287-643b9b557744",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06eeea8b-2388-4b10-9f22-a7947402f0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e66ae8-cab1-4f85-845d-e5cb0e940c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae08fb2-06cb-4ac9-9e64-2fe1e80ac31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "24d0217b-e70c-4303-a2d9-87ce141b41b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe19c974-8b1f-44ad-8d5a-a3305eade326",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54deda0c-4a7e-45a3-a366-de78286be913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae9e5d8-bd35-474d-8638-272d92e6aff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c14f4c-07e4-4d5c-a838-19ad85f12ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "77d3edad-e6b4-42be-9b24-1aa52a45047a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809d23c5-953e-4bbe-87c1-9f1dbc05c25b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7943eb66-334b-45f3-8814-76cc1129f191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250850dd-ad7f-4a60-b2b5-f87ae3fced9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6408c2-1a02-477a-89ad-619251c084b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f078862b-ef2f-43ef-b45d-e5f442bd0692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868d9c7a-ab38-4d1d-b4fc-bb1698505a0f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2832f7e-efb3-4648-a0ac-1bcdbd93875b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0cd9fba-a33c-48a4-b22d-5cec3c7c6e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b3ccf3-fb92-4631-852a-eb512c2e357d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb4383e-25f6-423a-8b26-3039e5a3fe7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61627128-5504-4031-9d82-ba0ab00f0495",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a108faa7-63f7-4c4b-bf17-093be556ad96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5b3ff2f5-ac00-4991-8056-2b7f114a1944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72be21dc-7cf0-44f9-bbb1-d3d38acc95a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "102d4143-f19a-4431-b9ea-8ce6452efd12"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e07c1573-3f33-40cc-b245-cf54912ee472",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3d43d26e-dfbf-41ce-bc62-eef0b4a11dff",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bf7f42-1d93-448a-a2b9-6a41dbf0e2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60d5913d-5d27-4da6-b117-00dfd0258212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de997526-f093-48a8-b8b7-b11507470509",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3653def5-bb1b-42ad-86e1-05290a8dc040"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc0fd60f-c148-4faa-975b-520d5c2d9916",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cc5f91b-7e0b-417b-a2d4-79204228de11"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4506c679-2a6d-431d-b658-c33c1e3e5884",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d539cd1d-03df-4e16-a3cf-2603deaf825b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e339daf1-df3e-4d0d-a99d-484721cbb6e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80e43a9f-02eb-4fae-bb86-08309dc6522a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "09b26422-60a7-48a7-8fd4-c32025b92edf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1af2d102-7ab4-4892-82f8-98100b94c379"
                }
              }
            ]
          },
          {
            "id": "7fd43e4e-05b3-4da4-8036-be79d7b4fb08",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f7762ca0-9598-4d23-8256-f11e0660f462",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "5446b110-752c-4ec7-9a68-de59ad16b805",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169452a8-6032-488d-9741-c14ffec53ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a4fd39c5-b4d7-48aa-a9cf-c2b3e0c99a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00e21d8-a028-4d7b-b730-cb7630e08fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8491a49-ce3f-4267-8bb0-c061bbc6e8db"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3c01b65f-3285-4d48-a083-a5e78e886f50",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19210c6b-8bef-4212-be17-fa7e93355604",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ee2b144-9a16-4ba2-b889-73265e2a5837"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1d5f99b-957c-4218-b762-6ff98a30bf30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b258eb3a-6113-47cc-9234-5a4a28ed2942"
                    }
                  }
                ]
              },
              {
                "id": "7246ef19-2a19-4bb6-b1ce-46f1b2b53bbc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9eaf25a-9e30-4578-939b-c8604e87a462",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a9fc8a8-1de3-4f35-bf9c-8dc1e48a2f72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d37f9af7-d185-44b9-a94d-68ebab91c236",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3e2e8b7b-9988-49d4-a4a4-ab3cda1b40cb"
                    }
                  }
                ]
              },
              {
                "id": "5849a1ce-dd7e-4931-a208-dc78ffe81619",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb3ac31f-558a-41fc-920b-6240d4f78bda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "317fb1c8-6c6e-4ad6-a1e7-2774d96c5cac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23cb6d12-d062-443d-b78c-51a251e08084",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d5515807-41a8-416d-a93a-bf399b8e9ee9"
                    }
                  }
                ]
              },
              {
                "id": "6ebddc2f-492f-4935-84da-3cb8c5f03d3e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79316324-d498-4c4f-9941-94f57061bdec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aafe7549-6d70-4511-acb3-88cb7a4aa0f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "300ae8c4-2aa2-4c78-b0fb-c55a91230bf6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fd67a817-c3bd-4994-ac4e-b6d0c053bb43"
                    }
                  }
                ]
              },
              {
                "id": "d4849907-fa2c-453d-9516-fc715813f6eb",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55c40923-32cf-4e7e-9b04-383688672b8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4cfa6512-fc92-454c-8edf-3ae89829c5c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf0817a5-6328-4740-83eb-31dfd9e61c57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8a26ae62-9d64-473b-88ce-0ee39acbddb4"
                    }
                  }
                ]
              },
              {
                "id": "4643ca1d-b150-4c81-b28b-4df68ef7374b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a67ca07e-124d-4061-b8f4-efce31b4c14e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3aa1bf1e-fd3d-4230-8cac-6452052e3af7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fd9f5de-61da-48fb-94a0-87a8c60ac750",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "163b1707-7fc3-4dce-b658-f19533465074"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7d346770-6905-4525-be62-af68fd154fdd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60359248-cb57-4c58-a9a7-431eb2461427"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9ab810e5-b8f6-429c-8374-6d6f6c271190",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42a84630-55da-4ce5-9bbf-cca39361e79a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8748cbd5-a7c9-4b5f-aefe-9157c8900ba2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "14cc9baa-e9e8-44d2-ba4d-f27aeaa4087a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37e347fc-489c-4908-aa0e-d95019301f28",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5d56f5c-65b8-4410-b146-3d0ce6789bde"
            }
          }
        ]
      },
      {
        "id": "3190218e-dd77-425e-b34d-d773126dbfd0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ac65db9a-85b9-44a1-b571-7d3a2d04c5f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "535acbbb-f64c-46b3-90e1-f308e947344a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "88005fcc-8483-435c-9d40-6de07fd76356",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e388572-3d41-49c5-91cd-63cf4b84a12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ebeeb21-ad19-4df5-82a9-242b5a4dcd4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06b10f3-6645-4b4d-92f1-146624a648a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "40b8c43f-6002-4bc7-ba7f-b77f140730fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e726653-c721-4c0a-8590-9aa1c0561cba",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17068331-8d18-4cae-aaa7-9293750ed47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890c5fb9-8eaf-4a12-b89a-b8af376ff309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0bfa3e-56d1-4092-9875-c6885aa47fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0891bee6-c52b-4e17-bf3f-f8f6752efd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc154ace-7df2-400b-a723-455cc09be409",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6f997d-4e69-446c-aaf5-4bc1e01f65ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8ac0ad-2b27-4247-9820-a34aaaf24c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7195d6-ff92-4ec6-ab68-0e7d6ecbfa6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb6ba38-3616-4616-b4b9-18865d9c91e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d61540f-d960-4524-b907-988aa719b58d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bb5547-bd9f-4be6-aad7-1511cbdc81e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02674800-ef0d-4f33-9406-cf5ca846452c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02052f1-3b2f-41cd-a127-4ec0f91a589b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24bf606b-9d70-47d3-bcd0-648ce72b15f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24758001-64e9-487f-a279-a9b2372c0046",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b81f69-8342-4da4-91ca-ad9e69f75879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e3c885-bfa3-4f4b-84da-406b437c2c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b769a0-94b5-4c64-8d47-10a4cb46b6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23390ae3-ee92-4a0c-ada3-886115fdc988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d98f855-2339-41b1-beaf-b6e84d78c196",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f6f8d8-8ae8-430f-a457-45860c16e706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "223f2b38-d8a9-4de5-9561-eb8fec980693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c899ec-e425-461f-9bad-3b7092e86467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9570d27-c025-443f-81cd-8493e0e50e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309c94fa-6a2f-405c-bfe1-dd512f49bddb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c9e747-b7ea-40f2-bf6f-d3256d93bdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597749fe-2f9d-442d-84a5-2eecae228a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1f927e-d233-4066-aa90-f4a1e2f1e7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b63e66d7-c48c-4e79-97bb-d8d6cd6c6a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2355910a-1105-45b5-b707-bc7b867cd065",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fb6580-22a2-498d-af76-a828a3864066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b25312f-0d5c-4017-89be-3a291567a5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2598be75-9ed4-4a51-bff9-531cbe488de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe7f96d-1285-4def-a88d-bd9abaf6c9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1444610a-b2cc-45d4-8b25-0c59035ff157",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c236cc3f-59e6-4ddd-9aba-5f6411fd4dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422d11fc-9a11-4b64-9951-0d57cba28fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22e781d-918d-4665-ab1e-5948a5db19b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acc4d23f-19f3-4de1-b667-28c3bbe17003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0ade3f-65b5-417a-a22a-1e455c39b10c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ddbefb-b3fa-4aa6-b8a4-ce4faf7cfe9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28ec377-08db-44c7-ab9e-faba793ffb65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8d344f-b219-4816-8a3c-454830fa5769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55d901ea-8e69-4a6b-81f5-97f9bdcfad1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d487e1-233d-4fa3-99b6-c63e52a4d281",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d319bd4-2592-4539-abf5-6b31c0a792f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6e6717-971c-4be9-aaf4-31ea7b464c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd34cfb2-1c23-4840-921b-c83b73bf6101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5dcada50-d587-4b18-a0fe-35c58a9f1df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa29a2e-8590-4ea9-aafb-726ec8015baf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "881d94ab-87b6-4d11-8f62-47fd41b02b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0116d40b-276b-4137-8264-82b3b77ff6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c917dc-f8b6-49f3-ae6e-ad6d9473c88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95121b92-84ef-4b35-aef1-6ff039807557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50cfbba-6edf-41be-94b5-fc04d0bc513c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558cdb62-b87e-4577-b78f-bcb5a61ed6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97924293-7e82-49ea-91f8-dbf89138fa89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71c0df8-c2ab-49c9-958e-7d82e3ff5ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc19438-44e7-42c7-953f-150b2c8c62c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d4a3a1-afc3-4ba5-9fac-467a9efed1b9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb95991-6670-4dab-9143-f92fe9c34be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f7fe5a-75cb-4482-881b-4d9d314d9209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09eda781-e4f1-45bd-a728-ed731a211ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f229e5e-089c-43fc-8761-ca16dbd6b729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c915921-4a9b-4f15-aac8-2fd86d6d2dbe",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b83395c-1f97-48b3-b137-bf37d1589b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a8d911e-23ed-4962-b7e2-add9ef7a2d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044c835b-be7e-44e3-b588-dba13ecfa705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2c8461-3e27-499e-993d-b3dbd8df4c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079e5cac-810c-4437-8a19-514bbf3886c8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a54657-ad3c-4d42-bbec-2b183a223535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b420e445-ad3d-4880-a944-185339f14782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df691779-f235-434f-8612-084ea52cd177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba86113-d6e8-438d-ae8b-ea72c6400066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2231f2-0253-4652-b8d3-fdd16364b791",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad85e62-8445-49cb-8b8d-f7ade57cadc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31ec10c-a9f7-4c02-aab9-8545c55dfd85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4d6d37-1a08-4fc7-a6c2-fdcf5ae85611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7abab38-7d48-4c92-b696-0a5a809f82a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97233353-008b-40ed-b3f6-a11e55771134",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f3a592-f487-4e83-a61f-47b318312e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c64ba2-8a4c-4595-bbdb-a40c1c07c570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268bec29-920c-45d8-9a08-5d6b19f24b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "976696dd-be96-446a-85da-69ea5a449c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773d8c90-b2a1-495a-88af-fd095089085b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4c31d6-b1e7-4800-b59a-6b359eb4fb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f5877ef-e950-46bb-9d01-279b5db12112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c144b5a7-40f2-4e3b-a3d2-6ba625832c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c293657c-c236-4738-99a0-228b9387c47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3347e51-d7fb-4e0f-8659-0d087fbf36ef",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b97f664-9078-4928-ac53-41d1efd2ccfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc06651-3165-4cbd-b308-c3fab88103f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8588f46-f11f-4883-9a8a-6b7cd0633714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da87ff73-8a66-460f-8da7-e65302fedb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5150a761-7491-4457-9e75-73e79b554cfd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d4ecf3-ec4c-484d-921f-e8400f69fe76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5084bcd6-90c0-4b50-add3-e00b521c311b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8a9ae2-fee3-4113-9e44-5ce81e901894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4318fd8c-b70e-4e90-bd23-eead82cb055c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b841fd-fcb4-4587-ae99-1e6f5f76b4cb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c8be50-9cf8-4d26-87f2-2e51d833cc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19292ab7-14ae-4d8e-b933-41c94ee86b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca047a0-28ea-4727-8ac6-e00734e31ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abf8653e-d861-46cc-b99c-9813f08f61d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0fef64-3f4e-4d5d-aa1d-9cd8971d86d8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7181c6-78d7-413d-8d55-6b7ee1182629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b0072f-9e48-4d2c-b107-2f5be80b505b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaafec07-7e8e-41f9-abfe-6593f8dc7d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f2b263-ba52-49a8-97c3-b5b941f05b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac64d8d0-1e3d-4048-b6ce-446005c80c6b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8891d28-7087-434c-a59b-6b4b1d606633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6647a71b-90bb-4a8b-b4ce-0112d741a939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e808ab86-ff47-4c34-bcb7-44839f058392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6184c78-16f2-4265-8fcf-e83bd1497f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c228df-9435-4d81-9eff-94da3a7f95ad",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54e29fb-f9b7-43d8-b47d-fff0a0660bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2414196c-1927-4717-bac7-8cdd578165c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4db3b9b-8630-4f7c-be7a-a8a435b10823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd4e97d-fd0c-49f1-ba26-9e765ca443bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3e0acf-045a-4488-be7f-bbf43683e21b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637b7d98-fce4-49ed-a5af-28c4b8cd599f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e393485c-58ee-433d-b688-048bfb396384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0510a5b-1447-4d5f-a200-d182a359731c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "191e67d9-0828-446c-b6b7-daa54032543c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a947bb3c-9f4e-4be9-8857-be084dc382e6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cd998b-ca54-440e-817b-17287d0fb29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a098583f-8dbc-41a0-80cd-2a39f47cb359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5409df-10e5-4eb2-a803-65875d9b4efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1078bae9-bd95-49c7-91e0-c0b916d6aac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4c65b1-6abf-4d8a-aaba-9c4e2c4c13e0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1356dc7d-407c-4262-b746-cc7ef7fb61e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b44d550-e39e-49be-9672-b7da9404a05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8966889-ecd5-47cf-ba55-f38802b73be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "007995de-a6fd-4d35-9fed-4b58075bc94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb3a2a7-2689-4bdc-8ae7-74956c701b01",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b31767-38b6-436d-aeed-402d7e6d47ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14caaf8-209b-45a6-bc66-568ddbe91f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96dcb3b3-bc4c-40ea-b261-5398d0262401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7da0916-3ad4-4c92-92a6-c6bcbfa2d6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1913c56-77d8-4b4b-8550-8fce49885300",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43f0915-fd82-4ab6-8c0f-8278975e8159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46bac75a-2958-469a-9b86-02b36f54c684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5c1f52-f1b6-44c0-8152-0916c8674a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74e9120e-35bc-4b89-8a98-2c6da38536f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca0298b-62e1-49f9-a872-27dcb57cd0ca",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15335ecf-21d0-46c6-86e4-d2bca1d7f4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9b570d-febe-4c08-91e1-45127e870ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8721b9b-0722-449e-a1c0-a9ff9e93eaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a45fde08-ca22-40c1-8276-77850cc72315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b598b605-3f93-4562-846f-f36011fbd0b0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ff5809-6168-4915-a474-62345a087385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c869f1-3de4-4bea-be98-9d33a0710862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b42b6c1-1b95-48e8-9e88-5bcd4069c00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e22839-c49a-4176-a3a2-cec9f6725112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b860f03b-5600-4967-9be8-d0080df4b618",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26500a12-407d-4569-b294-2813b29e6b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4824e35-2230-4fd1-9524-2ad5bb08e263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8d230e-f704-4fc5-b72c-2b1ebe7b5edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d3f76cc-ec58-4e84-b3fd-7e11ea50a9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa282fe-d5c8-4b68-8e53-2b5cde0c8312",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c79001-ddac-420a-bd35-b61858300196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9120dd-5201-4b26-826d-17daef00fdad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba42e79-dd79-48f3-9aa5-8f205a8fdb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c273b47-025a-4a6b-9bcb-716339178406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1180d963-0ce4-4017-8146-3210a5d0f581",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70df4cda-4982-4c3c-a915-aeda3c79b4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "879c65cf-9a4a-4838-80e8-965e8a77254e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc031eac-7786-4b7e-a25e-92f0c8d2cd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c70e4ed0-459c-4dc5-8cc3-36697c7b3c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c783e192-6cd5-446f-a05a-bf186ed48481",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d8467f-b9d0-41c6-b899-11a577b572ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd9f8c5-f2ef-4489-a9e6-8ea6ef390710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f49e9d-f4ae-4887-8c6e-7cb74827b5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a6279d-0609-44fa-b546-19dd383e2e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b807b1-f536-4acc-b1e1-1b131e835e57",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0dc9621-7f11-4461-a79e-9f5805edf237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ddb5c2-84e8-4ed6-9adb-4a0edda2bf49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369db917-0c85-433b-ac57-4bf1c79699b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88af2c24-38a1-4fe4-ab1b-2e3bd60f6a67"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6492cf12-37c8-4f9b-8c3c-f4ce27324788",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d187011b-016b-4ced-8eb8-868fb8ce048f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b312ee3a-d460-4cbc-87df-cf8a04a0b76e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "38af7476-33e5-4d6b-943f-8380816ee624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae58016-a474-4164-844b-16be010fe745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62986b82-84c9-4ddd-b92e-701c2393cc02"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f53d1cda-4c0b-495f-9a90-190f29e6fb44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e556820f-07e0-453d-9efb-1785dccfc776"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1b98965-9c5d-46ae-8605-7cdf0f4ad698",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbb38c61-6004-41e0-9b0f-4e1d9f0fea46"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0091454-5177-4c5e-926f-6b48812a00b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b0e86f6f-c17a-4f46-9dfd-581b70a784bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d90fd0a-e2c8-4119-971c-c4671a2ddffa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0884037-7f84-4531-b890-7a673b2a6d98"
            }
          }
        ]
      },
      {
        "id": "756823eb-cb73-452f-acb4-0a8ffacdba4a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1c1bd048-97e8-46b6-b729-87ae0809a4ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "954a7f5b-7d7b-4e57-886c-5de73124633a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8c3e4432-86df-41f2-b708-75861dd06602",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddefd5ce-c655-4de4-a4ae-56e1cdb79f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cdcbd2-fef1-4e4c-925f-4a3aadc11ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140e86ee-21a5-4244-8f1a-0851385082ea",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc48564-672e-45d6-bf94-6dd16667924a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec8ea24c-a3f5-497e-a1e4-ac5e3a736f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ebdc93-effb-4913-ae8b-9b1629cd05ec",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ff0016-7f50-48d1-9c83-fb60aad431e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3f59f0-14d5-4fb9-bc4e-7200444edcc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a186002c-8583-4b11-a873-0d3a806a44e9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c506493-4c47-4e2f-bdf3-8a03859ec6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f5d736-3ba0-4371-b954-77e16821ab00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f9b3aa-7fb8-48b9-a4be-73a31653aad5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad22b58-bb15-4e21-abf4-5a09e98b7345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81871303-a4b1-4bd4-ac89-d75f6604226e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f473a7b5-6650-436d-abdb-206902e1c8ba",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda15486-d117-4286-94c5-438c2ddc3e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d4c5e6-200b-4370-9211-77d232d01633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f859de-3dce-4af3-b7af-fda7efb4bf12",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6e4672-38d0-4a18-909f-d52999f321b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3d5c5f-e0ce-4679-97ec-5bcaaa17eb3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be759e0-739e-45f4-b901-210effd2ef7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1d3313-4dea-4967-8243-7db193d8f393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f5a51b-84e9-4840-b814-fdca83b3f5ce",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e33bdb-18b2-4a4d-b77f-125b8323f114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81605465-3d27-4474-92c7-c348b307f3dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72423901-2c07-4078-a11b-08c776d1dfc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43d06f0-756a-490b-9495-8235aba2e23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cb1856-6300-41b2-bc39-b4a4a948a0ec",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a035f3f-cd2c-434d-be88-2c33a686bf10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13d6bfb4-9ccf-411a-8f00-d6da64c1034a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36732ff4-64ed-4d95-ac6a-cd674ccc1076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240eebbd-fe64-45a0-b1e6-fd253571d04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d159b9-d0ee-4f42-9494-17c091b5a27c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f07b1fe-b622-44a4-9609-122024bca264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9d86fea-b16e-41ce-9962-a5e73d5afe08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4051033-bed5-4bd2-97e9-2926433f605b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6403b020-416e-40c7-9f47-2bbbeaee493a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa647dd-3875-4144-ba0d-596b2b6dbbd2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86931da-2488-4517-b595-bf03c14df3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629f1b60-2d88-4db6-8f69-3d2fe45855ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a763ba-3293-453d-a3fd-b682bc36636e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2bdc16-a168-4e93-b6e4-adff22592d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76a138f-68a0-42b7-960b-b764c363b2ac",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f6aa8c-425d-4529-8d5d-a147a0e16398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3dd68c-9dc6-4740-a830-9d6618f1261e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1445c259-68ae-4469-8cb4-4a5eab9e02b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f97f419-82ca-4f82-b524-e0cd55a3cadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17a3309-2dac-4c3d-bf7a-2a54914398f2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57741a2-be34-47c9-8d97-b9303372e18e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2bc9e58-b8fc-4b16-a1fa-b74f89aeac18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27e4ae0-ecfe-4970-9bcb-e1cd02729cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866323e6-2c37-4874-9844-fbaac615de2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82492dda-1e3f-4bdc-9e94-055716135fb9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1482ea6e-e0a8-4f5c-b647-f1d5e144b925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4877631-bfd9-4768-806b-8e0fc779e222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "101073af-3965-444a-8755-b2816a865986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d76e79b-50e6-4531-b6db-626044738f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236961cb-68f3-4421-aecc-465f11522f59",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613f84df-429d-457a-961b-104025bd702d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db7a018d-641f-48c0-878b-390f8c39144e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f47614-bfdc-442f-814a-8f06987098bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef53c46-919a-44c9-b62f-3c72c1d656cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678007db-d398-47f3-8e67-fd18064092e7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc196773-5ad2-40c5-a376-82cbc64d3ac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15ee16e4-9674-491e-80fe-975f5a7df2bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "044d3bcd-51b8-4aae-8904-562f2b1d5937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1f31f8-d21a-4059-90fe-e12626075b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6677a77-b45f-4d62-8340-e7bef815d728",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02c79e0-96fa-4460-a5a1-38289fafc94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c430dd0-3d82-431c-a939-e75f895b5f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b731edbd-db42-4c72-8bc9-f56b3befed55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0773085a-d4c7-40ab-8296-4b3c7026bb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbd9509-6d28-4d88-acf2-8bb762d37149",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35195c5d-33b6-4b19-8989-98b90c237d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d17d902-dc7d-498c-bce5-54e9e7a71841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b52ee6-fa61-4b63-8863-5bebf977d4f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9fb0fe-c025-41e8-ae72-8f99b3954af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ab43f7-5da5-49df-b18d-1f6eb07659df",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06ab9d8-684a-4a40-a596-5b10aadfffbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3705ac4-a27a-4787-bc0c-63d7403bff21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001fd63c-e527-4672-a0f2-d85194db2134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2cee373-c673-4e27-aba9-aa7272038b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203688ff-088e-479f-9d45-e85a4f8931a4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a47b4e0-654f-4edb-b8bc-6acc80f6f2d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22cd872e-e9bb-4555-9ae5-863d18499c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20bd9a7-e1f6-4234-8ce7-03cc01e4093f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04011486-5dbb-4e16-a111-4d965c84f94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fae06d-b90b-4c5a-958c-b9264ba4c63a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177dc4fd-4cc5-49aa-9161-dd75e03431ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc69428f-61a3-4dc6-bc95-45413f1c3d11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c3b376-f83c-4439-aa69-a21a108fadba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b81227-147a-448f-84b8-00ef0dc69ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360ea80e-9851-4ac0-bb2f-72ca43f9d630",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a644aa8-4729-42a8-9947-6f797e395c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5526381-abd1-42cc-8d29-303a9d6b355c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5eea96-e855-4c77-a560-0b0163765edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ebf594-ae68-4e93-a094-2ee7d7b71525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60941a44-69d9-43c8-bfdf-3a03fab309e9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234e6e1c-9827-40be-9066-8957fea6cbcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225f1618-a03c-4c20-9cd0-f2b1d07d613e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a84799-9772-474b-a094-5b645febbd51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c9a04d-bc57-4993-9e8a-639bf755586e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be75388-a5e5-4143-8cd9-2876070c1177",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b414c39-4fd1-4a52-94c7-6081e7f72195",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcc435bd-5020-4abf-a0f9-cb64ebabee8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39fe602-8676-481c-8527-f98df82a7fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932863ef-0830-4a5f-8f5b-c84f10992962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971da71f-d87b-4d54-b04f-28d05d9c90de",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57338efb-e4ee-4503-82dd-c6b4aafb0928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "325bdb9a-5814-4c29-8b6a-bbd5006233a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cda6fd-8e57-48ad-94c6-ffea8f5a9361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4ff960-0229-481f-9213-08cd5cf3bb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8d16c7-a348-4455-afe6-15ef6d8145b1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957af405-9a52-439f-a683-0d29b879ce7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "889513e3-6279-490d-9840-c6bb18c405f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8accfb42-acee-4df9-89fc-8719e55039ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7178f1f-f6b5-4523-97f4-692b56e6c779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d97387-27ab-4ec6-8f45-a5989c423b19",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef69167-d2cb-4830-8e1e-9610732aab14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dc0a490-1f76-4ca3-a5c5-f63e3d556bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73c1897-eceb-4ab6-9299-fadddd653436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253220af-2b2e-4d3b-be9a-c2eb9c19bf31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fad453a-e3c1-415b-b1f7-aeed51ae48b9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842edc18-fd00-4842-8bca-becc3a01730a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d2a22c-93cb-464e-9c0c-a7ad70c3eb76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a54367e-525c-46c4-a633-633a7e61cb9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd705bc-b2e9-48d1-af60-6373ded4012b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3d16ac-8aba-40b1-b9ab-e0dda1f6f62b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b8d35d-0c59-4fa8-b060-0ddee50a79c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0748f254-0f46-4da7-863f-f45261e3fad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79585da-6fab-4c6a-9701-f94ad9d0531d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88620867-0e14-4e45-996d-8c001912e2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc408fa1-67ed-406c-895e-52f46e817780",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38516cd2-0a35-4886-b479-e41a21db8844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d489c8b7-4b18-445b-a23d-e2256c1730b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b057ec5-a3bc-43d3-913b-08ba8b38c92d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0565ca7-e133-4c21-96a8-b54d383c66e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f491e8cc-bf92-4900-9fc3-6782cb64f06a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a982bd0-c704-469f-9ff9-2fcd31279338",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8a3b647-a520-4d0a-b361-ccc7614e340e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0571fe9-06b0-4bb2-9a3b-7863ee6ab240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e38ef04-6388-4c8d-8f83-8a299f26c7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd84dcd0-c468-4bca-9fc0-08c318ca93cd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9daeb5-c756-41a9-8c88-7b8c4f62978c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eee2fb06-25a5-4291-ba2d-17647ace303f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c039f56-f778-409f-aea4-0ff15d0fcf6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b938762-0d16-4842-a288-fc58ef5ebfef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99038510-61cf-491f-83fe-030e29c77b71",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310d2acf-15cc-490d-b917-e8a8646d38f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6c565a0-2be2-4e62-8483-60577059dd82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7659625-bd8e-4756-8422-d283b614bee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ee2248-1ba0-437b-a0f6-d532e858ac3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de74010-b6d0-40b5-8abf-dab17835d906",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89338f82-6dd0-4056-be63-3405e75ab085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8919d9f8-60f1-4e51-9d37-7d3858cfb978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cbeeac-43f5-4dd5-9e33-66caea2b7dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d37f37e-dd7d-4dca-82c4-ab3f28aaf5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f540d71c-8c2d-4d6d-930d-a5a7cd818abe",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b16f4b6-fabb-40ac-b49d-b4f8541808dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c625cc-eead-4a9f-80c1-a1c400d90a4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b227e1-bbfe-44b1-be11-e712e91f8d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f9a0e8-e51b-456a-959b-e3a4e59f0ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0ac9e6-d8db-4095-b862-6066b2726030",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43ad6ef-eefa-40f5-97bd-a5e841275e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e081e8-f758-4830-9da1-c202755a9c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abc24b3-74d7-4638-9051-24cf019bf873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd203940-57dc-4e9e-aa1a-aaede3a74f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98111237-1d16-4594-8c38-feab15799514",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c0bd53-86ff-48a6-9e25-e85c3bff0ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76624f50-3c40-466a-a192-9ae79c92fe59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbc2e7b-f054-4dc7-8c82-8cf339de3eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5fbd9a-0f46-40b0-9a01-b9b1a17b8b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2beb2d-e777-407e-84d7-dca08660ab4a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36f2dd2-c3dd-4f32-b396-b20dc25103f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95cb7faf-dc4f-4c75-96a7-a6b365ce4b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2141b182-0759-4d6b-9e85-00e854bb71d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2be8d4-1f0d-46c5-a1f5-e2087ebb186b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d29d9c7-af2e-4434-90d3-2e77ea221372",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e74a87-bfd4-4c32-bf94-ba2479213658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11efdc0-d07b-4c13-be19-ff7aabcaf727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9605165b-c51d-4f7f-ae69-e5bb20637960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff6864a-d8a6-4022-a050-a6346afadd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673d519f-ce7e-4600-b552-38f18f598067",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577e6bc3-544d-4026-9d72-4d5f7f13dca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fbf8db3-de5b-4dee-80ba-30d77b906f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec5b53a-261f-4bfb-9ca2-f040282a0219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c285c5-8667-4ccc-ae1a-06ba9a794320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7b9933-1b28-4c24-893d-134156f55ad4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f00d3bb-33d6-4fea-9cd5-cd464f22f973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b281e3aa-07f4-417d-bbca-16b63849e703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b565e8-0d84-4e0e-aa28-30745b4c70b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2b1c74-bbbf-43e8-8152-094dcb1566b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31de7c4-9a6e-47c2-8991-94ebaa115111",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a7b08c-a20a-44f9-99de-da95e03bb867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062c5236-b6ec-4a02-9566-5afcbfafe9b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b923a26-2b33-40e5-ae7a-bab0de6fcb8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206372c9-f583-4084-856f-31ca83caa05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d1c30d-779e-4e6b-9120-46e907e3f8ae",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065baa16-2799-4005-89ae-d902bcfc71e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8f40fa-205d-4cd6-b945-c632b1c47b91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e5a763-801a-42cb-b359-d7785a4cc6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e471f4-cd95-4a14-b3e3-ddc84eccde4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774e17a7-8a79-40b9-b1ef-c6dd382732cf",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b318f3-af09-4efd-9bd3-9fb072ae8848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb779047-ef99-4500-9668-37f1b6832970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c66fab-b3f6-45d8-ac3f-4215dd085b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1376b8c2-b2f9-4255-ba72-425906d7b906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d133c5f6-de5b-4343-b32e-9eefb0abd51f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd190cfa-eb01-468e-8ab6-a6bed184202f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c0cc36-5996-4950-ae01-6a4a47d7abe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "010f2c5e-e7fe-4ac7-9f63-2dc4fb6da69a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a58b473-da16-46bb-9157-9868de18c0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecf35c6-c507-47a1-9f5a-9f76780dffc9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd910cb-fc67-4715-a75b-614fd8089a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147f7a1a-6dd3-4da2-ba04-a37ab6412387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0dcd44-f34e-4609-93f5-3432ca38c713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf1d8e4-7dce-4e87-ad08-6602a33b56ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1362f555-880f-48cb-b912-139681683d22",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9322750e-a4e1-461a-aa63-9da5bee37bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe656161-e72c-4d65-b0e4-f3e2663f468e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "838fe1b3-b95c-45e7-a2a9-511620180bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f47c98-66f5-4011-8526-b1681feb4378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43281cdb-1c88-4245-84da-873fc6d9205b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34b31a0-bec8-47b2-95e2-98b96d2a0183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab58d4f8-3c27-4dae-9045-599bc3814d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3123e0ed-8619-464e-8e60-e908141834ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9dbc89-c80a-49c4-b569-e00f9503daf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd36a3e-6202-49af-af03-33c243f3abb4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068597d2-82f0-4cd9-83b8-9b64e130636a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b928421-6718-4bbf-b939-39cba605c0e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82e088a-d147-4f9f-98db-5ce29ea32786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce35e8b-6bbc-4e54-b6da-23fc795281b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4eaea8-4b7f-458c-a93a-ee8990d80a40",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d027ac-7678-4526-b527-42874142b0f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec869861-f9bc-46d0-88b0-0dbf39c20ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a6174e-5651-46a0-a34b-58d7d6c7318b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96703eed-0f56-4595-b367-05e299dd2bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e21d7d9-6f0c-44eb-b4a8-82289f7ff572",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd21112-1b43-406b-8ca9-0c914b45d432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8719b0f2-1e9f-476d-8eb0-efbfa15baed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb8d4a7-431c-4e02-a036-87b21848b809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e94af01-e63e-40a2-9405-f14f69442d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3054ea6-de9e-494b-9b3a-2100097333d2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e98172d-f236-4d7d-b969-fe731c3210cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a86c5f-465f-4c5b-b2cf-38b9bc9d7c96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db8e38e-5ed2-4d32-a6b9-6d509f8424eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5148e34-2303-4732-a421-06e594e11b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7e7d2d-5394-4e8d-8182-6c103e24f100",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f3521b-8a6d-4670-87d3-684ad863d0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f765b1c-7621-4d90-a3dd-3eb17da21861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae976c4-b1cf-4087-a781-bc03798ca928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71275b57-fcae-47ab-b0bf-fc681b3aca68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb85093-236e-49e1-b2be-b89552658e86",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e07793-24e9-476a-9c1b-220a2c0950fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd814d79-6165-43f0-838a-4ff5dd566d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe88809-651d-413f-b208-ef7ee7fd1325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0bba46-85b0-4500-b6fa-032f4b20759b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2ffe05-c94c-4ef9-85ec-bf241bab7f14",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7daaf92f-7a12-4e91-a4a6-9f0ebbcce756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c386d49c-9383-4152-b75f-474509bf7bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9ff4ac-b28c-441f-86cc-b24cca8c6156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92fddf16-7477-4366-b18d-8366e9e41f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4f7ca2-3455-4540-882f-0abaa69c506a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4685007c-58df-4f8c-96d9-71b612c43e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7554d09-c3c7-4678-957b-54b9613089ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fd0164-66bf-49f2-a513-cb35522e7111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2367f2ba-de02-4184-bc88-5e6247b676d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa4aeab-5b13-4ba9-8c8d-39b77175d29e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52248177-4009-4d87-a755-8f99d3d8c853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0c133e-08b1-435f-9249-d69c07de6175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9759241f-6f7c-400f-873e-4e5a2f69ab46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba27e76-28bb-453b-aebc-f936c940a945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad0ffcd-9f7f-45c5-bd9c-01e8981f3a7f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5904192-5150-4dfa-8bf2-a6906222e142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb22ca9-703e-47b4-9361-3fc67c062ea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21b1925-4eaf-4c72-84c0-4a9429bad00a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf2f3c58-b077-4d97-846b-3543e7b8446f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d914c79-5f0f-47da-ac6f-b98a43b5478b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9397c691-ed40-4f4b-a8f7-0e0b51753d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9cc23e-9ef4-4388-93e7-85f3124d9734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b00b357-e6e7-4b6a-88f9-4776ad662757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78f6528-78d8-4cb3-87dd-35d1ba05833a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2c4e44-3853-49c0-8d5f-9935fd646137",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873274cc-8cdc-43e6-8d07-fffe27ca0fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2619a0-bc20-44ba-ac03-c29603ad20f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935c0cee-42e7-4c9a-adc1-71c6e0b1ef45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229409cf-944b-4ffe-9447-bba0c1fdcfc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ea88dd-edec-42ea-930f-b80daeec0cf5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69fb358-6ae6-4dd1-b744-648e1fc0656e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11feff2b-51e3-4c82-9c09-5c4947fe6b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebae1ff-f1a0-47af-aba3-7ba57f6f8919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aab827a-d3e6-4937-8644-12bd4e9a7dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b326425-6942-42e6-8106-95a4853683f3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d50551-02bd-4330-9511-4744c3e63509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb71c34-f5bc-4705-b664-ec24cab5d391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e7698c-cb99-4cac-953e-b706f9f54cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7533e12-d993-496c-8925-2b91a743e3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9347b8-68d1-43c7-a2cf-2bbc19f1626e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6653a6-4670-41df-b73c-217d8a3b649a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24560ebc-b09d-491b-885c-613a969059dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d2e0f1-fadc-4107-bea4-187f6feaa9bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436a4f88-57f5-4d56-ab5a-8cac7735303b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975552b2-94a0-41a5-b8ce-8ad4119d4c4c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c5fdc9-36e6-4b72-ad10-1d9660b85c54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d396f8c-e624-486e-8f15-e0a20aaabc90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47572788-3040-4e9b-938e-5d6ed4aef128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f0500a6-f6c5-481f-84c3-3b96a2471437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8766079-2cbf-490e-ba0a-c92a6938c56a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb942dc-5f33-4dd7-9863-0b44186a1d22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a23b0367-0e52-478c-a5d0-2e14b3e147e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ed3cba-2b2c-4a2e-be5d-f05a425c8401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24d97ad-4422-4961-a474-6f480f6391dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c64ea0-fcd4-49e0-8a49-adde8171b04c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208e3d9b-4a30-4d2a-9864-709b5c21af58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ba77745-3070-4073-b01b-41a6c3483feb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c582944-b780-47e7-8525-909fac11e3dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73de95b-322f-4d89-8890-4a6dcf8453b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209957e3-a557-49e3-b65b-422be87bc18f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16364f4-bb79-4536-ae10-b6d4b130229f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec1b810-981d-4e99-84f3-f6e8eeec3bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e27ce5d-3a17-4206-8197-38b4c4559693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e3ed14-9688-4354-a4a8-f4c1afce89eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b89a2be-0594-4d92-9a2c-6c758f08ef3e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2da170-3a98-45a4-9381-c5ebc41ad8a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5705b699-bf0a-4143-9915-a5711f5c6f57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f7e3c0-becd-4b19-8523-0707da42b875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69d6314-bc04-4780-a069-a001d61e82a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9410432d-f854-471a-a931-2236f552879f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5af6b7f-13db-4402-a7ee-0e9b8ce64e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f590681-3f6a-4dd5-88d8-3fc56c13f2db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad9ae6b-2831-4b76-adf8-267324622bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d2bd4ae-d7f4-48a3-ac26-eb9afcc7d8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08449442-50dc-4e5f-9999-f795d28407f2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3948f67f-7826-4b32-a776-b28c3896ebee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c24cc8ad-92cc-4c4d-bcfa-f839d0a6ed09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0641f03-b171-4178-8bc0-1eb4eb2a87eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b3690b-a9b2-4bf2-8a76-f204becaf03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4e489a-719d-4220-a49b-7e0d40fc3650",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a7dd3b-85f1-4145-9b30-db586e549bed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b85dc6ed-f72b-413d-b1b0-9907bf3ce790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef68c34e-064e-4672-9cd3-ea0cd62b569a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96c399b-b3aa-4a62-91ff-a5bdec819ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9638b59-a663-4d11-ad08-b912986943f7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd91a5e-c779-47c4-9fe5-783bd06ef72c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1d6be9f-854b-40a0-b29b-0f78149e1c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfaaa5c-96ba-41e5-bd5b-b0c58dacc755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414005ce-bd3a-48c1-b95a-497f4a7152ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1300940c-c666-4001-bbb4-c7fec8b36313",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7fe76c3-9fa7-4496-88a7-6b12d3085802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97d94912-185c-410c-a07a-f74c67179522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfdfff5-5755-4bff-8340-6be3adbb6996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602f00f4-ab02-4a90-8ec8-55c15bd1c1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1594253d-8482-4865-ab67-3748c23d9567",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edce5355-986c-4869-b88f-7954871ad735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7553ed1f-0462-40ba-8b4f-20f6adac7bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c36794-ace0-4f3a-a62a-dc62134f4f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a418a02e-16f7-406c-9e4e-c77effd483f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74e2e0d-0252-49bb-998e-53b41f7fd125",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e58f26-d0e6-4005-a788-122611798766",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b16b024-288f-4c5f-a5f3-71346a6cc811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff24976-95cb-471b-803a-b55f7b402534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eebe27e6-dc38-428b-ada2-94f10a6a44b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a889980-6c2a-43ec-876e-ee4c044eb660",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0acc77d-748f-4c91-ae5e-ca2f5d3a34fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8a446c6-0f77-4fbe-a7de-7d55eb9c0cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6feed9d4-499e-4bdf-8ccd-054179b31b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02734e75-43dc-4546-9b09-2bb94c49c964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f91de22-fa9f-4849-95fe-c083b0a9a534",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9218ba-17ee-4d46-808e-5867a726c4e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b69159fe-61f9-4197-b064-b0b4ced35ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b61fe8a-3f67-467f-b435-8259b685b58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf0c7227-e5c2-4139-ba54-1a8463296356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4a0f46-15ac-4db1-b8b0-56ea1a92826e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f455a7-cb25-4199-860f-e9d544d424cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35e69c65-3028-4fbf-b2c4-0eab27b7faa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26c3ecd-edfb-411a-b8a3-ddfc7a3c9c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a8c38b-8a46-4c99-9a66-2869bb320061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0713e9bf-ce9c-4c27-a3a9-beed0b6624e4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b345d952-f54d-4a9e-b99e-540efbdbda81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f7f86f7-a7b4-4461-97dc-4228bc4732ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f4311f-7990-4df7-acf3-79e9757a63f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78258ee6-245c-4b04-9c7d-1691c32a33e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf038069-899b-4132-9c84-4347ce7a640a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3748e986-67a4-4937-bef4-a583c9144bc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "359629e7-3ed4-48d2-8add-baaf9e86b8cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b7ba4d-638e-4bfe-a72a-81708d55aa21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a057954-61b0-411b-ada8-d092fc8e6e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c872f11-d8dc-4c8c-b09d-df79c0a39cbf",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeec5fc9-ac03-445a-8f86-35be14ef2a5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fcaf59f-3423-4781-adc1-62a6dda6105f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8bd48f-1029-4568-ad61-0374cb3eafb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94fa982-6cd0-4bdf-8b6f-77f9ec14e6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144489d0-3432-43c6-8535-db04a37fbf92",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309a8328-0ea7-48d6-82f7-c3f55a9c189e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f289cd8d-e791-4e17-a649-44abb3467c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01a8a42-61db-4546-802b-2e09511277ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8096d44-c2ec-43ef-9e8e-be5da3688b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bfcf22-aa5d-498d-8700-3b24f00f5db9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3a28d0-099f-4fb7-b1cc-286af7619158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9815f203-ae6f-4b8f-8d62-70a96ec0e4f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c676f75b-ff68-43c3-82b4-0660afe219d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a8d91b-dd3b-4622-a9c9-b9cfe432776b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53dce15-2b3b-4e29-8e78-c4ee16402d0e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62828026-56bf-4976-944f-71c63ba46215",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ec2c9a7-b49d-49a6-8de5-aac7e933b7bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e022a30-7d23-4938-985b-215df438acee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e271025-7a03-4449-b811-1abd9f2705d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1061e9e-570b-46d8-ab7e-6b9d67452dd9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb29889-60d9-40c9-8f36-e98aa9693f4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ceb2271-5c8b-4925-9a23-9228980a549b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a00a36-ceff-440f-81e3-ed4be4c305d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0835fb27-1d6a-4776-bb9d-31941f9dd27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad886105-e65f-43b5-80be-044460ffca9a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6128c2c4-ddc3-45b2-8f3d-a08a71dd07f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc7d4be8-4a3a-4fa6-8e97-b53432884a24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "998f6d71-3d99-47da-975a-3998ad13bc75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36446652-efdb-46fb-b432-e93ca4d063d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72b6c09-aa9b-4f61-90be-519cd0b7808e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d469530-1168-49d4-a251-b6f692c55a54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4c6ace5-7baf-4245-8c01-49d503cbf902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fae3f8-5468-4341-a8a6-ec55d2c48cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e40c397-b460-4121-b651-38209008db5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fb74bd-66bf-4596-adac-70223614866c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0106c09c-555e-42e3-ba5f-d1a5dfda0d47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "705061c2-7b08-414c-97a9-a590f9d86ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a4e684-f17c-4689-8695-f8595914784e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dea542d-782c-439a-83c3-8e8a111cc38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6898a4ac-6a00-4e1d-9e18-baad7d56ea60",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed15e82-1c01-4c0f-807e-427e93a11cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61189bf5-92fd-4c1e-b848-0f4e7f62a8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b2a2ad-b685-477e-bf6e-8ecb69bc0e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1ebb14-25c2-4d24-81b1-981d7a856bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03674886-772f-4423-bb73-7a6ea7c8821e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40568aab-7e30-4f05-943b-3fc25bbce0c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5163e9d-902d-46b8-b380-ce9b6b790aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66652636-997b-4566-815e-3c97e49d66bf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3090bd9-72c4-469f-856c-54df9a2dfead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ece1d05-9198-4d13-9fc7-16ca2f3514a4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c5fc9d-593f-46c3-b5a9-221022fa988e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e784bf6c-7a6d-4391-a0f4-afc256b50789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33588e9-543c-4608-911e-e8cdaad0a053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17841f6-165b-4aaa-a6d4-564013af8515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07ffa3b-75e7-486e-ae68-806d0defc3ad",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ae9909-6421-4420-a710-02f7c1570790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0de2b59-af7d-4252-9def-ff61c8559bb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b5502f-58d7-44ff-a202-fa1cb6a90feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0716e359-faa3-4275-b2a5-2a787837d93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8856792-e68a-4572-babd-546d30b15845",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c79b04-df45-4f65-8745-f56ec7a1c4bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54514c57-3be9-447d-8b91-3be76d9ddc2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc97366-b9e7-4791-8ec7-d08db0c20e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9d6678-21c3-4435-a398-8434a66a763f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eff525c-22cf-4c6c-8451-ff7bbc58c2e9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f845ea3-2b11-44d9-9027-1da88eea9bde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2352efbb-b29f-4609-9a37-b4d42bb74d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc257d7c-a7c3-4344-9fbb-a3fe258b21da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1996b8b5-02c0-4d19-9293-5854568a9e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fa300f-2a84-4ad1-8c2b-6f514762418a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8eabb8-e5c2-48d2-9550-5cd2fcf9f23f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c34431a0-4c23-4d13-a81c-ee97b01bbe63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd140012-1dc5-47b2-b190-a45d5a18cc7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687e7b24-8d59-4fa6-ba82-71be4ff26436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6813a7-1432-4b9c-8ce1-d2c44cd262ed",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956140c1-ed77-4bb3-a4cc-4a92e6fc1fe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bec1afc-d774-4e4b-bf1a-6e56f9b84908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a41dfb-d239-4a0f-bee6-a00bf1a0d571",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b96e615-7e6e-4313-9edc-1c507735fd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539468f4-509b-4af7-b1a7-f5c04284376f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807f2751-3e18-4519-a8cc-33808804c269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74b5eb4f-682c-4259-9ff1-117b06f53612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dbc2d9-7993-4bad-a24a-0f4557f4f11b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b29565-d0c4-493f-9e08-15bfedfc8b3a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91a2fece-a4d8-4b59-9e69-90ec667724b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7f07380-1611-40db-80d3-297e5fc0f416"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f71ad8f9-4464-4d08-8987-75441300eb17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c934801-2edd-4214-a1ae-58424cadbdc9"
                    }
                  }
                ]
              },
              {
                "id": "fc437af8-5dba-404a-ad3b-4e8dcb517c85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6159682c-a81a-4833-b1e5-060d00d49439",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f3f938-6de8-4703-ad4d-419fbfdcfc41",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bd551f05-7a46-40aa-95a2-d49eee455119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42dc7e5-94fd-4989-a1f2-1fc98bdfbbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62ac46cc-f5b9-4fec-8d45-637ac2215f53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f154229-e8e4-4501-b729-8032871b91cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "957dd194-20f0-4374-b176-362e4d8b0da7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "686db3e2-0603-4d2b-8752-f9027c385e58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "327a8448-e718-4aac-9480-5657f403c998"
                    }
                  }
                ]
              },
              {
                "id": "00db0b80-50c3-45bc-ac05-13c6fd5a05ba",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6f68db39-50e3-45ef-ae6e-7653c670c646",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b39e1d0-231d-4f88-afd5-dcbbf5a1794b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "75c40623-c87c-42f1-a415-713b22abbc16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc655ce-86dc-4e07-82b4-c454d32649e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad01dc8-078f-4192-a5d9-41d74b4c587e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "aab55e80-8493-4331-ab60-56e1a506b7f6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "448b5bb2-8c21-4440-bf79-119e6c4947ea",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b677b05-68e4-49ac-8b79-c86836f78532",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4491eb9c-0696-40ce-a795-d244fc99973c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43a818b3-37a7-49e9-bbd5-dc1efae083ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d48b74c-5d77-4a08-ad01-51a1e1f44043"
                    }
                  }
                ]
              },
              {
                "id": "6981e993-7ff0-4a72-aba5-a1068f0307dc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad4e87e6-0187-4837-af5b-c029111c6d9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a386eaad-b8fc-48d7-8feb-25c48178dbb3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0662f6d2-cffb-40a8-83e4-f8b9a847a47f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1da84aec-6446-4db4-b9b2-4ae64baa7d89"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dcbc8ee8-5ddc-4a71-9b54-7f339be0bfcf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "03d7c4f8-31d2-491a-be07-33f5d9279dd2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43625457-eff1-4c82-af90-4f51d460107b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36dd1d6a-a5c6-4b75-9d47-f5d584601ab4"
            }
          }
        ]
      },
      {
        "id": "fb90e257-513c-4391-85df-4010717a8c0a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fac19432-a834-4e61-8d7f-a77f00cbe752",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c0da720-b85d-4d4c-95c8-08d36e1f72e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b698b1d9-2b45-47db-9c5e-0c5e52a5c4b8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d050a134-329b-417d-aa9a-862b0472033f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "00dc7175-f00d-48a6-8edb-ce7dbe9b5133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7a598a-2a4c-442c-b796-29e49833b32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be2b78ff-a904-401a-ae50-a99b63407226"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72c1d529-0759-4f96-b1ee-a3710fd2a7c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71922812-63cb-4814-ad66-c8d15be839d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bea1c24-7d21-4c16-bfa5-d730465f8f79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6aa357a-ff22-45b7-8001-3a32bba52883"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "020e4ef1-ab3c-496c-a534-839077c5a294",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "37b777f5-e9b2-49b4-9eb0-b9a974ee5b40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d2d2480-64e3-403f-82bc-6bb078d1af8c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a472a425-20ea-4b50-ab76-2270b6dd99b3"
            }
          }
        ]
      },
      {
        "id": "c7b15a7a-3f03-40dd-8674-7a747d56e86e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "00ed07f8-2dd4-4826-a93a-02a44517b700",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47ee8053-c0f8-4af0-94c2-595bf183b179",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4714f7ac-70d7-46b1-ac07-356d39af6699",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b1a78b-a30f-4294-ae5d-bb7bbd614be5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9de9b434-aae5-4cbf-84ed-3d044511ff5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7267fb-f660-4f25-9743-55eec11b3fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad7b815e-7847-4150-a5c5-ea448fc4cc70"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bec4642b-2ec2-43ae-83b2-923bb1a9cb1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e95d4821-f8eb-4d7c-9c3a-fa57cfa8bff2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f92a16f-60a2-4597-aa9b-f2198191d3b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6809646e-08b0-41fc-aba4-2030234c4643"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa908a34-41e3-445a-86ef-38ac70c11b00",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a90267c1-90e2-4ec2-81e5-84a1e782fefe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1fd49ec-2766-46ba-9959-3c700c98b2a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e1ab18d-deec-4606-b338-e5cd1c1cb0ac"
            }
          }
        ]
      },
      {
        "id": "f2e9013c-4725-4449-81aa-c0745eb00632",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6430a6c9-45b0-4114-ad5b-2641b5da8541",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc53e9e6-c733-4ed6-9e47-2819babefc3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3055da4a-013a-498b-98b9-532e8db1e374",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b7a750-0e3f-4620-ae84-bf751bb0545e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1efab55-b034-47e3-918b-781d3b967735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4c960f-9cab-42d9-9dfe-ad346562b513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78ff0f04-27d4-4fe3-9fa1-c1d8d2967a7c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "078bec01-0da0-42a0-b745-eba0e95e36c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "765f6e2e-fd48-4d80-90a6-eeeab62e4fcd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e8778ad-96b0-472b-858b-13d379636aa8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9807cd8d-946c-4249-ab3e-427838c2c9f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a293f20-ef23-4160-84d0-318adc1e7138",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "729c1a45-80f5-4485-a455-c62852f0882b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5310fe3f-e3a5-43c4-9438-224556fa791d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fbb13a08-1050-40f9-9f46-8d45a8e3a579"
            }
          }
        ]
      },
      {
        "id": "bbc9a402-660c-47d5-a2fa-09dedfa4c86e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "966f253e-98dd-49d2-9427-5e162b55a2c9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a335b37-fa22-4643-8c25-cceb9be83bdf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2174e4d9-dacd-4a13-a36b-00f07dc0bac7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d8b70fa-05f2-4a76-a2e9-180b0c58c797",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d9803f0-f4ef-40f0-845a-bad35a055b06",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 337.6388888888889,
      "responseMin": 6,
      "responseMax": 10630,
      "responseSd": 1584.3990500367943,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724028089872,
      "completed": 1724028183286
    },
    "executions": [
      {
        "id": "e990cddf-3b17-4958-9817-a3bcb6cd3167",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fe187608-9fb9-47ac-8103-0f1ef6994e34",
          "httpRequestId": "00fd49ff-6fc2-40b8-9dc6-e75dbad18213"
        },
        "item": {
          "id": "e990cddf-3b17-4958-9817-a3bcb6cd3167",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9139b688-6123-4960-9afa-9dc4ffb1835a",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "2e0d98c5-cfb9-4f67-b241-4447413d902c",
        "cursor": {
          "ref": "0a4e7c2b-e24f-4407-83aa-32dfe870eea6",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4ef9dadb-0707-49dc-b219-60c01c03111e"
        },
        "item": {
          "id": "2e0d98c5-cfb9-4f67-b241-4447413d902c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3a982d86-595c-44e9-a97b-74cc01dcbbcd",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "55b22155-8d4d-4e76-9c60-8b96bee3c21e",
        "cursor": {
          "ref": "f3a9fd8e-7757-4f00-ba68-e33c8d518610",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e5ad6bd1-777e-4236-9acb-239eb28053e4"
        },
        "item": {
          "id": "55b22155-8d4d-4e76-9c60-8b96bee3c21e",
          "name": "did_json"
        },
        "response": {
          "id": "5a636a15-ca44-4e2f-864c-28bafa08c413",
          "status": "OK",
          "code": 200,
          "responseTime": 305,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d999ffe2-2754-48c0-b512-1a08d4a1a8ab",
        "cursor": {
          "ref": "b46af918-25d0-4d5d-9b50-25ce3b03b71a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "faa9af69-7944-44d0-bfcf-d020db7afa6d"
        },
        "item": {
          "id": "d999ffe2-2754-48c0-b512-1a08d4a1a8ab",
          "name": "did:invalid"
        },
        "response": {
          "id": "9cab7c4d-3f6c-41ab-8a85-d5679dc838cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2154,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d999ffe2-2754-48c0-b512-1a08d4a1a8ab",
        "cursor": {
          "ref": "b46af918-25d0-4d5d-9b50-25ce3b03b71a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "faa9af69-7944-44d0-bfcf-d020db7afa6d"
        },
        "item": {
          "id": "d999ffe2-2754-48c0-b512-1a08d4a1a8ab",
          "name": "did:invalid"
        },
        "response": {
          "id": "9cab7c4d-3f6c-41ab-8a85-d5679dc838cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2154,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc646a7-5bcf-4e37-919f-21e2cad5ae14",
        "cursor": {
          "ref": "f1f38936-27d4-426b-8bab-e8090c56bb48",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ff005f6f-c764-4803-a411-9613aa285234"
        },
        "item": {
          "id": "4bc646a7-5bcf-4e37-919f-21e2cad5ae14",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4c125451-d1de-489e-8708-32752688e7d9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2373,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b658aacd-f6d3-416c-907d-ca61232ecfff",
        "cursor": {
          "ref": "c373a836-0d85-40cb-bbba-8bbd866ffb8f",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5623c463-48f1-4ffa-afc9-84a7c31b532b"
        },
        "item": {
          "id": "b658aacd-f6d3-416c-907d-ca61232ecfff",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2c4a9d35-06d5-4801-aaed-33d6e2e7af72",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1951,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44901a6-9893-432d-a595-6b426b4159c9",
        "cursor": {
          "ref": "c77a5e11-0651-4c23-b03c-d3b6886b06aa",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "31c5f7b5-92f1-4bae-b7fc-90b545cea6b1"
        },
        "item": {
          "id": "b44901a6-9893-432d-a595-6b426b4159c9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bfac5996-afcd-449b-9a97-646b764afca9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08e057d-8089-4dd2-9f35-2d8d5ab23799",
        "cursor": {
          "ref": "1ddf0094-1b9e-47f1-a2e9-dcf7e7caf6c1",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "dd93a10a-46ff-4c8a-8c98-136ca2e8cf71"
        },
        "item": {
          "id": "b08e057d-8089-4dd2-9f35-2d8d5ab23799",
          "name": "identifiers"
        },
        "response": {
          "id": "200b661d-9187-49f3-95e0-4eca380a721b",
          "status": "OK",
          "code": 200,
          "responseTime": 2183,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d37dadd-02f3-499e-987d-028af10648df",
        "cursor": {
          "ref": "e43ff17b-2a0f-43ce-b031-d376414f0185",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "71ca7315-820b-425d-af7a-f69b56e5ae5f"
        },
        "item": {
          "id": "9d37dadd-02f3-499e-987d-028af10648df",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ee7af140-50ee-45fd-9e8e-358592cf895f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ebcc1c-b91e-4ea8-857c-f0b73dc90255",
        "cursor": {
          "ref": "36e10eaa-ea0f-47ca-95d3-8ab43caf6fde",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ea5a2b3a-2eef-429c-8a11-5a1878c7144b"
        },
        "item": {
          "id": "c0ebcc1c-b91e-4ea8-857c-f0b73dc90255",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0c8f10d0-8a5b-4d00-90a3-0c869c2b2097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0511b4b-ba59-4f15-8505-42e75953a548",
        "cursor": {
          "ref": "30384b9b-38c4-462b-a044-b5b20bf1d67a",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bede3bd6-12d4-484f-bba7-3c835d406c9c"
        },
        "item": {
          "id": "e0511b4b-ba59-4f15-8505-42e75953a548",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bf4d642f-9f89-4ee1-82d4-8899c7bfc2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bdabca-f496-49fb-b090-3c00ed2533f6",
        "cursor": {
          "ref": "fe1d787e-779a-437b-bf14-9030bf042a69",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "72ce9ece-c1f5-4271-bc4d-731b485bbb11"
        },
        "item": {
          "id": "f3bdabca-f496-49fb-b090-3c00ed2533f6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f38dffd5-1391-4c2a-9811-4fd027048780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032f807e-bfed-4551-9362-d1b37ac21305",
        "cursor": {
          "ref": "1f203ffe-e55e-4d55-bc95-b9709da097aa",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "dadae963-44ba-48aa-956e-23cd11dfc555"
        },
        "item": {
          "id": "032f807e-bfed-4551-9362-d1b37ac21305",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fe0f0b6f-c992-4d1f-a149-0de8983752ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05dbfc6-bd35-47cb-955d-1af78c10b499",
        "cursor": {
          "ref": "44d2540f-da19-42f3-bf78-333680325a6b",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7ca37e8b-4213-478b-ba62-8eb678076e5b"
        },
        "item": {
          "id": "d05dbfc6-bd35-47cb-955d-1af78c10b499",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a14d3345-71a6-4aa1-bb23-0e5e9f5e897c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce114ab-077b-477b-86a4-02d2f547f54f",
        "cursor": {
          "ref": "6f450fbc-ffc8-4d9f-b85d-486f84eb175e",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a575d10f-3436-48c2-8e92-dcb47b5316f9"
        },
        "item": {
          "id": "bce114ab-077b-477b-86a4-02d2f547f54f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e8e1319d-1e25-44a3-91b8-1cb11e9ddc71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14312544-4887-4fe8-ace9-9711b54c1e18",
        "cursor": {
          "ref": "333c5f26-d1de-4067-9f43-1a2e468b8bf2",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9d8255a7-2b38-446b-bc21-d7cad71a6295"
        },
        "item": {
          "id": "14312544-4887-4fe8-ace9-9711b54c1e18",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "741d012a-b94c-4670-9f2d-ab98886fd386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8416a1b-9dbf-4af4-90b6-d51ff8d92ad0",
        "cursor": {
          "ref": "aab035cf-f86f-4a39-82a6-8128d9079475",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "42792824-ebcc-41c1-b0d0-775f2c2c0f34"
        },
        "item": {
          "id": "a8416a1b-9dbf-4af4-90b6-d51ff8d92ad0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "61e38747-00f5-4813-b203-1df9092057a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658fef0c-b3b8-4103-b471-cc2edc509239",
        "cursor": {
          "ref": "e032496f-3645-48e3-a768-61b58ed0c010",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "219b5158-fa68-437e-b2c6-20c9197cea8a"
        },
        "item": {
          "id": "658fef0c-b3b8-4103-b471-cc2edc509239",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fc1c17fa-1a0f-4463-9851-4797286fcd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b0e910-8280-46ac-ab3f-6ac20924eaad",
        "cursor": {
          "ref": "0fd936ac-c784-460f-8ba9-a3d056e4cb38",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ab2e8385-2965-4b50-90c9-43da42eff7fb"
        },
        "item": {
          "id": "69b0e910-8280-46ac-ab3f-6ac20924eaad",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e78a80f8-18b7-4fa4-818e-071de09c03f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b04431e-446d-4263-b514-24c8d3e8f684",
        "cursor": {
          "ref": "b55990d4-98d2-4566-ae8b-ab2ea3b920d0",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1044075f-be98-439c-9202-4491ddb74426"
        },
        "item": {
          "id": "9b04431e-446d-4263-b514-24c8d3e8f684",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "eaf9772e-b045-441e-ab59-e171be8116d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649afb76-63c8-4ed3-a187-0f13f4bc1e43",
        "cursor": {
          "ref": "4d252ffa-cc91-43b0-826f-eb96cb827bac",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "354ffa19-5439-424e-b002-7e8f6784cc9b"
        },
        "item": {
          "id": "649afb76-63c8-4ed3-a187-0f13f4bc1e43",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0d4deb64-ff26-4813-80f5-f4da1e512ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c256dd-fb80-4606-a4bf-4a5ba6c26fd8",
        "cursor": {
          "ref": "399c903d-482e-40db-bb5d-877282342a85",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b20f1c99-a27b-4368-8486-277c38dc8729"
        },
        "item": {
          "id": "c6c256dd-fb80-4606-a4bf-4a5ba6c26fd8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "eaaf2ef4-9dbf-4752-b9ef-cb914ab9d166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b1a728-40a2-44d4-8ae7-1de5aec3ad22",
        "cursor": {
          "ref": "5039dc92-54e3-447a-a9f3-8e9c153e1279",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "250f4b86-2b0e-42c2-83dd-c08760773fa6"
        },
        "item": {
          "id": "b7b1a728-40a2-44d4-8ae7-1de5aec3ad22",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "98a5b4d8-02d1-4a31-b74f-bd5a377e7933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb5a5df-f9d5-4c5a-9c56-37855a58da29",
        "cursor": {
          "ref": "b476047a-ff19-41ee-8466-ac8902e47191",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0b1dc815-60c3-43aa-9cfd-c12f8d57d6f9"
        },
        "item": {
          "id": "4cb5a5df-f9d5-4c5a-9c56-37855a58da29",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "58b7b1e1-ab5b-456c-b1b4-d48449b66c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0f336e-f22a-4a54-a271-e9fc1c93c0be",
        "cursor": {
          "ref": "98ff73bb-38e9-4ed1-94c9-1183cc193603",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "34901fe1-40cf-403a-b46d-bb3bfe25a7f8"
        },
        "item": {
          "id": "cf0f336e-f22a-4a54-a271-e9fc1c93c0be",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "22e2fecc-1510-4551-bbe1-118bc7936a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31519297-6e1a-496f-a229-d1a2bbcd3c67",
        "cursor": {
          "ref": "18b3fb16-0e3e-483d-91ba-b0dc684676e2",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7604fc33-a16e-43aa-b367-6f2e83a91586"
        },
        "item": {
          "id": "31519297-6e1a-496f-a229-d1a2bbcd3c67",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9287a08a-9869-4c4e-9ba6-7e7f6731a6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7071ff6-3e55-4880-bb14-7ee9b2f0fdfd",
        "cursor": {
          "ref": "ec3bb28e-9b4f-4d4b-90d0-c9bd8337c3c0",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1f801fa8-d68a-4171-98fe-eeb6bfc2dd3a"
        },
        "item": {
          "id": "b7071ff6-3e55-4880-bb14-7ee9b2f0fdfd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3d381c66-1346-4125-acc6-5483a177f595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0342c4f6-0358-41a8-858b-bd759955e19a",
        "cursor": {
          "ref": "f8ef9daa-8f38-4b83-839f-678aa6f42051",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "931baae4-aee0-4749-a287-bb85e6e2abe2"
        },
        "item": {
          "id": "0342c4f6-0358-41a8-858b-bd759955e19a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "00a48824-f967-4379-a76a-b76c10320ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65af6a8f-b61c-4193-bb59-ddf5e6d0c67a",
        "cursor": {
          "ref": "4b36c85f-7630-4265-947f-b80a608d99cf",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d0db11be-8841-432c-8219-9b6192b7cf75"
        },
        "item": {
          "id": "65af6a8f-b61c-4193-bb59-ddf5e6d0c67a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b841ec12-204b-493e-acbe-3b1474b7bba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abceae9-57c3-47c0-8b40-5ddbe36f7da6",
        "cursor": {
          "ref": "7fce7ae3-061e-4053-9677-e56edf06b2fa",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4235d2e0-f940-4c8d-8688-e00edded2bf1"
        },
        "item": {
          "id": "7abceae9-57c3-47c0-8b40-5ddbe36f7da6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "60bd9c07-9ad6-4617-9d74-e0c4b645846d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9efb99-caab-412d-9cbe-81fc52c710ff",
        "cursor": {
          "ref": "7a8d8d6f-46f7-44f3-994b-57bf7ac3bbc0",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bd260ed9-4d20-44e2-9eab-45848a75c6f2"
        },
        "item": {
          "id": "ca9efb99-caab-412d-9cbe-81fc52c710ff",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "638b7dcc-75b2-4e2a-8390-bbfa7dcff998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c280eb9b-5945-47f9-9844-31c7a52cd535",
        "cursor": {
          "ref": "904df78f-56ef-4237-90dc-8ae65c2792fc",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0fbdf990-6a9e-44d0-9973-849102351619"
        },
        "item": {
          "id": "c280eb9b-5945-47f9-9844-31c7a52cd535",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bf062be0-de50-43d0-992d-624816153dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bed3913-43a2-431c-8fec-5566fac57892",
        "cursor": {
          "ref": "1817449a-1e1d-4bff-9bb0-d86fe57d4557",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c090892a-40d6-479f-87cc-5a9eef9920d4"
        },
        "item": {
          "id": "2bed3913-43a2-431c-8fec-5566fac57892",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bce0a333-da91-4427-9e42-9b69920a35d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95530d13-d4eb-43ec-b3c3-7fac8c86eb01",
        "cursor": {
          "ref": "98118b15-cb0f-4927-9692-3f4110daf3f7",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8ec7a5cd-fa35-4294-a533-dfebe655066c"
        },
        "item": {
          "id": "95530d13-d4eb-43ec-b3c3-7fac8c86eb01",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3ec3c76f-ae63-4d05-9472-dffe47fd35b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f713407-86c6-454e-9d1a-d254ed16f725",
        "cursor": {
          "ref": "afa9a385-1d79-4b13-80e0-a22c35022b0e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3b57bde3-d888-47fb-bb3e-fad4196fb371"
        },
        "item": {
          "id": "3f713407-86c6-454e-9d1a-d254ed16f725",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "28e7d86e-3a99-4e27-ad0f-42fcfeb2e3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d414e987-5afd-4d16-89e8-a88da030b225",
        "cursor": {
          "ref": "b789d678-769e-4abd-8dfa-98317aaf1743",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "91761ffa-0004-4626-9c18-c717aeca11b1"
        },
        "item": {
          "id": "d414e987-5afd-4d16-89e8-a88da030b225",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2babbf09-8c67-4fc8-965f-1842de2594c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c7b1fd-73c1-445a-8785-a85ee334c06e",
        "cursor": {
          "ref": "c634fb04-08af-45a0-a06f-2039ef1dee05",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f2e26c9f-8474-44fd-841e-31cff62494cf"
        },
        "item": {
          "id": "b8c7b1fd-73c1-445a-8785-a85ee334c06e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b6bccdb8-92fa-49ca-9b30-c4f01c8d6e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca3895c-a497-497c-89aa-99681d5658ef",
        "cursor": {
          "ref": "a8a8cb08-85a5-4a6c-bea7-012c1422e444",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b37ade4a-9fe8-4a0f-a17c-95809ef22e98"
        },
        "item": {
          "id": "7ca3895c-a497-497c-89aa-99681d5658ef",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1dd355bc-e3f3-49ba-9a88-e73b1d3f4ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b5c069-0464-49f9-842b-92ba587583ec",
        "cursor": {
          "ref": "2eebe474-8120-4afa-84e2-e4d79028e9a2",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "85b99a69-bfa9-4f94-a0a1-525effb28130"
        },
        "item": {
          "id": "60b5c069-0464-49f9-842b-92ba587583ec",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e24d1fe8-401e-4370-8825-4d655f90dd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bbfdf4-476b-45cb-9ea2-7b0bd05bf0d6",
        "cursor": {
          "ref": "fa2566f1-a7ef-421d-8fe8-e8cca2393a2e",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "131affb1-07f1-4f35-8614-bd130fa3500e"
        },
        "item": {
          "id": "d4bbfdf4-476b-45cb-9ea2-7b0bd05bf0d6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "04b1da50-f63d-4d87-8df9-b1a676c84c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f428a05e-cef9-4c6e-9608-560f3db81670",
        "cursor": {
          "ref": "9e56d181-9d39-4b12-b9fc-5471fd3bc353",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "171b8564-11ef-4323-8faf-dc46696e86e9"
        },
        "item": {
          "id": "f428a05e-cef9-4c6e-9608-560f3db81670",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "389bc2a1-60e8-4573-927b-dfe7e8b30ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d84d0c-afa6-4869-81f4-54fa6e891378",
        "cursor": {
          "ref": "e633d5a3-d4d0-47ef-a07d-b16d28a0da8c",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1d7ae253-ab6f-483d-8edd-4aa79fbcd365"
        },
        "item": {
          "id": "b0d84d0c-afa6-4869-81f4-54fa6e891378",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2a81b061-5866-4f7b-ab9c-e3e797cdc3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546cfcae-6b9e-4481-8811-86d8430fa035",
        "cursor": {
          "ref": "ca2c961f-dc44-4b70-bbd1-3ac2266f37d5",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8e37a9ba-d970-4a3d-973a-8a9650cbdc7e"
        },
        "item": {
          "id": "546cfcae-6b9e-4481-8811-86d8430fa035",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2b3aeada-1013-4021-bb12-2ad790131982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa42184f-c9f4-4a09-a230-b3d5f2317f3f",
        "cursor": {
          "ref": "1758e0e7-749c-4fb1-a528-b63c7c6b6f4c",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cea64676-dd25-4480-b4ac-8d0b62253234"
        },
        "item": {
          "id": "fa42184f-c9f4-4a09-a230-b3d5f2317f3f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3280c25b-d2b0-4ec3-a9c7-230ea8f310ee",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108e4206-3f03-4b71-b003-0dfe41811318",
        "cursor": {
          "ref": "b29db35a-d6d2-4947-8b37-1744b68eb22e",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e2d41fd3-f356-49a1-87d2-ea1623cfa26e"
        },
        "item": {
          "id": "108e4206-3f03-4b71-b003-0dfe41811318",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6d832924-c103-4427-8ccf-c5a8f3300d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737491cb-2f4f-4996-9de6-1247fa5b2f32",
        "cursor": {
          "ref": "f6118a78-bf87-4844-ab50-a43be74921ef",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0c43c074-00d0-465c-a0b8-02dfe5893ce6"
        },
        "item": {
          "id": "737491cb-2f4f-4996-9de6-1247fa5b2f32",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "35376674-aade-41f1-a79f-ffdb8ef413ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b353ccd-1ce9-45d3-912d-54e925886439",
        "cursor": {
          "ref": "ec5807b4-e453-45c0-b774-3868989a391c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6d72171b-b69f-4963-b1ab-d1dad88867e4"
        },
        "item": {
          "id": "8b353ccd-1ce9-45d3-912d-54e925886439",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1bf59ed7-e0a9-4e37-9162-c6400c0b8328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7304bf4-1787-430e-a707-2de243a3d881",
        "cursor": {
          "ref": "907f9abc-54f7-43f1-9c0d-fb003b44032b",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4d4d6b5b-b744-42d7-b6d2-fa547a9deffb"
        },
        "item": {
          "id": "a7304bf4-1787-430e-a707-2de243a3d881",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d9a931ca-d954-4981-8379-f599fd92f2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be95bc70-0e66-4ada-8e0a-6bc13d71ee73",
        "cursor": {
          "ref": "6c5c3f47-8c2c-4de5-be61-eb34dee1925d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b49b6b61-ddff-4acc-ae2c-8b980a947421"
        },
        "item": {
          "id": "be95bc70-0e66-4ada-8e0a-6bc13d71ee73",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3e64d620-14dd-4a66-a649-961b27c22194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ddaa2c-7add-4d1b-a7ed-3da1d08e202c",
        "cursor": {
          "ref": "475d34d6-8b7c-4a91-9b2f-f09c457b58d7",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e6b3f2af-9cc6-4045-aeba-3e40c809fd3f"
        },
        "item": {
          "id": "30ddaa2c-7add-4d1b-a7ed-3da1d08e202c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bf286b05-c144-4cbc-a399-8e0e1e0233e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cecfe82-af10-47b6-a7b5-2934824d939e",
        "cursor": {
          "ref": "505bb315-e5cc-41ce-818d-be55ff169258",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3b5a24bf-7d0d-4137-839d-19df065d20b8"
        },
        "item": {
          "id": "2cecfe82-af10-47b6-a7b5-2934824d939e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "09b961c7-10af-416d-979a-eaa5b1413353",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae28eb1-8424-40ac-9c6f-727437f637d5",
        "cursor": {
          "ref": "a5ea1472-0773-453e-b1a2-2890c3d8efef",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4bda5c4b-eaae-48a3-947e-2f30bf1d6de9"
        },
        "item": {
          "id": "5ae28eb1-8424-40ac-9c6f-727437f637d5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1d82103f-574d-4948-8a19-a3862aa372f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e9815e-1d00-425e-8618-ecb17508df64",
        "cursor": {
          "ref": "4bd5f9b8-cd67-446b-b943-11de9e610fb2",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b6570ad9-7192-4674-a6bc-cb0197d38e9e"
        },
        "item": {
          "id": "13e9815e-1d00-425e-8618-ecb17508df64",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d069824f-e4fd-4c09-80ae-a2e019ea19d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325718a9-5bb7-4468-99ba-27aa8335c49c",
        "cursor": {
          "ref": "021d9a6b-59eb-4f70-8779-e89441dca497",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b749952c-6ffa-47ef-a258-74bb84cbd4ba"
        },
        "item": {
          "id": "325718a9-5bb7-4468-99ba-27aa8335c49c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "974b582b-0447-4fb6-a246-af509c5c994d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf4b85f-61a0-426e-996f-bb1f8f85ae9a",
        "cursor": {
          "ref": "257223cd-469d-49d8-8ac1-12ccde0fb3de",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "12240c9c-735f-4e69-8df6-e5f49618b758"
        },
        "item": {
          "id": "5cf4b85f-61a0-426e-996f-bb1f8f85ae9a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b5022efd-cbbe-48e4-8a70-822d455324e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672b2d07-d1f5-4314-bb1d-e5897eea15c4",
        "cursor": {
          "ref": "a1a918b6-cf07-4fae-8603-eb9655d0286c",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "07b4e664-7d85-448e-961a-254b2dc1123d"
        },
        "item": {
          "id": "672b2d07-d1f5-4314-bb1d-e5897eea15c4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "676b8457-ad78-4eb9-8df7-47069e24b259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48acdc1b-0f98-420b-b36c-b23a5e404758",
        "cursor": {
          "ref": "07b6f42e-5b16-4669-8fb8-5837f72983eb",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a41bbfaa-ce9e-4251-92fa-945bd38c94b3"
        },
        "item": {
          "id": "48acdc1b-0f98-420b-b36c-b23a5e404758",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "666be162-4087-426b-bd83-3361bd525593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e78ae37-8e30-423c-9012-4a67364f55ef",
        "cursor": {
          "ref": "5695062f-2dfd-46a1-99ee-7431db789f06",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "111b793e-40b8-44d7-ad26-f3e15e8e8300"
        },
        "item": {
          "id": "5e78ae37-8e30-423c-9012-4a67364f55ef",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7c78613b-e979-4adb-8340-65bb9387fc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfbff1e-2276-4013-887f-593d54cca5fb",
        "cursor": {
          "ref": "e14f5456-2bad-49be-b8ea-d48f6273fc05",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "dbadb696-d7a4-4532-a47c-7357321868e3"
        },
        "item": {
          "id": "ecfbff1e-2276-4013-887f-593d54cca5fb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4e14f262-9a3f-4646-b34a-8297cce54d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491ded97-332b-431e-99f4-928f2ab70c6d",
        "cursor": {
          "ref": "15f89045-7189-494a-91fd-692ef877f94a",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "56888227-ff41-4ec4-a0f6-98f540538fb6"
        },
        "item": {
          "id": "491ded97-332b-431e-99f4-928f2ab70c6d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d39ce288-2df0-43bc-8046-2fcdcd861e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cc4031-064d-4c0d-b801-b5efd9ae2b05",
        "cursor": {
          "ref": "87fed404-cf1f-4cb3-95c4-56c063637e09",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "77b7dc7a-247a-4412-80c1-61acf8bf114a"
        },
        "item": {
          "id": "23cc4031-064d-4c0d-b801-b5efd9ae2b05",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "660fa3f1-e27a-44fc-b0a0-754f32490f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931e6703-67e0-4788-b171-dab3cabad5d8",
        "cursor": {
          "ref": "52a538d4-95b0-4ca4-ba2e-4bb494c573f2",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "42d45594-f035-4dda-833f-1edbbbb2aef6"
        },
        "item": {
          "id": "931e6703-67e0-4788-b171-dab3cabad5d8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b7145160-6c15-4648-ba5a-a443720f98b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5f1b8b-076e-44ec-9e18-073f404e5eda",
        "cursor": {
          "ref": "a1fd1f73-6119-4093-b008-4dfd16c758d9",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f54ae8d7-b5b5-43e8-8440-40563cf68a10"
        },
        "item": {
          "id": "9f5f1b8b-076e-44ec-9e18-073f404e5eda",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1a17f372-bd49-4cff-968b-1ebc11a540d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1004ecad-cf4f-46dc-bc4b-79495dea2223",
        "cursor": {
          "ref": "ac89d067-948b-4ae3-85f2-a9d356d9b3dc",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d7350b24-ed44-4dde-841a-b772fead2db1"
        },
        "item": {
          "id": "1004ecad-cf4f-46dc-bc4b-79495dea2223",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c7a70cfd-876b-4d88-97ef-f4edad5d97b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad1cac2-3d80-4b15-b943-5f6bdb111985",
        "cursor": {
          "ref": "0835167a-4cd7-4f40-8110-f91dd635f954",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "092d7e98-82b7-4b72-821d-f1d42f6c6d69"
        },
        "item": {
          "id": "0ad1cac2-3d80-4b15-b943-5f6bdb111985",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cd9c8e50-ace9-4280-bfd0-21593d9cf1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240bdd28-468c-4eb4-ad31-46e77b456f71",
        "cursor": {
          "ref": "818f4a67-de0f-4bc7-83fb-617e78b45119",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f5473520-c4e8-490c-87ef-402a7321760b"
        },
        "item": {
          "id": "240bdd28-468c-4eb4-ad31-46e77b456f71",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "09907bb3-eb61-490b-8c83-4bf67fd8f86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdfd86a-798b-4892-801d-f8af5dcc3d43",
        "cursor": {
          "ref": "885453c7-d56a-4329-ac69-4b28fd0650fe",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "12c21868-27e3-4905-a5c4-b581c71053e6"
        },
        "item": {
          "id": "0cdfd86a-798b-4892-801d-f8af5dcc3d43",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2888590c-04a4-43db-be00-19983f18ea14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674525a2-4f67-46c9-80a4-cb0368c2cd2f",
        "cursor": {
          "ref": "4b0574e7-112d-4628-8d71-914b02f74e76",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cdb44053-5a81-4d76-85d4-1df7fdaab474"
        },
        "item": {
          "id": "674525a2-4f67-46c9-80a4-cb0368c2cd2f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ef18577b-ef41-40c7-8027-cfb3286418fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec037fd-0756-4ebe-89c2-bac1bd3d16ee",
        "cursor": {
          "ref": "1dbe13c7-b32e-4a79-a15d-af23e9b9501f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9698634c-5f78-4774-b13c-5d3d37e27055"
        },
        "item": {
          "id": "1ec037fd-0756-4ebe-89c2-bac1bd3d16ee",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "45063b12-5089-49f7-8ea9-f878317a292c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd944f0c-7d02-4deb-a1d0-55c3d0cadbed",
        "cursor": {
          "ref": "0e478d52-5a94-4fc2-8a4e-2caed6ce73d8",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cb06e3d9-06db-49af-9103-9452b768c7e6"
        },
        "item": {
          "id": "cd944f0c-7d02-4deb-a1d0-55c3d0cadbed",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "694cab6c-1352-43dc-ac25-41eada956895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57d9a97-e209-4936-9536-636d9f838605",
        "cursor": {
          "ref": "ad7b9c21-a57c-4330-9056-aa7899ecef57",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "582ea801-2d90-48ad-bc78-b6eba054b74b"
        },
        "item": {
          "id": "b57d9a97-e209-4936-9536-636d9f838605",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cf801ac4-710c-4ef3-878e-6aa7baae2dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381cb842-2ae6-463b-a25f-e41707320356",
        "cursor": {
          "ref": "2e2ee4df-d9cd-49ea-9b24-a2724c219566",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "da887133-4b24-4fd6-bea4-7733464983c8"
        },
        "item": {
          "id": "381cb842-2ae6-463b-a25f-e41707320356",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2793fe01-4ad8-43d2-9205-4a7945b501c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6ad23b-db9b-4734-bd0c-495b73593c5b",
        "cursor": {
          "ref": "e84f3fd5-313c-4f3f-ba86-96e6c0789ca5",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "40ff557d-0aad-458c-83c9-7214258a14a2"
        },
        "item": {
          "id": "5e6ad23b-db9b-4734-bd0c-495b73593c5b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e21b38d6-2724-40c5-944f-3d1e16caea62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc1d093-1593-4e49-a1d9-d436c372cd9f",
        "cursor": {
          "ref": "bc04b29e-120c-48ca-82d0-8bde0a8bf317",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7e67f7ac-c46a-425a-a72c-f411c69d9a45"
        },
        "item": {
          "id": "fbc1d093-1593-4e49-a1d9-d436c372cd9f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "21aedc7f-dd57-4dad-9dd1-e948e7a33b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d393533-f2e5-4627-aacd-3f643a9e4c15",
        "cursor": {
          "ref": "4cf05d49-8c72-47ac-b7f0-ff5411a61ad1",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "12235c41-01e6-4b30-ae21-81eea7444d3e"
        },
        "item": {
          "id": "3d393533-f2e5-4627-aacd-3f643a9e4c15",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "96bca0b0-0874-4d76-8e6d-c43e6223b0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a54645d-a1c3-48be-8ad9-afdfbc00e7e9",
        "cursor": {
          "ref": "3b455ed5-0a90-437b-9f39-9f0c07b0e977",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4ebd7a4d-2bd9-4d56-8a1d-d342f4c0edcf"
        },
        "item": {
          "id": "9a54645d-a1c3-48be-8ad9-afdfbc00e7e9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a78bf84d-8947-4d58-8816-afced6d416ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a29f158-8d28-4d0d-b588-0d5bdafe9216",
        "cursor": {
          "ref": "7dbcbad0-0b6e-4e4f-85df-56aaf2607301",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9325cdae-d37b-4f82-9a08-927446fbe3cd"
        },
        "item": {
          "id": "7a29f158-8d28-4d0d-b588-0d5bdafe9216",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "eb821d97-4246-44f2-83ea-a1b05eacbb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18db4a1-97ba-4ec0-833f-e6c206cfc3fa",
        "cursor": {
          "ref": "25405082-f796-4199-a255-5e8b0b3be7f1",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bce44b95-3f5b-49e7-b674-752c8019ba83"
        },
        "item": {
          "id": "a18db4a1-97ba-4ec0-833f-e6c206cfc3fa",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7c2efaab-aaa7-4555-ada5-3b7773377e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ef91d8-11cc-4a58-9418-0bbb0db420bc",
        "cursor": {
          "ref": "24a815ff-052f-486d-948b-666a7c272d61",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4427df8c-dd17-4323-9187-e0d69dec0002"
        },
        "item": {
          "id": "f7ef91d8-11cc-4a58-9418-0bbb0db420bc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "44dce1c1-62c7-455d-813e-7b507c2b8fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d79dc1-bc37-44d8-bb15-580f37c03078",
        "cursor": {
          "ref": "c210b071-3f9a-4545-9d6f-ed0e47cfaf93",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8f5cb051-06e1-480c-9a2c-c235be528a4e"
        },
        "item": {
          "id": "12d79dc1-bc37-44d8-bb15-580f37c03078",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "79fa5a48-b613-4776-ad8a-4145d13bb8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409e7e09-8775-4c9b-a85d-3fba50a9f6bf",
        "cursor": {
          "ref": "bbe9a2ab-7d72-4c10-a019-5baab480eb16",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c8ee3306-c2d8-4f70-babb-11cfd8eed918"
        },
        "item": {
          "id": "409e7e09-8775-4c9b-a85d-3fba50a9f6bf",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c08219fa-455b-4f51-8a74-31c0b9366f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bb47ba-3940-470e-ba61-17dd2adc32d2",
        "cursor": {
          "ref": "5eba1a73-8043-411c-a24c-2531cbc11dff",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f78d4680-9805-4c62-b388-6bb9e8261e49"
        },
        "item": {
          "id": "e9bb47ba-3940-470e-ba61-17dd2adc32d2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a037cda7-c2fa-454c-86a4-0b2c1bd25eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae4ee3b-53d9-4ef2-aba4-e187599de237",
        "cursor": {
          "ref": "b5b45c0d-e9e5-46f8-9ea8-912a3c45f229",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "930a492e-75e3-4ab4-8749-71260f15f60b"
        },
        "item": {
          "id": "6ae4ee3b-53d9-4ef2-aba4-e187599de237",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "40231611-908a-4ef8-a073-beed0c7f2fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7220728-5212-4afb-a094-fbd910e01e26",
        "cursor": {
          "ref": "d9908b41-3d32-40ec-95b7-3cc070fd9d96",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9b4399ff-d3e5-4980-bb79-7f57ffc1f0a0"
        },
        "item": {
          "id": "e7220728-5212-4afb-a094-fbd910e01e26",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "35e97392-43bb-43ec-ace9-42a3aaff906d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc230e32-8062-4bfe-8a32-b0662e21dbc1",
        "cursor": {
          "ref": "7e88dd8b-d721-46e0-bbd9-b006cb44b03c",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ff64ebc8-c866-4710-a07e-7f4a7c081586"
        },
        "item": {
          "id": "dc230e32-8062-4bfe-8a32-b0662e21dbc1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4844bf9d-a95b-46aa-8bdf-204d28034dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cd8b27-1031-46bc-afe1-bfab4efec222",
        "cursor": {
          "ref": "d3173e44-bc73-4578-8044-71b878ae2d22",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e2277e12-7001-4317-90a8-0f1bc58c0077"
        },
        "item": {
          "id": "02cd8b27-1031-46bc-afe1-bfab4efec222",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4a850e12-fcbc-4290-ab71-81bc3370c526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c05f0a-e0b7-4950-a266-c8a5644680a9",
        "cursor": {
          "ref": "264e5401-53cd-40fa-ac3d-4ac4ab448d3e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d39fd4c7-2b87-436e-94cd-e6667e896a55"
        },
        "item": {
          "id": "d2c05f0a-e0b7-4950-a266-c8a5644680a9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "05614bba-36e2-4d22-ba5c-febe8387b8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b080c2d0-ed0e-459e-b20d-b3b4ec9c346a",
        "cursor": {
          "ref": "7415671f-bddd-475e-aa3b-d44788a6c98a",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1ece347c-5238-4325-a4a0-2af0a544bbcd"
        },
        "item": {
          "id": "b080c2d0-ed0e-459e-b20d-b3b4ec9c346a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4f073c81-521e-4480-9fe6-8b91aef69ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97991ebd-24f1-464f-b4b5-7f443d5f8b2c",
        "cursor": {
          "ref": "c6705b18-b474-4a4b-b87a-409e323e23ed",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9bcf2119-4b80-4f7b-88d3-805c80dd62fa"
        },
        "item": {
          "id": "97991ebd-24f1-464f-b4b5-7f443d5f8b2c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7626029f-69a9-441d-85ab-0ae0c3252d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f752f2fb-117b-43e9-8235-842de62ec19d",
        "cursor": {
          "ref": "08ad5a70-47d0-485a-8690-5f8b43c2a47f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d33811b3-cd97-4e3f-a6a3-9da91335a143"
        },
        "item": {
          "id": "f752f2fb-117b-43e9-8235-842de62ec19d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "aca1255f-270e-4203-95ec-5e3fd27a7f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fe80b3-cd3c-481c-a6b1-c7f71e8bc77f",
        "cursor": {
          "ref": "a61802b2-22b6-4d0b-a9e0-ce7a773e2a0a",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b3a7c6ca-d751-47f6-9eb4-3932475bb890"
        },
        "item": {
          "id": "54fe80b3-cd3c-481c-a6b1-c7f71e8bc77f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "71734e7f-15dc-4f44-b56e-e03441125dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9fc5c0-fd6e-4753-8ae3-73334a5c0834",
        "cursor": {
          "ref": "a0e78f8d-7a0d-4132-9d98-0856db29f4b9",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "06fda2f8-4b55-4611-83e0-99bb5d93ed3c"
        },
        "item": {
          "id": "1c9fc5c0-fd6e-4753-8ae3-73334a5c0834",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "75310472-47ce-4638-9fe2-5a3d5ace73a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d325553-8adc-478f-b480-81f4e560c341",
        "cursor": {
          "ref": "e95caa45-9658-4d88-b10c-5374d9f24a51",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f534acda-d10b-4e9b-a3d6-77bc6e9ed958"
        },
        "item": {
          "id": "7d325553-8adc-478f-b480-81f4e560c341",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f0ece329-b2da-43ef-a1e9-af6c38609c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ddba5a-aacb-4690-b6c6-44404b0829b0",
        "cursor": {
          "ref": "0188cd50-6917-4497-b576-2d8e923cfa99",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "96cc2779-327a-4162-83f0-7f91364fe6be"
        },
        "item": {
          "id": "a9ddba5a-aacb-4690-b6c6-44404b0829b0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a2b543be-4496-466a-8a66-67b530f92681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70328ce6-3248-4c86-949b-07ad5ca8b527",
        "cursor": {
          "ref": "70435eb6-f4d5-4cf2-a645-3535c6f4fe91",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1ee31699-ca46-40b6-91ee-96ee5c30ffe8"
        },
        "item": {
          "id": "70328ce6-3248-4c86-949b-07ad5ca8b527",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dee0ee3b-c357-46f1-afda-0f69bd2d8b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5941a8-2751-4ff9-9287-643b9b557744",
        "cursor": {
          "ref": "56204b88-c9ef-4f69-b61a-d3d5f32ee7d4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7f6ff7e8-2ba2-4836-af20-a7e9b1a5b41d"
        },
        "item": {
          "id": "fc5941a8-2751-4ff9-9287-643b9b557744",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "36209655-e678-4a42-94ad-7b2f84f35eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe19c974-8b1f-44ad-8d5a-a3305eade326",
        "cursor": {
          "ref": "7291a15b-5938-4b13-88a5-94a51b3d23ba",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e8c13c90-61d4-4deb-a640-868a50f765c0"
        },
        "item": {
          "id": "fe19c974-8b1f-44ad-8d5a-a3305eade326",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "721d0651-cafe-4dca-a456-93139889fb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809d23c5-953e-4bbe-87c1-9f1dbc05c25b",
        "cursor": {
          "ref": "40b5b4e3-0c27-4aad-9aee-1cfe7ad8d816",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8b66d2a3-64f0-4c64-b727-446cbc669b79"
        },
        "item": {
          "id": "809d23c5-953e-4bbe-87c1-9f1dbc05c25b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a3580ab1-6919-4b03-ac6b-4d8a0e85c83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868d9c7a-ab38-4d1d-b4fc-bb1698505a0f",
        "cursor": {
          "ref": "2257336a-5f5c-4204-9454-3f05a4368c28",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "62795ecb-0fba-4825-93b5-b90e5dc629b2"
        },
        "item": {
          "id": "868d9c7a-ab38-4d1d-b4fc-bb1698505a0f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e5132738-7630-4252-9681-43e5bd0bcc2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61627128-5504-4031-9d82-ba0ab00f0495",
        "cursor": {
          "ref": "027a74e3-857a-4b8e-ace4-387425e1fd15",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7c2bf22b-268d-4e93-a7c9-fb581f3c3202"
        },
        "item": {
          "id": "61627128-5504-4031-9d82-ba0ab00f0495",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5b49419c-2d1e-471d-8a52-29ef9d9df487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d43d26e-dfbf-41ce-bc62-eef0b4a11dff",
        "cursor": {
          "ref": "abd3a6c5-b4ba-429e-ae34-46d927c70bc4",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ce26002c-465f-4057-85f8-092a4bc0c58e"
        },
        "item": {
          "id": "3d43d26e-dfbf-41ce-bc62-eef0b4a11dff",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a73434a0-fd75-4e54-a20b-f913e22302d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5446b110-752c-4ec7-9a68-de59ad16b805",
        "cursor": {
          "ref": "ee829e37-0211-4dac-ad39-c8b6ee5c18eb",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6c45b6e5-c02d-49db-b595-6f86d3f3876a"
        },
        "item": {
          "id": "5446b110-752c-4ec7-9a68-de59ad16b805",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "81c4a4ee-a120-48d7-9690-b454e11aa973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3c01b65f-3285-4d48-a083-a5e78e886f50",
        "cursor": {
          "ref": "17881ba4-d7fb-4bd9-a0b2-0a6ea16715f5",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "cd9e0bf5-645a-474b-bb4d-5097c459eda8"
        },
        "item": {
          "id": "3c01b65f-3285-4d48-a083-a5e78e886f50",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cf1da8a1-ae63-4ffe-ae46-9545694e5bb4",
          "status": "Created",
          "code": 201,
          "responseTime": 10630,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7246ef19-2a19-4bb6-b1ce-46f1b2b53bbc",
        "cursor": {
          "ref": "82218075-af87-497f-b19f-54ee1f36c29f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e6b35cf5-dfba-4851-8227-533c1f57c84b"
        },
        "item": {
          "id": "7246ef19-2a19-4bb6-b1ce-46f1b2b53bbc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6a60d0c9-57cc-40f6-87c6-5414930e6404",
          "status": "Created",
          "code": 201,
          "responseTime": 10007,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5849a1ce-dd7e-4931-a208-dc78ffe81619",
        "cursor": {
          "ref": "b5ef5db9-5be3-4936-9c26-63eb27bdd6dc",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "47fecc88-f1e5-40e3-b8f3-e072b150bdec"
        },
        "item": {
          "id": "5849a1ce-dd7e-4931-a208-dc78ffe81619",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "78684b92-3f54-49da-ac0e-05e0d061f68a",
          "status": "Created",
          "code": 201,
          "responseTime": 10281,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebddc2f-492f-4935-84da-3cb8c5f03d3e",
        "cursor": {
          "ref": "e76e3b6c-9be0-4fb3-b222-f366c1589f45",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "57b2ba9d-273f-48da-890e-8fe6290dc32e"
        },
        "item": {
          "id": "6ebddc2f-492f-4935-84da-3cb8c5f03d3e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e6ec76af-a122-48f8-a11a-d5b9c34095c4",
          "status": "Created",
          "code": 201,
          "responseTime": 9818,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4849907-fa2c-453d-9516-fc715813f6eb",
        "cursor": {
          "ref": "1888d963-d459-426e-b567-5db8024615a8",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "94ce0d09-71b3-4c8c-b58d-b8e5db146c1d"
        },
        "item": {
          "id": "d4849907-fa2c-453d-9516-fc715813f6eb",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "93dca3f3-edce-419b-bc4e-a60a6d48105b",
          "status": "Created",
          "code": 201,
          "responseTime": 9951,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-08-19T00:42:36Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-08-19T00:42:36Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4643ca1d-b150-4c81-b28b-4df68ef7374b",
        "cursor": {
          "ref": "3505452d-dee8-4c06-9c58-c7901c20e38d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f77eff06-486b-40b7-b9da-80465f6d5f68"
        },
        "item": {
          "id": "4643ca1d-b150-4c81-b28b-4df68ef7374b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9ac0faae-1f5b-4ca9-b0dd-9ff4e79bd6ff",
          "status": "Created",
          "code": 201,
          "responseTime": 10533,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88005fcc-8483-435c-9d40-6de07fd76356",
        "cursor": {
          "ref": "03082c0e-dad4-438b-88d9-281431910016",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "78ef6e56-7220-4e8b-b893-9ca38280f429"
        },
        "item": {
          "id": "88005fcc-8483-435c-9d40-6de07fd76356",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4092b27f-6904-4177-adf0-1bdf7101b3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e726653-c721-4c0a-8590-9aa1c0561cba",
        "cursor": {
          "ref": "28aabf13-a581-4aee-9b3d-243949cc83bd",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "46a43bab-98da-4105-96cc-e1e6336d1619"
        },
        "item": {
          "id": "2e726653-c721-4c0a-8590-9aa1c0561cba",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7ff77ce5-440e-45d0-a2ec-fdbdbc3862da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc154ace-7df2-400b-a723-455cc09be409",
        "cursor": {
          "ref": "a76a75c9-09b3-4e14-8131-db6763a2a706",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3f32c4c0-b28b-4d60-8d64-da390c4aa3ed"
        },
        "item": {
          "id": "cc154ace-7df2-400b-a723-455cc09be409",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "24d41b5e-3c70-4787-91bd-3ba4d77caf5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d61540f-d960-4524-b907-988aa719b58d",
        "cursor": {
          "ref": "747ab2a4-8e10-4b8a-a8b5-03f8ae05240b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b00dd909-9293-4d83-bc07-6abf24ef03df"
        },
        "item": {
          "id": "4d61540f-d960-4524-b907-988aa719b58d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2f574bc3-e76f-4872-b4b2-1c229957f34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24758001-64e9-487f-a279-a9b2372c0046",
        "cursor": {
          "ref": "d9107f14-9c18-418b-9201-aaafe89f2989",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7bce6a90-9e55-4bec-a256-6c9ab7699c2b"
        },
        "item": {
          "id": "24758001-64e9-487f-a279-a9b2372c0046",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c06699ec-f346-4560-84af-911cb561d484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d98f855-2339-41b1-beaf-b6e84d78c196",
        "cursor": {
          "ref": "d6957a27-776c-4104-bd95-fd86448711d2",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b53408b9-562a-4771-b921-2a9033c1d782"
        },
        "item": {
          "id": "9d98f855-2339-41b1-beaf-b6e84d78c196",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "623b8261-9470-432e-8b24-d982d2bca27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309c94fa-6a2f-405c-bfe1-dd512f49bddb",
        "cursor": {
          "ref": "2386f8f1-3072-48e2-b7a0-0a986a848188",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f0d54b8e-e744-408b-9f29-faae69e7de6a"
        },
        "item": {
          "id": "309c94fa-6a2f-405c-bfe1-dd512f49bddb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9a6e3e6a-8886-492d-a544-5c538e628f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2355910a-1105-45b5-b707-bc7b867cd065",
        "cursor": {
          "ref": "4b051e89-8318-4265-abd7-1de12990926c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3d4621ab-d964-49dc-9ef8-7eae1ed5e2f2"
        },
        "item": {
          "id": "2355910a-1105-45b5-b707-bc7b867cd065",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e0f1542d-3a1b-4e29-8ebd-ca11aff2af49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1444610a-b2cc-45d4-8b25-0c59035ff157",
        "cursor": {
          "ref": "263b514e-64bd-47a3-bc06-63510b547e23",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9cfe49c5-23f7-4257-933b-8e8d1ea3c079"
        },
        "item": {
          "id": "1444610a-b2cc-45d4-8b25-0c59035ff157",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0b8ef3ca-24e8-44d8-a5ce-517350c2b5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0ade3f-65b5-417a-a22a-1e455c39b10c",
        "cursor": {
          "ref": "a74c968f-7be5-4f9f-a972-b3e5d9389c6a",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "80f24d27-99df-4423-8485-6e1cdb9ccca7"
        },
        "item": {
          "id": "5b0ade3f-65b5-417a-a22a-1e455c39b10c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "06604bbd-07f2-47b1-8148-2aa4bdb3742b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d487e1-233d-4fa3-99b6-c63e52a4d281",
        "cursor": {
          "ref": "ecdbee8c-7ed9-40ef-8749-3521cae908cb",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "44ae4630-fe0a-47df-842e-cbedf1919e18"
        },
        "item": {
          "id": "d9d487e1-233d-4fa3-99b6-c63e52a4d281",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f32e0c11-1594-49f6-ac8b-2f08bea4769a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa29a2e-8590-4ea9-aafb-726ec8015baf",
        "cursor": {
          "ref": "fac04c79-c6d5-4a92-a3c5-7b173549e495",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bd6e84ab-72d7-4b72-84ab-acb46b6b3c7d"
        },
        "item": {
          "id": "eaa29a2e-8590-4ea9-aafb-726ec8015baf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f7dee16d-9369-44fa-931e-1bc6db29002f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50cfbba-6edf-41be-94b5-fc04d0bc513c",
        "cursor": {
          "ref": "b56cedb6-7e5b-44f1-a6b7-0f905a406aa7",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5f1a2624-0125-4b97-90c0-31cd328ac098"
        },
        "item": {
          "id": "c50cfbba-6edf-41be-94b5-fc04d0bc513c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a29d80e7-7e2f-447a-8b84-e64eb870b51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d4a3a1-afc3-4ba5-9fac-467a9efed1b9",
        "cursor": {
          "ref": "f1f3caae-71e2-4bd3-baa0-452c8dc5cdfd",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ecf7bf03-63b6-409d-b413-485660624a54"
        },
        "item": {
          "id": "86d4a3a1-afc3-4ba5-9fac-467a9efed1b9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d2ec4ada-0405-41a1-b789-edcb33693ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c915921-4a9b-4f15-aac8-2fd86d6d2dbe",
        "cursor": {
          "ref": "6fe96da2-e01b-4075-a6d3-1f1ddc86eac0",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f96b9617-8c42-4bdf-aba1-b6b4f9e081a9"
        },
        "item": {
          "id": "3c915921-4a9b-4f15-aac8-2fd86d6d2dbe",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "df6ae011-27dd-4297-a0c7-e330e69c00f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079e5cac-810c-4437-8a19-514bbf3886c8",
        "cursor": {
          "ref": "db72cd29-5c88-4970-acb4-97108d64bbee",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4cdce129-f090-4036-a91a-fa8c39991e58"
        },
        "item": {
          "id": "079e5cac-810c-4437-8a19-514bbf3886c8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c85b6ca4-f762-480f-ae33-aa307ea9857e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2231f2-0253-4652-b8d3-fdd16364b791",
        "cursor": {
          "ref": "a22d358c-0084-42f7-822e-611f3af7a366",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fbef0917-41f3-46f1-9dae-840cae2d6284"
        },
        "item": {
          "id": "7e2231f2-0253-4652-b8d3-fdd16364b791",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "52059e72-f4dc-4c17-89f4-5a333bd11507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97233353-008b-40ed-b3f6-a11e55771134",
        "cursor": {
          "ref": "34171dc2-7057-436a-8fc1-16be82920eed",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9e7dfbe4-e8be-4e6d-bbd6-00a57ad9ec46"
        },
        "item": {
          "id": "97233353-008b-40ed-b3f6-a11e55771134",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bdc36ee1-2dc9-40ae-8668-aab9bd649e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773d8c90-b2a1-495a-88af-fd095089085b",
        "cursor": {
          "ref": "42a89146-8102-4194-b4a7-cd434207ed92",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "30a30296-be01-49fd-b6e9-8cbed02fe59d"
        },
        "item": {
          "id": "773d8c90-b2a1-495a-88af-fd095089085b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4c9e7f4d-c249-49f3-a610-6bf72ae37fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3347e51-d7fb-4e0f-8659-0d087fbf36ef",
        "cursor": {
          "ref": "d56b2564-1771-49c3-b946-9733aa42e939",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "00062854-60e8-4058-a718-34af590912d4"
        },
        "item": {
          "id": "a3347e51-d7fb-4e0f-8659-0d087fbf36ef",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2af45720-d670-44e4-be05-2a1467c3ea85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5150a761-7491-4457-9e75-73e79b554cfd",
        "cursor": {
          "ref": "052669c1-f8de-482c-9b67-1b0c56bec13f",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "21294782-034b-457e-a026-5a1348e806a0"
        },
        "item": {
          "id": "5150a761-7491-4457-9e75-73e79b554cfd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "91bc513c-1851-4527-ac34-38873193abcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b841fd-fcb4-4587-ae99-1e6f5f76b4cb",
        "cursor": {
          "ref": "a5a9b81b-b344-480f-9944-2e8ed06095f2",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e2bd92f8-74e9-4f37-b5fe-0f183c9f3dba"
        },
        "item": {
          "id": "64b841fd-fcb4-4587-ae99-1e6f5f76b4cb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4c67eb81-8c00-435e-a9af-1520d5b756a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0fef64-3f4e-4d5d-aa1d-9cd8971d86d8",
        "cursor": {
          "ref": "69bba0b4-1b2d-4023-9a88-16bb8d1a9b23",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "56716c91-b52c-4eb2-8b7a-d41433ec6883"
        },
        "item": {
          "id": "5e0fef64-3f4e-4d5d-aa1d-9cd8971d86d8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8101bc63-f076-4bf5-86c6-8c9fb13cac01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac64d8d0-1e3d-4048-b6ce-446005c80c6b",
        "cursor": {
          "ref": "62290c44-5f1e-40ba-acb5-00af25990bb0",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8ba952a1-c2a6-47ee-80af-bd863cfd5c1b"
        },
        "item": {
          "id": "ac64d8d0-1e3d-4048-b6ce-446005c80c6b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1704f247-8abe-486a-81a8-ad8af706da2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c228df-9435-4d81-9eff-94da3a7f95ad",
        "cursor": {
          "ref": "2c82cad6-8f4a-4bc9-acac-f9c485167b5c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "100ee867-dc96-4e91-bdc8-dbd7f2fc3668"
        },
        "item": {
          "id": "b7c228df-9435-4d81-9eff-94da3a7f95ad",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "39ee2c48-214a-40ba-8e31-c04c2f5347b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3e0acf-045a-4488-be7f-bbf43683e21b",
        "cursor": {
          "ref": "314b2254-2a8e-4875-9095-d5eddb0b26a1",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f6269aad-27e3-4a6e-aa58-5c9ac38592cb"
        },
        "item": {
          "id": "dc3e0acf-045a-4488-be7f-bbf43683e21b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a5ae3452-5544-49fc-8a19-8419b5e1b94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a947bb3c-9f4e-4be9-8857-be084dc382e6",
        "cursor": {
          "ref": "a83b5bc9-67af-46dc-a247-3c73034016a2",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "996244f0-1d3e-44dd-b5f3-36f6029782c8"
        },
        "item": {
          "id": "a947bb3c-9f4e-4be9-8857-be084dc382e6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c4278a39-36ab-4770-b5cf-88a9274412e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4c65b1-6abf-4d8a-aaba-9c4e2c4c13e0",
        "cursor": {
          "ref": "e4c1725d-e46a-4cf0-a4cd-3c4a04007800",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "819a7708-8b45-4c22-b0d6-8e2d58b8b563"
        },
        "item": {
          "id": "bb4c65b1-6abf-4d8a-aaba-9c4e2c4c13e0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "66fa940f-b06b-4170-a09f-de0f2510ee24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb3a2a7-2689-4bdc-8ae7-74956c701b01",
        "cursor": {
          "ref": "439d11fc-9226-42c4-b705-6c49b9029dbe",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0c0b3cdb-4bf0-4c64-b6ca-849bd7615f08"
        },
        "item": {
          "id": "1cb3a2a7-2689-4bdc-8ae7-74956c701b01",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d96de71c-b057-4373-a1c0-ec2bb5750583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1913c56-77d8-4b4b-8550-8fce49885300",
        "cursor": {
          "ref": "8938c353-d69b-489e-92bc-e60f2bcf3b48",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1b0f0b1d-2d25-49a7-bee7-a3d30e68bb7c"
        },
        "item": {
          "id": "b1913c56-77d8-4b4b-8550-8fce49885300",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "73aff754-f940-4688-9444-e6a31f6393e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca0298b-62e1-49f9-a872-27dcb57cd0ca",
        "cursor": {
          "ref": "c3b2a000-2449-4516-a8b4-7584b43ed24f",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e0b62bbc-6d88-4711-8ea6-36ff4527f02b"
        },
        "item": {
          "id": "2ca0298b-62e1-49f9-a872-27dcb57cd0ca",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5ddd9bc2-4252-4be7-9d1f-25209ce0f55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b598b605-3f93-4562-846f-f36011fbd0b0",
        "cursor": {
          "ref": "768c066b-789a-4ec3-ab46-d3a58e22161c",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "87be341f-be7c-4f2c-807f-956d5e334097"
        },
        "item": {
          "id": "b598b605-3f93-4562-846f-f36011fbd0b0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a2318891-1e41-4276-b581-60f387f342d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b860f03b-5600-4967-9be8-d0080df4b618",
        "cursor": {
          "ref": "fb31b59a-2dfd-46b5-bb29-ee222ad00f35",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "31f9595b-aad8-42da-ae74-1b7a2b31bb20"
        },
        "item": {
          "id": "b860f03b-5600-4967-9be8-d0080df4b618",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b486bf22-b6ed-4404-970c-5387e6848bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa282fe-d5c8-4b68-8e53-2b5cde0c8312",
        "cursor": {
          "ref": "2f32de23-8c9f-4103-b94c-41ab76e52781",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e20f76c7-ab6e-4567-bf8f-f6a5eb4da907"
        },
        "item": {
          "id": "ffa282fe-d5c8-4b68-8e53-2b5cde0c8312",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e9b1fbaf-0bc4-412c-be39-17e96a665c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1180d963-0ce4-4017-8146-3210a5d0f581",
        "cursor": {
          "ref": "b2f3abcd-22db-494e-9bd2-e649acf81244",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a7d698a6-8add-4305-93f0-a0ce4be60996"
        },
        "item": {
          "id": "1180d963-0ce4-4017-8146-3210a5d0f581",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "82bbc4fa-4f60-4b85-8a3d-1fc86c4d3dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c783e192-6cd5-446f-a05a-bf186ed48481",
        "cursor": {
          "ref": "af98a7fc-93a2-4eea-bf83-5d73844cfef8",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0783d5a8-10a5-42b5-a396-f41a5e6a6a8a"
        },
        "item": {
          "id": "c783e192-6cd5-446f-a05a-bf186ed48481",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4b3dec86-c7f2-4a32-86fa-8e0465b46f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b807b1-f536-4acc-b1e1-1b131e835e57",
        "cursor": {
          "ref": "c06b6be1-f4ff-40a0-97ee-df591a6e3435",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "25fbf44d-329e-42d1-a4fb-d283c0a58686"
        },
        "item": {
          "id": "41b807b1-f536-4acc-b1e1-1b131e835e57",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cd89f067-fec8-4834-9e6b-c1a41c5c2f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d187011b-016b-4ced-8eb8-868fb8ce048f",
        "cursor": {
          "ref": "9b3c6789-f905-4251-bcc5-49e07061225a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d918d37d-7e26-45af-a4e1-ea2e23217604"
        },
        "item": {
          "id": "d187011b-016b-4ced-8eb8-868fb8ce048f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "07c5a60b-9fda-478a-a26b-293201a830fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3e4432-86df-41f2-b708-75861dd06602",
        "cursor": {
          "ref": "bfce1201-2093-4ace-b2a2-a2dcec1402e3",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ca537378-567e-4be6-accb-5a0bf9b14f00"
        },
        "item": {
          "id": "8c3e4432-86df-41f2-b708-75861dd06602",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5733cd88-1765-42b1-82bd-e312f8dc68fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140e86ee-21a5-4244-8f1a-0851385082ea",
        "cursor": {
          "ref": "93d5be4e-aa53-492f-baf6-8eea6ab22791",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "677c225d-e432-44cf-9795-0e42eb739acf"
        },
        "item": {
          "id": "140e86ee-21a5-4244-8f1a-0851385082ea",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c71ea14b-7bf6-4910-871e-8941e7fb0ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ebdc93-effb-4913-ae8b-9b1629cd05ec",
        "cursor": {
          "ref": "c901c20d-b1b8-4ec1-ba4d-461874972a03",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b059977e-7593-445b-b87f-ce01a48c2a48"
        },
        "item": {
          "id": "c3ebdc93-effb-4913-ae8b-9b1629cd05ec",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e7d92b81-8884-4f92-9e7a-0d4c3530e2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a186002c-8583-4b11-a873-0d3a806a44e9",
        "cursor": {
          "ref": "a7f094e8-b9a9-4c50-baa2-daed26e84468",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "16afda1b-afe1-493b-adc1-f197fa0cb873"
        },
        "item": {
          "id": "a186002c-8583-4b11-a873-0d3a806a44e9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9956dfe0-df78-4bc8-ac89-e870df920e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f9b3aa-7fb8-48b9-a4be-73a31653aad5",
        "cursor": {
          "ref": "b093b48f-a9f1-4dd7-819a-5a6c1de0867c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5bed997c-858b-4ee5-ad51-a5b6c995a257"
        },
        "item": {
          "id": "e2f9b3aa-7fb8-48b9-a4be-73a31653aad5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "62dcfe0e-56e9-4237-806a-ab94ab6e51ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f473a7b5-6650-436d-abdb-206902e1c8ba",
        "cursor": {
          "ref": "a7ee5b0d-7e12-4283-b4c0-3bc4a723e646",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f6bc2255-8dc2-47dd-90eb-6d03b359253a"
        },
        "item": {
          "id": "f473a7b5-6650-436d-abdb-206902e1c8ba",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0af113d2-079e-480d-84ee-b155a2979d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f859de-3dce-4af3-b7af-fda7efb4bf12",
        "cursor": {
          "ref": "314610cc-4972-4fd1-954f-a280dccecf1d",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3ff570ee-ef2d-4313-87f2-ab6213c78357"
        },
        "item": {
          "id": "a8f859de-3dce-4af3-b7af-fda7efb4bf12",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f83975de-c9a5-4f8b-9678-e8a01f9e5e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f5a51b-84e9-4840-b814-fdca83b3f5ce",
        "cursor": {
          "ref": "d357f2b9-6c6b-40a3-8896-1d52838e39d5",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "028d8d6f-54c6-43d6-8d47-56579c97cebd"
        },
        "item": {
          "id": "92f5a51b-84e9-4840-b814-fdca83b3f5ce",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "73a8e760-499f-4708-95de-63ec2798b15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cb1856-6300-41b2-bc39-b4a4a948a0ec",
        "cursor": {
          "ref": "d6a1472b-2708-44e5-b11b-990837e4150f",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "38699500-1026-4c73-8bf0-c2de897e719f"
        },
        "item": {
          "id": "06cb1856-6300-41b2-bc39-b4a4a948a0ec",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0f193a28-c8d3-4cde-86cd-ed867dbe87bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d159b9-d0ee-4f42-9494-17c091b5a27c",
        "cursor": {
          "ref": "4f42bea9-269d-4245-971c-87e0e55d6eb3",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5d59ce19-8820-445c-9e16-e08d9227fbf4"
        },
        "item": {
          "id": "88d159b9-d0ee-4f42-9494-17c091b5a27c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "15413226-e739-4b90-b92b-569bdfc73ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa647dd-3875-4144-ba0d-596b2b6dbbd2",
        "cursor": {
          "ref": "ab12239f-79a7-4f15-a03b-6698274999e2",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "44af568e-dd9d-4ce5-8cf5-e3f8a868f361"
        },
        "item": {
          "id": "4aa647dd-3875-4144-ba0d-596b2b6dbbd2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "fef91ae9-c7d9-48c4-95b5-ff40991544f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76a138f-68a0-42b7-960b-b764c363b2ac",
        "cursor": {
          "ref": "50d0b39e-8597-4adf-b70d-ab45e0a5989f",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d9ce093e-7ffd-4080-9b94-95fa2cb634e0"
        },
        "item": {
          "id": "f76a138f-68a0-42b7-960b-b764c363b2ac",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4844b480-c708-448d-853d-59e24c346a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17a3309-2dac-4c3d-bf7a-2a54914398f2",
        "cursor": {
          "ref": "a3dd59cc-4c39-4412-9a84-0bd35fbf1f28",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6237bc5b-2ef6-4de5-9f5d-0b09eed2130c"
        },
        "item": {
          "id": "d17a3309-2dac-4c3d-bf7a-2a54914398f2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0e7d07c9-ec61-4ab6-92a7-6c3bbd2fef83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82492dda-1e3f-4bdc-9e94-055716135fb9",
        "cursor": {
          "ref": "ff77af06-aed4-4635-a5fb-fa0f35d7ba77",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c677390b-1d1f-4baa-a0a4-55f7b3eb74be"
        },
        "item": {
          "id": "82492dda-1e3f-4bdc-9e94-055716135fb9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "29bdb22c-c74c-4c34-a10e-19af664fa51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236961cb-68f3-4421-aecc-465f11522f59",
        "cursor": {
          "ref": "753a0c62-a046-4ff7-952c-f86454c9f2af",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9db8a68b-74e2-4d5c-bd56-e43135700111"
        },
        "item": {
          "id": "236961cb-68f3-4421-aecc-465f11522f59",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "14b9cdcb-5f1b-4442-bd45-68f2915075fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678007db-d398-47f3-8e67-fd18064092e7",
        "cursor": {
          "ref": "640640e9-c2b8-4b09-9aeb-8149a8e5a911",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "310b1a11-ae04-4454-8ea6-5b96715e89eb"
        },
        "item": {
          "id": "678007db-d398-47f3-8e67-fd18064092e7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "761be4f9-05dd-44d9-a9e3-ee254a84fec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6677a77-b45f-4d62-8340-e7bef815d728",
        "cursor": {
          "ref": "3fd85d8e-8969-4f1d-b560-f6604f05ff19",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "758970b6-c7b0-463e-81f0-2c70e64f0fc0"
        },
        "item": {
          "id": "d6677a77-b45f-4d62-8340-e7bef815d728",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0e3d977f-19fd-4dbf-b0ce-ae1727b23e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbd9509-6d28-4d88-acf2-8bb762d37149",
        "cursor": {
          "ref": "4747fd3e-ba7f-455f-9607-8df2c4585ae6",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d99d7d96-85c9-416f-b427-ba7d72341082"
        },
        "item": {
          "id": "acbd9509-6d28-4d88-acf2-8bb762d37149",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2ec41bb6-0461-47c3-a04d-0f9e2a5c1880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ab43f7-5da5-49df-b18d-1f6eb07659df",
        "cursor": {
          "ref": "a31dc763-c8d5-4e40-899e-260e3677dad4",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8d6cfd7a-7aa3-4f76-82b2-13b4cfb69dcb"
        },
        "item": {
          "id": "43ab43f7-5da5-49df-b18d-1f6eb07659df",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "640967b5-20eb-4c21-a8ba-c4aa95375ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203688ff-088e-479f-9d45-e85a4f8931a4",
        "cursor": {
          "ref": "b8b4059c-2592-45a7-89a2-c865a13d96d9",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b8536356-a8e6-4bff-9fe5-e023cb5ee9fb"
        },
        "item": {
          "id": "203688ff-088e-479f-9d45-e85a4f8931a4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cfb1df3a-808d-494c-b605-13f950ef1562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fae06d-b90b-4c5a-958c-b9264ba4c63a",
        "cursor": {
          "ref": "edf3e827-1052-4277-90c5-812a889b630d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "593eb36d-a274-4038-9d60-795d109c3e9f"
        },
        "item": {
          "id": "76fae06d-b90b-4c5a-958c-b9264ba4c63a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e48a70e4-b8b4-4323-a4a2-af77f464b713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360ea80e-9851-4ac0-bb2f-72ca43f9d630",
        "cursor": {
          "ref": "90ddd1a9-6436-4ccb-9d1d-2068919f6395",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f42e46b1-dee0-4e77-9810-122f6ec05ef6"
        },
        "item": {
          "id": "360ea80e-9851-4ac0-bb2f-72ca43f9d630",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7bc57ee6-5021-4ad3-b287-bffec41eb385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60941a44-69d9-43c8-bfdf-3a03fab309e9",
        "cursor": {
          "ref": "ce5e2931-b01a-404e-8a3d-47698c377b08",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "341fbe65-d762-4948-a3f7-cab5821da76f"
        },
        "item": {
          "id": "60941a44-69d9-43c8-bfdf-3a03fab309e9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e4f0958d-807d-4717-99e4-dfb28b41a929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be75388-a5e5-4143-8cd9-2876070c1177",
        "cursor": {
          "ref": "d660a7d4-6561-4785-8a1f-8203b3eeed8e",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5623e931-4567-469f-9812-7e38199aa7b4"
        },
        "item": {
          "id": "2be75388-a5e5-4143-8cd9-2876070c1177",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "564b23ca-5d68-49bc-9b86-ecc9538e6cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971da71f-d87b-4d54-b04f-28d05d9c90de",
        "cursor": {
          "ref": "9c57b04e-ba5c-46f6-a924-c94051c48929",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "defc243b-d3a2-47da-a30b-30ace6bf9377"
        },
        "item": {
          "id": "971da71f-d87b-4d54-b04f-28d05d9c90de",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "18d83f5a-31a1-4aa7-b635-a51c4b33914c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8d16c7-a348-4455-afe6-15ef6d8145b1",
        "cursor": {
          "ref": "5f80a406-c92f-45c2-aeaf-b8f36efdc803",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5e61c2bf-7f0d-46bd-8fad-d79a82cfbd5d"
        },
        "item": {
          "id": "af8d16c7-a348-4455-afe6-15ef6d8145b1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1a3cd1f3-ff2f-4724-b311-56156d5afef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d97387-27ab-4ec6-8f45-a5989c423b19",
        "cursor": {
          "ref": "d6412b3b-04f5-4ee5-bf0a-8e19cd5700fd",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "09f05e21-ee67-4d0e-afa4-5fbc4794fb5a"
        },
        "item": {
          "id": "e1d97387-27ab-4ec6-8f45-a5989c423b19",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3b272074-9889-4dfb-b4bc-fbb4ea1b8293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fad453a-e3c1-415b-b1f7-aeed51ae48b9",
        "cursor": {
          "ref": "80cba227-0586-46fc-8a90-24579f91e53c",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c32f5901-c7ca-4643-b1fd-7d9924227d8b"
        },
        "item": {
          "id": "4fad453a-e3c1-415b-b1f7-aeed51ae48b9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6a411722-2cc9-434d-a3ea-2e139728bc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3d16ac-8aba-40b1-b9ab-e0dda1f6f62b",
        "cursor": {
          "ref": "fe92d106-2bf5-4e79-99fd-7aceced8eb99",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f0d7158f-6479-473c-8fc7-d05db32cf6b4"
        },
        "item": {
          "id": "7c3d16ac-8aba-40b1-b9ab-e0dda1f6f62b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2f19e724-797d-41cb-8ac7-834be9820666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc408fa1-67ed-406c-895e-52f46e817780",
        "cursor": {
          "ref": "cf7796ed-2599-4671-8d55-96b7d3936770",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "029b6542-9805-441c-9995-62e6b7853493"
        },
        "item": {
          "id": "fc408fa1-67ed-406c-895e-52f46e817780",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c49d6d0f-02b4-41e5-9a9e-de87495fded1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f491e8cc-bf92-4900-9fc3-6782cb64f06a",
        "cursor": {
          "ref": "05e3be9b-93d8-4262-9b13-2e5020ff2cb7",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7f5b4e65-fddd-46cf-8b5c-a23440334175"
        },
        "item": {
          "id": "f491e8cc-bf92-4900-9fc3-6782cb64f06a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "30b115a8-aa6c-435f-b86a-c054a58101e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd84dcd0-c468-4bca-9fc0-08c318ca93cd",
        "cursor": {
          "ref": "8c18b979-cb25-4f19-a147-58965b5dc322",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1a8c6683-106e-4b03-9ea4-798129cafba5"
        },
        "item": {
          "id": "dd84dcd0-c468-4bca-9fc0-08c318ca93cd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "600e9283-6514-4205-a1ea-ffe711c6097b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99038510-61cf-491f-83fe-030e29c77b71",
        "cursor": {
          "ref": "54a88588-cafd-4934-bfd4-c666f3444d3e",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a4d0ee26-3a8e-4477-b39a-0fbc1d6be442"
        },
        "item": {
          "id": "99038510-61cf-491f-83fe-030e29c77b71",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "66e87ca6-ffc9-4710-98c4-e84e78d919d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de74010-b6d0-40b5-8abf-dab17835d906",
        "cursor": {
          "ref": "21c97298-424e-45dd-bbd7-1b75a0ce8c4d",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "070d803c-e788-486c-9fc4-745936e36446"
        },
        "item": {
          "id": "7de74010-b6d0-40b5-8abf-dab17835d906",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "63a26491-d02d-4374-837d-8ee46d143541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f540d71c-8c2d-4d6d-930d-a5a7cd818abe",
        "cursor": {
          "ref": "8ca33fda-03a3-40fb-a54a-aaba56c363d6",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "778c2b77-5d15-4d61-8070-537dca8d92ae"
        },
        "item": {
          "id": "f540d71c-8c2d-4d6d-930d-a5a7cd818abe",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "edff5b6b-225e-4a03-baff-329fe5347d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0ac9e6-d8db-4095-b862-6066b2726030",
        "cursor": {
          "ref": "23cd68bd-53b3-4375-ad51-5ffe117530b0",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c1c3e23f-e360-428c-a44d-6058108757bd"
        },
        "item": {
          "id": "9e0ac9e6-d8db-4095-b862-6066b2726030",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "33b5ce83-e46a-404e-b0f3-6927a32a0aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98111237-1d16-4594-8c38-feab15799514",
        "cursor": {
          "ref": "095b3fba-a103-407d-8b99-001edeb2fd8f",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "75acc8e4-ccd6-49e6-810e-4d89adb66991"
        },
        "item": {
          "id": "98111237-1d16-4594-8c38-feab15799514",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6c308cdb-a57d-432d-aa91-323025f94b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2beb2d-e777-407e-84d7-dca08660ab4a",
        "cursor": {
          "ref": "de0b30c2-447f-4178-804e-bf4688c31e3c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fd58ba83-e5f2-4a30-ac29-db69e999bb28"
        },
        "item": {
          "id": "0e2beb2d-e777-407e-84d7-dca08660ab4a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "07ff212a-8527-4c25-99ce-35a85cd60ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d29d9c7-af2e-4434-90d3-2e77ea221372",
        "cursor": {
          "ref": "eb8c0331-0435-4e1f-8154-a71326dba34a",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "36366dc4-ea0b-41a1-8495-3bfa157a06aa"
        },
        "item": {
          "id": "7d29d9c7-af2e-4434-90d3-2e77ea221372",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5201360c-8749-4a31-8430-20d94929bd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673d519f-ce7e-4600-b552-38f18f598067",
        "cursor": {
          "ref": "2ce317e6-f3ca-4549-acfd-51fa5e8a51c2",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "eec7117b-5a7c-45fa-82c2-04ef1dd50ec4"
        },
        "item": {
          "id": "673d519f-ce7e-4600-b552-38f18f598067",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b90a434e-e67a-4b0f-b813-db86059c8354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7b9933-1b28-4c24-893d-134156f55ad4",
        "cursor": {
          "ref": "d749ad41-4fa8-4dcb-a640-fdb841e72039",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "80f78d7b-8e9e-496c-8078-527ff360ad1f"
        },
        "item": {
          "id": "2d7b9933-1b28-4c24-893d-134156f55ad4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c0bced3c-5aea-49e0-8726-650d4c8996f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31de7c4-9a6e-47c2-8991-94ebaa115111",
        "cursor": {
          "ref": "ab59187b-ac61-41b7-acd7-53c8d9188ad3",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "863fa96b-97c4-455a-8a17-35acb13a4f66"
        },
        "item": {
          "id": "e31de7c4-9a6e-47c2-8991-94ebaa115111",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "87db8c89-4d0f-4022-9524-4f0a25c0c323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d1c30d-779e-4e6b-9120-46e907e3f8ae",
        "cursor": {
          "ref": "34dffed0-02ac-4002-8fed-6ecaf5d934e7",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "992df331-73dc-4bda-9746-ce6847e86ca5"
        },
        "item": {
          "id": "22d1c30d-779e-4e6b-9120-46e907e3f8ae",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "07640ebc-8a7d-4a19-8f34-a6b017cc8d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774e17a7-8a79-40b9-b1ef-c6dd382732cf",
        "cursor": {
          "ref": "e30e9958-5bb3-44aa-b5e3-2249351ee51a",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d4b308f2-6828-47df-8f26-a5793dd5cb86"
        },
        "item": {
          "id": "774e17a7-8a79-40b9-b1ef-c6dd382732cf",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "db266792-07c3-4ca2-9b54-0790e715337b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d133c5f6-de5b-4343-b32e-9eefb0abd51f",
        "cursor": {
          "ref": "150e3f50-18aa-40d2-b730-5f0271d1c5a0",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e46844fc-54d0-4f3e-836b-86aba2861cd9"
        },
        "item": {
          "id": "d133c5f6-de5b-4343-b32e-9eefb0abd51f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bcb1f532-414f-44b7-9438-47c0bfa0e9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecf35c6-c507-47a1-9f5a-9f76780dffc9",
        "cursor": {
          "ref": "f7375ad5-0edc-4c4f-927b-5675f68500ff",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b0ce4cfc-3948-41c3-b1dc-a532965baa52"
        },
        "item": {
          "id": "8ecf35c6-c507-47a1-9f5a-9f76780dffc9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1d5cc8f5-f704-4645-b29d-cea503245b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1362f555-880f-48cb-b912-139681683d22",
        "cursor": {
          "ref": "b532bff4-a8a2-4ea4-9519-cf86f2788b0f",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "51cced57-634d-4fd8-8290-fa8e0faea75e"
        },
        "item": {
          "id": "1362f555-880f-48cb-b912-139681683d22",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "896865ee-1372-4aff-80d9-1b1330c37646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43281cdb-1c88-4245-84da-873fc6d9205b",
        "cursor": {
          "ref": "4cca569d-1299-46ae-9cd7-3256dbd2c5bb",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "496aabf1-016d-48e6-8dc5-91764c8bebec"
        },
        "item": {
          "id": "43281cdb-1c88-4245-84da-873fc6d9205b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d8bce813-5254-4897-a278-53fecca87980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd36a3e-6202-49af-af03-33c243f3abb4",
        "cursor": {
          "ref": "6179d76d-4476-4c6f-8910-d3bdcee558fc",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "56faadca-4cd4-4c1d-b953-fbb552332580"
        },
        "item": {
          "id": "ffd36a3e-6202-49af-af03-33c243f3abb4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5b68cf7d-344c-4fd1-8c53-e0c8849d2633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4eaea8-4b7f-458c-a93a-ee8990d80a40",
        "cursor": {
          "ref": "2bb22bf3-c80c-4760-8bb4-fb97aca7df20",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "51b842ca-44ee-41a6-b3a4-73425c31d510"
        },
        "item": {
          "id": "bc4eaea8-4b7f-458c-a93a-ee8990d80a40",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ac50e211-2d7f-4045-ae11-a964348b3899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e21d7d9-6f0c-44eb-b4a8-82289f7ff572",
        "cursor": {
          "ref": "7e0442eb-c6d2-4d36-b908-3b877cddc650",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9955c57c-63cd-4742-ae18-eeec682f5654"
        },
        "item": {
          "id": "7e21d7d9-6f0c-44eb-b4a8-82289f7ff572",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "662e02ae-f827-4e1b-bb10-7c8f6686b1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3054ea6-de9e-494b-9b3a-2100097333d2",
        "cursor": {
          "ref": "2e1affd0-0868-4639-b0ec-78f7af8b269b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3a1c6459-1ccd-4242-9d90-0118300177eb"
        },
        "item": {
          "id": "f3054ea6-de9e-494b-9b3a-2100097333d2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8ede08a1-dc36-4c83-a266-87ac2f51b78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7e7d2d-5394-4e8d-8182-6c103e24f100",
        "cursor": {
          "ref": "c8582441-870c-46f9-938f-3a70ed8875b9",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "91e3e6f3-5e04-445f-8650-e84f9b45dd44"
        },
        "item": {
          "id": "1d7e7d2d-5394-4e8d-8182-6c103e24f100",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b0699b04-0315-4590-98c9-e7c2ebc5683f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb85093-236e-49e1-b2be-b89552658e86",
        "cursor": {
          "ref": "0de125b7-1ab7-4b9b-9c54-f8ca52d33252",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "379a4722-9d32-42c0-a986-8fd610ea84e7"
        },
        "item": {
          "id": "2cb85093-236e-49e1-b2be-b89552658e86",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3167ec5e-bb50-41a9-b179-7dc9cf010138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2ffe05-c94c-4ef9-85ec-bf241bab7f14",
        "cursor": {
          "ref": "0462518f-14d8-413b-b8bf-0bce84d7a5b4",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "72be9be5-c1db-48c3-8fd6-1fcb6ba5b2bd"
        },
        "item": {
          "id": "4d2ffe05-c94c-4ef9-85ec-bf241bab7f14",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f2ce8645-f8bd-4ba0-b05f-4938ac6f8b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4f7ca2-3455-4540-882f-0abaa69c506a",
        "cursor": {
          "ref": "52a25127-22cb-4dc9-b07d-7fa3cddf623f",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "00c57d7c-9d74-46be-a1cf-d2fd9d685993"
        },
        "item": {
          "id": "7c4f7ca2-3455-4540-882f-0abaa69c506a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bfdde46e-a9fa-4324-8354-e7a94b4161dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa4aeab-5b13-4ba9-8c8d-39b77175d29e",
        "cursor": {
          "ref": "9a691bc4-71a9-4b87-857a-53115b7d555c",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8972cc10-1c9e-4500-949d-5709a2447fd6"
        },
        "item": {
          "id": "dfa4aeab-5b13-4ba9-8c8d-39b77175d29e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "307af81e-14b6-4f9f-9216-d21db7d1f99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad0ffcd-9f7f-45c5-bd9c-01e8981f3a7f",
        "cursor": {
          "ref": "43dfd16a-ac42-4df9-9551-f305376f4fb4",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1d9118cd-f810-4bbe-8cf8-73279272ee86"
        },
        "item": {
          "id": "bad0ffcd-9f7f-45c5-bd9c-01e8981f3a7f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2212a322-beff-4783-a3f1-2f90365b621f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d914c79-5f0f-47da-ac6f-b98a43b5478b",
        "cursor": {
          "ref": "110411c8-4dc3-4607-89e6-5db9da25fe85",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4138a06b-5127-47a6-a93f-bea866382c8d"
        },
        "item": {
          "id": "7d914c79-5f0f-47da-ac6f-b98a43b5478b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "78e3fb10-d257-4245-89b8-7f2e096fb05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2c4e44-3853-49c0-8d5f-9935fd646137",
        "cursor": {
          "ref": "f1a06893-1908-4284-a584-058f28dc22b1",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d32b807e-e902-45f8-ac11-7231fca05f1d"
        },
        "item": {
          "id": "9e2c4e44-3853-49c0-8d5f-9935fd646137",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5b8a3bbf-f9e4-486f-9d6f-3d1bd911b217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ea88dd-edec-42ea-930f-b80daeec0cf5",
        "cursor": {
          "ref": "615c5ca4-58b7-43d3-a9ab-9ac7ccd93d0a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6ad33017-8f08-4d70-b73e-d7f4d9b12be4"
        },
        "item": {
          "id": "91ea88dd-edec-42ea-930f-b80daeec0cf5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f4f906d0-5324-4872-a17c-0e8a7c56a1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b326425-6942-42e6-8106-95a4853683f3",
        "cursor": {
          "ref": "0bb55295-444e-47a3-a892-7525d68e4c69",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a04853ca-c705-40d4-a67e-ae98a7d0de31"
        },
        "item": {
          "id": "5b326425-6942-42e6-8106-95a4853683f3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e3690327-cfd1-48ab-afa7-32a589720c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9347b8-68d1-43c7-a2cf-2bbc19f1626e",
        "cursor": {
          "ref": "996aa1db-7f3d-44c8-996a-8dbfad27b3fc",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6076acc6-e140-4770-85ca-02c1fcae8ef0"
        },
        "item": {
          "id": "ba9347b8-68d1-43c7-a2cf-2bbc19f1626e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3ef59b1b-1a29-4062-85a2-ac0a884c141f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975552b2-94a0-41a5-b8ce-8ad4119d4c4c",
        "cursor": {
          "ref": "872223e3-6424-41fb-9fbd-b096feff9645",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d250c5bb-2a8b-460d-9351-26d573e4f1d0"
        },
        "item": {
          "id": "975552b2-94a0-41a5-b8ce-8ad4119d4c4c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c2bee802-28fd-42df-903c-3b198d02ed26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8766079-2cbf-490e-ba0a-c92a6938c56a",
        "cursor": {
          "ref": "10d6e29a-efb5-4b14-8fda-2eaa2d46ee6f",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5802560d-dbf9-4b11-8703-5b7d90d0aae1"
        },
        "item": {
          "id": "e8766079-2cbf-490e-ba0a-c92a6938c56a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "380576e9-478c-4bd5-9ad6-8b66d7663455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c64ea0-fcd4-49e0-8a49-adde8171b04c",
        "cursor": {
          "ref": "2d75a6fc-9ee9-4a4c-ba6f-349d1f3eed06",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "506f626d-496d-4a3c-8586-f69770f1d417"
        },
        "item": {
          "id": "64c64ea0-fcd4-49e0-8a49-adde8171b04c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "47577965-6d7f-4ca2-8a4d-966a5264544f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209957e3-a557-49e3-b65b-422be87bc18f",
        "cursor": {
          "ref": "42dbcbc7-c52a-4e93-845e-99a6c36ac15f",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d5984672-0cff-48bb-bcaa-8b29aec0d383"
        },
        "item": {
          "id": "209957e3-a557-49e3-b65b-422be87bc18f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f935a08e-eb36-4102-9352-590a4d0c4a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b89a2be-0594-4d92-9a2c-6c758f08ef3e",
        "cursor": {
          "ref": "564d6983-134b-4ffd-9048-7277f62ab1b8",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6e51949a-51a1-44c3-acf2-2c2adb7801c7"
        },
        "item": {
          "id": "8b89a2be-0594-4d92-9a2c-6c758f08ef3e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4c42c43e-b34f-47bd-b093-5e22f2dd4720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9410432d-f854-471a-a931-2236f552879f",
        "cursor": {
          "ref": "d1339a9a-16b2-4932-b965-02c52cceb9bd",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "43b54772-39d9-4b1a-8e42-c40fc2b9fa14"
        },
        "item": {
          "id": "9410432d-f854-471a-a931-2236f552879f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "db81a362-40ce-41d0-9665-b5725d7a498b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08449442-50dc-4e5f-9999-f795d28407f2",
        "cursor": {
          "ref": "ac7dde27-a552-4c5c-9496-c227032121df",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "919af497-a0e9-4edd-8cce-68db3eb94ff7"
        },
        "item": {
          "id": "08449442-50dc-4e5f-9999-f795d28407f2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "30930526-3fe7-4fc8-a681-e16c673106fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4e489a-719d-4220-a49b-7e0d40fc3650",
        "cursor": {
          "ref": "410280d8-4f7f-474b-b53f-8b3fd36af341",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "23cfbb94-1851-4d15-9bf7-eaea50d40b91"
        },
        "item": {
          "id": "bd4e489a-719d-4220-a49b-7e0d40fc3650",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "39870b73-a6b6-423f-8907-f5e6c5148507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9638b59-a663-4d11-ad08-b912986943f7",
        "cursor": {
          "ref": "a2ebd916-2467-43d8-a059-d0e12caf658e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "225670fd-eec4-4502-badb-e0835af2344d"
        },
        "item": {
          "id": "f9638b59-a663-4d11-ad08-b912986943f7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "58c9c1c4-97a9-4239-b27e-a736b1351a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1300940c-c666-4001-bbb4-c7fec8b36313",
        "cursor": {
          "ref": "4a0d72ce-7609-4adc-81ba-fb323400f140",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d889af9c-984f-4257-940e-44f0bb2f3911"
        },
        "item": {
          "id": "1300940c-c666-4001-bbb4-c7fec8b36313",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6c94fce2-7990-4f4e-b403-a3e77fc07ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1594253d-8482-4865-ab67-3748c23d9567",
        "cursor": {
          "ref": "1a84a0e2-f8f0-4736-81ee-2af4b99f6804",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fce872aa-23ca-4287-b2c9-5fd847573ce8"
        },
        "item": {
          "id": "1594253d-8482-4865-ab67-3748c23d9567",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d0eb232b-0b71-461d-bc6b-0fdefc020821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74e2e0d-0252-49bb-998e-53b41f7fd125",
        "cursor": {
          "ref": "88db1835-139e-4d05-9002-bbf8dc4853aa",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "92878193-336b-4b18-b284-fb18c6b48b20"
        },
        "item": {
          "id": "b74e2e0d-0252-49bb-998e-53b41f7fd125",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dbfc780c-e091-4dce-80e4-462fc549b337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a889980-6c2a-43ec-876e-ee4c044eb660",
        "cursor": {
          "ref": "02d3f700-2a19-4d08-adc0-2a053f86524f",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5c1f14ca-d4d3-499a-93c1-a45306575077"
        },
        "item": {
          "id": "9a889980-6c2a-43ec-876e-ee4c044eb660",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6e5cdd86-743b-4b87-ba42-fc2fc647c62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f91de22-fa9f-4849-95fe-c083b0a9a534",
        "cursor": {
          "ref": "878389a2-4069-40ab-866c-7d7586e478c0",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "590ef082-b446-4db6-9def-06b13046ca45"
        },
        "item": {
          "id": "3f91de22-fa9f-4849-95fe-c083b0a9a534",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2838b1ff-38e8-44c4-8559-872ea517429f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4a0f46-15ac-4db1-b8b0-56ea1a92826e",
        "cursor": {
          "ref": "deda872e-eeba-43c5-ab4e-1c6a5dc1732c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2e278551-8482-43bc-9dc9-4ffa0f2ccd26"
        },
        "item": {
          "id": "ec4a0f46-15ac-4db1-b8b0-56ea1a92826e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "955d4ac3-e4fc-4b7f-92c3-2f31a5cc647c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0713e9bf-ce9c-4c27-a3a9-beed0b6624e4",
        "cursor": {
          "ref": "0a86eb03-a23a-49cb-9139-d52dd99e9e05",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "38560381-ca1b-418e-b8ac-5f4b81bf4a9b"
        },
        "item": {
          "id": "0713e9bf-ce9c-4c27-a3a9-beed0b6624e4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6d62e085-eb56-4997-9f7b-60d36793246c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf038069-899b-4132-9c84-4347ce7a640a",
        "cursor": {
          "ref": "34b1ee5b-ce83-474c-b2ec-fe02df5d929e",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3d75bc0b-8cf8-4588-b001-76f3cb24beba"
        },
        "item": {
          "id": "cf038069-899b-4132-9c84-4347ce7a640a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cea4c4fc-4939-4655-97ab-fc5d896cf9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c872f11-d8dc-4c8c-b09d-df79c0a39cbf",
        "cursor": {
          "ref": "e045fe52-e013-4583-90bc-330d11c5168b",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8e0ad7ee-af60-4b76-a18d-4b2ac90f42d5"
        },
        "item": {
          "id": "3c872f11-d8dc-4c8c-b09d-df79c0a39cbf",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "adabd332-7bb1-4184-9332-443db36919bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144489d0-3432-43c6-8535-db04a37fbf92",
        "cursor": {
          "ref": "7a787407-4815-4491-be22-5045890c97fc",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a15d9c0a-d409-482d-8104-31c17035b2a5"
        },
        "item": {
          "id": "144489d0-3432-43c6-8535-db04a37fbf92",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "20e8064e-3fa5-47b4-ad4d-b76aed083294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bfcf22-aa5d-498d-8700-3b24f00f5db9",
        "cursor": {
          "ref": "bd730666-bfe0-424d-8fcc-9cb086e0adcf",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "07c94847-d0de-4bbb-a224-7c46a4ef8278"
        },
        "item": {
          "id": "c7bfcf22-aa5d-498d-8700-3b24f00f5db9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4fc72b25-03eb-48ff-8cbb-7dc90af3ff58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53dce15-2b3b-4e29-8e78-c4ee16402d0e",
        "cursor": {
          "ref": "18dda54f-86d3-4e49-81a6-c8d0d613d024",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5b241aad-00d5-41a7-97fc-bc05c9eecbfe"
        },
        "item": {
          "id": "c53dce15-2b3b-4e29-8e78-c4ee16402d0e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "49d5fd17-79be-4030-a75d-ab05fc6bc3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1061e9e-570b-46d8-ab7e-6b9d67452dd9",
        "cursor": {
          "ref": "92dbc5a5-3af1-4e8a-b5ca-20542439487a",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9b8bc061-280e-49cd-9079-52790a5a57e9"
        },
        "item": {
          "id": "f1061e9e-570b-46d8-ab7e-6b9d67452dd9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ab39df18-e054-4c16-92ef-94dbad4cd150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad886105-e65f-43b5-80be-044460ffca9a",
        "cursor": {
          "ref": "eac693b7-f045-4536-999f-c24ee6ea3716",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "79a40b03-d066-4971-a809-c3b3d8dbfe6d"
        },
        "item": {
          "id": "ad886105-e65f-43b5-80be-044460ffca9a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5c959a7e-a753-4612-acda-7ab0aaae545a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72b6c09-aa9b-4f61-90be-519cd0b7808e",
        "cursor": {
          "ref": "4af0dbfe-56b1-46a5-b86d-252ac417856a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9a5b6982-d4b2-4a3e-b8e1-8a4112fc87f8"
        },
        "item": {
          "id": "b72b6c09-aa9b-4f61-90be-519cd0b7808e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "53a9a08d-6689-4d2a-ab90-726d25137a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fb74bd-66bf-4596-adac-70223614866c",
        "cursor": {
          "ref": "06032a20-da79-4689-ad9b-982648eb625b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5d3c5018-189a-4ae9-b286-d67248685ea1"
        },
        "item": {
          "id": "99fb74bd-66bf-4596-adac-70223614866c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4a1c69a0-020b-4d22-831d-3e7811330d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6898a4ac-6a00-4e1d-9e18-baad7d56ea60",
        "cursor": {
          "ref": "53033086-c12d-4631-a3fb-86f8d1f62878",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "336060a5-cf9a-4ec1-afe7-a6a985cc3413"
        },
        "item": {
          "id": "6898a4ac-6a00-4e1d-9e18-baad7d56ea60",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "141638c0-d209-471c-9c86-a9c874917a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03674886-772f-4423-bb73-7a6ea7c8821e",
        "cursor": {
          "ref": "de27a321-6014-4698-b903-71bc447856dd",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5b458ee1-c06c-484e-94d2-d69b9a296f29"
        },
        "item": {
          "id": "03674886-772f-4423-bb73-7a6ea7c8821e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e464fdcd-2e01-41ec-a56d-03ea46e4bf5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ece1d05-9198-4d13-9fc7-16ca2f3514a4",
        "cursor": {
          "ref": "94a2e225-3ae2-4c1b-9937-9e049383be0a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9d7db829-1c41-4357-93c7-c28368cb8a10"
        },
        "item": {
          "id": "7ece1d05-9198-4d13-9fc7-16ca2f3514a4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "abd8be9d-46be-4892-b3f4-47ef8e480c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07ffa3b-75e7-486e-ae68-806d0defc3ad",
        "cursor": {
          "ref": "6ef3473b-964b-4d39-bc24-daf7bfec8257",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7f113f69-13aa-40ef-aa16-6a6f18e7a74b"
        },
        "item": {
          "id": "e07ffa3b-75e7-486e-ae68-806d0defc3ad",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "723eb5e0-e536-4415-ab53-a8eea6589ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8856792-e68a-4572-babd-546d30b15845",
        "cursor": {
          "ref": "ee0e5d19-a70e-4715-bc9b-30a3f4244f8d",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "050d7a39-3c11-407c-8adc-a4fdd2fdf930"
        },
        "item": {
          "id": "e8856792-e68a-4572-babd-546d30b15845",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "96657172-0a1a-45cc-92f6-2ce815f4f912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eff525c-22cf-4c6c-8451-ff7bbc58c2e9",
        "cursor": {
          "ref": "17f0dc78-205c-4841-b8da-2e7df743f23e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "59566550-bb79-4f7e-ab71-67b7c16b0dbc"
        },
        "item": {
          "id": "3eff525c-22cf-4c6c-8451-ff7bbc58c2e9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ee1e9620-6439-419e-9cd7-78ff169ef837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fa300f-2a84-4ad1-8c2b-6f514762418a",
        "cursor": {
          "ref": "37c65dc3-4476-4816-89e2-deefbda8441a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "68768fbd-e74f-41b6-9966-501d83a3a5f8"
        },
        "item": {
          "id": "36fa300f-2a84-4ad1-8c2b-6f514762418a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "13bde982-560e-42a3-a759-0813a4c8b8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6813a7-1432-4b9c-8ce1-d2c44cd262ed",
        "cursor": {
          "ref": "21dd205d-5cc4-412c-a47a-7a031b4c239c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f9cffd8f-ceb8-4482-8a19-caca522ea321"
        },
        "item": {
          "id": "9b6813a7-1432-4b9c-8ce1-d2c44cd262ed",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "72f66bf5-2963-4101-8e38-895d8b8e60f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539468f4-509b-4af7-b1a7-f5c04284376f",
        "cursor": {
          "ref": "e0644348-47f1-4f1e-b3cb-451e1d64bf70",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "541005f5-857a-4e6f-b5d8-3237e56a4139"
        },
        "item": {
          "id": "539468f4-509b-4af7-b1a7-f5c04284376f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d7649af1-3ad5-4626-bf0a-613ed176da59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6159682c-a81a-4833-b1e5-060d00d49439",
        "cursor": {
          "ref": "b61cfe6d-2457-4687-ab35-0c9b703ca6cf",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a6d06b2a-0c41-4c1e-9678-c5f3e27d99f5"
        },
        "item": {
          "id": "6159682c-a81a-4833-b1e5-060d00d49439",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "779d20bd-e55b-4c72-8825-b67c27d3b62b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f68db39-50e3-45ef-ae6e-7653c670c646",
        "cursor": {
          "ref": "0659a1bf-6d3d-4c0c-b6be-a9cd6998f85a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6799d624-4a5f-42e8-94a9-a0fd65a25135"
        },
        "item": {
          "id": "6f68db39-50e3-45ef-ae6e-7653c670c646",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "84547440-b0d0-47b2-a7de-5d759acee8ed",
          "status": "OK",
          "code": 200,
          "responseTime": 2139,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "448b5bb2-8c21-4440-bf79-119e6c4947ea",
        "cursor": {
          "ref": "cc2914f1-d5e2-43a3-b58d-36b6ebf2899c",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f2f9e0c3-f842-48ee-801f-485ed9a573fb"
        },
        "item": {
          "id": "448b5bb2-8c21-4440-bf79-119e6c4947ea",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9c175672-85fa-44cc-97b9-228db5b96975",
          "status": "OK",
          "code": 200,
          "responseTime": 2571,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6981e993-7ff0-4a72-aba5-a1068f0307dc",
        "cursor": {
          "ref": "6b5284de-c1b3-4878-b724-5956ad93609a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1073c63d-1152-4d13-91a2-dd299d999be5"
        },
        "item": {
          "id": "6981e993-7ff0-4a72-aba5-a1068f0307dc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ba9ce93c-32d8-4316-8fbc-775138e8dc78",
          "status": "OK",
          "code": 200,
          "responseTime": 2397,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b698b1d9-2b45-47db-9c5e-0c5e52a5c4b8",
        "cursor": {
          "ref": "7836c32b-7a98-417e-99a5-42274213f340",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "42fdef24-d64a-41e6-9270-d01d8de8adf7"
        },
        "item": {
          "id": "b698b1d9-2b45-47db-9c5e-0c5e52a5c4b8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a9582e48-40cf-4f05-8920-1def1f4d1d32",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b698b1d9-2b45-47db-9c5e-0c5e52a5c4b8",
        "cursor": {
          "ref": "7836c32b-7a98-417e-99a5-42274213f340",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "42fdef24-d64a-41e6-9270-d01d8de8adf7"
        },
        "item": {
          "id": "b698b1d9-2b45-47db-9c5e-0c5e52a5c4b8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a9582e48-40cf-4f05-8920-1def1f4d1d32",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4714f7ac-70d7-46b1-ac07-356d39af6699",
        "cursor": {
          "ref": "c1772d07-c267-4d42-82f9-737f0e6ad1a8",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4e0a1671-6c74-4237-9dce-e96589ee1605"
        },
        "item": {
          "id": "4714f7ac-70d7-46b1-ac07-356d39af6699",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2a513fe1-9f96-4cd1-8bd2-9a11feab4ce9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3055da4a-013a-498b-98b9-532e8db1e374",
        "cursor": {
          "ref": "3d4ecade-1379-4eec-a054-40e899ca5d38",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f5bea30b-dd8d-4296-b7eb-a9936fbb1678"
        },
        "item": {
          "id": "3055da4a-013a-498b-98b9-532e8db1e374",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "35b57bb3-1b1f-4919-9e6b-160ff6516120",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}