{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0c7cc3d5-a4fe-4c9f-b737-0299f6daa072",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8e491559-20ff-4fdd-bc20-6d401bb06975",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9912327-19ef-4b9f-9947-647218985426",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1d6df4a2-6678-44fd-8c92-b17436a10a7c"
                }
              }
            ]
          },
          {
            "id": "90a5fd14-797f-4e96-955b-477665a883ab",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e3b90395-8801-458f-aa3e-167463f34b57",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b737a857-1df6-4cdf-9860-10e02942e05e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bf04850d-9a22-44f3-8215-26f69e72865f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a8f84193-62fd-4c37-86ac-b0bde3db846b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eb90f0e5-972b-4f5a-96e5-deaa4b2057d6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd6db62c-0ce9-4d56-90cd-926dba6197f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1fe3b3aa-ad63-49a8-8a1a-411695fa55f9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c0582327-72db-43fe-8488-be70f5022ecb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c6db3b2-298b-42db-a0e5-ce0fa1a48e51"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "236493a3-237b-40a2-bb33-7ecf6fe8cf09",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34d6e09e-0ab0-4318-9222-be522110e03b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46dce263-8c8d-411f-a76b-c746a6d68584",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a0e47239-e92d-42bb-b2f9-ed2d13a5725a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "771cd716-ed32-4ecd-a90c-36b844db4ba9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6487bd54-38bc-46d1-ad09-378755899781"
            }
          }
        ]
      },
      {
        "id": "ab965f79-5363-4843-832f-e029837ec9d1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ddcd1750-6b9d-41e5-bb52-9f7e53086b11",
            "name": "Negative Testing",
            "item": [
              {
                "id": "320196af-a94e-4fec-8f44-7f2e17b4e77b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1cc8480c-eebe-4d9e-b840-68d4ea537a09",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a5e5af-18ac-40fe-b3e3-1a52e7e90750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9498969-a43d-4ff2-aa55-560bbd648808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8597c95-4cc6-47c8-8a63-a0f944831f0d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fea40cf-3f16-4fed-98aa-61432d20df1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03e5230d-c173-41bf-b9a8-365f28bef783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0fa25a-f898-45d8-8089-d65fc5426fe5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157fa625-15bf-4e84-816e-43fe81159afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aadf81e7-bcc4-478c-a793-be85938bd68f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9b2ea916-6b1a-4ce7-9b71-06fe128cf7fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa7fa8fc-41d6-4fa2-ae24-90db43a0138e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba65176-354d-42a5-938b-9620c530e8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b772dba7-06ab-4a7f-b2ae-67ccf7dcc4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ae296f-729b-4491-b15a-5a42e2e705fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d45509-ebbb-4462-8855-aa886976527e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "11274d97-2639-4cf5-8049-ea1a67fd15b8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e9b04845-c047-46ee-af73-3bc91cbbfa3a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59fb795e-923d-46ae-9279-55eccc0a6424",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "32d4d829-fc4d-460c-9256-0f6628588e7b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6f8e19f-4378-4a5a-b8f5-fbbb4fbcb90c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b554ec39-2d50-4719-98af-e3e7c602b428"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9bc031fe-a487-4ee2-b3b8-eac6f116e78c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d018c262-f8d1-458b-8913-e7e0b23d377c"
            }
          }
        ]
      },
      {
        "id": "b2b275a6-7cc2-4fa0-9d36-48eebd8612de",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ed20441b-9a9c-4ca4-b4c9-7a8419ab53f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1c51c80-c032-456d-95c2-b1bfa7540e6e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5ab3aa11-1227-4be9-a815-6db0fa4ae60a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05081360-2f88-4ceb-8727-0da0c30e0b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a619f1c-e8b3-437e-843f-98e3ffc10bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b84bbb-d9fb-4071-b6c8-1ca940b0c7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7b1622e-b9b4-458f-ae54-72f78b5d6fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4097d8a4-ba88-4b98-8991-4f01649ffcb8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59ab2e2-e243-4818-9d1c-5a96310eaa3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32bd68e-0839-42f6-9bc2-648b915e5022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed38ecc0-70cf-4d18-a997-a060d3ce6c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74213e0d-a953-44d1-ba9d-04f1a4c4458f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d85ec4-c1a2-4a80-9312-be423c9bc0e8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44e0050-a74d-402c-af1e-e2b06c5bab4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbbb02f-438f-4ae9-998b-6dc1888ad858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd6cad8-3c4e-4766-9aad-d518d6d56224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a97bd638-f8fe-4fe5-bbc7-81ea68960d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ae8601-1257-483e-80fb-ca7865241a1a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deda0436-a218-4a9f-ad0d-8c54b9cb9f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc96ceb-4228-45ad-abd7-d8aec334867d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bca4073-0c38-40ff-856c-5379bb646cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b73cedc0-5a86-4e7b-8208-50c2f8b387c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799fc81c-55c6-4c63-8ab4-5ec4651d59ff",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148e2925-1a37-4ae8-87cb-f28769f2bfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2894cf4f-a120-4c94-b3a6-93e1e9eda699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71313db6-2f49-433d-9753-f895aa828451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef85e1e2-75b7-4510-af3e-c05a89566b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c29cacc-2c5a-4f25-9b4a-de45fe1bcafc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b280aa-58f5-4d9b-8374-2283f0dff5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7b9f62-290b-4b3c-b127-dbe9c75468ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472dec05-0f7c-46e4-92fe-b88785b10fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a29a4965-8300-4225-b0d9-62b8000cb9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd832c54-d9df-4b1f-89bf-99d501c5781d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d867ce39-95bf-4287-abeb-2551071648d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a5c3a2-b29d-40e1-a3be-fc8356d606fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0820ea-e8c4-4e25-8629-e46611b9a363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f90e8a5-9b12-4ccb-9057-4a4b48e37e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf78cf93-209f-4234-a3ba-d9600a6e1dfd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8f9b1f-64f1-40a7-aa91-1aad58b3c851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384bcb95-9c1f-4b19-8316-3cc0ec50d978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a493581-8147-4f16-9aa6-1418689aec10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27c3835a-1dce-45cf-bed5-549cdca39ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42d5f25-d16b-40f8-8324-31f3f03d4e57",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436314db-6254-4613-8d18-b0a62034b818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957d14c4-f2ee-4f5a-ad52-3f4ed758e0be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ca720a-2b75-4398-aacc-1f2619393079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f5b673b-b49e-495b-a08e-ddc9c8f5ce75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a805f3a3-b24c-45f2-b6c2-e4c3ae234b4f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7efdd9b-e0db-4605-b3dd-847345278cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4707ee-2783-483f-b213-fbed23fec886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ceecfd-9e3e-424d-a9b6-f9bac321a30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd5c1115-18e3-4d3e-8d81-c411818490ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d025f4-f714-43c9-9ee7-53c9ec03bed5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5961bc9a-85c7-420c-9dcc-b50dec6d5d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4a0ca9-ea88-4efb-a52e-c1b8b731117b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c06ad9-4973-499f-9830-f4b2b26d0396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c43729c-3782-4a60-9332-d6b28db5eedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19314251-16ef-4227-b33a-fd44d524b438",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0321d221-e035-4e2f-a0de-878830db68f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff36f47-088c-489b-902d-e623d5cdd090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1569e12-d4df-4c6e-b722-4d7a0a933f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "598315c9-5dfc-4594-8c6d-50504a1cfaad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52dac433-ab54-4039-809f-4498e984abac",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716fc525-d0d8-4f99-b41f-dda071a4166a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22fa4af9-d9f4-4818-828c-7238f56d17fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7835b473-1bd4-4326-9efc-925bf856ef5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8336b76a-7554-487a-87ca-d08001834490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77814e2-6020-47dc-9d9e-6fd863d48b16",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3eb15a7-d6f1-49d4-87e1-e45c3d0b6044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254be2bb-fbe4-490d-aeda-a29d9264a983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac7b620-356f-477e-b20f-3b4873c2ce2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "980c46b4-4c91-4d7c-9ecf-e58f79b3edc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913d9b88-b1a3-4914-8132-be1b635f4f1e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e282f8fd-ea48-451d-ace8-a17bab064c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b8f6cc-7a9e-4cd4-a2f6-a3de1f3f750a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f326bca-9460-43d4-abb8-84ae6514c50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c42c3b3d-0219-49c3-a6a4-51f5b64be49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2dcc00-107a-4b58-a845-67543940e5cb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd89d58-9033-4d13-8741-f301a6d91d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa648e5f-c85b-4c32-8e80-2e62b98cf753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cecd5c0-300e-456c-82fd-f871d97947be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21b580b7-886d-4f97-9e22-e80ba4810312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec224c7-8c8e-498e-84e1-b1cd85d4ba75",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4f722a-eac3-4524-8b17-00f32b1510a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1354660-11ed-43b1-8dc0-3f67c5666baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b966e6a7-ed1a-4d75-8b46-3b4fdb0c9652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7e2a0ec-d9c7-4a38-b64c-53f0c5beed36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a295d4-b208-4d21-a622-b6323b8bd3c4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fad470b-f35f-445c-9cba-6e41940a2ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91609f89-6c45-458d-8363-a4d12e9b003f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e95f2d-6ae4-4a2b-bc22-27e3f164dd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1a32f7-bf30-4c7f-939e-c582896edef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c71e7c-5b3c-4ede-b43b-2de478c9a0cd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9793522-59f3-4ab7-9d2b-946df069cda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c59eac56-2227-4495-883b-e75d6d366630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44908087-0be1-4089-8c5b-52b1ccbca433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2486bf5-528e-4707-b50d-3b46e5377d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16181d4d-1f50-4524-b081-0841bd25848c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec08b7a-c38d-401e-9e8d-9004e7bc067e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cba098a-bd3e-44d7-b4c7-a334d55ebd3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a02ce04-c49f-4db7-b0b3-9f2c5b8dae60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "142c38d7-b1fe-460f-a299-041a1d36be04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96c249a-38bd-4114-9d94-3cf853611a61",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c74788-ecf7-4708-bd1d-d2dbe235d134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a38639-b719-4284-93e3-5a9f85642188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4887ae4b-94b2-4a60-bf29-5a0c33aa3dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19f05e30-58e4-4f5f-bf3f-b8be957a8b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8247e8-f6a8-42fa-b6da-b7beb7d0f80f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bae019-efd1-4575-a9fe-416cb728f1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a70bdc-e0c4-49fd-af11-b8bd7a13452f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454d6701-4bbf-41e0-ae9d-095b37fe855d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a89317e-9829-4713-a2f0-869e8f19ccb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cb0009-b0fb-4a86-a45b-1dd91417ccb2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89128b68-b1a6-496d-8907-8c026bcd339c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df41b739-77bf-4c6e-b379-f45bb495b2b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3190a0-6a0c-4f07-8c66-02942d0ad9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5546a3f5-02f5-4c41-bf50-fbb66f62b4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7c52f4-cba4-41c7-a170-ec07ce8925ca",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38107e5d-eed9-4878-93b2-21e0899916fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf8b855-98f4-4a02-9e9b-1c1f73912b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa2b164-4405-432d-ac5f-400a6c25ada3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "edb736ef-f607-479f-8ba9-46d3cdbd1ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe39652-e4b8-45a4-b317-3758b883fbf5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae9c5f5-a331-4f29-9eee-04a329fbe6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d87aea-8607-41e4-8739-c0a393ebfe0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ab53a5-2427-4ee1-af00-b7fd7aba9591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff4ae2e-f6b6-412a-a653-f4c9782eb898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a52083-f4d0-4c2e-9547-c595eb008f9d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc7855a-4878-4eff-89b8-10f808107bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f4dd85-9146-4f13-9d4f-223ba37179aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8238e2a3-ad4c-4905-8293-6ef74346ef8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e2c6dd4-da54-4860-9725-e2f094523724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b723cc-2bb0-4344-86c6-7ecb540d003c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d6197b-0615-49fa-82e0-9b6a6d83fbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349c09fa-9037-4934-81b2-2d61da819de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136d81e3-a3c8-4ca5-ab05-8e20bd27a865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "956c1643-50a9-4076-a87a-c26f96e16dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5854bb-20a2-4cfe-a891-6e8619cf0983",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39c966a-5e69-4681-9862-1007f5aec06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10745c96-50a1-4e6d-ac28-bf84958342bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a686f17-a118-45dc-88fb-66c07d4c429e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "553c182e-ba23-471b-8259-c78120de0d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b428e308-4838-41b0-98a6-3ab81acb8a42",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00966bfa-8946-4b42-9e70-96ed25173d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d3d12e-319c-497d-9619-2c2d4ddd267c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990abf83-ffd2-4cb4-848d-13b89e9bac9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05323ccb-28a2-467a-8568-301c5e746358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b8451f-a5d8-4d56-a455-db879655039c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f53a28-8185-4256-9ca5-981c42f963d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9257542b-78f2-4f7b-ac25-6eaa9098356e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43379c1c-1208-4727-bf89-27b2298250ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d21a0722-3405-477a-bde8-688055f1c0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c680c466-71f1-4202-9340-d220d7c9fae6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ca2a60-1f80-4e39-85c4-6a5642a34d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f3f0d0-2f42-4e08-bb7e-765f71eaf60a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ce8956-a067-4885-8f6e-8036734d69a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe2315f3-bff5-4ab3-81cf-e3a0092c06e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae8a65e-114a-4f85-80e4-d177d5ff840b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942f8ee3-95a1-42b7-bdb4-b6d16029bed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f8a19c-79c3-4f99-a066-396f8371d4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484125ff-2618-4abb-9e76-eca516dcab7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92fa2c6d-ac80-4dd2-9c73-c746764a68e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0136c5-9f5f-4032-b956-63adef7f270d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb2615c-bc2c-41e5-a6be-669c13ce9720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d3cf4b-281b-4ab1-8f3a-21d973b3b767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115ac1fd-154c-4316-8b42-1a8acdf8635f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dd44cc-da8f-4b7d-8f76-1881987ad901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e283d546-98bd-40c7-a5bc-c54258b8c5c0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19000a85-496a-45a4-b8c2-c3098c7b1f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9151d956-7030-449f-9868-8f260e0bdbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c3ac2f-d11e-420c-8759-01de0994d95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7ee747-f398-4d5f-9c86-52c2cad93f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462c05ea-9629-4692-a606-03f0d0770498",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4397a7ad-68b0-4628-88aa-9c16e89b00ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b1afe9-bd4b-4ad6-b71c-5244d7efd5ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c758285d-86bd-4d02-b936-8e757ccfa316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c7947437-420f-42aa-a3c9-4a0516a82ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ecffe4-ec08-40ff-90d0-584b177dbfd1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291cb179-c618-430d-8ce2-c41a736c631b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7903345e-a1c1-4b35-932f-adf1043602ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15807239-4656-468d-8f4f-1e732aad03dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23d4b9d6-36c9-403f-ac33-4333aa4b8a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654d8295-0ca0-415c-bb49-d64d947e3d98",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8eb2676-9fab-48e5-b607-91a176dbe7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fad7f5c-7655-4d31-a89f-47ac807d8cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5da4ea-833e-4f7b-b7eb-c3f65072fc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cffdb43-80a6-4f0b-9ff7-861aa518749e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7420bce-7780-49ea-8b2b-260665a326e4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9a0900-76e1-4671-b7d6-1802bee437f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc385269-8ab7-4a72-85f6-ac2991ecf49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ca3737-f458-4048-baac-ac4eec485c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b839ab03-396c-4c91-8441-4a2a70ee5cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59b2eea-d2cd-4b2d-9cae-22140f4fd127",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98c0e48-c3c0-483d-af62-87441e0f8888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f469523b-3796-484b-b589-bde7771c148a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3617b407-1449-44d2-a85b-99429d361aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f74352-ff56-4462-a21c-1da634bbb7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd062b2-8557-4d2c-b23c-bccb5d9319d7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fd5d72-4e8e-4a16-be15-3ecd9e45f09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb4d822-b7aa-42df-80e6-61ddf8821ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c83667-41d8-4806-8499-4ab9f6134f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "347e9627-af00-4065-b708-c2a9b5d26f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c12869-6842-4c72-8d30-52f4734ae597",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ee1e78-53ed-4539-a824-d31e0cae77f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baee5ac2-6f08-4a09-8716-1e4dbfc47882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b533fb2-7074-44d0-841d-85ebee6c23c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a61febe1-65e5-40c9-9d99-0b547240b04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f105fe2-8985-4876-a8ad-917e0158f570",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9690da6-18a1-4dcb-90ac-488ccf41e006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac78aad1-771c-4286-8b4c-198300d4c7f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe419ce-9725-421e-98c7-3380ef1e68af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5355568d-b3b4-4411-a540-2a3e4ff01421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9af213d-68ab-4ed2-aafa-e9837e071e1c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a0a37a-d203-4258-b60a-38f3ccf769d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c32bc9bd-5d25-4b22-b47b-e877d5efc74f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b50b19-a038-430f-8250-2e9b84b222b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9aad1a19-7146-457f-8776-4c17a1ea9c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d16704-bcb3-4b22-96c4-43d95e088bc2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e4b035-4c65-4f89-b7e4-0c18c9e02543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e992d3a-7ab1-4311-9e06-1e3cebb594df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5adead-f728-4f8c-bd03-1df7fcd7c862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f0e9bbb-c2cf-4d3f-b2b1-691fc21b3b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c34e5f-fb76-46c1-adf4-69d254d70a1a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469db4da-02ba-402c-ad19-83e2c0711987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fff904-d4ee-4e82-9664-0fd4e959d28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966e8df9-c103-481a-926d-de400a95b304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1dc427-2a31-49e5-9ffe-3e8339e19fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f496a2-2711-4158-adb6-288f8e2cae6e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8043086-9dfd-4aff-9639-8876ff46b557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9923fa-e183-4752-b574-65709746a5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090b816c-497e-49e0-8c5e-06d829df0f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7382c3ff-12cc-4962-8e83-7fc44d6a435f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a2d20d-a693-47e4-8b35-37009ca2ac1b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9cf87a-3fe6-444a-b791-261d8ba786cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc3485a-16e6-4ad1-a226-8fd9a9458219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b448d53-fa3f-40a6-9c0a-93fcfeff6193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "425d9bdc-948c-4fb4-ae7b-731e1b1aa117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc370b6d-f789-463c-93a5-36d562721dde",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff4f6a7-b8f3-4de7-af62-f6d099aee65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8080d585-84ce-4fe0-82bb-c19c6af9c834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daae4ff2-a76a-4aa2-aa78-c34d3db0c92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf6882a-48c5-4006-b3d2-a0b77becd79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87c98eb-2ac7-48aa-8d7b-ac19cd683f5d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d505bc09-e929-4eed-b087-6d0977ac5a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ff6553-a135-46be-9946-23791ea5d0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a369603-b734-4c8c-bd37-e5093b08b240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11b4303e-bb07-4be6-9490-6122b05f1456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654fe24b-4a6a-4e90-b3fe-e6a31b732b28",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f5366a-f5f9-458a-a121-f418fe13484b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90d33f4-9a66-4729-97b4-0d2c87bd6f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17890dfd-8289-4504-9f0f-e6086413d18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8023fab-f54e-4f2c-bed6-1f5575939a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb145d03-843f-4d89-8e95-09c3eab0f559",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09227b0-1ba2-4946-ada7-e24e637876c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3616d2cb-b2c5-4d66-8b76-3b6a634af224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a81e5c-a9d3-49f5-8d0e-ab87781e3cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d7d967c-9f45-4197-8161-17cd54e7df1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1d6929-ac62-47b8-96af-ec291cdfd34d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20e1dc2-667f-4f36-8217-91c21930bbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893ee644-e5e9-4065-8760-6a80b58a23c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208ff620-d065-4234-8d64-b6a4563ca266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5803ab-08ab-4e8c-8600-8e611e1ec90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76cf4600-8663-4790-9fd0-4df6cccd3656",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27ef52d-3780-48d2-a387-38775a2cbbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec61841d-5965-4666-8806-406a66b076b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f45e4a-e1a4-4630-9538-c7ec99e2868f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "995915be-60d2-47fd-a74c-3d80f88c29a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1170a6b4-c581-4e7e-be03-a15d0bfb1859",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cf841e-2645-4011-8178-e26e7c928df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d77163-1b1b-40fe-8ab1-5053ef1093fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab95d34b-9bd3-467d-8cc3-d1a50674fd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d51f740d-e0c5-4aa6-bdc2-fefde4be6699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d98796d-adab-4a41-98cb-2fb360e7250e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867b3ea3-cf02-4335-bffe-8092cada96e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e311fc-c76a-40b3-8fd7-44d074a5737f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf18dbf9-d92e-475d-8df3-e80480779d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9864a8-da87-4690-bac9-7c7234933278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf197dfe-6c79-4787-a01e-b9b7f6acc163",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd753a3-d737-4202-88fc-7e66c76e1883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3228501-e978-41ef-b194-4d1d7ad24ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92dca5ad-3da4-4c22-bad0-e39db0c57a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "697fe632-1969-4af8-b632-914c1a6677bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc20bf04-786d-46ba-adcb-914338d355de",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9fd04a-259f-4200-a71c-bbf758bf0254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f773ed-a52a-4168-b44c-5978f27544a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c8b344-fafd-422d-aa5a-f9ebe0a5164c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "07274ab6-ac37-4c11-9773-44ee84bc20bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df1f17f-2825-4305-b7a3-a240144cd82e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7dd5ae-fb14-4cd8-ace9-cf56fea28f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8f7598-a96b-48c2-be20-e8e6b87e450d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c33639b-1209-4867-b16d-08e6795eef29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d671a18-9823-4cbe-b08f-50ec3e0f8b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24336955-e626-4a33-b050-6f2fad20bfbf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c7bca8-e086-461a-b70c-832a0056d2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f151d93e-fcbb-4e14-ac41-bbbc2b113006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03272141-3bd5-42a2-aeb0-79fec791de4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd4000f-1dd3-4309-b4e3-fe6f1b200466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbd902f-8afd-4f99-a970-db0487e21f5e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc098d18-4e1c-46f4-aa14-837c5c9b7eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb2ea05-064d-438d-bbde-41b3ab731498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580ba3fc-d655-47ff-bb3c-d93181d66f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7c0d0d-6eb9-4f4f-8c75-8666f06eb6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dc9f6a-207d-4393-8b5f-7be89986927d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba64cdff-d77e-42e5-9d5f-8c9c7ca54acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f774c9-65d8-4447-b890-7f8786ffa377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e796fda3-4308-468b-9e35-4b8fb1bb35f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8eaa4237-f63a-48f4-92af-3efe380e14b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5059906-4716-4c42-b50b-9f2cf39379e2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ca1018-3b3e-4e0e-9660-996c97da8d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd9a9af-8624-414e-905c-b84d8f7bc606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09b863b-0688-4a3b-adde-cce1fbe4378d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "953d76a7-9e5f-4548-be73-abfde54aa594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ca5e2e-3f83-42b4-9e6e-9d89cbf7bc8f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebafcee5-468e-46d0-a3b0-55a29d447684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e1fb6e-80f7-489f-9e87-145707fbe369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37714bdc-5bc3-4ff7-9d64-46de2997074b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "99372233-0d91-482f-a858-0cdb7f9976ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dd8a21-d402-499e-97a8-359449e2a08f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901c6f53-655f-45e1-83a5-b98b82707e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b171ee41-a458-48f9-9e9c-537f184e81d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc1e010-91ca-46f0-b0cd-943d66814095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65ab6655-f032-4f31-b6d7-014793003f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd972556-7bdc-436a-a4a8-678da56fa234",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a669cad-c7bb-4e14-8bb0-927abc5a6b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caec685d-435d-42b9-a004-dca568a5fe17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cd9221-186f-4fb5-801e-ee17b546bcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee0328f2-6ea5-4d91-b3b9-b95ef8bd452e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b40fa22-7e57-4d8e-9be4-de8cb3aedcc7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb12ce12-bef5-43c2-8ce2-df909e663348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac62c01-1331-4e35-923a-fa5379c3f0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa17710f-5a59-42ce-aef0-571ded375762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6dde93-90c0-430d-8ad2-6ce7592155c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed96ff5-b9a6-4fdd-928f-6c5a0e11cd16",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655abc98-2c93-426e-b532-4b112f2d6fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcbd3c90-3733-4d97-9974-1ea5e93d1f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb30846a-ccf0-4757-b4d6-20242bfdd704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a5915e1-9091-4d43-8592-587d05eba7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f747d433-c68b-475c-ba4a-ffdb9b0d649c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c390b9-41c0-4c73-8b70-172793816cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841203d0-d171-4922-94bc-23799435eadb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d628293b-e183-4479-89cc-0702f5ae683a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "35b64567-9858-40a9-84b2-dc15571162a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e792374-ea78-4ae6-acd2-d11c62335ca8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5c978f-784a-4304-b34f-e94075592eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce30c35f-579a-40c9-9b6f-ad1c37b00621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34c1ee3-511a-4421-9740-5ed88180e9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1814b31-c4fa-41ee-9705-2c31edfea26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8274550-bfd7-4c35-a85b-df33ceae7cf5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3642839f-92cf-4121-a978-ed5fb428a57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdbda570-8b59-4374-896d-71d1fa49a289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e753afed-a021-425c-a2c7-d5a5355dc617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6129fcc2-306f-418d-8e4e-a53a262f84dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494577ad-6c50-4c31-b11b-f120d2b6a1ea",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0bcf4a-ebb9-412d-9b0f-06c32acfff17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc966ee8-c8e6-4737-8347-696b76c5b314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65d8e31-61b9-4124-9239-ed4aae37717a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aed8bb69-8bbf-42b7-9611-be5c6799b11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dda0962-8afc-457d-bd48-7686b507c361",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533d534c-7968-4871-9ff4-618a93e56fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63d23ce-1500-40fc-86c1-b571e82f4554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a3756a-b5e5-4766-9995-cb59c0aa7799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb5ee0e-18c4-4c75-aa37-725e3e612f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75216f28-7bba-4417-b4a7-c097e2c72bae",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecc6f2e-4af4-46e5-bca4-28465ec55fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f56daf-e456-491f-a8ea-367d7328b97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0caeaf20-561b-4a23-9f92-9216fb7dcf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d62067b-7254-433e-aaeb-aebfc424c39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568ee2bb-7ce6-4001-bb9a-e66170cd950e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef2519a-c81a-4df8-bc5c-cbd8151c57b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b060694-c356-4601-8fee-efa789bb435a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94019178-9ba7-4881-953b-90aa7dfbad59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "648055e9-b378-4e02-a474-d0f09e6a8d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfc4ab9-e195-48b7-815d-0b3255d5ab60",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5634d50-a0c7-4fb7-86a7-f64f34845ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d107a1ae-327d-4470-bdf8-5a96d9eb6fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18e6576-5d4d-4740-9989-ba9a72b1005c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bed0e2e-fd44-4ba7-b043-7a86a98214c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faada584-9a2c-487c-8064-8cd0345bfd2c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e357483-2e68-4cb9-b8aa-d30f5f0d845d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f5abe3-2138-49b8-a29c-0f1010d8e9b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f63b8f9-2573-45b5-bdb9-bbbd4f2f339d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd488185-d334-4634-8d55-506f263130f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8ef059-1fb7-4073-8d49-2126b21fd768",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75503d57-2da0-4913-ab94-a12a212a8645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff208733-7dc3-4197-9a43-2cfd3ac2bbf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f148c8e9-3d37-421a-a3b5-c51f57c7f6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18427c41-8aa0-433c-834e-3a11fa5f1382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aab56b9-15f0-4327-8a5c-bae6228c92ec",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c46b00-0908-4870-be30-d513505c1051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54eb5e0b-9918-479d-af49-b5c398a417b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e85612-f6fd-47fb-aa82-3261a9499e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c430b8-ec5f-4537-acda-948c4513d9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db28cf49-d3cf-4efd-98a8-2e6fd241e343",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83475b1a-bdd0-4bab-84bd-d18ba32e9de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e7cd48-c685-495c-8192-d723c7cbbc78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9325902e-4b60-4513-bea7-b06a3d319177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5de4c4fa-4542-4245-9a42-2dc4825b2012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e891a5ac-3090-46c5-b2f6-65fd62d3840b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9427a8-ccb8-44f1-a484-2cc82407a7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2873c75-fc0f-456a-b9e2-e58cbfdbaf25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e39b74-af38-44bb-ae4b-5b248cb4b361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d4aceb6-a60c-4fd6-be75-ff81023c1216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e555968-5dfb-4e4a-9754-da27579b57e1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c69d83d-de9e-4c08-8dea-c31ed16a3b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209dfedf-b832-4b8c-8d55-fb39fe799e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24fd341-5f50-4f83-94d9-6cd80e3ff307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3aea0a-71c8-4cd5-9346-d85249d4bf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ec5efb-1efb-4b3c-aea6-552dea3d910a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0f02e5-198d-4be8-9be5-969f61799188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5263324-1d3b-4b46-8068-198af766a490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd2f865-0da1-403d-81da-3294c6783c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d84dfa9e-9b22-4c7f-af37-d309f207113b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5870a926-bad7-46f8-b8f8-adfaaf6b9b07",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed9ef1b-ea09-4182-b6c0-da70476ba8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e96ce3-a302-43b7-acab-216405c4b581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e42a2c5-2173-41ff-9aa6-5ae17d562838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab1aa45-5d6b-402a-8dc3-f3056bf4f639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4b9371-2629-4e7d-b28a-aa02ec78f3c4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2649b4e-19ec-4f67-b148-21a0f780dc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c6f48d-ac2e-4df1-8b1b-acea13ba6cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46377cb0-e6d7-4b17-bd53-257c47cc26e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9121a3-d178-412e-a733-33fbd602cc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f29a59-3132-408a-b7ba-459fb90117fb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6157510d-c3f1-4007-8ed0-3050b5a62f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e75bab-52b2-40c5-8517-18f10232a795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba537fc-489e-474d-b04a-ff164873d6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "62ea8bec-8189-4298-9ec2-82b076b6be95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de7d3d7-d3d5-4d95-a62b-6723ff228941",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe0c36e-8fe3-4aa2-8b70-6b04cd36ffdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53bd92bd-ba22-4a87-8d9e-3bb847057fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bef116-60b2-4078-828d-26e17a20d0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00f5b7dd-01d2-49fb-84db-bdebe360317e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de89a110-2502-4945-83fd-24e0e7862a79",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9807b7ae-42f4-4744-81b8-97240131f0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d04f9fb-df76-4def-8aa5-83b4d92af5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e8f8fc-48d5-42a2-9733-f7a7c916fd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc4dc17-0094-4c29-8361-f9dac44e56e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7de20d9-038a-425e-b860-8ee8270d3393",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3722ab36-0163-4124-ac00-592fd95db558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590e4d44-a633-4e7e-a0b2-3dbf7a973aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb480347-3c0c-4a25-a61d-8a13aba16825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dead21a7-42cb-49c3-8c19-e3cde5f9a088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5c8d9b-870b-44ff-82b9-6eb29d0387e7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db90a48a-b7e9-47bb-ab7b-b3f5fce2737f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0993945f-f33f-4f02-9d78-09cacb19321b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70558127-50a6-4f32-b77b-f6fe26559859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "634e65cb-29ab-4543-b15d-b3682fdd299c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89bdafe-acab-4063-b28a-ef66761ebadc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87f925c-5c84-4cb3-ac79-b12c401d6147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b24c48-0f47-4c71-a0d9-f6e2e18d9c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44aee661-31cb-45c9-9f4c-8f091cd2f111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1565a761-6732-4475-883d-3434ca50025c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60cbb3d-6956-4164-922d-4fdf1b2e9d5f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bef7e53-0217-420f-a187-c4c6838c939e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc338a5-9bb1-4590-a77e-b71b16668052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ab7287-9dcc-418a-90e4-7c4ca551d754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e79049a-2501-4701-bfcc-8acf5c32e79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ef0ce7-315c-47c2-b37c-7b75aa036661",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95d434d-f8a4-4604-822a-3a0bf43a584f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0b9b11c0-76a7-4a48-9fc8-bf2190a071de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4712e549-9311-4ed9-8a6e-393c54dda76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1755fa60-93ab-43f5-abd8-983b5460e7de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "024640c6-b3f1-42ff-a04a-dc3a4bbe3a2b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e4121b9-8232-4824-a5d2-6c2702ae2305",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94051f24-3db9-4f0b-bf52-c2486e4b5867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f23a388-cdcd-4d2a-a88a-ab053d65e854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa598e88-faf0-499e-9475-2fcc9e3a8bcd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4612b412-c036-41e3-9464-7b047cac30a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41fe0b57-fc65-476e-a1e5-cc97d40350f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33a711ac-39ad-4879-aea2-a8cb09bb7e7c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d8f8a72-145f-4b88-8e6d-60b340aaa631",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e703125-3292-491d-af72-b4f7e63c6868"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "728b0477-7822-4a73-a5b5-c07d6254410f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "06970dd1-4e86-42e3-a2d8-ca8403d38a1d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7fc1ac45-f234-44fa-8bfa-263a8cb85560",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b90f1a7c-0ba4-478f-b68f-3a43b4708f87"
                }
              }
            ]
          },
          {
            "id": "7d5f2af2-6aea-44a9-8764-2741dbf355a9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "42d9498b-0928-4c02-a868-259319349dcc",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "47b7b2fa-1c78-4240-867e-2fcbbe696b7d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf499289-3102-4991-b397-0fb8ebbcd370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "278f7442-6f5e-4fe2-b1d8-5b041e90ca3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffd8d97-dc3c-4f40-bbe0-bed2e497b978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0996de3d-4a7e-40f2-adce-e281b3319f72"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a353c0e0-a15a-4bb7-af06-acdcaed8fd90",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2598ec1-280f-4636-ac6d-10a6ddf13401",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "108f6c43-09f1-447f-b34d-8a64256e5c6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a462a49-1b51-4884-8c9f-91ebd429188b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "77c163b4-a418-4d15-8610-3b3c559e3f45"
                    }
                  }
                ]
              },
              {
                "id": "54413484-704d-48ce-8b35-a5dcdda203a5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa46bce6-119e-461e-9a3f-d01ccc64d1cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6d30bb3-7a60-4848-ba22-f94174278080"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47a45f98-88ca-49d5-9e59-7ab2449e0fc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "30349b56-f5a9-46e6-a29c-7ea4b1621970"
                    }
                  }
                ]
              },
              {
                "id": "82394518-386b-4d53-a5db-3d2f0dd7c916",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51a15fa7-6c57-4d17-a0b4-16982846a06d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8dbf7b3-aa9f-46b3-8a50-9a8d68450559"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc164590-c6c0-4942-8b63-2ccd6cfac99f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fb45f14e-6c79-410c-926d-e96dfda8c3ca"
                    }
                  }
                ]
              },
              {
                "id": "663776b7-205e-4b54-a3c3-87d17b4f4af8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8382fea7-4ba3-4b49-9e68-813171712c1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38b7a5cf-c19c-44f9-8e40-b38a8468e281"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbc64e37-39df-4278-8a0e-cd579963cc5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f8a8fa6f-6342-4759-a4a9-50f353f9f29b"
                    }
                  }
                ]
              },
              {
                "id": "94c51c4a-9d31-44cd-9049-1104f823bc40",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a184a20-7d71-4406-8f5c-384eb513f0ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7dca99a-434d-4c32-9b50-5c43f35f3c72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b39e0968-8b75-4881-8660-2b5523b9a279",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a3f7d581-c41c-4a5c-9a91-da39c1b32aa4"
                    }
                  }
                ]
              },
              {
                "id": "5019fcb1-33c9-4838-93cb-1c5c610f2b58",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d68cad8-72ea-4b4f-b1d4-496725d1ce18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b94bb146-865f-44ca-b47f-edbea139f6b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce30dfdc-ffd4-4af4-a9d7-f55d895d59ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8562f4d2-466a-4c07-80ef-c8f9ad9b2edc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70d7510b-97fd-4056-8afd-42fc54afb698",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "406ceae9-08ac-43ad-ab50-f864e923d2fe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "65839c1a-8c94-4ff3-adf1-727ec8e9b1e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5477c519-2e72-4479-8ce4-c490819c15e9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c07c33c-fe0d-432d-85a2-d6c4fd068eb0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1c836070-9fa6-40f3-b189-544cb67cc439"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cdb3a694-f906-4f6f-802e-a05f15641d1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c00e9cc1-f3e3-4a96-b3bc-1382b5e62069"
            }
          }
        ]
      },
      {
        "id": "ad6a3add-4b6d-499c-af73-5db63a01849e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bf57fa2b-6202-4f7b-aec4-089660e3d942",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea0c9e9d-9f7f-471a-8a16-34dc59e7ce85",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "25b4bc6e-93ee-4d8b-9d7a-be925f34f400",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e4f328-5672-438c-9a05-3ec74eea23d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8ac771-935c-4326-a919-f0843fe0f174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc24e42-b747-4970-a03d-b24ef52c0814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbfdd2e8-30a7-4d4c-b74b-6895f87dfd14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e402d63b-2f8e-47c4-b88a-ecf9b5d3963d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1522949-02a9-46b0-8ae3-c68d3a9b559c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae1a656-f676-4e11-a836-27658eae6556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f377d9b6-3d39-4785-9142-42b912c8b1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c033bb5a-eb70-4665-9d3d-74640f8a748a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f05a9e3-6153-40c3-bc20-cfbe8054107e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235c7abd-310d-44de-a582-5729a0aa3e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c7d3c0e-bc09-4607-aa19-2e3375f9289f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb01d9de-9645-4de2-83bd-57a1f079c963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8af35ad-5348-485a-8c63-1e0bc88e3905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3a4b1f-85a0-4859-9506-6165292dbee5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07be84e5-2a24-4c39-bce4-ceea2a7619cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597346d0-7ef5-44f3-b9b8-e7bfa69004ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4b9d69-5356-4355-88b3-eb328488b9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5597802a-6b1e-4ff4-a9cb-57949b9813c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28dfb6f-9416-4eb8-b631-819de4f81542",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705289fb-a060-44ef-972b-94650cb5780d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649aa989-994f-44e1-a597-3cb30189d6eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb19dbd-b8ef-4ae3-a36a-55d8c87ce972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b9aa01c-35a4-49ad-87b8-866757993cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0080313b-3f3f-49fc-bc2c-2591cdda3169",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f525c684-8602-40e6-8af3-dd8b55e9daf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901cd136-65be-4de0-bc8a-1067f7d48426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f63db7f-1eba-4441-8e12-8b475c136ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4fd62d4-9873-4257-aa76-985a7040e194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e3be6a-75cb-4521-8b03-86975ffd2b6a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ffc0cf-3f8f-4bc2-a425-09807563a5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9847aab2-6bea-44c8-81e0-b0424b492f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca496d4-b8ed-4d2e-af28-2d0cf0714fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "76ea779d-daac-4ad9-b9f3-ac1386c98683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e476c3-e87e-46c1-be95-9398f6e8935b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebbc4e4-52fb-457b-a27e-4155cc354d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db2a21a-1b86-4fff-8150-e5b4228f3d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f478367a-b906-4cd9-a21d-6b4e97fb6cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc4c151-769a-4eb0-9f14-a2a4289a940f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038d77ba-395d-4f13-a5c3-1ad93b27cb28",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01db17c7-cb24-4329-a2e3-56a9d25c48e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d592625-b68f-4eba-a57b-4a7461e11a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5ae747-57f8-4a2a-bfe2-a9995c44d409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "480a9094-9131-41d6-86e3-1c604f29b025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c007ac-4717-4280-b366-461bfb3c564b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a71c6a0-3e6c-4e96-8241-9c46e47092ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c420c5d-21c5-475b-a256-6659eeaf80bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b980aa4-9e0b-42ee-a8b9-3d776300c716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a6518e3-9a8a-4255-a5ba-1da849cef972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66b142e-638e-4446-bfb8-e93bb666ae39",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb22026-d5cf-4a38-9dc3-a60a8a337ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb34c37-aa9e-4bb7-9bf1-fa47d5e4a0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6428aa7-59f2-4b3f-aaf9-c1b62f0b0d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e40e826f-9e1e-4bd3-bc4f-63a3e9dd3686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4623ad74-a944-4f8b-8430-9df8ed13518d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b184514-797b-40f3-87b4-f2be3078adab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08de5263-0a77-438b-a59e-33ef97fdc00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2bdefd-e63e-4e2d-ab24-da30dd6130c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69eadae3-0a56-4d79-80d7-8bf0669979eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f0d9f0-23b6-425a-b2eb-ce22dcbe82f4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2683878b-0158-424c-b524-89ac4a568c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0023113d-8f42-4c96-8935-3cbb706861f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71503bc5-9de9-4b66-9f1e-dbaad813cfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed008809-9a47-4582-9148-77086ee1268a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6ec7dd-7d6d-452c-ac5b-14c2b15188e2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7094f7-f39c-4703-8c6d-32c631efaa13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda76783-1f93-4c29-9e17-5585fd8215a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d014ce6-0d56-4ea1-9563-dda6fade6f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8526686-897e-48ca-9938-c06a08d24a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfc73d4-afd4-4d10-a847-3860079853ce",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c61301-93b7-4baf-ada7-f773ab47d680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330ef831-8962-4d04-9376-588d3bd208d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4d6e40-8555-435d-8795-b4aa8825701a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b111cec1-b9fc-4d40-baf5-3b2807580671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b844d68d-6510-475e-9f17-71b9dfd3e909",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e1eae3-e6d4-4747-9f2d-0a989d5c8df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b2caed-d222-45e5-8c03-29de32f3dba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6676d888-f85b-420a-a7ae-9a6318aca0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d815e7c9-a619-4ccb-be2d-1a2f2994c3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc74655-e2f9-40e2-b042-ea8489a6324f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbb37e4-c668-4645-bcd6-05970fb7de57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c25bcc3-5271-41ad-9627-dee458dfbce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91602859-1e4e-4234-8676-93f06593f864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2da1670-c9c1-4a00-91d6-47506ca64a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b96f88-8751-47fe-9cdc-4eb882014fd1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8418bb9-b515-4f84-acd5-01e0495f954d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb32b0f-ae05-4901-8e05-12d2bcc6d9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4912c2f1-493f-4d68-95d0-e8ac2dbb19cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f882d297-7c3c-49a5-88a8-47fe3135e5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a354f2-9342-40fc-a53e-b02d0cc9f96d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e5179f-c4b2-4de8-80bb-6642e80f56b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5869e3-da2a-43c8-814c-5059d0107d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44baae1-b395-4233-aeb0-9980ea6e116a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97a59fb6-b120-4ba7-99cb-a1fdd4a8858b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a117734b-918e-438f-b630-93541d3db8c0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a1705f-ac44-4f73-956a-30609430342f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa2782d-1d00-4d4c-91ff-fc07213e8a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909f4742-2587-4ef1-91af-106345766d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae671e6d-9712-4e31-a9c0-1a6cd9aacc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dba35fd-6ef0-45e3-aa92-2bb279fedb9e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf2e04d-6d38-4669-8bf5-d3a3264a85ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8cf7bc-223e-4dfc-9cb6-f87b11400b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4810973-6d7d-4c8e-9098-af015dd53566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c055adb7-30e0-4797-b6b9-723bf71465c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a277daac-a92a-4c3a-b7cf-d2b7a03111e5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc8763d-52c0-40ad-9206-61d712055c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8696b93e-c3a9-4c80-9ef2-50b6e9bd26e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60782057-92c6-4748-aa98-0a885381410e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8476a92d-7a2b-4a6f-9dd9-7cf1f4905da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c18217-dc01-4ae4-aa79-d0a5b14f67b2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642170ab-7512-40c6-90ca-049bfdcfe773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba35b2a5-a382-4ebc-8b96-cd32b6a86be8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df963271-9ea2-4cf3-8083-5f34b1131237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89ae202f-b153-4381-8bff-b10b2b16759e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962e1caa-c2f7-41fc-98c0-1594e1f3e321",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599ce483-7c73-419b-83fd-91c561e0fa9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9922c6f9-f991-405a-b897-eec1a92060a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7c12ad-e94a-41ea-841b-9196bdd4957e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8328e161-64be-40ac-9112-c656eb681e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491022e7-94bb-4dd9-94d0-7c9809f7d06c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34124628-0182-4759-82a6-32779e8d908e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b06d6e5a-7daa-404c-b0a1-994aa6b69ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c01542-5213-4b27-975c-13bb3939df26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8152e29-97de-47e8-aa4a-96b4b1b46ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871cfbc9-2759-4e6f-b926-b660de3af871",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfc05b4-a9d5-454c-9f51-0d1ab41e9f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7cdb28-2b77-4fba-aae6-45102c36db0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a395559-b13f-4c38-9de8-ce28896a64b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "287d4e86-4ba9-477c-b3da-8aa4d8d96dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c6a3c8-3cff-4cbe-b403-350288bf057c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408899dc-545e-4aee-89ee-c805d3d6740e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596facb2-046d-40cf-b648-ba9c0a6802e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f56f95-b010-4534-9293-58e57615208e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b07f5ae-9b08-4de2-ad7b-b31bf3f1ee54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21409831-2490-4023-8ced-47362f915f15",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9bd83e-a983-489b-80bf-e25c5a3902d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02dfde2-5cef-4715-9c16-5d4abaad9129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350dfb51-ad78-4bcf-9be5-41cae1022312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49c1ab4e-6bc9-4a2f-b53a-1f454e56e965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4121c5-04db-4a5a-9a77-e4fff24c4545",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a96b98-2538-4cb7-afc6-8a7f6f536b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2118089-bdfe-4204-b908-51f37b7fe959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c96698-0d1b-4e80-9790-13dddc279b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6211846d-cd68-477f-9957-84b2dbc50207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126be8cb-aadf-456b-92c7-014937c292a9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cd06a5-15b0-43cb-a930-432ebdad6ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bbd3f44-407b-48f7-a475-0771f2bbe7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712b16b4-7dd4-41c3-926b-00befff8bc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c34bc1c-1ee1-4e1b-880d-22e62f815c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446eb049-1355-4e8d-bc71-d785f97faf90",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a13a811-3d83-4135-9699-4d465f3b2416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3da7ff-8706-4d6a-8c7a-b946413f0dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad03c37-3823-4ff5-9f7b-bbace1ca1f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba6ece9f-7364-41b1-82fa-8d9e7bf5c929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc970f17-a601-481b-ae3f-b78929c820b8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f4c95f-04cd-477a-bfa8-3a07ab2126b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b71752-a859-45e2-aa44-f0dd6c5ec674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8afbab0-ed34-46ac-bac3-af3d640a104d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6256bfa-a0fd-485f-877d-b45229ce116a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e11d128-a6f0-4c32-92a2-fc4662039613",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1a601d-8b83-4fbf-a6ed-41cad7dc8968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a82a84e-d555-4913-bf50-88b8effdba1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc16a788-6d96-41fa-b343-0881ffcc4036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6734ba-5815-4ad2-8f92-518e9d9f569a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c12630e-e46f-46bc-98a6-2f5f32e21133",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff28d530-138f-4ad5-916b-234213c1338a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb46c61-7de1-410c-bf8c-e51ce74b4a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1770f7f8-4a42-4b47-84f2-60f4af3b259b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7bda52a-6d76-41b9-8bb2-8902814ee0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71d3810-4204-4495-b3fa-698193aa3e73",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eaba6f1-3160-45e0-92d2-1bc876a2963c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba97d6f8-e4b9-4dec-89d8-0b4139452ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9d3f8d-4800-423b-a2f1-7e092d55aaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d85b9def-938e-455a-8431-40cb23041cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177c6ffb-958e-44c2-8c1c-c0a6f4128272",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aba02b9-a7e5-4912-8282-77f22792fca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93117abc-60d9-47b2-b5e3-8412cbf37425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a313227-55c1-4070-a919-cff7d93d61b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02d248cf-a5b0-4099-b232-e245433f5a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdeec4d-f51e-479b-98d7-f596df5bd978",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1573a80-86ed-47bc-bc8d-958a37a52564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54065542-77d6-4b65-99e6-4980cd596525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcf6ea6-2cc8-4779-b998-f3d1082778a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55b53f38-bbab-4ff6-b16e-b69f26330844"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d79a506d-988e-4ae7-84f4-1324dc002c93",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "66b76a5d-029b-47e2-a1ad-279048571c66",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602e0d9e-99dc-4d72-b5cb-3904e91182d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "361bb169-15e4-4135-9409-3388d056e8c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2210d64-028a-420a-a57c-45f8d1b190ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f995b1ba-e927-4f93-b995-827a51530c33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe558db2-d371-46ad-b1c3-9a1842c48683",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c31e119-22bf-49be-b871-96e9db9370bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5acd8800-8990-44d2-b362-580540604a04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1a7ab1f-b3ae-4591-a080-90a1214468bf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61d204fa-03cf-43b7-81fc-7f5ad0482063",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7a086bec-84e4-4351-a189-51a429914c72"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5c64e0a-78f5-4bf7-9693-c9a744adde34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac3839ff-c900-4564-81d6-90c4cd9688cd"
            }
          }
        ]
      },
      {
        "id": "e4521939-13a5-45a0-845a-ed6280a2e4f0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "71b66c11-76d5-4fa6-ab15-147d8960b9f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b7f580a-1d51-43cb-9738-992e2d52c32e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "768d3154-21c2-4eaa-aa92-d66feea9848e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a3eae0-c18f-4b2f-9bf1-472a2c5a4118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68d8854-ec07-470b-be87-3d4727c83ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a2e043-c37d-44e7-be62-792e8578ee7b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cdd686-af3a-4268-8346-2a3615bb66a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f005e359-efac-4129-b6d7-86fa6e5cfaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5992bba-6d77-4afa-8023-e0d1aeb971f9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc660353-b4eb-4ef8-8670-b00a85bed330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a97233-b2e1-4979-b992-7287f8f335ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2d849b-79bd-4438-a8a9-f350c62a7b59",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37d393b-82c9-4c51-bced-a48082470d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c403bd1-c5ec-4d2a-84c6-7b027e4a267b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e942fdfe-a6e0-4b0c-9cbf-ba74ae9ba577",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc67e4d-ec56-4558-bc2e-42c23fbc5644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07aee384-979f-4a92-9f12-bd2455cdf4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2453bdcd-5ff2-4a5a-8425-7cc7b0a25ad6",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375dd1d2-5ddd-4dc7-be7e-6e4549e5fb6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b1b694-7113-427e-92eb-0ba317d694f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84500e9f-90fd-411c-b0a7-34de82c801d5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92af437-6d7c-4359-b063-4e1a8a95669d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c13ef66a-5ff6-492c-ae4b-584e98d214e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b9db81-765b-44a4-8978-82dfee361c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9589c0-fb87-492b-bea1-cc1a0e1be8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13328aa-6e95-40ec-9a2c-bd534c7ac59c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3d9898-a4c7-43db-ab37-fdc71fd4441a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b0fc788-d8c1-4e12-8b68-156b65cb11ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1c2049-d9b3-4632-aa04-566e6867e84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936c5f6d-eaa0-4d9a-89ff-2448cf87ad83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc96294-a77f-4d40-8c3a-1a1cd11c6298",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b2d1b8-b2a2-4d2d-aa80-f05f62b32dcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35b22634-8ad3-4511-895e-c583a3aebb96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e1fbbc-97cc-4aaf-aa8b-15f93b6be0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d636522b-f3fb-47e7-b71c-d9c22e2bfb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60523a4-4210-4987-a751-ce7b1d1c98ae",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9045f082-4fd3-4c44-8703-86ad4a42803b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49b03263-1883-4baf-830d-a0f48f85dbbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eca8fb8-5b0f-4642-9ce6-6ebd7e926547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d01852-eef2-462b-834b-48b622c13587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5142d5fa-e7f5-45d4-ab6b-3404cff65158",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43a7b1d-4926-468d-ab1d-64a5e1ac76ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81219656-d928-473c-869e-f74de668e618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3442d5-ba5e-4ac8-9d68-2b56c9294c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c16e2e-7127-47a9-ac85-675f29c139aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bcacd4-d137-45d4-b4fb-e72ae5373c93",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45087126-5d05-4b9f-b2be-ef2cac2cb214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b30258c-208e-4e00-a74f-bb0d280feb78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "434a6b69-02db-464e-aa81-6cc5a815370c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26926f63-fcb9-4fda-bcb1-875f4ccd00d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c908de-b609-4fff-bae6-4885303748b4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bd94e7-2497-4071-9dd9-fdc86c7e890d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e0c314d-6d06-459a-864c-22b8e71fcd6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc2efa5-2de5-4250-8360-e0d5d3dac85e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a14028c-cd2a-4e54-87c2-c500d919c545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9d7efe-667a-41c7-b3bf-95740da3b0b1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bab458-876f-41da-a951-f6ae11eec98d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c03ccf5f-5fbd-4a49-ba0e-01b33db9a30d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbefe759-e720-4eee-a481-f752a771053f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673be290-6a14-4677-9f1b-a2fcafe5564b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf6d6c2-dcef-433b-912d-3ec089582d49",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696f7959-fe8a-4b64-8bbb-8f732dba2874",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c5b95fa-a469-49b5-b471-67cfde76addf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257e1728-0212-4c6b-bb27-c5038fda5f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd635ddc-ad17-4a6f-b278-6448e6ed8ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a5a130-b7ff-4b89-9a53-5002dab13d0c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d2c94c-6121-4370-9ed6-628f9a8e51b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bcad997-a6dd-4ce4-a638-6f4ffd7dd71e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79d5023-0a73-49fc-a1d4-25371bf7280b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d85f5d6-71e7-439c-a995-bbda0b2ed9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab184a7-0a46-478e-8891-617d33aaf47c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0feab26-c19f-4b33-bea0-2195d4b717c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d863111e-82cd-4491-a77f-ab6a885cbc8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe01c10-6084-4e21-8ace-1d52d22c2841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab1f2fc-b7cb-472e-a035-0bf00a5bb003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2136a611-643f-400c-8a6d-818c7d1a5d9d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf20eb1d-7d60-4488-9f4d-22e9f118aa2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b14c87-45a1-433d-a3c5-0bf08a3d5612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfbcb51-5387-4aa2-8bf2-566e429c9da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2cee9ea-3a11-467e-81c7-9a5baf5a0109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7419075a-3cd9-4f6f-b154-9140fc15953a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a3274d-18f1-467e-a3a6-b38fb1462608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e75666d-e1c4-4e01-bdbd-66b2cec1f298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabc41fc-ec71-43d4-a322-eabdc8222cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46bede2a-4798-4e6c-84ad-be4f7247400b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a42144-f043-43a3-89d6-cd4aea589ab1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a30106d-09cf-49d9-a074-b70c0a5cfab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7be026a-956a-49e4-b1be-b1491e3fe756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94dde251-4d60-47ed-adfb-8ecffb675ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76deeae8-6af4-4443-ab79-774ada7cbcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866fb4c1-b213-4e8e-ad62-9ceaf267c8c6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a8f7b0-47ce-45d8-8bbb-004387594dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff1b6e2-fa8e-4cec-b665-c81bfad5c26f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5069bf-35dd-4264-b50b-58323bf93e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4584a3-33b2-403c-bcba-a7a4f73317cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afb6695-3874-4ea2-901f-57a6ddadccd4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce48ce7-6af7-417e-ba63-6b357c1e081a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "334f78b1-13ea-43aa-9fa9-da24aa668ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "046d6140-893f-4900-951e-4a4fa6f94834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03619816-3c73-4472-92d0-11471d2049c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57b1184-22a7-4967-9734-0c73bf59243c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6242ae74-8c35-44f1-bc9d-65b4e2bf4097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad4ec5d-a888-487b-ac73-ccc90b3aaafa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c1625e-f6e9-413c-afe4-b81680ce91f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd94b250-d28a-49ab-b7c8-4fbb4c697baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8675fdf1-4cd6-45f6-ad1b-c0384f78b0e8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f611e4-8539-4033-810d-736636a33d72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d40361d-35e9-4a2b-97cf-6cf3296a6e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "134fa653-43a1-4d10-a0b4-35acfc8adc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebaa0693-27fa-4703-ab87-d84e53604417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e701e2-34a6-4ca0-99e9-85418b72b549",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a035f5f-0fb3-405c-91d9-915a373d3498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a33d05-a21d-4301-8da0-5174203567ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6b1a99-1fc1-4449-9cb6-79788357412b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f778451-1b90-420a-9591-d6fd7411d794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8147d825-a074-4ca8-b1f8-ac9fc64b77b6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b4a43b-65e5-4c8b-830b-e8cdc0baf487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3c76ebf-2966-4f70-9045-9bfeda1bf7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc47e35f-77e8-4930-9293-84279b878b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73f6f6b-ddc2-4980-ba22-2e98b5dbc79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723d5e0c-0fa0-4894-9c5f-808d8d1cd140",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db52effd-60e3-42d7-af70-2c49c17d0b44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e553205-9065-431e-a189-15cc43393cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9ecbf5-3c77-4363-bc98-b35f2567642c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d95ba7-a0ce-4bc7-89e1-de68caab79ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bc50cb-f665-4f0c-9874-f1c216051d17",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213ab334-9da4-4505-b2af-520ceead845d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ef074c-9c1d-4efa-85b2-afff1144f1ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d550385-f195-4542-b2d9-24591567cc09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bbd600c-38cf-42b8-b4f9-86b8b941754e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc918414-489c-4d42-9295-785981923257",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4bf067-4556-4adc-b4cc-23e60889eb57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8205027e-f187-423c-b716-bf3884de7afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b51e789-2c0b-4eb9-84cc-7cef2acac8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a080dac7-c631-4a7a-9a33-91a96a3f8e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7b2d4a-3f8e-4a4e-857e-1c8236d32032",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf849c3-e915-448a-84d8-3dec17b823a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e40e8d6-17bd-4ff3-b0aa-e906022328fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb43f749-24d2-4416-927c-57bd533992e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4740cf75-972b-4fd8-8c7d-e562f7684473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15165b02-be4f-423c-a4bf-65337971e459",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65849b2c-1d09-4b67-958f-00bcae0df131",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85629139-b27c-4780-9189-7d733aed8264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f4d287-99e6-426b-886b-039ed4c040d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c379c3d-1922-495c-84a0-a0b52b1eb7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e413dc-9132-4533-974f-983979a1a63c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec4c99d-50e8-4587-91aa-5d66512b1a74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a91ac277-7d9a-401c-bceb-736fac9c2524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd5db24-2c21-4a42-8043-5ee7a5b9c466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c2bfa9-d47d-4906-baa4-e50c96f8cdf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b46a5f-b5bd-4d89-8fc7-b5d76aaa35a6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7bac65-b4a7-4488-969a-a9702f274971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2054b335-6cb4-4ab0-ae25-3f038a11278b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf7803d-9ff7-405e-a28d-421782000a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ded9910-0eec-4b07-8fdf-c645f6fd5d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4553962a-7193-47d1-99a6-dae6061eb87b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5980d02-15ac-4d6f-9a8a-2f2288d281ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71ca5496-89a0-43b4-980e-d48056d6b6a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6379d4e7-fad7-4b6d-9adf-61ce715b82d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e69a29-6ae1-4a7b-87d1-c17bf5c89922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd2d9ab-7212-4db6-b8b2-ef2b48e700e5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0bf852-2d8b-42ca-9d44-0b8c58180e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab29f20-78bb-45c9-b20c-aaed4583a653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9436e39d-b3cc-4c18-bbd8-72929dc94555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c7ae5db-8302-4e06-98d4-8e796c7b97fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9549bb88-1271-4e78-8956-ff1ccefd917e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23acb53b-ec9b-4a56-b0b6-6749d15666f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09bb8862-d63d-4ff7-bb54-81125aa6daf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab49c78-38d4-4ee3-b716-24832eecc5c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c1fc45-37f5-44db-898b-12195e4bef5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7f9676-1d61-4707-b847-b00f7811895d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6cf7d1-74d2-4cef-bbae-111952a6725a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522ff9d4-860f-4431-a175-562168611fa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5f3298-0e15-499b-b872-1753038c8344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489613dd-de33-47f4-9642-bc752e998f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19148c1e-5994-425d-96a1-066716a836c4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811c6f40-7aa6-4d57-8db1-8b6991f151c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a18c7eda-4f52-44ec-8d63-0da7d1df6459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26251eae-604d-419e-b596-177937448817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2e48b8-266e-4e06-b2fc-6175e6bda89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b8f34f-c38a-4951-9787-0f9e89e02a5c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54a3359-7911-4564-9c40-4fbf6fd08ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6a154a-fda1-445a-b50b-194f47fdf753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a559a966-8149-4c73-8b2b-35c955f7a5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba732762-310b-4162-851a-17f4bf47cd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4ee202-abe8-4ff5-989d-a779028586b2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bfffcd-f30c-41e4-8310-efb4dac30606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835e2497-da9b-470c-b7dc-1aca8f879c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1413e402-0c92-45c1-a6d8-ada1a955a0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d06c8f4-650f-4773-96dd-274012b70601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07c5daf-f46a-4fa9-81b2-6c679c611cd5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa8c6b4-a2e6-4e0c-b9d2-9f7cf85740c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929ea9b7-ba32-4239-8946-0eb5d0620a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2de0113-dc11-4740-bfd9-6774164ddfe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f18065c-8208-4313-ab99-413315be0c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f7c915-04c7-4017-a0e6-e03c80590672",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e225eeb-62c7-4b6a-9806-fd868ac9cf53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bcce982-b833-4e2e-8cbe-bfbe982ed30d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "581f9853-bc43-4958-8be7-3e5177f35dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e1d82a-ab8e-490b-a19d-d39863eeb10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fd1983-a9eb-4fec-96a5-c2a1f622953b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a600af-0a27-452f-a2de-7bcc5f6fe74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cae1b17-476e-4824-aa91-0f036e4a794c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c5b55f-a804-4599-99ed-550cc31b770b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6e047f-30bf-4be2-aa6c-803331bbcbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2175695d-09dc-4546-9fb0-9802d238f911",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3145c084-115c-4f1e-bbd2-1b5ebbb66b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258f9f49-2141-4bf7-bffa-11df01d726f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfc5713-13b3-4b9f-bceb-92e3538419a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735d4001-a3ad-4432-b538-951c5cef2515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a742ab9e-4069-4e96-b27c-03386c0e7b43",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e80915-4b46-4717-9c10-d02420960b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e88ece-6140-4c92-8819-116e11bf8cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "679fffd8-c1c3-4a1b-8b6c-9403ac1f0ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f79da06-d9b5-48cc-9152-09358bf55c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6822e655-6ceb-45aa-a49a-569d775d4ba3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3380962-b724-4bff-946e-bf3253b192db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a729fa01-b6a5-4ecc-8c37-d414076d95f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644162ec-34dd-4309-a162-92c81a116200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d90a1b7-5d91-47eb-b1f3-07ee13dc0b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b85575-cc54-4417-8c27-2db6eab2225b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899427f6-941f-4617-a684-e73070234795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275902b7-5f9c-4942-9d49-58e9e591d93f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1aa5ea-7b43-4ed9-a7c3-03d6958a4944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7502410e-adc7-4a35-a981-9a3472f58a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3f9386-5815-4470-ad44-77769d968646",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d06265a-80b9-4ea8-9209-79d9e0125631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4fed02-754a-46f2-9aff-ba00316797b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bced117d-79a6-4fc4-8544-e09a78a36be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8887aff-30ae-4971-ad5b-9c3e27d9b255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f113275-4a64-47bd-a875-61798b368ff8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721f68ff-cfdc-4054-a2cb-fc7ec60ca98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bed9bf1-853f-4982-8d38-b9cc199234e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4f9de9-e187-453b-9b69-89d39499209f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4d3b70-f954-4faa-9c31-7daa53a1c103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84d445c-dda4-4be3-b0ca-234f9b8a4fc4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b247d95c-d689-4e67-aecb-975adc700ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a9a6a1-1238-490c-9a0b-1d7dde49c9a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8140bd09-3da4-48b8-a791-1f5677c90079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02679ea6-6f7c-4867-95d2-4a47b059390f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2cc8de-94cf-4d11-b7fe-42d40001fde9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fdaf7b-62ec-4d6a-9028-cf293bc5c6d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781d7b79-a586-45ad-bedf-5819ad77abf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3be981-9176-4f63-8f86-102b29f1181d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3475cb03-2854-411e-9fe2-0f6a1465daf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2a1a6d-19fd-40fe-b470-8364f3652626",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b598eb-9efd-495b-9081-929729ffb0b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5537ff08-a141-4e5e-a110-ee466bbbf04e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32289316-da34-4c91-887e-9372989e1693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e56d5d-2dc2-45ef-a3bb-84e40e4b7f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19a42cb-1e64-4d3e-a9f5-67cd738172a6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8ed18c-e6d6-4d71-8b9e-215b2f19b8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b06b88f-342e-4367-a3a0-b611a858cbdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6d3e2e-4de5-4cc3-973c-bfdf60bdab74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aefb4ac2-05fd-441a-9c90-5ec4c5def5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78116e6-234c-40db-b9fa-febb35b1b2ae",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebdd7eb-ee71-439f-99ab-e84485de6a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5b6dba-b9d3-440a-bde0-341003429c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02551d5-8058-4b88-ab5d-832911780f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a37f5f-ca3a-438a-a6bc-08d3ee264f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73302a04-5202-4551-afca-f19026fe1041",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e145ea89-e6e0-42f6-83ee-3b4ecef63460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b71dbb-53ce-4137-8622-fbb1cc8a3569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "536aee4d-4d03-40bd-9336-f4fb49c96267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5554ac9b-47a2-4751-abc9-77b0e6b60601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bd3468-ec07-48f3-8fe7-a17a80c6411c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3cd99d-83d7-4ede-a0f3-3299ff1e78e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc087ad-5cb1-46dd-9d71-ab388d01fec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a278eea-66e4-434f-99c5-758aea380887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6ef33b-b7cb-45a3-aee2-aa84f4616c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afac2e5-209e-4d18-bcb4-8182ccc1731f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ba636e-0fe7-4387-bf76-86f69897f2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633b6c88-5813-4621-a499-64a705c1fa77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1384e93d-5a89-47cb-aa4e-bd488ae3304e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb8db33-a468-4023-b2fb-030e78ffad02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d40d2f1-7495-43a0-b6fc-4c9bffc7b618",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6761dab6-e0f4-4ec6-9f01-8267fb0e8952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37bddc5e-c2b7-4229-ae11-c860c44fef8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "903df3e4-4567-4c6b-a10b-124d496f967a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21058c3-f969-4476-8495-4b46a83992fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f7dec4-043d-473e-8d91-07f314658a82",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24ac09b-d49e-4a07-a2b4-95e9fbfb31c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef3dc33-9f0b-41e4-bdd0-a9f24b5b1b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e4c7b6-0f40-4b2b-b709-cb96395c1045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b26d77-b5b0-425e-bea2-13edd227749d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a825f1-d5fe-4893-87ea-1332e4f863f1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3868fac6-c914-4f61-ab6e-89fcc3df1b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f998b4a-1fe2-427f-b699-6b2187367cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b396a03-adb9-4200-9d7d-843cd5c130c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78222a0-4d17-47c3-add3-6b4a0edfa271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cbd6c9-716e-4f5c-880f-79324b721141",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ab6d96-0b7b-4c3c-9869-979b6bb0131a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f8cccd-9f82-482b-84eb-f884f4ed90dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb6389e-1cab-4790-a8f2-8559f0bee23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d66c26b-4f6e-4dcd-bd56-f257ce5e124c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6678cf39-a56a-4f56-9e22-9aede238a8ef",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c9c65d-6eaa-49a7-aba7-4e2c42acdbb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7ea6e1-2bd3-4143-b4bd-af22018bb36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad687d8f-4272-4562-8f43-466bf2202dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22956c0-d988-4b5e-bc95-343ae20549e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da207c7c-c5d6-4f79-b8d7-05a12f2abb4d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d55a80a-c6d1-444f-980b-b96fa6fc40ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e394cb94-fc5a-42f9-878a-b7b51800594a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec501f8c-10b5-4c53-85d9-d832ca088701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8a52bb-7468-4d5d-ad72-137b9f004b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a1f71a-593c-4747-aab8-5dc912d267bb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399f5542-da20-44f9-9067-26c169f42f9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d87544a-783a-4075-bb37-46b5dba84b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd7a86c-07c3-4db8-b1c4-c5f6a31cb399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb4ad56-a564-4b3f-b52d-930a2be39313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80723766-ee4d-415a-a054-bb1ec19997a9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511903a1-195a-4908-9134-9c60c6e70668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5711f1ee-f474-496f-93bc-9dd12a9faa33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612a5006-b40e-4e0e-9986-9bdf0861e4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fddf1bea-bb35-41fe-bc06-5c4542a316b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93be5ba-7dc2-409a-975b-16daf8c4c9fc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fde140-4b79-4fee-9fef-a2298bd45042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb960bee-61f9-4586-afbb-18f69edb89e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d35753a-313f-4912-9e95-d1495ad2ba2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d744fb51-ae37-4f33-b66c-d967950a30e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb35bf5-0583-4024-a74d-3e8a319df1e7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bfb541-006d-411c-b311-eab5a22e16b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8822c5a-b6ae-4595-a973-2a9caaae139a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03c2c00-ef19-4601-b8e2-7d963b1032ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36ed52a-69ea-4d27-a9cc-6cf9781b3fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed7634e-3cec-4a7a-8315-b21cfdb61d89",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6e7502-4a80-4749-be0b-67b3da720443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0925d8a5-fa0f-4874-a0a2-53913554c7c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "946fc2d0-0124-4175-8f00-469f6e29622a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b261df-19e2-44b8-b587-eef046efd995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693d89ef-b481-42dd-bdb7-02be8bb32663",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96896479-68cc-4b63-b5e3-820436ab2b91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c198ba7-d64b-42b8-ba2b-f557732480fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1af5996-c8a3-4039-bafa-6074c98c46d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a767b2a-1bf9-434a-ae8f-5d8b4ffc36db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc276c3-7ff2-499a-8b72-8e8b5f3259f4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1bc444-b94a-4c1d-9cd9-e0f11f4244cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe27964d-b94d-46d2-a5ba-4e2c62037985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eca6292-9add-4993-abb4-e1e42f521210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27fb2d82-efce-4cbc-ab89-5cec69d4dee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de4f52e-5e1b-4a47-be67-871006250b1e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb23149-5bcd-4ea6-86ae-194b3a57538b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1797096b-9dcb-4d0b-a475-9890529a4754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bc3c5b-cae5-4ab4-acff-35f82bce36dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4b16483-e936-4447-a0ce-ebb4db8aee67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a98063-6c45-4845-bbff-140606e95b7c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f9cb71-adfa-40f3-99b8-0a0a0b326d93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21eb651d-aefd-4911-bc50-dc32d7a4c98c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05c3efa-a5a8-45db-a07b-32ef7b8356b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63bda10-dfee-4871-95e7-2f70e5cf8863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daaaf628-21a1-424d-bbe4-5b17640122cb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec63f9d5-1594-45cc-8071-0da249dc1da0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c6b7aa9-fd39-4106-ba37-09ed922ceee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6299e4be-6799-4132-89d4-6c7e01e37456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6a3989-f184-4f3b-a2af-4147b21af8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea6412b-6be5-444c-b6ec-528cd6eb1224",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8ed1af-9b0d-4ba2-a809-cb0684d55fd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9268a11-3cb9-47bb-bb3b-b95e99558986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6da46df-ae38-4dd0-b311-02e28d61af8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eced9c9-518d-4d27-b2cd-d97838de4c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd3bf2f-9a7a-45df-898d-d02742a597a7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8ee028-8227-4db7-8428-e9c47ea1923b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfe2f59d-bc7e-4304-b22d-c21700dba6ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51bfd5b-9c88-4712-8b6f-95bfc28f721d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1c2e91-bd2b-44a5-800c-b8e817868017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7092b55-e7d7-4275-ae02-d3853eec4993",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83829af0-a2e8-4fd6-a1d4-97c0372471e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9262f88-49a7-45d7-b648-7d89fe57c5b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd3ce18-56d0-48a1-ba47-85ff6e6a79ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f02c556-b30d-47bd-a26d-00038d7abcfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a775bc1-2f78-46bf-bc5e-574a1800b77b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18790d78-482a-46c3-a2aa-be945acc08d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71f55307-fc34-4f4f-9f72-89e312dae11f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9168cd-23d8-4816-8fdc-378331802354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b3cff0-ed0b-49c2-9534-54f512354761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38a954b-4f04-47eb-a5e7-89451cc6e4f9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cdd259-0db2-482f-b5b8-57d0cfb41547",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "515faad5-2a3d-44aa-a80b-a3ac8519a37c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1c395e-f83e-4587-9979-fd9bb0081be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f62981-60f9-4d7d-a8fc-3b937b1c607f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd1d08b-3730-437a-92fc-e1a44abed78c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf8a814-37cb-4750-882a-b2d437578f54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e58c1131-1ac3-45ef-a12f-c82a7ede9f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1705f485-7d52-4058-acdf-d77cb8008c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf3cb9c-9ca2-4000-a940-875709a92cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba109519-a84c-4ca7-9a97-7242014ee3c3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5899256f-ce95-4776-bf40-38eaffb08e8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eaecfd8-c93a-4a68-8e19-e6f597180812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8fff19-d041-4e59-b06e-957b4b9adcea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb61d09f-12b9-4217-9560-bab5ee9cc104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c178a722-1017-4009-91ec-043696bf8401",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e51414-df1d-4285-9c87-22475956ab2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df0b14cf-55ff-4eaa-8224-af44fdf4de73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8b7e6b-8881-4e95-9b42-4c48de1e2d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ccda85f-f3c1-4857-9dad-b1141f1db003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806e7f9b-fcf0-4211-ae9f-058d99a6579b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e14264-c2a1-4bbf-a972-913a7038da23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deadd598-d9e4-40f7-a213-f2faca6d97b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b8832f-ce04-4306-93c8-7efd72804aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a26d3dc2-a64c-4a70-9e4f-59c62f91f69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdaeb70b-26a6-4d74-9e1c-d095b49f32f9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687db48e-fcfb-4c0d-a3f6-4991db3b518d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcbb86f5-bb86-43c3-b28b-5f280d3e5aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "135d35df-770b-4b29-ad1f-59450f6e54f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21973796-603b-41ea-ad53-3b39b9d8ff8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbbcec0-6dfc-42dc-b237-c4a30e71d497",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3731ef59-a37b-4dbc-9225-52417519a12c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41f405bd-6113-463f-86a4-08a8009397ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "574a87ef-7cb4-4eb4-8193-5b08e9ffae4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ab3ca7-ba89-4d1e-ab28-bda317be267c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd77bb3-dabf-49be-95a5-3bff87c7e5d2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c51f75-ec52-48fd-b646-3e346e24a6af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2596d074-1730-4d76-be5f-a2e65b52a8c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41914a9d-12ce-4665-8f36-acb3016f1b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b1a5bb-d18d-423e-887e-8bb6995e3d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af659809-8279-4c59-b2b2-5ab22373f1f7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd866e1-1e50-41e8-8820-3fb36e39fff0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3063d91a-9d3a-4d57-a392-a733a28a9fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c405713a-0825-4446-9b5f-4fc1f1454108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377cf3e9-dab1-46f7-8384-5b4af7de01fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5be9772-8baa-4695-9220-9c563f8b35cc",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c91d107-87f1-4604-9c0e-0daabf1f90dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75434a49-c2ba-435d-9774-009ef1d41fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ccc60e-c406-49f9-af8d-ea8ae6d80626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b533d4-5e67-48bc-b23a-40d14b354c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf6da4c-c4b9-4622-9344-3c14b32aa945",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff9a0ea-5f5e-4c80-a0e3-fc2b420ac9ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5766380b-307c-4803-92f0-b944539b8fe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9716ecc9-07c9-428f-8002-400512bb6068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e630e752-62a8-43ed-b70b-da9a76c32c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309a4d2e-9faa-4802-b896-b12f95e57ee7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e1fd52-7ca7-4dbc-b9ff-41caccda3a67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59e3d81c-0b6c-4884-aa4c-0bd0276ba5eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcd3d3f-5aed-4e60-b516-148507255def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3914a0-7387-483e-ac30-9ecfea41df46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689c29e0-d356-4a15-b11a-70e2d3162707",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e54f54c-d43b-4c3f-9910-314f475be838",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9753c41a-1eaf-4d1e-9f6f-e8c5d0348cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9265c5-6f1a-4db0-9bf5-1a8cf777067d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109cb84e-982b-427f-b2f6-c5f35da175d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d768b2c-0ce2-4966-b2a5-8e0cc7fd9117",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f586c4bc-bd28-40de-b6b9-ea5472744ab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd3d8914-be99-40dd-b83d-a0a81371bfaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1497af2e-6736-4298-8d47-07cd0b473730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3211ee17-092a-4508-8c8c-8e30541c192d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191ddb8c-e5f9-4cfa-9a0e-cc296bd6b2d5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad7e10b-2259-4994-99d1-48a33ef623e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22923d85-7f7c-40d3-b6de-6f7f5ea540a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0feddc3b-d20f-4e20-ae52-ae8131272b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d841ec-5ab0-4cf9-ab4f-ead6383b63fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c235b143-5056-4f1a-aab3-621a8b9fa459",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae45b73-7ca6-4960-8063-5b4d27ca2c92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee03fbf2-2ce7-443a-ac4b-42def217b47b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c975d2ea-3908-402a-a7aa-ec927d08e066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb41bd54-9468-49ab-b8a1-6c7d51e018e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb14196-67b8-47b5-85d2-9423cce26b51",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c3a1fc-40ec-47b5-9c74-f1056b06631a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b5b6c2a-fa92-4447-8ef1-c95029589194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d961f546-31eb-4936-83fd-b963962c7dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd13a57-24e7-41bf-ae6a-54c648fa6f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9203be73-d20e-4a27-be97-a20950faba2f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7033a6-7aca-4380-a80f-0b6a7ccbc9c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8d3986b-5323-403c-abbf-51f9ef8db7b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7d3beb-0f8a-4c5d-ac20-a8c6fdb22c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b74fd7b-f5fd-4cf5-8b1b-6a48a4711303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3cd0d1-6222-4a2a-9931-7a4f1872802a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82674cd9-9b54-470b-983e-98c736c7b7da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8f9789c-c1bb-4856-8e2d-6fab536e82a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c58ef37-9666-44a3-b0cd-f40b90adfc07",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219445b0-7f28-4950-911e-4dca26b3f7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b7d9ce-48ef-419b-b682-29d7a23c8f2b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1e727f-570c-4673-a27d-7d145d6ebd03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51fdc674-9ee8-4117-b859-e7d5ac1d609b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58a6d52-17bd-4b54-a5da-c484d1b660fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19585ec0-a57b-43bb-a364-ecb11ee8517f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09f63bd4-c76b-45a0-8b48-f8f6e338436d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a94498d-bfc1-49f5-958c-acc201a04b92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25296157-59f5-4459-a492-aedf387f534f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94e13148-fe71-44cf-80ff-5dae40072da3"
                    }
                  }
                ]
              },
              {
                "id": "22b46aeb-dbb0-4d9e-9be2-fadc7814dca4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a9539a7-acbd-4c33-a9ea-b513663c58cf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01dbf22b-00d0-437c-b1b2-79cec5f7052a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1d2728d2-75b6-4cf3-b6c6-b977d5f720d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ecc4b7-1b2e-41f9-9f2b-d5c8e9c9da48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a24e4a44-9159-4f3c-b5f4-9d5882717676"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5745325f-304b-467c-b1d7-70063acb9c4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a01f2b6b-5ae9-416f-a59e-eaf80f2711fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f792f54a-620a-42d6-8a86-53ee3ea95e11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64e8679c-13a7-4115-93b5-989ae50b18fd"
                    }
                  }
                ]
              },
              {
                "id": "af4d3b77-95c3-47d0-b525-51f277e62ef3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "48932e70-4e9c-4d7e-9da4-f3c4326a6b3d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d424a81-95f5-4449-9a78-5d158d681cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f61373e8-ab04-4b38-82d3-307dadc1cf40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5058871d-af1d-425c-a326-04f113d4c060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6ed9b6-a589-463f-968d-0405bc2ae1fa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b7aac53a-3825-4642-af0c-6b1c6acd1fd0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "12a20307-fcb4-4f6a-bd4b-ff92ba7aa6e1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26cda097-112f-4015-99ef-9fce85bbc167",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9871d592-b4fc-4fe2-95c5-748f2df21ecb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f454f12-bb25-4161-8aed-cd48ddbf1c65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aaf4e372-911b-4653-8faa-8fb19f2b78ab"
                    }
                  }
                ]
              },
              {
                "id": "1caed4fe-d8be-4bb9-a7e1-d606c6f5e969",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fbe94ab-3456-4813-87d5-49722d0a5595",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c2e3aa67-fbd5-4c51-af1c-72a2fd340109"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb0325ce-d2be-4627-a332-a46eee1492b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0101fb5f-0be6-419f-9137-7cf414953602"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "523b3697-4674-4151-a972-3ec67d04b158",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "79f44436-dd97-400b-9140-f3b824632856"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b6ca193-f818-4dc1-837a-0576bf5bd2c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abe63337-a041-4f97-8ce5-81150e04114c"
            }
          }
        ]
      },
      {
        "id": "5c571bfb-7e73-46e3-8e28-91ddc98deff4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4996f233-6086-4b47-9261-a58daf077d23",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d6a7a68-e533-46a4-a34e-7bc3fbcb10f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb1edd59-b323-4116-84d0-40a9895e4198",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed380be-5636-42a1-8eb8-b29e31b86d48",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "821b2ee0-bcbb-479a-b5b6-cc7fd8927cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14be807a-9c87-4a89-bf02-2d41f8ebbf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef812b09-cab5-4855-8c28-0b51b6f6313a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9503571-d27b-4993-876b-cca22ba21554",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84937ae5-e445-4736-9df7-3dd137f2d69f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "350c0703-f7c6-49bd-8b30-55af62319ca7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "caea5a0c-f2d0-4b45-9d4e-552e00cb4f7e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2620ebfa-ef61-4acc-b21a-5f2e042fe3e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "96768106-0b91-485e-b6c2-b13080dff2b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ba2d4c6-2db2-4bc5-ae31-37c28b1ef443",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3fd170a-a5ec-4bae-8ad7-d97fe7fd1d48"
            }
          }
        ]
      },
      {
        "id": "025dc457-f1b8-4d75-9dc0-0a7d94704b4e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "75a59b4a-5786-4336-a52f-d6887c97835f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04f7ce28-7990-44fe-9fdb-6e1d10969b68",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71ad2a77-d84d-4bea-9c56-d705f4a08cf4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df4b729-173a-4489-bd09-c6680303b614",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02d45d3e-d0aa-4e78-93ca-c35d3debd7b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceba7369-b1bf-4ac5-a5ad-2b5b5414d75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b72f2525-54b3-4fec-bc00-bf4baaa6db29"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "450fbace-ff73-412c-aaf3-81158f9b49a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "572783bc-b3bc-4faa-b1a6-853c042a2479"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b03fe82b-c11e-4b6d-93b2-3f1d2ba9978d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62d78760-42cc-422f-9979-43d7ddd2f162"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cbb2c77-dc48-444d-adda-35d22b081a3f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "58e430e8-9902-45bb-8ce3-3fc730a10ee0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de140320-1fd6-4a47-932d-de4814b192c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9105f8ea-49bb-4ff0-9579-f334ac6834e5"
            }
          }
        ]
      },
      {
        "id": "5c92c7be-9c5b-492a-bcfc-7204e870e3d6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "78f59217-8419-4d6b-834d-c4cb67992cda",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7fe8785c-6098-445e-88b7-4a001b640294",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "965edfd9-ca16-4dfe-83dc-ed75f000f804",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a30e53-4882-4b17-9f4d-cfec5d28897f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da4f6405-263a-4416-8c06-972fafab0fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c0a2d3-791a-49a5-9379-3585e0d01623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66f84a05-0614-4467-8e62-673b38c1926c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2619867f-8210-44c6-9e05-7c5f06e3ea2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3b15ac4-36d3-413e-9f75-5c9037fa220c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80b38015-2adc-432b-8c32-366acadc2265",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38976c4f-c6f5-4901-8965-f1eeab7ff6a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "989dea6a-1684-42dc-81ff-94869a06f151",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "76941795-6fa3-4f93-bbd2-97c77ecaed42"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32d59f95-e25f-47c5-97ce-e384938ad0b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c5ca562-289a-49d2-828d-354afa9fb781"
            }
          }
        ]
      },
      {
        "id": "e42b04dc-e7a2-498b-9edf-4a13388c0493",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2245555-49a8-4d16-a9ad-c808d27ffcfa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca06177d-038f-41d5-815f-538ee36490d4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "474ec093-682a-4c78-bd80-6ee3725c3f63",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03ac1531-2e42-4a2c-844c-0ad5278b3614",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f4054ee-2350-43ee-a2a5-33dfe77b301a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 307.9801587301587,
      "responseMin": 7,
      "responseMax": 7814,
      "responseSd": 1134.3886419019575,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718498501845,
      "completed": 1718498588111
    },
    "executions": [
      {
        "id": "8e491559-20ff-4fdd-bc20-6d401bb06975",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8b8c4dcf-8014-4e5e-bcc6-78a70cd645ed",
          "httpRequestId": "83cce725-0626-4d39-8e9b-f00af4d0b55f"
        },
        "item": {
          "id": "8e491559-20ff-4fdd-bc20-6d401bb06975",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6d5d783b-d2cf-400c-bb4e-def6fe019a5e",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "90a5fd14-797f-4e96-955b-477665a883ab",
        "cursor": {
          "ref": "105386cb-ae6f-432c-ac61-e9b040d427a0",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "28454c02-3572-42dc-81a2-7636f0b6d94a"
        },
        "item": {
          "id": "90a5fd14-797f-4e96-955b-477665a883ab",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3b083b36-9c00-4b0b-9d6c-4260d6bee2f4",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "eb90f0e5-972b-4f5a-96e5-deaa4b2057d6",
        "cursor": {
          "ref": "f36baf8f-560a-46a0-bfee-34871a87d974",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4669e286-99d3-4f3e-8c6a-998413b0f53d"
        },
        "item": {
          "id": "eb90f0e5-972b-4f5a-96e5-deaa4b2057d6",
          "name": "did_json"
        },
        "response": {
          "id": "a0feaf4d-9e19-40e5-98bf-daaa06081ba5",
          "status": "OK",
          "code": 200,
          "responseTime": 415,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc8480c-eebe-4d9e-b840-68d4ea537a09",
        "cursor": {
          "ref": "255e9f0c-7140-441e-966d-1ee1a96f20f1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "33d0834a-56b1-4338-945e-b357689b3327"
        },
        "item": {
          "id": "1cc8480c-eebe-4d9e-b840-68d4ea537a09",
          "name": "did:invalid"
        },
        "response": {
          "id": "2573aaf0-8526-471c-a983-841c1dc39fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2022,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc8480c-eebe-4d9e-b840-68d4ea537a09",
        "cursor": {
          "ref": "255e9f0c-7140-441e-966d-1ee1a96f20f1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "33d0834a-56b1-4338-945e-b357689b3327"
        },
        "item": {
          "id": "1cc8480c-eebe-4d9e-b840-68d4ea537a09",
          "name": "did:invalid"
        },
        "response": {
          "id": "2573aaf0-8526-471c-a983-841c1dc39fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2022,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8597c95-4cc6-47c8-8a63-a0f944831f0d",
        "cursor": {
          "ref": "7cf404d6-33f4-4e11-80b8-8d3907b9860b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ff29f762-bf0f-45d0-a14d-12bb6ffcc309"
        },
        "item": {
          "id": "f8597c95-4cc6-47c8-8a63-a0f944831f0d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0bf5af88-bb54-4d29-9eac-4e0368a6cecd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2183,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0fa25a-f898-45d8-8089-d65fc5426fe5",
        "cursor": {
          "ref": "d2183445-e688-4509-b163-b564bc44cfc4",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3ac18207-931a-4569-895c-fb10a8a98529"
        },
        "item": {
          "id": "aa0fa25a-f898-45d8-8089-d65fc5426fe5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "522024a0-c38a-425e-90bb-a4e66362ba47",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2314,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7fa8fc-41d6-4fa2-ae24-90db43a0138e",
        "cursor": {
          "ref": "9d549ff3-ad64-42a6-b8ef-b7b1e6b36303",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e10069ee-f0f0-40c3-9194-1c8216164a8c"
        },
        "item": {
          "id": "fa7fa8fc-41d6-4fa2-ae24-90db43a0138e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7fec4cf8-3119-4241-9f4e-9133170df22b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b04845-c047-46ee-af73-3bc91cbbfa3a",
        "cursor": {
          "ref": "dd3559d8-dbed-4c47-a85e-d57507a9d489",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "dfd6bd4e-bc5a-4245-8bba-7afe9755b14c"
        },
        "item": {
          "id": "e9b04845-c047-46ee-af73-3bc91cbbfa3a",
          "name": "identifiers"
        },
        "response": {
          "id": "90ccb35a-f635-4ecb-b78c-bd8d1544c014",
          "status": "OK",
          "code": 200,
          "responseTime": 2384,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab3aa11-1227-4be9-a815-6db0fa4ae60a",
        "cursor": {
          "ref": "824366bf-c567-49d9-be2b-5b17e6064dad",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "802eca74-3ab5-4482-a7cc-69db8673cdf9"
        },
        "item": {
          "id": "5ab3aa11-1227-4be9-a815-6db0fa4ae60a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9e3fae42-094b-4db1-93b8-d1e3feda61b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4097d8a4-ba88-4b98-8991-4f01649ffcb8",
        "cursor": {
          "ref": "c90edfab-9fd5-4bf0-a1f8-89956fee5221",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "254b8e02-acc9-49da-8789-48d23e2e814f"
        },
        "item": {
          "id": "4097d8a4-ba88-4b98-8991-4f01649ffcb8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "213acfd7-40eb-41e9-b69a-4a0907eda367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d85ec4-c1a2-4a80-9312-be423c9bc0e8",
        "cursor": {
          "ref": "0e04a7bb-1eb5-4228-ac16-fc9c4f3fbb65",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bba927d4-a7a3-4385-a14c-ccfe27c085b2"
        },
        "item": {
          "id": "31d85ec4-c1a2-4a80-9312-be423c9bc0e8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "93903f0d-b761-444c-b70e-fd76f0ebc385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ae8601-1257-483e-80fb-ca7865241a1a",
        "cursor": {
          "ref": "480080b3-78d9-468d-8f99-3bbb0f142e00",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "47f04588-fcca-439a-99f0-327c071a1af4"
        },
        "item": {
          "id": "41ae8601-1257-483e-80fb-ca7865241a1a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "37b63874-9bf8-4081-8d4c-0dc9bc3591e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799fc81c-55c6-4c63-8ab4-5ec4651d59ff",
        "cursor": {
          "ref": "81f09565-9db7-4a30-a5b5-311ddd080e4a",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "47f97b77-fd18-4ba9-b7e9-e8c89bf20032"
        },
        "item": {
          "id": "799fc81c-55c6-4c63-8ab4-5ec4651d59ff",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "87d7d480-85e6-48eb-b8a7-87bd257dd253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c29cacc-2c5a-4f25-9b4a-de45fe1bcafc",
        "cursor": {
          "ref": "aee7daed-fae8-4e8f-abf7-40bb7afc5f4c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d14501ca-ecc6-42cc-9b47-b4f27aecae58"
        },
        "item": {
          "id": "9c29cacc-2c5a-4f25-9b4a-de45fe1bcafc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a5e67f54-f9e1-4e0e-85c0-81d95348f9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd832c54-d9df-4b1f-89bf-99d501c5781d",
        "cursor": {
          "ref": "2a7b1d25-0f06-484e-b092-30ff4bd8ec7c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "47c9b730-dd9d-4d44-9e7f-81e2ff6506bb"
        },
        "item": {
          "id": "dd832c54-d9df-4b1f-89bf-99d501c5781d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1acee5ae-99c8-47e2-8581-f5d56b963bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf78cf93-209f-4234-a3ba-d9600a6e1dfd",
        "cursor": {
          "ref": "117dc080-7080-446c-b34c-8475325050c1",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "be398ca0-52e2-4199-8ee8-99f5c94f82a5"
        },
        "item": {
          "id": "bf78cf93-209f-4234-a3ba-d9600a6e1dfd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "33455326-d96c-43fd-8478-c6eb23363a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42d5f25-d16b-40f8-8324-31f3f03d4e57",
        "cursor": {
          "ref": "1abb42bc-8b20-43c1-b9e9-2396768957cd",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7462b952-bcb6-4aff-b7b6-42ec3f9c1641"
        },
        "item": {
          "id": "d42d5f25-d16b-40f8-8324-31f3f03d4e57",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f8f01c97-372f-4a76-adae-120640f8a93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a805f3a3-b24c-45f2-b6c2-e4c3ae234b4f",
        "cursor": {
          "ref": "7d52d129-1f64-4778-ac0a-875eac88fe31",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6dd6e6d8-6e39-403e-bf50-94c2660e3113"
        },
        "item": {
          "id": "a805f3a3-b24c-45f2-b6c2-e4c3ae234b4f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8a9dc39c-8676-43f7-b738-bace65b6ce83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d025f4-f714-43c9-9ee7-53c9ec03bed5",
        "cursor": {
          "ref": "55b53cd3-c5da-4eb8-bbc4-ccee7b35aa89",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "418a6f01-211c-4906-8bdc-09cbb0190a67"
        },
        "item": {
          "id": "e5d025f4-f714-43c9-9ee7-53c9ec03bed5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2059a26e-d9c3-4129-9057-bd5306ee4929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19314251-16ef-4227-b33a-fd44d524b438",
        "cursor": {
          "ref": "631bb4de-04f1-42eb-9c62-e18e9f860563",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9294cfc6-15cb-4ee0-ad8f-b829d22840da"
        },
        "item": {
          "id": "19314251-16ef-4227-b33a-fd44d524b438",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "03f77f80-28ff-4968-9a1b-663e830d2bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52dac433-ab54-4039-809f-4498e984abac",
        "cursor": {
          "ref": "12584c48-8cf1-4dda-ab32-73d7588cb3c7",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b9841af3-0f0d-486e-86de-8a6b3a79633d"
        },
        "item": {
          "id": "52dac433-ab54-4039-809f-4498e984abac",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2160a8ac-38b9-41b6-9584-0e1be07d41bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77814e2-6020-47dc-9d9e-6fd863d48b16",
        "cursor": {
          "ref": "4b5cdea8-0629-411a-a7e9-5cb19d9f31ac",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b6811ce1-38dc-4e17-9d59-9f584bf0341f"
        },
        "item": {
          "id": "e77814e2-6020-47dc-9d9e-6fd863d48b16",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "78420aed-6b22-4fee-a644-e53c7d173120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913d9b88-b1a3-4914-8132-be1b635f4f1e",
        "cursor": {
          "ref": "21a18a90-2040-4eff-86b4-f042d276aae0",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f807b3bc-3411-4f4e-aabc-32c697f58bd7"
        },
        "item": {
          "id": "913d9b88-b1a3-4914-8132-be1b635f4f1e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e8071081-f40b-41a8-9781-fc20c5f2a3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2dcc00-107a-4b58-a845-67543940e5cb",
        "cursor": {
          "ref": "550133f0-8af9-43ff-8e92-1163fc601e66",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "40f94cbb-caae-4da5-8a8e-1ad09f6d678a"
        },
        "item": {
          "id": "1a2dcc00-107a-4b58-a845-67543940e5cb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1a36ea3c-d099-43f3-8cf8-7787d0dec27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec224c7-8c8e-498e-84e1-b1cd85d4ba75",
        "cursor": {
          "ref": "64278e50-8c91-4d4c-a789-67514cae72dd",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "99585618-1453-42bf-95e2-0b99b3248776"
        },
        "item": {
          "id": "dec224c7-8c8e-498e-84e1-b1cd85d4ba75",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a00520a6-2e42-48a2-8d9e-a04b845d0c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a295d4-b208-4d21-a622-b6323b8bd3c4",
        "cursor": {
          "ref": "cc629d9d-abb9-4408-9fce-ee34c53966ee",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "569a07ea-e3dd-4079-ba6d-74586aacf87b"
        },
        "item": {
          "id": "b8a295d4-b208-4d21-a622-b6323b8bd3c4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "090fe00c-636d-4c94-b445-5cc64bd2b802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c71e7c-5b3c-4ede-b43b-2de478c9a0cd",
        "cursor": {
          "ref": "2d04921e-ba8d-48cc-8fa3-5213a3ff6f5b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "decb6888-6045-4ef0-8816-300721c1d311"
        },
        "item": {
          "id": "a7c71e7c-5b3c-4ede-b43b-2de478c9a0cd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bad3e5f3-c660-4f18-a547-a29241bb1483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16181d4d-1f50-4524-b081-0841bd25848c",
        "cursor": {
          "ref": "249f2d86-c76d-40e9-9305-04fc179228c3",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d2cc5f08-2e30-4d58-8b22-d259a22b071a"
        },
        "item": {
          "id": "16181d4d-1f50-4524-b081-0841bd25848c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f4fc2067-a80b-4b0e-b638-9b736bc0bea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96c249a-38bd-4114-9d94-3cf853611a61",
        "cursor": {
          "ref": "ac88de7a-e14a-47c7-939c-3fa61f46f5f2",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "71fe3cf6-0c8a-4843-9216-d763ac8c0c14"
        },
        "item": {
          "id": "b96c249a-38bd-4114-9d94-3cf853611a61",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5787dc29-0036-45f9-aa3b-9cac0dfe29ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8247e8-f6a8-42fa-b6da-b7beb7d0f80f",
        "cursor": {
          "ref": "4591d469-20c8-4d5b-9a45-23e0c91e5158",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5d6c9caa-3d70-4ded-99ac-a8b8f7f28ee3"
        },
        "item": {
          "id": "3d8247e8-f6a8-42fa-b6da-b7beb7d0f80f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e825fc53-9298-4f9b-b6d9-ae22082891eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cb0009-b0fb-4a86-a45b-1dd91417ccb2",
        "cursor": {
          "ref": "27a59dd9-4282-4c23-92c9-22e3087eaa5c",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fcd29a84-b0d5-4bbe-bc3e-2a1adab0ccd8"
        },
        "item": {
          "id": "b9cb0009-b0fb-4a86-a45b-1dd91417ccb2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bd3507c2-ddea-424f-a9a8-9db5ec62949e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7c52f4-cba4-41c7-a170-ec07ce8925ca",
        "cursor": {
          "ref": "3f19e668-6edd-4de2-bb42-c63880289121",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0ca86386-a442-4670-92ae-ca5b2e30e415"
        },
        "item": {
          "id": "bf7c52f4-cba4-41c7-a170-ec07ce8925ca",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "187ee2a9-3d76-4ae9-b9ee-6c1d2d0e5670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe39652-e4b8-45a4-b317-3758b883fbf5",
        "cursor": {
          "ref": "0f8b9a61-4746-4cc2-bbf2-d0b601edfeaa",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "63ce1d10-3f41-4f32-a6fe-aadefe7e41f2"
        },
        "item": {
          "id": "abe39652-e4b8-45a4-b317-3758b883fbf5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e26e3c33-d987-4641-bca0-e231a2a087c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a52083-f4d0-4c2e-9547-c595eb008f9d",
        "cursor": {
          "ref": "9d931d37-e7e9-4502-888c-4c7ec80b6cdd",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a4adf20e-9211-4607-b747-2d18973cc42c"
        },
        "item": {
          "id": "12a52083-f4d0-4c2e-9547-c595eb008f9d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "71f56d24-5019-482b-96e9-4f0a46ace94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b723cc-2bb0-4344-86c6-7ecb540d003c",
        "cursor": {
          "ref": "33c55d6b-798f-4716-bbf7-e98f62cdf6df",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d68ba850-1d43-4e9d-933d-9cf29f9e40ce"
        },
        "item": {
          "id": "e0b723cc-2bb0-4344-86c6-7ecb540d003c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "cdd7d3fc-ea8c-4e7a-ade9-2b771dccaeee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5854bb-20a2-4cfe-a891-6e8619cf0983",
        "cursor": {
          "ref": "3cdb3118-22bb-4478-9037-db18c94fa923",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6748b963-d64f-4509-9027-9a2d1d50bca2"
        },
        "item": {
          "id": "5e5854bb-20a2-4cfe-a891-6e8619cf0983",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ead12a24-8354-4088-90dc-299ad50e42fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b428e308-4838-41b0-98a6-3ab81acb8a42",
        "cursor": {
          "ref": "fbf1215b-b039-4516-8fe8-2a96bb2b7147",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0b08bc0a-d3ad-41d3-9c33-9f1f6f421507"
        },
        "item": {
          "id": "b428e308-4838-41b0-98a6-3ab81acb8a42",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "eec82bb5-fec5-4e00-89cf-359288fe27c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b8451f-a5d8-4d56-a455-db879655039c",
        "cursor": {
          "ref": "17646f89-cc5e-48b6-8518-759018a67a97",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b36ad1ca-36fa-4701-9e51-cce860204e11"
        },
        "item": {
          "id": "e3b8451f-a5d8-4d56-a455-db879655039c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f4d96a7c-0492-4830-a164-78a26560e99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c680c466-71f1-4202-9340-d220d7c9fae6",
        "cursor": {
          "ref": "ca63080b-d12b-4bce-a665-141c0e9f4cf7",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c756a603-7fda-4e89-b817-3221f71621a7"
        },
        "item": {
          "id": "c680c466-71f1-4202-9340-d220d7c9fae6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1a33ed75-e6a4-4caf-8848-f0538be0b55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae8a65e-114a-4f85-80e4-d177d5ff840b",
        "cursor": {
          "ref": "44ea9991-850e-4c36-8542-40a252e075e2",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2bd6f908-9a8f-4a1b-ae24-eb9aeac17b13"
        },
        "item": {
          "id": "2ae8a65e-114a-4f85-80e4-d177d5ff840b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "46fc97a8-b58f-442e-b6c5-250b6ca9d7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0136c5-9f5f-4032-b956-63adef7f270d",
        "cursor": {
          "ref": "0f7ea3c4-240f-442d-8e4c-1b665212b1c7",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "38edbfa8-9849-4667-baf0-b6c9e9346282"
        },
        "item": {
          "id": "3f0136c5-9f5f-4032-b956-63adef7f270d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "161c6025-1a69-42af-b12b-bb6c9c144795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e283d546-98bd-40c7-a5bc-c54258b8c5c0",
        "cursor": {
          "ref": "b9274063-8d7d-475a-ac02-7f05fb8c2d57",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cda5e495-402b-4fa4-99b5-4cb87cfeae76"
        },
        "item": {
          "id": "e283d546-98bd-40c7-a5bc-c54258b8c5c0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "54669e6b-a958-453c-a723-589fe8b9971e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462c05ea-9629-4692-a606-03f0d0770498",
        "cursor": {
          "ref": "162b513b-c38f-4fb3-b0ee-7235c177e995",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f7815b76-c33e-4d58-96cf-a6ca3865dd12"
        },
        "item": {
          "id": "462c05ea-9629-4692-a606-03f0d0770498",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "11335152-5e2b-4757-823c-98455faa1f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ecffe4-ec08-40ff-90d0-584b177dbfd1",
        "cursor": {
          "ref": "a1920558-248f-4f22-a825-b6419136e473",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "84e402ac-89b8-417a-ba7a-f170c9497e20"
        },
        "item": {
          "id": "d4ecffe4-ec08-40ff-90d0-584b177dbfd1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a8699ac8-a4fc-4739-9843-ba94030280f2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654d8295-0ca0-415c-bb49-d64d947e3d98",
        "cursor": {
          "ref": "762f6397-cdb0-4061-bdc7-39015f39b4ba",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8bf38ef1-7794-4962-becf-6376310536a1"
        },
        "item": {
          "id": "654d8295-0ca0-415c-bb49-d64d947e3d98",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0a6c680c-eb90-4e28-bdfd-363cbf458cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7420bce-7780-49ea-8b2b-260665a326e4",
        "cursor": {
          "ref": "c240e8bd-8c63-4f9a-b576-4905898c5dca",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ca9261db-233a-4638-b637-4238ec744cd5"
        },
        "item": {
          "id": "a7420bce-7780-49ea-8b2b-260665a326e4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4e2fd3bd-e86c-433c-8631-6f73bba7de1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59b2eea-d2cd-4b2d-9cae-22140f4fd127",
        "cursor": {
          "ref": "39b4d0e1-250c-4cfd-aab5-08cef225ed4e",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "49dd5036-cad6-4834-ae17-2fc2c3a3c48b"
        },
        "item": {
          "id": "d59b2eea-d2cd-4b2d-9cae-22140f4fd127",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "936901cb-24ff-41e7-889b-1150e2277b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd062b2-8557-4d2c-b23c-bccb5d9319d7",
        "cursor": {
          "ref": "3fae96a1-955f-47e1-b99f-daf114f751f2",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ba058eb8-dd87-45b0-ac8a-0b262cbab4a8"
        },
        "item": {
          "id": "3bd062b2-8557-4d2c-b23c-bccb5d9319d7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "37890468-5ac0-4009-b643-05a41aa04c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c12869-6842-4c72-8d30-52f4734ae597",
        "cursor": {
          "ref": "b976ffeb-11fb-4a43-81e9-327c7c7d8221",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a6ef38d0-3d3f-4d60-9beb-75861ca38e13"
        },
        "item": {
          "id": "67c12869-6842-4c72-8d30-52f4734ae597",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a5c87455-9c01-4ebf-86e8-becaf5f2fc5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f105fe2-8985-4876-a8ad-917e0158f570",
        "cursor": {
          "ref": "557b960e-5ce1-4e35-b999-e0a766735fbb",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "aa132401-8b1c-48cf-b867-e3b647803b3b"
        },
        "item": {
          "id": "7f105fe2-8985-4876-a8ad-917e0158f570",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "28317edd-52ab-47aa-b082-3d88f54fbe16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9af213d-68ab-4ed2-aafa-e9837e071e1c",
        "cursor": {
          "ref": "ad0641b7-acd9-4b3d-8399-e03004a99102",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "08c94aa9-9fec-4085-a8a6-0d79dc478666"
        },
        "item": {
          "id": "b9af213d-68ab-4ed2-aafa-e9837e071e1c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f3ee29f0-dae6-41e9-841c-df6db526f76d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d16704-bcb3-4b22-96c4-43d95e088bc2",
        "cursor": {
          "ref": "4ccbea1f-2256-426a-94c0-df6c6b0fe9d4",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4fa9600a-7bcc-43ab-8793-3c5611709814"
        },
        "item": {
          "id": "78d16704-bcb3-4b22-96c4-43d95e088bc2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7d0ee357-82c6-4d01-9bdb-eb071d5d4f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c34e5f-fb76-46c1-adf4-69d254d70a1a",
        "cursor": {
          "ref": "ee861e5b-4b26-4e26-8095-c073481c6c0f",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e9856ac7-3a97-4dc9-ae57-d83f8ba07cd4"
        },
        "item": {
          "id": "58c34e5f-fb76-46c1-adf4-69d254d70a1a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "cfb238a2-f227-4d28-a9e8-4ebb9cfed2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f496a2-2711-4158-adb6-288f8e2cae6e",
        "cursor": {
          "ref": "6822e08b-09f5-4e74-84f8-55b0ac38f288",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "805ee9e9-b178-4c16-a873-c6f68440c25b"
        },
        "item": {
          "id": "30f496a2-2711-4158-adb6-288f8e2cae6e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "29f97cb0-7294-4ae7-844a-b15645c2a442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a2d20d-a693-47e4-8b35-37009ca2ac1b",
        "cursor": {
          "ref": "bbc9965d-020a-4c51-83b6-8f4ec3948308",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1d231027-3c8c-4553-b4c8-eb434e907849"
        },
        "item": {
          "id": "12a2d20d-a693-47e4-8b35-37009ca2ac1b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "af99e6df-cd12-4f5b-a842-147428c4ee44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc370b6d-f789-463c-93a5-36d562721dde",
        "cursor": {
          "ref": "8bec42e1-eea1-46e0-907a-2b30d9d77d58",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bb969a38-bdb2-4584-b011-ae26560fb7dc"
        },
        "item": {
          "id": "dc370b6d-f789-463c-93a5-36d562721dde",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ed894d12-f894-48e5-8ab1-83323d96ac9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87c98eb-2ac7-48aa-8d7b-ac19cd683f5d",
        "cursor": {
          "ref": "c483c894-b1f5-4210-8892-60495e150d90",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "398a5d20-72f2-48c5-b5dd-83a6e696c4fc"
        },
        "item": {
          "id": "b87c98eb-2ac7-48aa-8d7b-ac19cd683f5d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "051b8f80-6946-4fa2-a524-6f0c5668f26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654fe24b-4a6a-4e90-b3fe-e6a31b732b28",
        "cursor": {
          "ref": "374443cf-9b80-4e90-a9a6-7d5af21a2660",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fc305948-48c8-4872-968e-8df64ce1fa26"
        },
        "item": {
          "id": "654fe24b-4a6a-4e90-b3fe-e6a31b732b28",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d6090440-3b49-47ea-aa43-df6420fd220d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb145d03-843f-4d89-8e95-09c3eab0f559",
        "cursor": {
          "ref": "1b94a992-85ad-4576-a58c-9bf3b6845a70",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cbf9bb1b-1090-4511-b16c-9aa624d3d82f"
        },
        "item": {
          "id": "bb145d03-843f-4d89-8e95-09c3eab0f559",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "832ec05b-5735-4b57-9d2c-8e6873a7ea26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1d6929-ac62-47b8-96af-ec291cdfd34d",
        "cursor": {
          "ref": "23e48b60-cde6-4d29-9b3d-85b2fd62cdcf",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fb1f4c52-cda6-404b-9bf9-b69f207ec55c"
        },
        "item": {
          "id": "3c1d6929-ac62-47b8-96af-ec291cdfd34d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "02482942-8461-4280-a761-2c7162ce43ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76cf4600-8663-4790-9fd0-4df6cccd3656",
        "cursor": {
          "ref": "72c46f94-82dd-4f8f-afdd-a2d46889f9e5",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "59eb4148-c705-4284-99da-89f75a5de8bc"
        },
        "item": {
          "id": "76cf4600-8663-4790-9fd0-4df6cccd3656",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "50352425-7aea-48c1-9259-f7c3cd0775ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1170a6b4-c581-4e7e-be03-a15d0bfb1859",
        "cursor": {
          "ref": "a26f0927-e163-48ac-bf35-3727949d7ca7",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "be2f3711-db56-4c28-b14e-b788ec058519"
        },
        "item": {
          "id": "1170a6b4-c581-4e7e-be03-a15d0bfb1859",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "22bfb679-7a61-4de9-8fd6-ec8b0754f651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d98796d-adab-4a41-98cb-2fb360e7250e",
        "cursor": {
          "ref": "751c02bd-6b29-412d-8e79-bc63952a962d",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a101eed8-fd78-4e73-9b01-8133319bedda"
        },
        "item": {
          "id": "1d98796d-adab-4a41-98cb-2fb360e7250e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7b006e6f-f6d6-4fe0-ba4d-b6803cdddb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf197dfe-6c79-4787-a01e-b9b7f6acc163",
        "cursor": {
          "ref": "7b3f3740-a394-43ba-8308-182632484eff",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cca122fd-5a9b-4770-ac3e-cb27c6d14d0f"
        },
        "item": {
          "id": "bf197dfe-6c79-4787-a01e-b9b7f6acc163",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "42fbca14-6b75-4c7e-84c9-8de580bf1f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc20bf04-786d-46ba-adcb-914338d355de",
        "cursor": {
          "ref": "20e29c29-11e5-4990-8983-3baf8e52d961",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8193188f-5407-4e02-a92e-0a5ddac5fd95"
        },
        "item": {
          "id": "dc20bf04-786d-46ba-adcb-914338d355de",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2089c8e5-db5a-4cee-9748-b2c224a551e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df1f17f-2825-4305-b7a3-a240144cd82e",
        "cursor": {
          "ref": "9782d46e-b2d3-476a-b4e5-e4e8f8d0840b",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "43782f33-97c4-4851-b167-513204e7f944"
        },
        "item": {
          "id": "9df1f17f-2825-4305-b7a3-a240144cd82e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a4f4c701-6a2c-4e1c-84a1-8235a98ad631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24336955-e626-4a33-b050-6f2fad20bfbf",
        "cursor": {
          "ref": "f38a8306-2443-4c98-a58c-a43fb5a423d0",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "adfd4b6c-3fd8-44d8-9dcf-bac067a52a2b"
        },
        "item": {
          "id": "24336955-e626-4a33-b050-6f2fad20bfbf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f4157001-9519-4426-b913-fbdc612cf034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbd902f-8afd-4f99-a970-db0487e21f5e",
        "cursor": {
          "ref": "7e87e7e7-5dd1-4afe-9778-0d5b60061178",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1e4bb797-6eef-468f-908d-712b3b4a19b5"
        },
        "item": {
          "id": "cfbd902f-8afd-4f99-a970-db0487e21f5e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "90fa7651-43fb-44eb-b1d8-b62dbc930465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dc9f6a-207d-4393-8b5f-7be89986927d",
        "cursor": {
          "ref": "76ae4032-dbe5-43b4-8265-07422be7341a",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "33d969f4-9cf5-407d-ac3d-56f16027141d"
        },
        "item": {
          "id": "65dc9f6a-207d-4393-8b5f-7be89986927d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cd2ee720-b6a6-4233-8e77-12184ec97230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5059906-4716-4c42-b50b-9f2cf39379e2",
        "cursor": {
          "ref": "8ffab2ec-1f8b-4c16-8fd2-a88099b4c5ab",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "36c922cc-3e73-41a6-85c4-c1c7132e0615"
        },
        "item": {
          "id": "e5059906-4716-4c42-b50b-9f2cf39379e2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e5c275a5-a669-4fad-95fd-af23fd48fd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ca5e2e-3f83-42b4-9e6e-9d89cbf7bc8f",
        "cursor": {
          "ref": "7df6b918-0259-4c56-939d-2a415f5a02c8",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d4580e68-da9f-4de2-97ae-d897a802662c"
        },
        "item": {
          "id": "83ca5e2e-3f83-42b4-9e6e-9d89cbf7bc8f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1a3ed213-ed37-44f5-8b96-5c04ef77f13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dd8a21-d402-499e-97a8-359449e2a08f",
        "cursor": {
          "ref": "dd32fd8a-cd59-4069-9a3b-ad68194cb830",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1b03c3b7-c25c-4376-b083-4cbfbe227363"
        },
        "item": {
          "id": "40dd8a21-d402-499e-97a8-359449e2a08f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f194cf0c-9234-43ab-a9c5-7cf1d6492f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd972556-7bdc-436a-a4a8-678da56fa234",
        "cursor": {
          "ref": "b0225d67-5881-4719-9a36-fc1c6ee95094",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ee88d46e-e59a-4bb0-9c28-fce2ecfc1f8e"
        },
        "item": {
          "id": "fd972556-7bdc-436a-a4a8-678da56fa234",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "770ebd4c-b61d-494b-947b-d51bcc127b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b40fa22-7e57-4d8e-9be4-de8cb3aedcc7",
        "cursor": {
          "ref": "11db7499-3003-4ee4-8ac0-2aa16a50d569",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "81cb33f3-9d9b-4e43-b03b-f17d41d7ce2c"
        },
        "item": {
          "id": "6b40fa22-7e57-4d8e-9be4-de8cb3aedcc7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "207292f8-c649-4388-8488-e69343c12c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed96ff5-b9a6-4fdd-928f-6c5a0e11cd16",
        "cursor": {
          "ref": "a88ca8c6-5254-43d3-ae85-1fc01455bab1",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "16b80bee-f659-4452-8c06-a6a3d706f9a1"
        },
        "item": {
          "id": "9ed96ff5-b9a6-4fdd-928f-6c5a0e11cd16",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bf35e619-be74-4369-bc2f-78c391ad53da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f747d433-c68b-475c-ba4a-ffdb9b0d649c",
        "cursor": {
          "ref": "0bdf4f00-151e-465f-adec-2ecfa927c323",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7eddf227-deee-4e1f-96dd-58678e497758"
        },
        "item": {
          "id": "f747d433-c68b-475c-ba4a-ffdb9b0d649c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1d21d882-8bca-4382-adae-ae29f2bf4cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e792374-ea78-4ae6-acd2-d11c62335ca8",
        "cursor": {
          "ref": "bbedca0f-54a4-4101-a2ab-0ded3403488e",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "24fcacdb-2bc5-4212-8042-5f04ab492200"
        },
        "item": {
          "id": "8e792374-ea78-4ae6-acd2-d11c62335ca8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "97868891-88f0-4d5f-90c8-4b3b843b9d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8274550-bfd7-4c35-a85b-df33ceae7cf5",
        "cursor": {
          "ref": "c3e2285f-e31b-4bf1-8713-32793116dde0",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "110a815a-0715-4e42-ab6f-db88776963fd"
        },
        "item": {
          "id": "c8274550-bfd7-4c35-a85b-df33ceae7cf5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8f843026-c62f-4f20-baab-ea1f643b7ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494577ad-6c50-4c31-b11b-f120d2b6a1ea",
        "cursor": {
          "ref": "fef21564-16d5-47c0-8b8e-217b03c25d6b",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3516fbbb-ee06-41d5-a57e-eaaf07a1e634"
        },
        "item": {
          "id": "494577ad-6c50-4c31-b11b-f120d2b6a1ea",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "34f9032c-09fe-446f-ba50-e3d36357118b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dda0962-8afc-457d-bd48-7686b507c361",
        "cursor": {
          "ref": "180953b0-a8c4-4718-9c3e-86f19e61eca6",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d998b7c1-ccbf-4e6b-93a6-3bdf2244a4b0"
        },
        "item": {
          "id": "8dda0962-8afc-457d-bd48-7686b507c361",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0b270f16-b854-4312-a60f-84d4db340799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75216f28-7bba-4417-b4a7-c097e2c72bae",
        "cursor": {
          "ref": "8842ced9-a314-4a1a-bfa2-05fb3c5f813e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "881f2718-77f7-45a7-860b-4a451148a84c"
        },
        "item": {
          "id": "75216f28-7bba-4417-b4a7-c097e2c72bae",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "181d2eb4-466f-460c-a2d4-1270c980a912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568ee2bb-7ce6-4001-bb9a-e66170cd950e",
        "cursor": {
          "ref": "61a1dfda-1b92-4c13-bb9e-9115bf55e5c0",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "63b76f30-6bfa-4c92-84d4-7cce7d9bf1cf"
        },
        "item": {
          "id": "568ee2bb-7ce6-4001-bb9a-e66170cd950e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d0daf886-6482-435d-84b5-76002bd98e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfc4ab9-e195-48b7-815d-0b3255d5ab60",
        "cursor": {
          "ref": "a07f46c9-6cdc-4a34-b556-bbac4b9497ad",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e9523a94-5399-40fd-b5e5-79b3b56d3016"
        },
        "item": {
          "id": "1dfc4ab9-e195-48b7-815d-0b3255d5ab60",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a1adb2ec-4185-446c-9606-3ce8eb44373f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faada584-9a2c-487c-8064-8cd0345bfd2c",
        "cursor": {
          "ref": "fd7c6a22-b81b-45f6-b369-b604671a90ef",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c5786c63-17ad-490f-93ef-fddde03a4eeb"
        },
        "item": {
          "id": "faada584-9a2c-487c-8064-8cd0345bfd2c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "57eb6ed5-6c93-4239-9460-40821885c127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8ef059-1fb7-4073-8d49-2126b21fd768",
        "cursor": {
          "ref": "89586ff1-dae6-4f63-bacd-8420947dad52",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a339e1bc-4f44-4ea4-ba56-fbcee71d994f"
        },
        "item": {
          "id": "7b8ef059-1fb7-4073-8d49-2126b21fd768",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a349400d-dcf3-4c7c-a1cf-b474e2e1dd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aab56b9-15f0-4327-8a5c-bae6228c92ec",
        "cursor": {
          "ref": "431cc491-ed1d-4e60-b43c-0a792e003340",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7265d26e-610b-467c-b0a7-18b4172625c9"
        },
        "item": {
          "id": "8aab56b9-15f0-4327-8a5c-bae6228c92ec",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "44f1dccc-026f-4133-9b35-92717b309d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db28cf49-d3cf-4efd-98a8-2e6fd241e343",
        "cursor": {
          "ref": "bb4e2889-2984-463c-9974-a3774ae0e7ed",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fcf0a269-a325-4ed7-b09a-1ad5d029d051"
        },
        "item": {
          "id": "db28cf49-d3cf-4efd-98a8-2e6fd241e343",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cf930fef-9b7a-4c82-91c6-76f85155ef68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e891a5ac-3090-46c5-b2f6-65fd62d3840b",
        "cursor": {
          "ref": "06d6dfd5-aa36-4d24-8d75-67317de1930f",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "74bfaea3-1c9f-4582-9488-4e153fc67f78"
        },
        "item": {
          "id": "e891a5ac-3090-46c5-b2f6-65fd62d3840b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0d8b660a-ae8a-442d-bb57-c2a68c45fe4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e555968-5dfb-4e4a-9754-da27579b57e1",
        "cursor": {
          "ref": "2ea0908a-beda-403e-bdb9-42918618be1e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7425b6ba-06a5-40be-a205-b857b1e22c58"
        },
        "item": {
          "id": "6e555968-5dfb-4e4a-9754-da27579b57e1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "923d2218-51d5-4673-b7eb-8e5a10098b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ec5efb-1efb-4b3c-aea6-552dea3d910a",
        "cursor": {
          "ref": "1158028b-ab5d-4c73-8169-7b4c9261896b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d5d45192-50ca-4d22-a5a4-f0b9771339ba"
        },
        "item": {
          "id": "67ec5efb-1efb-4b3c-aea6-552dea3d910a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "eb963adf-d259-4569-ba08-2eaf0ad7a7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5870a926-bad7-46f8-b8f8-adfaaf6b9b07",
        "cursor": {
          "ref": "f1e2e615-321e-4a30-9a9b-342e87255a8b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "37e8bbb5-3f30-481a-a70c-7c2d658229c7"
        },
        "item": {
          "id": "5870a926-bad7-46f8-b8f8-adfaaf6b9b07",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1a9a1874-f9ba-4d19-a44c-994c001039e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4b9371-2629-4e7d-b28a-aa02ec78f3c4",
        "cursor": {
          "ref": "46c704f3-d701-4583-a589-0e126b500c24",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "691eda2e-ee73-4bfc-a6f6-33032fb56701"
        },
        "item": {
          "id": "fe4b9371-2629-4e7d-b28a-aa02ec78f3c4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3db8738e-423b-47a2-a3e5-2e8c11ca703b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f29a59-3132-408a-b7ba-459fb90117fb",
        "cursor": {
          "ref": "dec5b7d1-6527-4a0b-8286-314167b98723",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5370aacd-1ba8-4a3e-9e5e-eec480f2a88e"
        },
        "item": {
          "id": "d0f29a59-3132-408a-b7ba-459fb90117fb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1e96589c-1688-47f9-be60-d9546ee0caa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de7d3d7-d3d5-4d95-a62b-6723ff228941",
        "cursor": {
          "ref": "81e94695-f9fa-41a4-a57e-d8286cb90b14",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f30e762c-feb7-4484-8ac6-097632a3cff8"
        },
        "item": {
          "id": "6de7d3d7-d3d5-4d95-a62b-6723ff228941",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "52433f77-42e7-4127-95e4-24c10b33552a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de89a110-2502-4945-83fd-24e0e7862a79",
        "cursor": {
          "ref": "4e0e32ee-a3f9-473e-bb77-fcdaec64621e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0fe3a151-5ffb-4745-bc50-8f062f23f906"
        },
        "item": {
          "id": "de89a110-2502-4945-83fd-24e0e7862a79",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ff1019cb-b67e-4922-891f-51fd15a0571a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7de20d9-038a-425e-b860-8ee8270d3393",
        "cursor": {
          "ref": "b158097a-32b5-4e79-b9a0-86a6a6a14231",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d1f99858-74aa-49aa-ba06-ad26cbe57655"
        },
        "item": {
          "id": "d7de20d9-038a-425e-b860-8ee8270d3393",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b12dbb4d-cb31-45b5-a4c3-06d2d649d3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5c8d9b-870b-44ff-82b9-6eb29d0387e7",
        "cursor": {
          "ref": "c2d0dce1-a1b9-4702-98b0-a09771753547",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b57767d6-d8cb-4673-b762-e4af020acc1d"
        },
        "item": {
          "id": "1d5c8d9b-870b-44ff-82b9-6eb29d0387e7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bba52977-8abf-44f2-a95e-d7f972b222e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89bdafe-acab-4063-b28a-ef66761ebadc",
        "cursor": {
          "ref": "cda43b2f-a878-4094-a3fd-8cc9ee89cd39",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "87cc16b5-f334-4e72-ae56-f77dd301621c"
        },
        "item": {
          "id": "d89bdafe-acab-4063-b28a-ef66761ebadc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e7ca2547-4f7f-4f08-8b79-5e717bdb7b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60cbb3d-6956-4164-922d-4fdf1b2e9d5f",
        "cursor": {
          "ref": "37b7bc6e-b542-47a5-9777-799a692388b7",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a0a6e1b3-9a17-47ee-a426-59a7545baca5"
        },
        "item": {
          "id": "e60cbb3d-6956-4164-922d-4fdf1b2e9d5f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f376c2db-21d3-4f1f-84cc-36c7d575685e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ef0ce7-315c-47c2-b37c-7b75aa036661",
        "cursor": {
          "ref": "d06bc9ac-86f8-45ef-8a52-eddf0ab71144",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d90488c6-b947-4293-820a-64d21e88cefd"
        },
        "item": {
          "id": "c9ef0ce7-315c-47c2-b37c-7b75aa036661",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "47eb2295-152b-4059-b459-1660a5b8d8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4121b9-8232-4824-a5d2-6c2702ae2305",
        "cursor": {
          "ref": "aede278a-38c1-4b98-8254-93f5cf0e18bc",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e2716704-61fa-4b6e-ac91-8f0c2ddb5f70"
        },
        "item": {
          "id": "5e4121b9-8232-4824-a5d2-6c2702ae2305",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "50b6e0ac-3d15-4f26-9714-1f0dd7f6d229",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b7b2fa-1c78-4240-867e-2fcbbe696b7d",
        "cursor": {
          "ref": "a6f02c7a-6147-409c-8fb5-0e666509bcf9",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3d022e7a-209e-4f7c-8880-c53dad093c99"
        },
        "item": {
          "id": "47b7b2fa-1c78-4240-867e-2fcbbe696b7d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "89232106-949b-43df-a939-195e5a325039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "a353c0e0-a15a-4bb7-af06-acdcaed8fd90",
        "cursor": {
          "ref": "b9f688c1-df1e-46f5-86c6-c5ed3b37679a",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "33f4b5fc-3ea5-4a13-aa22-88c85ff7ec88"
        },
        "item": {
          "id": "a353c0e0-a15a-4bb7-af06-acdcaed8fd90",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9aaa404b-5b85-4b36-be90-458823ae0a50",
          "status": "Created",
          "code": 201,
          "responseTime": 7814,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "54413484-704d-48ce-8b35-a5dcdda203a5",
        "cursor": {
          "ref": "49af36ee-dd4f-4d9e-a27f-cf90281aac87",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e7769aa5-6b7e-4355-9383-d8224c0eb0d9"
        },
        "item": {
          "id": "54413484-704d-48ce-8b35-a5dcdda203a5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ce1686a9-c29f-4915-9545-95304f190328",
          "status": "Created",
          "code": 201,
          "responseTime": 7198,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "82394518-386b-4d53-a5db-3d2f0dd7c916",
        "cursor": {
          "ref": "126cb3cc-cb7a-4a4f-b8c4-f689f13bf501",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "df6d5c0a-e09f-49f1-98fb-1db5ed51b770"
        },
        "item": {
          "id": "82394518-386b-4d53-a5db-3d2f0dd7c916",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ab69b355-7389-4f83-ac1c-43b617d49815",
          "status": "Created",
          "code": 201,
          "responseTime": 7105,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "663776b7-205e-4b54-a3c3-87d17b4f4af8",
        "cursor": {
          "ref": "e1f9f100-7fcb-47d2-88ce-2d3590b67f6b",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "69e3d960-d1d0-4b04-b990-56f4b592820b"
        },
        "item": {
          "id": "663776b7-205e-4b54-a3c3-87d17b4f4af8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b1446340-0e17-4436-acfd-7b83ecb13bb4",
          "status": "Created",
          "code": 201,
          "responseTime": 6745,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c51c4a-9d31-44cd-9049-1104f823bc40",
        "cursor": {
          "ref": "c085b073-2bec-4410-97b1-5888c479398f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "735c179d-de11-4cf3-8c49-b41831c717f1"
        },
        "item": {
          "id": "94c51c4a-9d31-44cd-9049-1104f823bc40",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2a6de4bb-d40a-4340-ae4a-b21c8c454d7a",
          "status": "Created",
          "code": 201,
          "responseTime": 6900,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-16T00:42:38Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-16T00:42:38Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "5019fcb1-33c9-4838-93cb-1c5c610f2b58",
        "cursor": {
          "ref": "8ab839a8-e784-4609-9b83-b5cb6de44b90",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f172fa5a-7c73-4d2a-8594-c2a06be82acd"
        },
        "item": {
          "id": "5019fcb1-33c9-4838-93cb-1c5c610f2b58",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "493dfd99-bf52-4288-aeb2-25e8eea2ad9d",
          "status": "Created",
          "code": 201,
          "responseTime": 7102,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b4bc6e-93ee-4d8b-9d7a-be925f34f400",
        "cursor": {
          "ref": "037ba3f6-704d-44e5-b912-4598db11a45a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "68fb1400-b9a0-4199-9eb9-81fef48d146e"
        },
        "item": {
          "id": "25b4bc6e-93ee-4d8b-9d7a-be925f34f400",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "afe7133c-d3e5-415f-8c3a-78395f4e4579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e402d63b-2f8e-47c4-b88a-ecf9b5d3963d",
        "cursor": {
          "ref": "37d9b4d4-63f0-4c16-b8db-ce8f2609f7a0",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "672dcbc5-942f-4e90-8a17-494bae5b6c8e"
        },
        "item": {
          "id": "e402d63b-2f8e-47c4-b88a-ecf9b5d3963d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1bc7245a-195f-418c-902f-74b4e1d080de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f05a9e3-6153-40c3-bc20-cfbe8054107e",
        "cursor": {
          "ref": "04868090-6ec0-46f6-a635-8a07a0a233bb",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "500c1f9c-f273-4a76-95d1-66adbbaa5090"
        },
        "item": {
          "id": "6f05a9e3-6153-40c3-bc20-cfbe8054107e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0e6209f9-692b-4080-8979-57d3f2ab757c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3a4b1f-85a0-4859-9506-6165292dbee5",
        "cursor": {
          "ref": "30a6e64f-f7b5-40f8-a7a4-7f39606104b4",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8bb1f7d7-67f7-4afe-b382-03a2bf136944"
        },
        "item": {
          "id": "fd3a4b1f-85a0-4859-9506-6165292dbee5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b5ad49af-28b1-4dbf-9098-fb232adbc3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28dfb6f-9416-4eb8-b631-819de4f81542",
        "cursor": {
          "ref": "d1b0f22c-853c-4881-8b1e-661da3ad3408",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a1bb1e91-8d36-4383-b9bf-80a6f183ba3d"
        },
        "item": {
          "id": "f28dfb6f-9416-4eb8-b631-819de4f81542",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "74c3f354-20b6-401a-a311-00c6c20a6df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0080313b-3f3f-49fc-bc2c-2591cdda3169",
        "cursor": {
          "ref": "df7fd604-ba22-4357-8d0d-d7bb860fd098",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1e5816df-ef63-4199-85d4-3d076d80f0f4"
        },
        "item": {
          "id": "0080313b-3f3f-49fc-bc2c-2591cdda3169",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cedbe09f-0059-40ca-91eb-c886d1a9a36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e3be6a-75cb-4521-8b03-86975ffd2b6a",
        "cursor": {
          "ref": "c92abaca-4f55-4e8b-8f84-c2759a7b1d88",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fc44b5a4-63f7-4309-9209-d750c24e639a"
        },
        "item": {
          "id": "d6e3be6a-75cb-4521-8b03-86975ffd2b6a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "11dbc825-007b-4ca6-945e-76f2c2e335f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e476c3-e87e-46c1-be95-9398f6e8935b",
        "cursor": {
          "ref": "96d8ec52-b913-4c64-9286-d17c6f804993",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d8de4580-c397-4564-801c-894d73ed26ed"
        },
        "item": {
          "id": "13e476c3-e87e-46c1-be95-9398f6e8935b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d114520c-dcca-4c30-830b-40c9444da461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038d77ba-395d-4f13-a5c3-1ad93b27cb28",
        "cursor": {
          "ref": "ee942424-0122-4472-8d49-d6395d4f850c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3b4a5882-8a82-4465-bc41-c9f059f5431e"
        },
        "item": {
          "id": "038d77ba-395d-4f13-a5c3-1ad93b27cb28",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ea0a4c6f-8991-423a-b009-40bcab8cb1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c007ac-4717-4280-b366-461bfb3c564b",
        "cursor": {
          "ref": "d482d1ba-10ce-48f8-a716-ba48c3aaff37",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e18fc8ff-468f-4c22-85eb-09a92cf21209"
        },
        "item": {
          "id": "f4c007ac-4717-4280-b366-461bfb3c564b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c1893b6d-1851-4926-9239-4e1985a2c25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66b142e-638e-4446-bfb8-e93bb666ae39",
        "cursor": {
          "ref": "365cf05f-4ddb-4e6b-be49-dd2a7eb57c13",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7ea5ccf3-4679-4798-8496-3d79f6950934"
        },
        "item": {
          "id": "e66b142e-638e-4446-bfb8-e93bb666ae39",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5163f9f3-783a-4858-8c04-fbee00cf96ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4623ad74-a944-4f8b-8430-9df8ed13518d",
        "cursor": {
          "ref": "152a1688-b661-4b75-8671-62d5783ac14f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "51bee310-6b22-4b7d-b001-bc35bb3e1b00"
        },
        "item": {
          "id": "4623ad74-a944-4f8b-8430-9df8ed13518d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b60e0332-9151-4ff4-a682-0f74c6a84af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f0d9f0-23b6-425a-b2eb-ce22dcbe82f4",
        "cursor": {
          "ref": "042888ed-7527-403d-a23a-7fe47b19127a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "89e6f4b2-d3f1-4132-8b49-41a0ead6ee38"
        },
        "item": {
          "id": "96f0d9f0-23b6-425a-b2eb-ce22dcbe82f4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "352cca5e-191b-438a-ba75-16ac17e6b38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6ec7dd-7d6d-452c-ac5b-14c2b15188e2",
        "cursor": {
          "ref": "21001a07-2d02-4dd8-bf6a-6ca72fe840f0",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "60dbb616-9bb7-4ea0-80b0-426a5b9857dd"
        },
        "item": {
          "id": "7d6ec7dd-7d6d-452c-ac5b-14c2b15188e2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c9273750-d4b9-4c1b-83b3-140159b25167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfc73d4-afd4-4d10-a847-3860079853ce",
        "cursor": {
          "ref": "50e61492-7146-4152-ac37-d30e41880e07",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9d75b2c1-f978-4156-ad0d-fc6f7c4134a4"
        },
        "item": {
          "id": "7bfc73d4-afd4-4d10-a847-3860079853ce",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1170aa04-464f-4f74-8455-867c0519b6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b844d68d-6510-475e-9f17-71b9dfd3e909",
        "cursor": {
          "ref": "1efc3b1c-258a-4600-a997-633f69c8209b",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1d7a6dc1-4db0-46c8-a55b-7538ce46c51e"
        },
        "item": {
          "id": "b844d68d-6510-475e-9f17-71b9dfd3e909",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "af9fbbe9-5f6e-4a38-8ea9-5e1cc5bc01bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc74655-e2f9-40e2-b042-ea8489a6324f",
        "cursor": {
          "ref": "804bdff3-ac4f-4a02-8bbb-b60d6c45d4dd",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9c33cb53-8877-45a5-9165-64c76c967c7e"
        },
        "item": {
          "id": "4fc74655-e2f9-40e2-b042-ea8489a6324f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7089c78b-ccec-42d9-a359-391de17af8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b96f88-8751-47fe-9cdc-4eb882014fd1",
        "cursor": {
          "ref": "71f779ca-c1bb-4d39-8b20-2bdafd9b7a32",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "668c1247-4826-4546-8edb-ccba055d26f0"
        },
        "item": {
          "id": "31b96f88-8751-47fe-9cdc-4eb882014fd1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3570bd10-84e8-413e-9d64-52a6a9a16b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a354f2-9342-40fc-a53e-b02d0cc9f96d",
        "cursor": {
          "ref": "0ad80f8e-6bad-4903-b9c5-7d6c27c5b4ed",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7a0f7304-fb49-4793-93ae-cea20140c633"
        },
        "item": {
          "id": "c5a354f2-9342-40fc-a53e-b02d0cc9f96d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "67e7ae2e-4cf9-49f4-ba68-7e5ada802185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a117734b-918e-438f-b630-93541d3db8c0",
        "cursor": {
          "ref": "16f789b2-190e-4ad4-b673-1667b761ce74",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c0d7e27e-455a-4ddc-856f-4c0e2f4e3a18"
        },
        "item": {
          "id": "a117734b-918e-438f-b630-93541d3db8c0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6c328103-d004-4ad6-b467-81653f995699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dba35fd-6ef0-45e3-aa92-2bb279fedb9e",
        "cursor": {
          "ref": "65198004-dcc5-4f95-a30c-8b2ef093d414",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3866aa64-eb53-4869-ba5f-e955ea35481f"
        },
        "item": {
          "id": "2dba35fd-6ef0-45e3-aa92-2bb279fedb9e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "632d3482-11c5-4a53-917f-ff8369b4b6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a277daac-a92a-4c3a-b7cf-d2b7a03111e5",
        "cursor": {
          "ref": "5a99a0b3-6e45-4178-bd79-7cc467cbb72a",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6f11d87b-b7d6-4590-8e02-f59e28d58de2"
        },
        "item": {
          "id": "a277daac-a92a-4c3a-b7cf-d2b7a03111e5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8b7ab040-8e98-40f3-baf0-094aec55508e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c18217-dc01-4ae4-aa79-d0a5b14f67b2",
        "cursor": {
          "ref": "3c083045-1c81-44ba-8abb-5ccc8b601d29",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "274de526-75ec-4a6b-a6f9-a8d8b8e3acd1"
        },
        "item": {
          "id": "80c18217-dc01-4ae4-aa79-d0a5b14f67b2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d5dd8552-bb16-428a-8c7b-b11b7559891f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962e1caa-c2f7-41fc-98c0-1594e1f3e321",
        "cursor": {
          "ref": "255820e1-efc7-4adf-9ab5-2b574f75637e",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1d07c3ca-0e52-44b5-96e7-e4ae6431d057"
        },
        "item": {
          "id": "962e1caa-c2f7-41fc-98c0-1594e1f3e321",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b3895105-d851-476f-bfda-62deee20110f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491022e7-94bb-4dd9-94d0-7c9809f7d06c",
        "cursor": {
          "ref": "84c3dd4b-6803-462b-a3a7-1c3d1ad2c010",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4ec51e68-f610-48ee-9732-46575462961f"
        },
        "item": {
          "id": "491022e7-94bb-4dd9-94d0-7c9809f7d06c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c066b964-e712-4a10-ba46-fcafc58f51e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871cfbc9-2759-4e6f-b926-b660de3af871",
        "cursor": {
          "ref": "6417dc48-d83e-4dc8-86e7-359d482d7442",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "77833b9b-a0b8-455d-8b3d-fda0b0eeae59"
        },
        "item": {
          "id": "871cfbc9-2759-4e6f-b926-b660de3af871",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ae29b023-c2e3-451f-a50e-93bc85ad5ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c6a3c8-3cff-4cbe-b403-350288bf057c",
        "cursor": {
          "ref": "13225458-93cf-4050-9fa9-793c9384b6cb",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9d23baa5-51a9-4204-94ce-0cb5df83b06c"
        },
        "item": {
          "id": "05c6a3c8-3cff-4cbe-b403-350288bf057c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "afb1474a-07fc-4a33-8d96-b9b0109bf7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21409831-2490-4023-8ced-47362f915f15",
        "cursor": {
          "ref": "5701e00b-1181-465a-a8de-88958e4e6116",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1d860be0-fc7b-44f7-a42f-29b269015d19"
        },
        "item": {
          "id": "21409831-2490-4023-8ced-47362f915f15",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b40fe767-5e07-43c6-aa79-44856d5177d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4121c5-04db-4a5a-9a77-e4fff24c4545",
        "cursor": {
          "ref": "f7cbb442-c0b0-46cb-a09c-74f4b0abbd10",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "409c5381-3d96-43d2-8bbc-b7520fbb02a2"
        },
        "item": {
          "id": "6e4121c5-04db-4a5a-9a77-e4fff24c4545",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cfc4974d-7801-42f7-bdfa-8f0f5f46a527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126be8cb-aadf-456b-92c7-014937c292a9",
        "cursor": {
          "ref": "072fc633-ea01-49de-9175-638c81fc09ec",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f1f577a8-508b-4e0f-a395-37bd9ee7d8d9"
        },
        "item": {
          "id": "126be8cb-aadf-456b-92c7-014937c292a9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "45a86b06-de3c-4727-84d9-f3fe222b8276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446eb049-1355-4e8d-bc71-d785f97faf90",
        "cursor": {
          "ref": "b7bceaa8-9a45-4535-8e0b-cbc3178ed694",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ba58956f-df84-41c0-8763-db3aff4ca441"
        },
        "item": {
          "id": "446eb049-1355-4e8d-bc71-d785f97faf90",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7fd81bba-3af3-4851-89ff-73819967e5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc970f17-a601-481b-ae3f-b78929c820b8",
        "cursor": {
          "ref": "edc9d886-b1b2-43bc-9aa7-d0e56a09ddda",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8ece35f0-5d18-4550-8c74-7570aae9ccce"
        },
        "item": {
          "id": "dc970f17-a601-481b-ae3f-b78929c820b8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d72f0674-8ed3-4311-a32b-7150fc946781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e11d128-a6f0-4c32-92a2-fc4662039613",
        "cursor": {
          "ref": "6fd84f8a-44ca-4dd0-87ab-e042e383bc47",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7e505c0e-46c7-4e36-b101-dae9ca2764d7"
        },
        "item": {
          "id": "9e11d128-a6f0-4c32-92a2-fc4662039613",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a47e4027-154d-4782-b1b5-e5732466a019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c12630e-e46f-46bc-98a6-2f5f32e21133",
        "cursor": {
          "ref": "0a4e3932-4d38-46e9-8330-d6ab87e4c6b9",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e54e6719-a723-4314-a1f1-e9d324dcff20"
        },
        "item": {
          "id": "3c12630e-e46f-46bc-98a6-2f5f32e21133",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c94889c1-d270-4ffb-be8f-31dc8bc078ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71d3810-4204-4495-b3fa-698193aa3e73",
        "cursor": {
          "ref": "05d5c0da-f255-4275-8afb-061f48486c8f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "440f6ba5-86d6-48f4-81e2-10cbe28c13eb"
        },
        "item": {
          "id": "f71d3810-4204-4495-b3fa-698193aa3e73",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2d56902f-ab6e-4b2d-9287-6dab8f12077c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177c6ffb-958e-44c2-8c1c-c0a6f4128272",
        "cursor": {
          "ref": "69262633-2522-40ab-99b4-515289b737c0",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "491dd1e3-709b-477c-95fd-fb39b54d1311"
        },
        "item": {
          "id": "177c6ffb-958e-44c2-8c1c-c0a6f4128272",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1d31b539-69ac-4449-a4d0-bf4a313f5622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdeec4d-f51e-479b-98d7-f596df5bd978",
        "cursor": {
          "ref": "9c148280-0b97-4467-a2cd-ee72445e30f4",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "64bb38f3-f00e-47d1-9182-74ba7b4c0dfe"
        },
        "item": {
          "id": "0fdeec4d-f51e-479b-98d7-f596df5bd978",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d704ff41-169d-4544-9421-62b8547f9a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b76a5d-029b-47e2-a1ad-279048571c66",
        "cursor": {
          "ref": "7da5431f-3be6-4fa0-834f-7bc60d295e05",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "06100009-9a7e-41e2-91f5-aa16a6ec9eb2"
        },
        "item": {
          "id": "66b76a5d-029b-47e2-a1ad-279048571c66",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bf93cb96-ad7e-4fb6-b570-e0e47bc655f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768d3154-21c2-4eaa-aa92-d66feea9848e",
        "cursor": {
          "ref": "20d2666d-a8a6-4210-9604-a2bd9793f373",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f87987b3-a195-4282-94a8-f4b978a73033"
        },
        "item": {
          "id": "768d3154-21c2-4eaa-aa92-d66feea9848e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cc5ab772-39df-48b8-9798-10aaf35b53a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a2e043-c37d-44e7-be62-792e8578ee7b",
        "cursor": {
          "ref": "195c170b-6bc5-4b19-a6ce-5a436371e076",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a175b479-6480-47fc-b1b2-7a18daa11cb5"
        },
        "item": {
          "id": "22a2e043-c37d-44e7-be62-792e8578ee7b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fa386605-a954-4aec-ad1c-fe5d76b1c0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5992bba-6d77-4afa-8023-e0d1aeb971f9",
        "cursor": {
          "ref": "f7fcf59b-5ab6-4a22-99cb-4307897e18dc",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0316d61e-8a9f-4cba-8aa9-a561e21f6d97"
        },
        "item": {
          "id": "a5992bba-6d77-4afa-8023-e0d1aeb971f9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b289496b-5dd4-4569-add6-7282b8db42ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2d849b-79bd-4438-a8a9-f350c62a7b59",
        "cursor": {
          "ref": "cb7bede1-6780-4438-aacd-e8dbfa096b8c",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a8b2b9f0-58c1-4692-a8f3-24503bd663c8"
        },
        "item": {
          "id": "ab2d849b-79bd-4438-a8a9-f350c62a7b59",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fd66c3fc-15b9-469d-9a59-844ce5b73cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e942fdfe-a6e0-4b0c-9cbf-ba74ae9ba577",
        "cursor": {
          "ref": "6335564c-1876-4fdc-8ae6-45757f308787",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "41c4a822-a24a-4e6b-bded-dcb6d7ccfb82"
        },
        "item": {
          "id": "e942fdfe-a6e0-4b0c-9cbf-ba74ae9ba577",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "dfd23e72-16bb-4ad3-834b-ad10c3ddf8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2453bdcd-5ff2-4a5a-8425-7cc7b0a25ad6",
        "cursor": {
          "ref": "b1226135-46c2-4842-8556-6b1c2236883f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3d54a0d8-fce5-4a45-b601-3eae4ac635ea"
        },
        "item": {
          "id": "2453bdcd-5ff2-4a5a-8425-7cc7b0a25ad6",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5185176e-a287-4b08-a247-6ba32469fcaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84500e9f-90fd-411c-b0a7-34de82c801d5",
        "cursor": {
          "ref": "414d091b-f8c4-46de-bf9a-4fa357e2337b",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "60c0b972-d615-40d3-bbad-d5ada41cf6d8"
        },
        "item": {
          "id": "84500e9f-90fd-411c-b0a7-34de82c801d5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9a9647b7-c52d-4c83-a1f5-c4e6a290756e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13328aa-6e95-40ec-9a2c-bd534c7ac59c",
        "cursor": {
          "ref": "da11d943-98af-4b85-aaa3-6397d88a9e7f",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d581cc7c-56fd-41a3-8a98-ea46f812cc90"
        },
        "item": {
          "id": "a13328aa-6e95-40ec-9a2c-bd534c7ac59c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ad49d9e8-7d41-4a03-ba40-7e4adb533ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc96294-a77f-4d40-8c3a-1a1cd11c6298",
        "cursor": {
          "ref": "d62719a7-d2fc-49ce-bb6a-2f7b3b7c30c4",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "640f68a1-d918-498a-9304-4843c87564dc"
        },
        "item": {
          "id": "efc96294-a77f-4d40-8c3a-1a1cd11c6298",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d2c88076-d265-4f22-8698-ea87deaa9d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60523a4-4210-4987-a751-ce7b1d1c98ae",
        "cursor": {
          "ref": "c71dc0e6-c409-4117-bc28-3e3606dafe01",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9c055336-a819-4afd-80e5-de0c011e653b"
        },
        "item": {
          "id": "a60523a4-4210-4987-a751-ce7b1d1c98ae",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4b2dee10-aba7-4517-848a-d54bf4428f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5142d5fa-e7f5-45d4-ab6b-3404cff65158",
        "cursor": {
          "ref": "ae7e0cf8-c06b-40c4-90cf-31f74db566fa",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "060a6b10-30e1-4539-90fc-4b53e6dc6875"
        },
        "item": {
          "id": "5142d5fa-e7f5-45d4-ab6b-3404cff65158",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "981ca507-dd1f-453c-9021-bdbee08cf408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bcacd4-d137-45d4-b4fb-e72ae5373c93",
        "cursor": {
          "ref": "e45483b3-e3a0-4833-9adc-a61a9630afc8",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4491093e-f1a8-45d9-932e-ab4c28b420ad"
        },
        "item": {
          "id": "b6bcacd4-d137-45d4-b4fb-e72ae5373c93",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e195cf56-6f8f-4832-8564-f1ac423336b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c908de-b609-4fff-bae6-4885303748b4",
        "cursor": {
          "ref": "2fb795f5-4226-462c-b9f3-051ce0d8ee3c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "164caa9c-6343-4550-a8bd-97b97e1be850"
        },
        "item": {
          "id": "f8c908de-b609-4fff-bae6-4885303748b4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "121fac34-b700-41e7-b0b4-66b7a781a18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9d7efe-667a-41c7-b3bf-95740da3b0b1",
        "cursor": {
          "ref": "d8aab2cc-c0e2-4593-81d7-1eec1d1bd102",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "47faf6db-4a67-497b-bac2-d6bb24ae8c53"
        },
        "item": {
          "id": "9c9d7efe-667a-41c7-b3bf-95740da3b0b1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b9c20bc6-8e72-4448-8f72-8fa1c6bfe0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf6d6c2-dcef-433b-912d-3ec089582d49",
        "cursor": {
          "ref": "c9e8c3ce-7451-4087-a3aa-98478d0edcaf",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5b6e920d-2fea-428a-af07-6d42388304f8"
        },
        "item": {
          "id": "bcf6d6c2-dcef-433b-912d-3ec089582d49",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "35a1a987-fb88-4e33-b945-af7a33a7aabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a5a130-b7ff-4b89-9a53-5002dab13d0c",
        "cursor": {
          "ref": "20058b46-8656-4b11-9429-965a440b833d",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "936f67c3-5ae8-4a2c-9ea9-8f633a741876"
        },
        "item": {
          "id": "c3a5a130-b7ff-4b89-9a53-5002dab13d0c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e244216f-3d94-4ba5-ba96-3cf5abd00376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab184a7-0a46-478e-8891-617d33aaf47c",
        "cursor": {
          "ref": "35fe70f7-8393-447f-9807-1a0c824e2a53",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a9e159d8-41e2-4f0e-9caa-6e7e4721998e"
        },
        "item": {
          "id": "3ab184a7-0a46-478e-8891-617d33aaf47c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bee51e19-b7c2-4d53-904c-5bab2c85b298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2136a611-643f-400c-8a6d-818c7d1a5d9d",
        "cursor": {
          "ref": "67b885de-649a-4d56-a8f5-df93c7bd45d2",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fe12db53-2f56-4ce0-9355-a786c958cc90"
        },
        "item": {
          "id": "2136a611-643f-400c-8a6d-818c7d1a5d9d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b9edcb17-a06c-4530-b9bc-a640dd8e1382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7419075a-3cd9-4f6f-b154-9140fc15953a",
        "cursor": {
          "ref": "e28a0f9a-b248-46a6-b1ad-dca748e5a136",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fc2c0844-5858-41ed-96db-d1aa81e8ffdc"
        },
        "item": {
          "id": "7419075a-3cd9-4f6f-b154-9140fc15953a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a19d8ca9-70e2-4935-9708-0b03d0cd1044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a42144-f043-43a3-89d6-cd4aea589ab1",
        "cursor": {
          "ref": "5d4e94ea-4475-4665-94eb-02573f744a90",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "21926c64-be37-4cb6-b076-50ac7f7f995f"
        },
        "item": {
          "id": "d4a42144-f043-43a3-89d6-cd4aea589ab1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cb7934e7-9e72-4426-bac0-5423d4a51d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866fb4c1-b213-4e8e-ad62-9ceaf267c8c6",
        "cursor": {
          "ref": "d182dda4-0836-49ce-beca-e31a1417290e",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "367ec590-b5e9-4b48-8d7a-9336cd831c12"
        },
        "item": {
          "id": "866fb4c1-b213-4e8e-ad62-9ceaf267c8c6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "89ed5d53-d3e5-427a-ac54-3df29a7c7bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afb6695-3874-4ea2-901f-57a6ddadccd4",
        "cursor": {
          "ref": "ca1f579a-b308-4976-9942-29e4f1172def",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dec7cf66-f5e1-4f51-a58d-aeadf4b5f725"
        },
        "item": {
          "id": "8afb6695-3874-4ea2-901f-57a6ddadccd4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c56598d1-9244-4d9c-9bb5-97d84aeda1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57b1184-22a7-4967-9734-0c73bf59243c",
        "cursor": {
          "ref": "2fcb7ca8-1ef9-47e0-86c4-b5f23adcfd7d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a3d7b1e6-d38f-41c3-adca-b64be5ee22c8"
        },
        "item": {
          "id": "c57b1184-22a7-4967-9734-0c73bf59243c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d5d4abd0-de24-4f76-a4a0-c3684a683666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8675fdf1-4cd6-45f6-ad1b-c0384f78b0e8",
        "cursor": {
          "ref": "fa9ff85f-d502-41c7-a28d-7e68fe4f7f9f",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2cf7c15a-71af-487d-a042-c6c45b99ae00"
        },
        "item": {
          "id": "8675fdf1-4cd6-45f6-ad1b-c0384f78b0e8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "39f415ea-ce34-4615-8361-7ff0db1bc871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e701e2-34a6-4ca0-99e9-85418b72b549",
        "cursor": {
          "ref": "5a42380e-c7a2-499c-a6eb-566919c881a8",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2330fcfe-cbfb-4a57-8591-f48ce90301ff"
        },
        "item": {
          "id": "e6e701e2-34a6-4ca0-99e9-85418b72b549",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0d2bd11c-07ab-4920-aa82-68c47ada7955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8147d825-a074-4ca8-b1f8-ac9fc64b77b6",
        "cursor": {
          "ref": "88533982-5b11-4b34-a0dd-79edaab333f7",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "11eb4911-c00e-4519-960e-e23ab6fa1316"
        },
        "item": {
          "id": "8147d825-a074-4ca8-b1f8-ac9fc64b77b6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ba0ba0a0-125d-4d1e-b897-0cd8bbc52562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723d5e0c-0fa0-4894-9c5f-808d8d1cd140",
        "cursor": {
          "ref": "99c341da-7713-4668-9d29-07e1edd72117",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6016915e-e4c9-4aee-8481-78fe211a20f6"
        },
        "item": {
          "id": "723d5e0c-0fa0-4894-9c5f-808d8d1cd140",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c94d199e-0592-427d-83a7-30139890c5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bc50cb-f665-4f0c-9874-f1c216051d17",
        "cursor": {
          "ref": "726ba9c4-4219-4521-bfda-355be339bafd",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3f466a82-a936-496b-badc-ef7a7b80b2d8"
        },
        "item": {
          "id": "55bc50cb-f665-4f0c-9874-f1c216051d17",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "30eb6e82-1758-4449-8c52-31ed13a00c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc918414-489c-4d42-9295-785981923257",
        "cursor": {
          "ref": "4e17730b-bd17-47df-9ba2-74b5ce15c4cc",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4d511718-6aec-497a-af21-9e4339959cd8"
        },
        "item": {
          "id": "cc918414-489c-4d42-9295-785981923257",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "eaa48f96-3c11-4b7e-a161-de016e37c4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7b2d4a-3f8e-4a4e-857e-1c8236d32032",
        "cursor": {
          "ref": "7f3646d7-b2d0-4f4a-8a09-956dece8c547",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b6147d0c-bde1-496f-a790-9129d91eecb8"
        },
        "item": {
          "id": "ad7b2d4a-3f8e-4a4e-857e-1c8236d32032",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5cc94c2e-80ab-4364-919c-07d500640aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15165b02-be4f-423c-a4bf-65337971e459",
        "cursor": {
          "ref": "0ae21dff-5cd4-4777-a767-203ac77a1397",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e208f0d2-4bc7-46fa-8566-5c44e3c5c46e"
        },
        "item": {
          "id": "15165b02-be4f-423c-a4bf-65337971e459",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "485c0938-de29-46fd-9e2d-5079f721286b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e413dc-9132-4533-974f-983979a1a63c",
        "cursor": {
          "ref": "00ce47c5-6a93-47c5-a590-8133a03dd4ec",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "345cf763-e679-4b0c-9526-3c1a0973619e"
        },
        "item": {
          "id": "07e413dc-9132-4533-974f-983979a1a63c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c56b41a3-51cb-4880-a540-619d4a5b6157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b46a5f-b5bd-4d89-8fc7-b5d76aaa35a6",
        "cursor": {
          "ref": "f81114aa-6175-4884-87a9-ac3d105d7526",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "86628d43-ac37-4812-b30d-4338da9691cd"
        },
        "item": {
          "id": "71b46a5f-b5bd-4d89-8fc7-b5d76aaa35a6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "57b18d54-9360-4853-9f7f-f261d25f0762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4553962a-7193-47d1-99a6-dae6061eb87b",
        "cursor": {
          "ref": "0eb4803a-86b0-419c-a9cc-eea2e496a13d",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9dcdbb55-787c-4b3a-ae49-a52992947553"
        },
        "item": {
          "id": "4553962a-7193-47d1-99a6-dae6061eb87b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f0149e93-bf77-4065-b0c0-e35e7e7e8f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd2d9ab-7212-4db6-b8b2-ef2b48e700e5",
        "cursor": {
          "ref": "9535a02f-5bdb-45e0-85db-59826c6b1c5c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6558682d-ac8d-4d73-9fc8-5f85927330b0"
        },
        "item": {
          "id": "bbd2d9ab-7212-4db6-b8b2-ef2b48e700e5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "14cb009b-a23a-4a0a-a713-6b012523be0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9549bb88-1271-4e78-8956-ff1ccefd917e",
        "cursor": {
          "ref": "406b70b0-3fe7-43cf-a8c3-a28087bee131",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f6433ae7-bdbc-4026-aeb2-0aa7b7b41808"
        },
        "item": {
          "id": "9549bb88-1271-4e78-8956-ff1ccefd917e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "aeb61d33-679e-41cc-80fc-4bfe915ffb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7f9676-1d61-4707-b847-b00f7811895d",
        "cursor": {
          "ref": "be24657b-9865-48c0-b11d-1fc0e1972bf0",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3c2e8927-56e8-48d6-bf19-2fcae5bc1966"
        },
        "item": {
          "id": "da7f9676-1d61-4707-b847-b00f7811895d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "191fdc77-87a0-4e04-b5e5-e72e81170407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19148c1e-5994-425d-96a1-066716a836c4",
        "cursor": {
          "ref": "df121cc3-e93b-4e38-9c87-16e9d8c24cb9",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b9fb084c-5062-4781-b968-bd12fcaa6dc7"
        },
        "item": {
          "id": "19148c1e-5994-425d-96a1-066716a836c4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ea34b9a2-cff1-4411-b3dd-13038c0a6a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b8f34f-c38a-4951-9787-0f9e89e02a5c",
        "cursor": {
          "ref": "a161651b-1004-4d82-b2c8-78431606f77b",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d8f28258-d8cd-4254-bb88-c92570cae602"
        },
        "item": {
          "id": "89b8f34f-c38a-4951-9787-0f9e89e02a5c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f8be07a0-da14-4034-a50a-8e25862730fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4ee202-abe8-4ff5-989d-a779028586b2",
        "cursor": {
          "ref": "55104c31-024f-4a7b-ad19-f5fecbb9fd1b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ce8ac66f-f0a0-4f7f-b659-33056cb4a7a3"
        },
        "item": {
          "id": "4a4ee202-abe8-4ff5-989d-a779028586b2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "81c2263c-5bd1-4b10-bac2-432d08283e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07c5daf-f46a-4fa9-81b2-6c679c611cd5",
        "cursor": {
          "ref": "7e4a3cb6-0642-449d-8862-c96420820295",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f1ea900b-8c38-42b0-a69f-563a5c5b5afe"
        },
        "item": {
          "id": "c07c5daf-f46a-4fa9-81b2-6c679c611cd5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0f008d3f-f5f4-4ff1-aca2-f6940e61ea4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f7c915-04c7-4017-a0e6-e03c80590672",
        "cursor": {
          "ref": "c2ae635e-d0e2-466b-bcfd-a380363e7252",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "553397b3-8ad2-4b93-bf92-c1d1ea567f54"
        },
        "item": {
          "id": "a4f7c915-04c7-4017-a0e6-e03c80590672",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "920a4041-630d-45c1-8685-8140484b7adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fd1983-a9eb-4fec-96a5-c2a1f622953b",
        "cursor": {
          "ref": "d9a86890-e54e-431d-92b5-3ad4631a72ec",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "73e652b3-35eb-4b91-8789-8ba2c02b620c"
        },
        "item": {
          "id": "88fd1983-a9eb-4fec-96a5-c2a1f622953b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ba30bf40-4cd4-4e98-a785-356b4e8111b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2175695d-09dc-4546-9fb0-9802d238f911",
        "cursor": {
          "ref": "35c19281-a822-4112-8faa-846f1c4ad8fb",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "55e04b5b-0721-4b69-bb0c-c8dbb4cc7b9e"
        },
        "item": {
          "id": "2175695d-09dc-4546-9fb0-9802d238f911",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3fb1fe0a-ed48-4e90-80a8-7d2c439c0f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a742ab9e-4069-4e96-b27c-03386c0e7b43",
        "cursor": {
          "ref": "493c4624-00ef-4852-a5be-93178d306f5f",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0d79694a-e909-4434-aed6-f8c4694d830e"
        },
        "item": {
          "id": "a742ab9e-4069-4e96-b27c-03386c0e7b43",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "037839c0-22a8-4f4d-b435-2bfaa14ca627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6822e655-6ceb-45aa-a49a-569d775d4ba3",
        "cursor": {
          "ref": "1d549ce9-c2bf-44bc-851f-833177a63ac4",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1b107c3b-68f3-4f4b-8cf1-02bf7d9726de"
        },
        "item": {
          "id": "6822e655-6ceb-45aa-a49a-569d775d4ba3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1bcee50f-1f9c-494d-8c41-fe98047c0f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b85575-cc54-4417-8c27-2db6eab2225b",
        "cursor": {
          "ref": "f6466f0b-3279-49b1-970c-b5eb511f67a0",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bd11a4b5-e03b-493c-baf6-c150f62c61f7"
        },
        "item": {
          "id": "e4b85575-cc54-4417-8c27-2db6eab2225b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e565991a-6a46-4e64-862c-a6606e8996c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3f9386-5815-4470-ad44-77769d968646",
        "cursor": {
          "ref": "9104957f-b544-461d-99cd-5bf69cc7d8a7",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "31826de4-0508-463e-80d8-a0410183b1bb"
        },
        "item": {
          "id": "7c3f9386-5815-4470-ad44-77769d968646",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fbe6788c-1323-499e-99cc-fdecd59e9417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f113275-4a64-47bd-a875-61798b368ff8",
        "cursor": {
          "ref": "fdc78e14-24f9-4de1-8121-2160cb7c2a2a",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2cc3abac-a348-4d94-b2c5-157c6b83f072"
        },
        "item": {
          "id": "4f113275-4a64-47bd-a875-61798b368ff8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cce5010f-1e2a-49f3-91c8-2e95919975e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84d445c-dda4-4be3-b0ca-234f9b8a4fc4",
        "cursor": {
          "ref": "b12dc887-90e6-44aa-ba96-9cb3aa412ea7",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "56b59420-f8c7-446d-8b95-d9ac4b8d69b5"
        },
        "item": {
          "id": "c84d445c-dda4-4be3-b0ca-234f9b8a4fc4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "777c7a19-cabe-46a2-9b2e-eeafaf5b2f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2cc8de-94cf-4d11-b7fe-42d40001fde9",
        "cursor": {
          "ref": "ea76ebd9-d7f9-43da-bf22-6acebd41fe90",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "befe7744-e3e0-4149-b172-bca15304f21b"
        },
        "item": {
          "id": "2c2cc8de-94cf-4d11-b7fe-42d40001fde9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a1d4fa57-f432-45b0-a29b-98a8cc4e7be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2a1a6d-19fd-40fe-b470-8364f3652626",
        "cursor": {
          "ref": "91c1fc60-57f6-4baf-8d54-5527a6503037",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "88218f8f-a4ed-41dd-a853-2f18fc2d6d3e"
        },
        "item": {
          "id": "8a2a1a6d-19fd-40fe-b470-8364f3652626",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5f6b043e-853f-4e68-8016-209b0c52fa39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19a42cb-1e64-4d3e-a9f5-67cd738172a6",
        "cursor": {
          "ref": "1b4a7596-7809-4a3d-8ce9-8fe3ba67d985",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4460df42-f32e-40f8-a6e3-a7957b4c04f0"
        },
        "item": {
          "id": "a19a42cb-1e64-4d3e-a9f5-67cd738172a6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7c1cd1b6-f6b2-444b-bd7d-c36188e858d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78116e6-234c-40db-b9fa-febb35b1b2ae",
        "cursor": {
          "ref": "9ddea344-967e-4e30-af79-a70c8b58d697",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d5f72c0b-ae1a-4b96-9e96-edc69e09094d"
        },
        "item": {
          "id": "e78116e6-234c-40db-b9fa-febb35b1b2ae",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5c264007-127a-4b2c-8491-cb27ab8a47a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73302a04-5202-4551-afca-f19026fe1041",
        "cursor": {
          "ref": "906af30a-4940-48e7-afde-1f90783eae15",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "385def67-59af-4eaa-a308-24d3a16f477d"
        },
        "item": {
          "id": "73302a04-5202-4551-afca-f19026fe1041",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a4e27adb-07f9-4d87-94c2-1a63fd42e18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bd3468-ec07-48f3-8fe7-a17a80c6411c",
        "cursor": {
          "ref": "5c5b5ceb-046c-4b99-b15f-f45d831a70a3",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6d9c6d08-cd48-48ae-8d5f-9d10f0b749b1"
        },
        "item": {
          "id": "60bd3468-ec07-48f3-8fe7-a17a80c6411c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2384b298-cbcd-4ae7-9b46-9347bf2e6831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afac2e5-209e-4d18-bcb4-8182ccc1731f",
        "cursor": {
          "ref": "b2160e46-22c5-4a30-a4ad-9216a6964c16",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dbd58013-8215-476a-81f1-ef66137f1c1f"
        },
        "item": {
          "id": "0afac2e5-209e-4d18-bcb4-8182ccc1731f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c8665388-473a-47cc-8b16-a8070c1d9bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d40d2f1-7495-43a0-b6fc-4c9bffc7b618",
        "cursor": {
          "ref": "9b6d805c-73ac-45f3-896c-363f28f78313",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d64033c1-6d83-4419-8156-dd98a4ba509b"
        },
        "item": {
          "id": "3d40d2f1-7495-43a0-b6fc-4c9bffc7b618",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6cfa81ff-193c-43ff-8049-47ed661e12dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f7dec4-043d-473e-8d91-07f314658a82",
        "cursor": {
          "ref": "cb8c37e5-e968-463f-8e85-d82f9572929e",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b9e0d841-ac78-4453-ab27-29311a5c68b9"
        },
        "item": {
          "id": "30f7dec4-043d-473e-8d91-07f314658a82",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "25f3b0a2-9381-45a1-a249-54484f4a075e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a825f1-d5fe-4893-87ea-1332e4f863f1",
        "cursor": {
          "ref": "7de16872-7920-4074-9847-cc020ad3bf69",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f47a4e7b-387f-4f97-a148-e975995e926d"
        },
        "item": {
          "id": "72a825f1-d5fe-4893-87ea-1332e4f863f1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cdf0e246-dc72-4d38-981c-be676f8878cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cbd6c9-716e-4f5c-880f-79324b721141",
        "cursor": {
          "ref": "0fad8cc7-0439-4e1c-85ce-fbefc26e3e81",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b0139a3f-6fa3-44aa-b837-33926010f5ef"
        },
        "item": {
          "id": "02cbd6c9-716e-4f5c-880f-79324b721141",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d70a2749-a876-411a-9aca-b7b5f2eeb16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6678cf39-a56a-4f56-9e22-9aede238a8ef",
        "cursor": {
          "ref": "00a034e1-5f1b-4721-b0a7-cbf214484964",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b849282b-5187-4fd3-ba33-ee02bccdfabc"
        },
        "item": {
          "id": "6678cf39-a56a-4f56-9e22-9aede238a8ef",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1c08b973-1bee-49bc-972c-07c307e981db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da207c7c-c5d6-4f79-b8d7-05a12f2abb4d",
        "cursor": {
          "ref": "869bd4a7-889f-49a3-931b-3913f1dae432",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a60fecda-711f-4926-a5be-2bc0677c8d5f"
        },
        "item": {
          "id": "da207c7c-c5d6-4f79-b8d7-05a12f2abb4d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "41d2cfa6-dfa9-4995-afc7-ce6a4ee547a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a1f71a-593c-4747-aab8-5dc912d267bb",
        "cursor": {
          "ref": "60bdfdbe-6015-4ce7-ae7e-38e6cebfdca9",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9ce8a3c0-b03f-4d40-81f1-82e41330ff9d"
        },
        "item": {
          "id": "70a1f71a-593c-4747-aab8-5dc912d267bb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fe7582d5-8419-417f-8b04-c9dd33f81ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80723766-ee4d-415a-a054-bb1ec19997a9",
        "cursor": {
          "ref": "3db174a5-0d70-4fa8-8542-1b00430fd32e",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "33d9f271-2273-428d-bba0-b1af55c224cf"
        },
        "item": {
          "id": "80723766-ee4d-415a-a054-bb1ec19997a9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "66dd2457-37e3-4469-970e-749e3f89eb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93be5ba-7dc2-409a-975b-16daf8c4c9fc",
        "cursor": {
          "ref": "f6881c2a-e9e3-4bc2-b3b3-5b3a4395a48c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d75844c3-f568-46a6-8abb-ab8855eb9f2e"
        },
        "item": {
          "id": "b93be5ba-7dc2-409a-975b-16daf8c4c9fc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c4985648-ef03-41b9-ac96-dc2df4eb7399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb35bf5-0583-4024-a74d-3e8a319df1e7",
        "cursor": {
          "ref": "8c365540-9d30-41d2-83e2-96a9c1308513",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "81b6be6f-9036-4ee0-8dc7-5abdab5d5613"
        },
        "item": {
          "id": "8fb35bf5-0583-4024-a74d-3e8a319df1e7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e641530c-cea8-47cc-979e-e64b4953edba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed7634e-3cec-4a7a-8315-b21cfdb61d89",
        "cursor": {
          "ref": "959066f2-ade9-41b3-a44a-adce50383bbc",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0ae4dac0-88fc-4a63-96d0-f665aaf92aa8"
        },
        "item": {
          "id": "2ed7634e-3cec-4a7a-8315-b21cfdb61d89",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "12e527dc-26b0-4012-affa-8aecc4a6a929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693d89ef-b481-42dd-bdb7-02be8bb32663",
        "cursor": {
          "ref": "ab364c8c-2a16-4c91-9282-3d1928a47dd6",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "61cf90a1-38d7-4e06-9287-e38c509eab90"
        },
        "item": {
          "id": "693d89ef-b481-42dd-bdb7-02be8bb32663",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e702a00d-7ba8-443f-a284-eedbc47f7b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc276c3-7ff2-499a-8b72-8e8b5f3259f4",
        "cursor": {
          "ref": "fcca23db-f788-47cc-8ed0-38247108fece",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2217857a-cc8e-4b3f-9c2d-8b476495258d"
        },
        "item": {
          "id": "0dc276c3-7ff2-499a-8b72-8e8b5f3259f4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8b4315ef-d580-46e7-87bf-9763f5b94e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de4f52e-5e1b-4a47-be67-871006250b1e",
        "cursor": {
          "ref": "7e589346-88a5-4e4f-a1f6-b7ce93291429",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "14990f34-8be4-4d39-ad95-7fdc66cae232"
        },
        "item": {
          "id": "0de4f52e-5e1b-4a47-be67-871006250b1e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e2f59202-0db3-49dc-a659-f83063c936c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a98063-6c45-4845-bbff-140606e95b7c",
        "cursor": {
          "ref": "3da7debb-8c5a-4110-aaca-b62d9a5ad0ad",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0cc65c72-366e-4f4d-8feb-dc5a4d039a18"
        },
        "item": {
          "id": "a7a98063-6c45-4845-bbff-140606e95b7c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c14ddc7e-243d-45fb-9ac2-8eb26a017668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daaaf628-21a1-424d-bbe4-5b17640122cb",
        "cursor": {
          "ref": "aadd4cd6-a7d8-411f-a47d-06cd6045e902",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "53f7aed6-1b1d-4ce0-a650-91e684d062d7"
        },
        "item": {
          "id": "daaaf628-21a1-424d-bbe4-5b17640122cb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "fe6047dc-3a10-43d3-a69b-f96f0e7e70b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea6412b-6be5-444c-b6ec-528cd6eb1224",
        "cursor": {
          "ref": "3ecf3cd8-549e-4c70-9f46-47740964afae",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8bf26436-df75-42da-a811-fcb429e82f2f"
        },
        "item": {
          "id": "9ea6412b-6be5-444c-b6ec-528cd6eb1224",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5f671cc7-5e7b-44a2-8121-2879796a06a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd3bf2f-9a7a-45df-898d-d02742a597a7",
        "cursor": {
          "ref": "9fd1dccb-14dc-409a-b08e-ded582bc0a17",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "060f529b-a8d2-4542-b782-0601ecb6ae64"
        },
        "item": {
          "id": "fdd3bf2f-9a7a-45df-898d-d02742a597a7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5e50508c-64e3-43c7-bf44-e00cece4a479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7092b55-e7d7-4275-ae02-d3853eec4993",
        "cursor": {
          "ref": "f4d699cc-3800-4b05-97da-add32ebfa9d1",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "79e58df6-d96d-44bb-b6c2-d261fb61cf1b"
        },
        "item": {
          "id": "a7092b55-e7d7-4275-ae02-d3853eec4993",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1b6b1cd6-f8ae-4b29-b046-79328e5f9e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a775bc1-2f78-46bf-bc5e-574a1800b77b",
        "cursor": {
          "ref": "24cec160-ee21-48d8-b277-5d9aebfaca94",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "47874953-dc8a-4924-9097-39bfad6e7e4f"
        },
        "item": {
          "id": "6a775bc1-2f78-46bf-bc5e-574a1800b77b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8535bd89-641a-45bd-af38-685ff1badf5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38a954b-4f04-47eb-a5e7-89451cc6e4f9",
        "cursor": {
          "ref": "214c4e67-8348-4cf1-9637-ecef6691d600",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4e67f821-4a17-4839-90f1-6fd24671a09b"
        },
        "item": {
          "id": "e38a954b-4f04-47eb-a5e7-89451cc6e4f9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9eeac61a-6d5d-441d-bb13-af55e25234b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd1d08b-3730-437a-92fc-e1a44abed78c",
        "cursor": {
          "ref": "2231a3b4-074a-46c8-bfc4-0e64af691152",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "65269596-ee0d-4e12-835f-be3fa465e68d"
        },
        "item": {
          "id": "bcd1d08b-3730-437a-92fc-e1a44abed78c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "481cd123-eb1f-4ab1-ada0-4079e86c4556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba109519-a84c-4ca7-9a97-7242014ee3c3",
        "cursor": {
          "ref": "4af0b212-1ee6-401d-b3cb-253a184eb4b9",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e6809de7-4c3f-4b50-8584-c0d25448106e"
        },
        "item": {
          "id": "ba109519-a84c-4ca7-9a97-7242014ee3c3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1c05db28-58be-4103-a5aa-c1e630e50d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c178a722-1017-4009-91ec-043696bf8401",
        "cursor": {
          "ref": "6d7d86f6-052e-4f66-86be-0894aef1fb63",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "aae00daf-7762-48d9-9970-4b92b0bf2231"
        },
        "item": {
          "id": "c178a722-1017-4009-91ec-043696bf8401",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "79e7062c-4055-4d60-a60f-e5d50fcaf61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806e7f9b-fcf0-4211-ae9f-058d99a6579b",
        "cursor": {
          "ref": "9f65d7f3-804a-4bfd-aba4-de1b9a39ce16",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "999a9881-31f1-4c6d-b3b3-80eecea5948e"
        },
        "item": {
          "id": "806e7f9b-fcf0-4211-ae9f-058d99a6579b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ef664e1e-542e-4a1e-84c6-3880b76541b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdaeb70b-26a6-4d74-9e1c-d095b49f32f9",
        "cursor": {
          "ref": "90b558a9-8918-429b-b9c3-962cbe41701a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bb8a7ae6-fc11-48f7-ad31-049750d8ca4d"
        },
        "item": {
          "id": "bdaeb70b-26a6-4d74-9e1c-d095b49f32f9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "62ebe926-c7fa-488b-9045-294097400fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbbcec0-6dfc-42dc-b237-c4a30e71d497",
        "cursor": {
          "ref": "40babf82-403b-4eb5-a674-205766f08d18",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9513993f-0193-4e80-b909-4299b768bfe5"
        },
        "item": {
          "id": "1bbbcec0-6dfc-42dc-b237-c4a30e71d497",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3eb38e30-e6db-4b1e-9d84-341767e0aefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd77bb3-dabf-49be-95a5-3bff87c7e5d2",
        "cursor": {
          "ref": "68c55977-1d96-4128-bfbb-b76d45caefda",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b0a3b1a7-761c-4da5-982b-abd1dcf03322"
        },
        "item": {
          "id": "3fd77bb3-dabf-49be-95a5-3bff87c7e5d2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cb122a5a-96e9-43d6-b107-fbd92736ef61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af659809-8279-4c59-b2b2-5ab22373f1f7",
        "cursor": {
          "ref": "3b237956-755c-4d8a-95e7-9d296a0d2b39",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fec37b48-917f-4e95-a1c3-34adefec5316"
        },
        "item": {
          "id": "af659809-8279-4c59-b2b2-5ab22373f1f7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "269bd331-ebce-44ba-8de1-5f56a199fcba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5be9772-8baa-4695-9220-9c563f8b35cc",
        "cursor": {
          "ref": "83d683da-1996-4688-9685-f239e3b226e5",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b899dbf1-5465-4b9e-859e-b7654963e7d0"
        },
        "item": {
          "id": "b5be9772-8baa-4695-9220-9c563f8b35cc",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "76d64032-6c2a-4548-8c2c-41e0da8d7cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf6da4c-c4b9-4622-9344-3c14b32aa945",
        "cursor": {
          "ref": "fe2b4444-e52a-4c6a-a116-2661cdfedbc4",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "36a7159f-bff7-4374-9d26-62d708b39dcd"
        },
        "item": {
          "id": "ddf6da4c-c4b9-4622-9344-3c14b32aa945",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "46dc57ab-082a-4db0-822a-0f36fb3d92a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309a4d2e-9faa-4802-b896-b12f95e57ee7",
        "cursor": {
          "ref": "6fff859e-a396-40a5-8272-b14126499016",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "140f1580-98bc-42e9-b999-dca09014f62b"
        },
        "item": {
          "id": "309a4d2e-9faa-4802-b896-b12f95e57ee7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fd7dffeb-d68f-4344-bc59-c2797764111d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689c29e0-d356-4a15-b11a-70e2d3162707",
        "cursor": {
          "ref": "4565f51b-aa60-477f-906a-e5a77471868d",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3af1f584-c51e-486f-8548-1f0aa8d40f1a"
        },
        "item": {
          "id": "689c29e0-d356-4a15-b11a-70e2d3162707",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9172eb5b-41c1-4bfe-aaa2-ed64cf9173aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d768b2c-0ce2-4966-b2a5-8e0cc7fd9117",
        "cursor": {
          "ref": "34e48697-096c-42c4-8008-be2dc8c33bc7",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0e24052d-3fc4-421c-bf1b-f57a992954d9"
        },
        "item": {
          "id": "4d768b2c-0ce2-4966-b2a5-8e0cc7fd9117",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "24818e17-396e-4098-b3b5-2537f5f7edc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191ddb8c-e5f9-4cfa-9a0e-cc296bd6b2d5",
        "cursor": {
          "ref": "48abdd51-6208-413e-95ea-25f716af1963",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "09ad81a1-da0f-4477-963f-845f21b813ff"
        },
        "item": {
          "id": "191ddb8c-e5f9-4cfa-9a0e-cc296bd6b2d5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1c0e6207-6725-49c9-9a97-61eb1054cba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c235b143-5056-4f1a-aab3-621a8b9fa459",
        "cursor": {
          "ref": "5a725039-61f8-48a3-8c79-a2bdb5c6890a",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d28ab0ac-a6e7-4e83-93b8-c896391b4e4b"
        },
        "item": {
          "id": "c235b143-5056-4f1a-aab3-621a8b9fa459",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "14c89a94-7336-4579-ad37-f511e99622e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb14196-67b8-47b5-85d2-9423cce26b51",
        "cursor": {
          "ref": "7da89ab4-ee6f-4c5d-982f-71d155cf6f70",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f80519b5-a7cd-4520-b0e4-38e95f3ca9e3"
        },
        "item": {
          "id": "ffb14196-67b8-47b5-85d2-9423cce26b51",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fe26a402-a18d-4800-a40c-0cc1ad2f7066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9203be73-d20e-4a27-be97-a20950faba2f",
        "cursor": {
          "ref": "b0012a1b-074c-43a1-a835-ff595f73ad99",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8f54a96d-d9a2-4a06-bf84-9f018471faff"
        },
        "item": {
          "id": "9203be73-d20e-4a27-be97-a20950faba2f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cff47f32-94a2-4169-b4f2-0eb72abd4472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3cd0d1-6222-4a2a-9931-7a4f1872802a",
        "cursor": {
          "ref": "59581f0f-37d0-4552-a1c4-ea13d2229e56",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "71e5970a-e324-45ac-a392-d3df8e30e81e"
        },
        "item": {
          "id": "1f3cd0d1-6222-4a2a-9931-7a4f1872802a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bedb4de1-8afb-4f2c-a325-943f5fdeb68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b7d9ce-48ef-419b-b682-29d7a23c8f2b",
        "cursor": {
          "ref": "2a2fd61f-89b6-4c5c-904d-feb13838fe9c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "569770de-63d3-4a52-9960-133101bc9e42"
        },
        "item": {
          "id": "51b7d9ce-48ef-419b-b682-29d7a23c8f2b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f41cb36d-9834-457c-ad27-23d9dba36965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9539a7-acbd-4c33-a9ea-b513663c58cf",
        "cursor": {
          "ref": "aa14c177-7ce0-4e3f-8da1-ce6580c1c13b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3ea0c753-57cf-4182-9411-921c3424bf11"
        },
        "item": {
          "id": "3a9539a7-acbd-4c33-a9ea-b513663c58cf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "81487466-816a-4cdd-8c8a-a488df667feb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48932e70-4e9c-4d7e-9da4-f3c4326a6b3d",
        "cursor": {
          "ref": "30eeca25-9077-463d-9f72-6aaf0dd7307d",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5ba9fc6e-0a2a-4eed-a390-f9be310659f5"
        },
        "item": {
          "id": "48932e70-4e9c-4d7e-9da4-f3c4326a6b3d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ce0187ce-b234-4efe-9398-8685483b002f",
          "status": "OK",
          "code": 200,
          "responseTime": 2293,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a20307-fcb4-4f6a-bd4b-ff92ba7aa6e1",
        "cursor": {
          "ref": "eb736b96-5959-42e7-b01a-705c7e207fd6",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "993de4cb-2d99-4595-87d3-125fb123cf49"
        },
        "item": {
          "id": "12a20307-fcb4-4f6a-bd4b-ff92ba7aa6e1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "68966f9a-efa5-487a-9d79-da932501b1bb",
          "status": "OK",
          "code": 200,
          "responseTime": 2867,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1caed4fe-d8be-4bb9-a7e1-d606c6f5e969",
        "cursor": {
          "ref": "ff1dffaa-6675-41e8-a4b0-9dc541e50ced",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "134a74f8-8059-40c8-a544-bcf4a489170e"
        },
        "item": {
          "id": "1caed4fe-d8be-4bb9-a7e1-d606c6f5e969",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f8b5b7dd-fa6a-41ad-bc1a-94b0a96b0a1f",
          "status": "OK",
          "code": 200,
          "responseTime": 2519,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1edd59-b323-4116-84d0-40a9895e4198",
        "cursor": {
          "ref": "0d76b552-30f8-42ac-aa98-a321159bbe22",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "71e685c8-7a8e-4221-8fd9-cfb0442a2fe9"
        },
        "item": {
          "id": "cb1edd59-b323-4116-84d0-40a9895e4198",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5b35c9ad-fa79-42ea-b2ac-af9bfd7dda8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1edd59-b323-4116-84d0-40a9895e4198",
        "cursor": {
          "ref": "0d76b552-30f8-42ac-aa98-a321159bbe22",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "71e685c8-7a8e-4221-8fd9-cfb0442a2fe9"
        },
        "item": {
          "id": "cb1edd59-b323-4116-84d0-40a9895e4198",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5b35c9ad-fa79-42ea-b2ac-af9bfd7dda8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ad2a77-d84d-4bea-9c56-d705f4a08cf4",
        "cursor": {
          "ref": "aee69076-94da-47c7-b522-c77fd50d8194",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "92cd43f1-9b33-4f97-a9e5-d8a78d680726"
        },
        "item": {
          "id": "71ad2a77-d84d-4bea-9c56-d705f4a08cf4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7c2d4fe4-063c-48db-aeea-08d78fc6c912",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965edfd9-ca16-4dfe-83dc-ed75f000f804",
        "cursor": {
          "ref": "5d382468-78a3-4f9e-a29d-c9d09e2eaf5c",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6b139ab6-a3ca-44f9-886e-99a8b76fdf45"
        },
        "item": {
          "id": "965edfd9-ca16-4dfe-83dc-ed75f000f804",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6e4a671d-983f-4937-880f-b28fe2c8a3ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}