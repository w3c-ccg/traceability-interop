{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "781bf36a-7db2-41af-b5fe-7124e03865ed",
        "name": "Clear Cache",
        "item": [
          {
            "id": "71cff2ad-47cc-4bcb-b86a-ddb21ddd71d4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e741d16f-e84b-4af8-8744-b5e674a066a1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2c33b6da-f05b-417b-ad5c-6c1092f1c37d"
                }
              }
            ]
          },
          {
            "id": "b444c0ca-c887-4ee4-83c2-1f3649791374",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "863b3f57-92f3-40e5-b081-789fe7332d4c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ff700808-88d4-4ff5-9ce8-929ddaef137b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3d49b4f4-d83a-4cad-97d5-22e431af7223",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "139dfd49-5257-49ee-a35a-9bbc2aac891d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ddb4d5e3-8f62-414d-b79b-f6c5047dc7cf",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fa96f7b-36ea-4f8e-9f4d-956b3b220c70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "afd2e1f1-cdce-4e2b-a261-13a7347562a0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a8b87208-6b87-4631-88c8-4a8f19e034ad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "431e61bb-6523-41cc-ab06-89d6300611b2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c24eca0c-0fa4-467d-a981-f35b8024c292",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79b26dd6-f484-4f51-a963-3a7321b31b13"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31adffcd-58fd-4db1-943b-eef9cbaf43b3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bd98ef79-4bb0-4fce-bb91-5eb120052ae2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "392d7101-e677-4583-9d74-e86e129765bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "365bda25-750f-4845-a49d-49d3af8ad564"
            }
          }
        ]
      },
      {
        "id": "f684a6ef-b073-4bcb-a0ce-9e1b001e18c9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7ebb51f8-0808-44f8-af00-a367eab68fdf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a74fedd-c849-464d-9859-53f57619eae2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "79ce13fa-f0cb-4298-9f72-df8154687b97",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3187f943-cd3b-4c53-a565-0587b4d0ddb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4ea62e6-fcc2-417d-ab6d-e19b8834c29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a435b2-c530-4156-bafa-5f222f8a1bd6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e58745-0999-4dac-a241-5b29003fda96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb92c9e8-689a-4f68-a4f4-fd184ff74931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f79e29-8f68-4768-8581-93491a578d33",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0685d0e-2bf1-4725-8cb2-bba4be3c14f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3192c70f-dff7-411b-8dc7-432028eacd62"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb5c265f-d704-4c3f-a239-612fc3fb927f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "262368a8-3d1f-454d-aea7-15699d8e9f2d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b44bdc4-dbeb-4f17-b5db-58261eeaa116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "781ed82d-695d-4f97-851b-02b9f37c73c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236e6882-ac22-4755-a9ec-dfb5b7811679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6b4b2d-1313-469a-8cdd-8fdc4e1027b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2e7cc094-c751-42a3-a76d-94f25f097c02",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e9072c29-591f-4d77-b88f-acf293454e99",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44402f41-7a4a-41df-8c29-7155cec17084",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2551cc7c-bc53-4519-9e54-ba9e8dc1ca50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4b265d9-5ae2-49f3-8cdc-1e05bfaec162",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "146e3396-9267-4361-96ab-115db75ef009"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b936318d-12aa-4a9b-8aee-489bcadf652e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5621fd8-9d70-44ea-b274-42484402255b"
            }
          }
        ]
      },
      {
        "id": "91f45df0-d6b8-41d1-8d1d-352ccce86284",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "52e7cd40-9499-480e-afe4-91c2bbf42369",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82056197-6053-4e03-bf5a-996c7c2e66b1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e430a0b9-a0d2-40fe-ae71-eb88c51b7c86",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdc33e4-d9ff-41dc-8336-ad6dad5d0f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91bc2cf9-ca63-42f6-9d60-86c508224bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8eb57cd-5d63-46a1-a41d-132e1c03232f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41d860f1-d90c-4478-b59a-aa1e7269808a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42aded5c-0e85-49b5-a2b7-ba4b31fae2a8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834157f5-4ac2-40c4-b12d-f1fedf2bce17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63cae167-e07f-41df-a948-3eab2fbbcab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde7cfa1-5b33-4f4b-a845-1f00b79f0166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a317d613-bc59-4fad-a4c1-5efe50c2d521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa65454-2673-4116-9b55-7d439362f8cc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6317b6-ce6f-454e-9075-2c68f9cbe134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfcf790a-9f7b-4c6c-8e56-9c3e07f962f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2696928-44c8-42ff-bb73-3f290acc1c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80fa4dbd-e706-47a2-ad40-51f34fca1613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a836bbaf-d777-4955-a81d-c601f7999aa5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a33aaa-6f74-4c10-b864-cd768245d939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c16115f-8244-42ac-a5e1-70e35361c3be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee10aa20-07fa-47c8-bdd1-a22cf76c39e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f922a92-66b9-4deb-8d44-2fa917c0db60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3859a3f-5f5d-47b6-a7d8-d2acc70a77fc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ed791f-8bf3-4327-a761-e9e1656b1684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85eb2be-698d-4516-aac7-80f23fdce111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d58c723-b982-450f-b48c-7dfcbe5ffb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dbc4e7c-6dff-44d4-ab99-47f42b52191b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54af9ecc-b4b9-4b85-84b1-50a26dc1d0b0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb657db-69fb-4569-bb2c-e963451a666f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1595573c-2d37-4d9c-9bff-870097de59d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f0ee53-719c-49d7-b974-d37e7ff1bfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88a6fe5a-73fd-4f9c-b03f-f1891cd325af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff63aea-ea9c-475b-bc48-fa34edcd89f3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fef06a-05da-44ca-957d-a9b50cef3456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1318cf4a-b410-4d1d-89df-c684754fe16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73eb64fd-320d-403a-88c8-3e11c95870aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49c50b9e-8c44-4bbe-a7d1-c8c94e593f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0a9c98-a282-4e8c-8745-1d2d57f41689",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5a89c4-789b-4ec4-8f89-2eebe7a030e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0538d264-a6b2-443f-bb50-7d28b325dcce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4153c1fc-720d-47f9-96a8-160949d57785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34bfadb9-69c2-4062-993e-2adb943bcd9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcc7c0a-b433-4b61-98b1-91572ea5746e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186b6d1e-3ebf-410b-8d79-e5f5b05c445c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ffc26a-bacf-471e-957f-d8a3cf6404c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07986ae3-7e8f-429a-81ae-d9ce838aaf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e21beaa3-6fc5-4563-9eaa-ccd1fed7fc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3895c6-aa2e-4ae6-9a9e-8e8efa4022f9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053229df-e007-41a5-bd30-b102b90df41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00921de9-ad70-4d7c-b58d-a343f24477e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9e6c9f-182b-453e-838f-84dc39e0bfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81c56db6-7d99-4864-a513-90d2182b4b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ecaefb-9d09-4b01-ad51-6c4bbe9d2d2c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ae7fa3-14a4-46e6-a748-74db7c8f193e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593e7dc0-bc92-4c41-876f-67a93e0ab18d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882ac480-c021-4a6e-a5eb-7a68599dc87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "baf749a1-4a30-4f4a-944d-a44c9e7629d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71538dfa-6ac6-4e15-96ba-50c0202b0a84",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd1548b-35f0-4790-a11a-0849d81bf74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46638960-4afb-4b62-9f7f-3308a0bdbca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407c6864-88e0-4133-b47c-c12e4112ad19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b95f709a-cbe0-43d2-9011-bebb0b51a396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e679e07-89d0-4d67-994e-4140da88b3fd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a70e4c-a8eb-42af-beaf-e6bb603a27cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d915eb-8eaa-4bda-9d31-9ab11179d8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c59b1a-7017-476f-a4c8-47ac1652ba07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "213d5fe0-54b3-428c-b4f0-bab9a48929fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618dc845-a6a2-4cf2-bffd-1656f4f0ad41",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a230983-b31d-479d-9aed-41a1c5b6e9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdfde67a-f6e9-436a-8c39-b8d02b9e8ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86358071-d76b-4fe2-a47e-2bdbca3c942d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b86f70a-1b26-413c-8ed6-9c490ec4e712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e30de35-68d1-400a-81a1-2f85ceb4f28c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7bb17d-735b-428d-924f-eb50a6aee33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce5ad41-8a15-4b1b-9b30-ecbb8573d4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a913b3c-596a-4afa-a93d-14a22e517cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19a1b2fa-1cab-42f7-bfda-165de25b6a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a18a87-f06b-4317-ac06-e1c6dd02feb9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d9e4c4-d0dc-4fa6-a274-2e13537b4339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe74105-b1a9-498a-810f-210e0e1bd95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0c1fd3-a7ad-4d23-8ef9-d37d721ad9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c25880c3-5ecd-4aa4-980a-f020e6b54f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3506fa68-9e32-4bdd-a40c-da4a1042d02e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dbdc8d-e030-441a-b9bd-4b985d9f3487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643ab260-67a6-413c-b784-41283356d6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3b1023-6cb2-457e-a67e-aaf45c53a078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16e22460-56d0-49a3-be08-2b8e0e35fe05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b3eb5b-84b1-4d3a-888c-926b4a0b704b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877fd6a6-eb30-441f-999d-6d053cba7511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d654b636-f052-494d-97df-a16467dbd1c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da6a265-b25b-4f9a-8e79-351ce5e85290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "87dc6fba-9fbe-4f02-bdf9-1d8389787ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc57da98-caf0-410c-b932-f5d671e0f02d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036226bb-6bf0-421b-9404-702934f78e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e9979e-bf5b-4c26-b0d3-4743b730b4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dafebd9-fab2-4401-93f9-c4987ae06b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "960bf821-2fb4-49e7-97f4-ffa370ec8d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e903f77-b396-498d-b397-98055ac45e5d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b67c6b-666e-40b2-aa46-ca1f7ff1264f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333a61d9-62b6-4ba9-a39b-6ba6b8d4aa56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fcbd59-1bcb-46cb-963b-a7529a095718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "823763bf-34d0-4f13-8b5b-14ee9d05109b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6628fe-6e96-4b84-b025-87b5dd630228",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f2adda-9e59-4734-8d2f-72d004ac1f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e026975-3118-499a-97a5-2d58ade73db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0987af12-de85-4b8b-bc21-8415c795976a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36038518-b4fd-41e3-a0eb-f5229f476f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec78eebf-0816-4b54-83d3-824a69eb8898",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cddbcc-43a2-4705-9163-52e119ce7796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8625fad0-66c4-463f-b388-3b3f7ae234fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ff2db8-a9bf-4130-a81b-74ebc2b3619c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e155556-daff-4f5d-bd12-b3db5063c9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe1031f-3a30-4cb5-a5d4-640cd5101273",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558d329c-334c-484f-8f08-e78b84ebe8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39a6dbf-09b4-41ed-804b-d505858c1c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6af056-1a7a-4cc1-b01f-0827e0caa7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2abfbd22-abaa-4074-b509-bbe5e90b15e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a4267a-2cd7-40f9-8520-1c2857ab7055",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3623e6-64e8-450d-8894-89e48a21828e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b585ae2-8186-4bf1-8de2-ce562619587e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc9a768-448b-47ad-b4ff-c1ba1f48314b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "be727c9c-70f3-4028-8b7f-eb1788907768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e0af3d-b41a-45fe-bc93-6db4696cd0c2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf6e148-5946-4340-9ce3-5a10097dd979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "924cfbd3-8f21-45eb-86c4-d638bfcc27f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652d78ea-a9ee-4862-9895-9c433ed4644d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6714817-8fec-4317-9857-26c1d2a8fc94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01bedc4a-b80e-4cf1-9ca5-b8b9442f8077",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f72153-39eb-4738-baa7-7b24e2c36f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44109342-1808-49e0-963e-11db17beaa7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a38e8b-0ea2-4c94-92d7-c4df7fa7d309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61bda016-9a13-4d1c-8e93-356f73a9f23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0df2aa-c522-4ea4-b272-c3ab57b1c772",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f863b3-6a06-44aa-9e29-5805bab44861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2b41d5-149e-4e80-ad2d-3a54784a0b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174ee1c0-7ce7-4e48-993e-a2b58811fbf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bba5efc9-cf33-4f72-8e66-7dca40a8232e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f73743-52db-4ffb-b9ab-c64e2a46062a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fa13a9-e1b4-48b6-a06b-db1c36bb73a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d08835-e84d-4d61-a442-e17a3847778a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53f9fcb-23c0-4fe2-98d0-1ab7a5a6b7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef07970-3c37-47fe-bbe8-def0c2267649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87b25b0-55eb-4010-b1cb-d68d197361fd",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b255a30-53a0-4fa5-b79f-749375e423b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c64a12-1a1f-4049-ac2a-ddb632a79d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7311882b-9f8e-4690-a0bc-8f5a0642b625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf43c09-2c0c-4383-99e2-c5b856a4555d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2365e6-c690-4b7b-aed0-6869d5809ca0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e2b870-2770-4ca3-bc3c-28c080d6347f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f49db9-a7fd-413a-82a1-f31defde941c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238e9b2d-d432-4406-a188-fcaffb9a2b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f219ed2-7098-4a7f-9583-607f3d278011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3022608-1072-4bfc-ae3a-00a0fae784c6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d24bd3-8366-4f8c-a183-d465cfe0e63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3bda1d-c464-40ad-8680-844d980c9992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e0af76-cbc3-449b-92a3-9d5d53dbafae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74305177-389f-4b39-ad06-2151da25118a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d92b552-3cc0-467d-beb0-e90ded045d2c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503d434c-b848-4ef0-8604-7cd4d0ebc67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db093c9-ac94-4f9c-8a7b-db0a06f679ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96076f19-5294-4485-804e-f7c5d7408742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2771372c-aaa8-44fb-91bb-a01d427d5fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b46943-88d4-44a1-8311-eed9e596cfd5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0f4bcf-067b-46ee-99ee-88d769b2b00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28817e26-4d95-4a3a-be56-72cd52d419b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf57d27f-dc0a-4875-85ab-ef5846fd6599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b23926a-6b3b-4a62-89ae-ade8734dbde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a325057-0d19-4193-9a5f-06508b87532a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182cb898-a99d-4394-901e-3b55d7ae6cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc86298f-7eb8-400c-b7c2-24d837b02104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7ea8e1-aff5-4442-961e-207e963c7b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2af2e529-08d2-45ff-94cd-a0ebd08f9b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0dea38c-c3a8-4c44-8e5f-c9deedaea30e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1473f3dc-4421-4ae4-b2d0-3c854e4b3800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ce65bb-5d7e-4546-ad89-b8d2b76c6073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28b8f7f-d1c9-45f2-ae0d-bc2e327f7886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "01d7474a-295a-4526-be06-be17d4244928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f814009-887d-4a71-8ce2-078d5dac7b74",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7545faed-92fa-4200-932d-87b738bb3da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "817c6a6e-89db-423f-ad45-f7821e42406e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6599ff1-92f1-4b42-a0ab-7bca94202f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "079dc3d1-7500-4a24-bae2-f9546de8794f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553ca8c1-c837-4810-91e4-ccb1d3f099a5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5afd86-78f0-4981-834c-a52c62d338a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21353769-a452-44e9-a8e8-9deea0a12942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f446db4-bc7d-46d6-ae1d-70d473cbd538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3459282-9586-4adf-8626-2e8ea8dac8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37baf12a-e393-4060-a969-cd6ac1ab0a76",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae3d444-88e6-42b2-970a-1b9d03f8aba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea1d5f7-24c2-413d-a831-4874f608a5d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170a6436-91d4-43bb-be42-6d80ab1d6985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "90f93478-ddbc-4a32-b172-0319454d358e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd48cbed-b3d1-4368-be2d-b922e4eba438",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add865bc-1c6d-4082-8e1f-4ab617054d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa89479-c3fe-45ae-8237-54c2983b38b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfce1d3-b6bf-44e4-9d50-a16d0e29b538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4d4b380-0430-49ad-9e9d-aaa51ad429e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82fe04c-6ca9-48f4-be5f-d78a4579d1c8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b286ca86-9b25-4fd4-8d4d-7658f4914427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "badf3a27-7c55-45db-89df-a19a3c539854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e64ccc7-ae07-4e2d-911f-9d57a289e9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7df6e61-2043-4134-870d-36bbcd3fd53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d22a5d-c224-4e95-9ba3-e6cdade33659",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5a8cc3-dd36-4eaa-9ccb-ef272aace559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db55f2d-e8f9-4ea2-b429-d13ffb3ca4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c113de52-a949-43fa-8b7a-c8579dcd67fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "66ca2681-06ea-4c24-8849-80ccc950dc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fc62eb-8c69-47de-8072-f2a9f07aefe8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d67b92-d6b4-419d-8f3e-05a8e15ab3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d90980-de4d-4178-9452-db5e4cd6b577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd03fb2-dcc9-4d4c-b185-876ba317b34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "591459f9-73fc-4492-9691-552450c7eb2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377e5e6a-1e3b-46bd-8d66-5e7ec097dfba",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27069663-f963-4dd9-9be7-c7415aee3970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57352dc6-008b-4966-a396-f0cbc23787f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9357cc-7566-4cbd-9cdb-5482870b3d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "92cb15aa-9eb5-4315-b588-457b8dfd1488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1495388e-d70a-482f-b899-b9bcf5d8a3f6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b26cb3c-a1ad-44b7-a51b-6de8d1e38918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194ee235-02b9-47ab-aaca-398bbf8f14d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825ee3c4-aa11-40a2-8c51-e9ca6db9b38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c60d5019-4792-4259-88d5-d5f6d02a377f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a50d7e3-c18a-4441-8f51-b2e141b19982",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d297d593-654d-47c8-b3b9-f90b2e2b16a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163e416a-83db-4e09-b63e-bd7e9632311c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9faa2b-0975-4d8f-89cc-df7cedd9274b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "abb31684-bfce-441b-b86b-3deae4b0e698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7170d2bd-94d5-4834-81af-7448308b11c4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e81f42f-a95e-4063-af86-75119e09c748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab79341-626d-4e34-beb7-ae4e455cf1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914ad882-b895-4457-b9db-2483f4a7a04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "088d8580-7f60-4985-8c6f-c11e1544eed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e17cc92-4f73-44b0-9b34-e1b60cd364fd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d29804-69ab-4d71-833e-c3bd060f4a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066132d8-8ebd-48b4-b3f6-d1b37d4b0b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d3d65e-990a-4cc6-8b33-39428ea9a54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "160efabb-178e-4b8a-88c1-0484eba75f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65959128-13c2-4caf-90a0-a3102c3d00e6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7049d580-4a73-4199-900b-b7c9430abc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2b6ae9-d633-44aa-8a12-fd5a6d62fe20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9319cb-cf34-4ba4-b162-4a2da2475f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a39a839-b9ce-4160-96a5-1baccbd31492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d588d09-18a4-488f-baeb-b67f3fdeaccd",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67ea556-693d-44b0-96c5-4abaaa636dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ea7c8d-2106-45ab-b2d1-e68e83a77fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a1430e-c89a-440f-956c-67d87c7ef72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48eebfc7-16cb-44e7-a544-3d26889620b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82f2b6d-f331-4728-a4e2-1fe8205a59df",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c502ab-74fb-4037-8fa9-d272d23f3d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "124c4c28-a92f-4ab4-9c8b-85a856c04a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ea5e14-9ac2-4f2d-9ba3-4cd99cf7b850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e6d77e-ae9e-4ca8-860f-6570735131f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eba6161-a635-4155-b089-c4a1211313cc",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4c0df0-eab4-4c56-a137-718970ce97e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6307098-a7e5-473d-8747-e9d6d0b2b685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87aac4a-1876-4dbc-bcbc-98edc3717100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd958482-fe43-4f58-adeb-8590ab87be02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f47e972-4082-4d81-8139-a5fc1b9a3a11",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268ad121-2861-4a1a-a115-d438b57b456b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "801788ec-5564-4ecd-8957-2b1cfe14939c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe4ccfb-8cac-4c63-b932-fc7be53e79db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e12fe692-386f-47d1-a4aa-ce21c788033c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4558f792-39d2-4e35-8d4e-991410431195",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d30da6-66aa-49a8-a3d9-8409e2143b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e89eab-0893-4afd-9220-422ce45b1086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ee0a8b-6df0-4c29-84a7-47737c44247e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f441493d-ae7c-46a4-a6f0-7f0e3787473c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688a2913-6126-49ce-951e-4ca7a3bd7dc6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05c7b37-a6da-4f4e-8037-82a9fcaa3e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b56dbb-921b-4ee8-be25-3babb6d0e858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56171fc3-5769-4363-90c8-bb0a0c0c37b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "082084b2-2cc2-4d1c-b4db-fc9164d82562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1675c3-8b0a-49d8-ad44-3f45bf64fc88",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b15f065-8389-480c-b50d-48a7f39ae7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f62407-bf1b-4235-b014-d8e42d9a3c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c992bf2e-4e0e-49f1-8e0c-4099d934fc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a4af80-f653-4be0-ad4e-95d2c37b0bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389ac129-648a-4924-b615-ed57521ccdef",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e3e41e-24c1-4a6d-9a3e-0b508c561ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed49b668-408f-4ba7-a30e-92805b85ecca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9d29e9-b0e4-4c06-bfb1-5c34ff1337ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "745a697c-2186-4da4-8a41-e236f75f5869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20c335b-506b-4373-b4e8-b3ca343e51c6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304a74b0-2aa4-4870-92d1-c1acaf5184b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1978e66d-a527-4791-a8cc-e90b698d60f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccb8422-11da-42a2-a986-183e83330ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e54af40-8a57-4380-a8dc-8e030799d3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c63c006-412b-4564-9388-c149a5e467ef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1635214d-5647-4984-88d2-7b9387dddd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494cac6f-63a8-450b-97c4-731752a1bcea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d7871e-78b9-4c9d-bc72-7d3d20112774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2195ad04-d67f-41ff-be22-65d47d46e0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ded0ea-18cd-41e0-b042-a3623c6ee556",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94f2d09-35b7-455f-9130-c44890f2d902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d5c691-c6b5-48f8-9394-fb797ff8302f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7499da-49d1-4e86-867a-3ec6d576a79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e425101-0e4b-4d4f-9278-0bfe8fff05f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358275d4-46b6-4886-ac5e-274d71085311",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9d19e8-b5e3-4f02-96ea-5c6dd34c7634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef518d9-fa0e-49c0-9f6d-962e9b4ae1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c025a2-f42e-40d7-b975-6943427a5c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "96d85795-e659-47eb-acbc-8493d574ebd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604bb515-0419-4b0d-b839-effdcdc3fbdc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb04b6f-94a2-4b22-986f-a6a6575a13aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a67ebb-b083-4d23-807c-b31c1476e772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b6e768-7f2b-49b2-bc4c-2d5a9b9356d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8149e9d4-33d9-4ad5-8459-e74f8c35e40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921c13e2-4bc0-4c12-88aa-23fd5e598fd9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e503c83-f8cc-48ea-8ad6-902802fc46c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "416757a6-3ccd-4d5e-b29f-fadf484b8f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e93876-9b48-4f1a-9088-008ce6a6abe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a894c33d-56af-47c7-8165-e5ef4de4976f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a771f7b8-c65f-4513-ad1d-3689610180d1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2494da-d4b1-4b39-a999-efb505408fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5637ed-4be5-4946-b6d4-41aedc22fed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc340ff-e830-4d4f-9afa-e499014a27f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf53aa35-2666-46fc-b2bb-5785a19816b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106f7125-c60a-461b-a0e9-35bb28c19122",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b559fe9d-684a-4f92-be10-ec28f3b8c036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b1928a-6456-48cf-832c-605264ad01be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaebab22-277c-4afa-b514-b0fc221f26b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c51686-902d-4b80-b4c6-cb41035ff713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e9d1b9-d52f-49cd-bde6-ec2d27df8da8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95babcac-8f32-4661-be7e-a86328d77367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e634f86-d658-4aa4-bf93-f6d317e6342d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50819765-c4d6-4b1f-ae30-23cbe530b304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32ce70b9-9355-40d4-8bc9-7bc05077806d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e363cd74-9d53-48a2-b52d-916b7467e7a3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefc717b-d642-4926-867d-b4ce3238f42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275582ba-0463-44a1-b28e-355a6effea52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd9e8c3-1e7d-4972-a8e9-a31c7681fbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f09678c-b3b1-4c97-90bf-ab1b4230b95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8006ad8c-69f1-494c-adb4-d8d7d5e06c3d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2633e017-1032-4740-9db2-44758aea002a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0933629a-8cf1-4072-a570-619890d91501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61237525-f5e8-4ccf-b8de-f04fbd7b6e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "303d32c5-e1b4-41c9-b442-3c11f925828e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7404467d-6e99-44f9-9bb6-d0658e398654",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac222ca-cb83-4095-952a-87f6caa7fa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c57c0f3-71e3-46aa-91d1-fed864238598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a0e59a-35f9-442b-82b8-ba770ae78afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b780cb-6489-415a-83d1-be39122a3a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a959209-7fac-4381-9f10-26f3a78f71ee",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52edae53-b57a-4007-adb2-4bfad57aeeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa57b4d9-e5fc-46eb-8e79-06649f03fea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189ce235-899b-47a3-a5bd-b189280e4df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "624d3965-521a-4277-87a2-d9be400a9421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c967412-78b7-48a7-bcfd-75e7e1ecb449",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79eed95-8743-4ed2-8afc-fd7156c3d571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6ce812-f6c7-4555-bf8e-d5f16a9ad43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf2fc6c-b391-4b92-8ffc-edecc4f8fa94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b36f0012-ee5d-4bf2-a022-379592e599a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fe5fe6-2df8-4064-96f3-d7c7c6091377",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2730ea0d-82d9-4416-8542-1326c34e3f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b14b30-6d43-4ae1-a7f1-ad929d4fe303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996ee82f-7d5c-4cab-86d9-a8cc794d7b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "440513a8-7177-4e43-ace6-3efb10f5d793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b25c1c-736c-402d-acd7-99bf6f28556f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4035114a-2b01-4c58-88ba-d08567b4b3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe6085e-aa44-4b76-a2c3-4b1b90a31842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8a1e3c-feaf-4a8a-a17f-665e906cae86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc6ec6b-74ea-4c25-b653-f79d92e526fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940bc5fa-180e-48f7-be55-7a5cb5f6d586",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673ec260-733f-4b11-a752-cb911828231c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d956b42-a513-4fab-a75e-7361d3bcfe9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c086f1-f653-4615-bb31-e9d0be2c22c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24992667-d826-4bfb-bdf5-70d2a3a849e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc88c140-1c2c-439f-86c7-7b6b62e04413",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb3d961-a99d-4e1a-808f-6d9e1cb3a393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee2f900-d4de-48ee-b4b3-fb39eca7fd1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6053bf23-14e0-4cd9-a837-f92b55cacbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87a82142-48f0-44ea-929b-5d7b4d1bdf84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae72cb7-231a-4e44-b260-95fefd7e5500",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4a4201-87cd-4db9-94e2-f72953945fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f125ef59-2fa0-46ae-bdda-ead43a50e405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51f722f-e2de-4390-af2d-c728c731a8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9df725a6-bc97-4f03-862b-64eb77350210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c543bc0c-1d69-43c2-b86f-945765ff9643",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81afb44e-3ce4-4b81-a65c-c347f92e97e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a7e233-8b8d-4e43-977c-d3ea96f4b595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9baca7b7-5386-4230-8e8d-d10bd61cb826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fad7a549-540c-4868-96b8-173b6a4c3efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de0b70b-dad6-43d7-8ac3-dbc3285bec69",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1f7d68-7184-45ea-bdda-64ef431be705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf30de3-6f2c-4e56-be64-a14ccf341cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65f1cc5-b34a-4c54-8336-6cfe3d325396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6394a9a6-86cd-4a54-875f-ae6d00585133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f1eea3-0539-4e4e-8408-229511486099",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2ac26a-c19c-44aa-ba0d-3e0ca5ebd875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5168c60e-4876-4a17-86ca-f089b8645d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2b41bc-7aea-47a1-8a5b-928e06cab6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13db85e4-916f-4178-a812-b75776c9f2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a154087b-e1cc-48a2-ada8-2d33547f799e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411ad4c1-a826-444b-927e-c01e466ebe48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c2ba09-49c0-44be-a53f-663aa22ce1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e844292e-c499-4262-bc4e-d11f4e141dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7094350-e5e5-4abd-bfbb-9ac85bb59ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589373db-e798-4e99-95cf-13bb816817ef",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97e0cac-90c5-405a-859d-c05939643520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd28038-525f-41dc-ac41-05211aeaf3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2f4440-a0f4-4d87-b1f2-bbc3c19a6774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc00368-2ea4-48ff-97c6-cd6f299b4c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6502963a-55c5-4234-a9d5-2340db834dc9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad4448e-34a3-47c2-bac5-40deca8ee709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f274fa71-52e6-46ff-9e2e-6c4f086aa48d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e93fcf-afa0-4058-9eae-dfc012d037ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a51bc58a-43f7-4fad-bbff-457cce16e18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0340ad-dff0-471f-934e-6a757030d239",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52d2ed7-aa0f-485e-bd0e-c68047260dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b52c3d9-0bd4-45aa-835d-789f8607b5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c91fc5d-0f04-494b-a842-9de5cf128925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "840bfe5e-1596-4ca9-b835-0df61535572e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc066a01-ea04-4400-aa20-2da4d20ca59f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bdad1c-221f-43b5-8544-b14750ebf7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f4ca10-5ec9-4dc6-a7b5-29d139a5baee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2094ff-c1b5-4d34-af3f-bdfa34aa8e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e341a95f-7e7c-4f69-ae9b-3d4ba66a36a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f64db0d-1558-4bea-8bfd-a296a206b215",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fc835a-2e74-496a-a6f8-1c24083c5706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffdccf5-4d6a-4f27-a933-24863a066cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fac18a-bce1-45ef-b447-9bfde43a25fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "056f74ce-b8b3-4815-8712-0efd8d117fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14775239-0eb8-49fa-9acf-afb4625eee9b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3732d3e7-560d-4177-8aca-a25eb1937cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a06439-f68e-448d-8b36-f63d7ee9fa82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a8606e-9982-4489-833f-4aabb2b5a2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a164a26-23f6-4c55-9e0a-4f2cbd71a1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125b30dc-aa21-4841-b457-9773ba017fe5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fab8bc0-0d67-42c2-8b1a-a0c9ee13d5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8428ca21-78a9-4ba8-843a-24ada9e5f1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd9ecac-e92f-4f08-940d-9a66ce175a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "135c3e09-b4ce-4757-9235-f1ea419c11b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1568562b-d3d3-4ad0-96a7-6241ade785f7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca5b165-13dd-4514-a298-b0cfe6487922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b41938-f8a2-4829-8d36-89a673a3c196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98447305-e04d-4e53-ba4b-e585cab3bc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39af22d7-c965-4fbc-89cc-07ec16a180e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223955a1-f84a-457d-aa2e-e5bc129fd5b7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d6a4f0-c8d4-4842-93bb-a75a2d506700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52fc1ab-1b26-4524-b061-67b2b2b77b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9926954f-1fab-4ff1-92d6-b6efdfa4a64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7bf3797-d68b-4b34-8628-289a4d685114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02597ebd-ad18-42d1-9999-a6449f5e1168",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613e8fda-f103-41e6-a1d7-1a8776f76522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d9e9c3b-7861-45dc-bd99-61d58377052c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3691b0ca-b743-4821-a19d-cedce7abdc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "62b57d04-f985-449d-9fc3-28b77c486cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df583a38-dfd5-43a7-8954-c5e3462f095a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc89a916-5bd0-4b69-aba6-9996140de02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49ef7e8-068f-40df-9cbd-7945e21e85e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aaa3c1d-e598-46f4-aa21-b9ad3ba72eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "96d34923-35aa-4103-aa3f-3ad4326564d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3020b9-1d83-45d3-bc2e-2a4a60ef55fd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0711e0-e0c9-46df-862b-749755b77be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9665abf9-81a9-41b1-a2c2-9327795c4122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5844421-484d-45bb-8049-15623040c349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4acbe6-dddf-48c3-9070-061b3d699b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e55ece-f30c-4434-a935-100930446060",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40c467c-5998-4c3e-bd95-200014248ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fafa5f75-1d7c-446d-9de0-02e61683bc2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630367a5-034e-49ba-b87f-65d1dac7e496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "73990562-7b08-4bae-95d6-ece8ced2b356"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ba19006c-477d-493f-b207-5c97022d3c24",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71a2291a-b4d3-4f2e-8c10-0ca45937cefa",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12035d18-28a0-471b-810e-a18c0d990721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d897fda-d191-4f13-808c-3cfc914fe404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d24d87-8463-4bfa-b515-b1cbe52e46a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8ffb6e0-fb68-48a1-906e-54077da4d817"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7148b3d-9008-4a0d-a206-b03dcf4ad010",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a33ae30-3285-467f-abfd-1108a7d523d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b55d44b-6278-497d-b533-24f781597e82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4406267-b2a1-4aee-a83e-c1488f40ca94"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c244058e-31f6-430d-99b3-f2a8ce94beb3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e7ebc49f-1ad1-49fb-b2f8-ef02838faf9a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "78d43cca-28b0-463e-9d2a-ce49eab0fd14",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f7d78a5-8596-4e06-801b-c48d8da7d25a"
                }
              }
            ]
          },
          {
            "id": "f2130f35-5406-4fd7-8e89-0da0f777544f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cc63d34f-adb8-4f0b-82c7-8561218a59f5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "305ac88d-8f46-4266-8308-bf398285afdf",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbeaaa6-0e54-4b14-b4d3-bff30306f7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2bf52890-9380-428b-9d25-d15d9268be33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f778dd1-0e77-4de4-81fd-14255a9a73b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e2d21c-c81f-4d21-bf05-35d4b035de60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "04c8f342-9ddd-4572-8099-6de2d54adc14",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "efc1d03b-25aa-4b8d-bd07-3392dfd85b59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b9673f8-e3da-402f-9a9b-3295379028e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e0358a8-545e-4620-bff2-fbf8b8ed8864",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "809bc67c-338d-4cc2-8b99-4349f8281841"
                    }
                  }
                ]
              },
              {
                "id": "5f676cdc-ff94-47c4-8fb9-41e64f2d41d0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7f22664-4359-4c08-8235-a226eaf0f680",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1502818-3c4a-426d-938c-25b7077255c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b96d3423-dab0-4b5f-bf9f-96c34b1809bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "40bcacc6-d2fc-41a6-b72e-118864eb4902"
                    }
                  }
                ]
              },
              {
                "id": "084e0b26-91ef-4cce-a09f-a239ed0adabd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10caeff1-7bbc-4c3d-b196-4aad6cb9ca85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8592845d-4d76-44c1-9a75-ac8b499b48ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a116cf05-139f-4a8b-90fb-4c2ddb22f430",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "774b2fc4-ed42-47b0-8095-649e71cd848f"
                    }
                  }
                ]
              },
              {
                "id": "40920230-9bba-4d78-821c-95bbf97bc07d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73dc751e-9b3f-4caa-9b04-93ff3c32d4d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "642bfcad-efae-45a3-b764-6085bb95a0d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33cca89b-9bb4-4ae4-b141-36fec744f122",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1a4f9f09-9158-4651-bb17-88565c1eb3a5"
                    }
                  }
                ]
              },
              {
                "id": "776c65a0-3ccd-401d-9eb1-c5e84e84cd06",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b86d64aa-550b-44f7-91b6-366d7f403d98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e37057a-a05b-49a0-9ec5-2456b038fb47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39e9b988-3ca2-42d9-b855-bd536ac9d0f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d637a2c5-77ad-4e91-bf08-69da5e1b4465"
                    }
                  }
                ]
              },
              {
                "id": "80cfcb53-a22f-4c43-823e-4f79c440e3bd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "477d24f5-dde5-4ce4-b574-a9043f9da0a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd0d5bd2-c218-4957-bb72-161c3ae9cfdb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1374c965-7bc9-4aca-a57f-513f046cc16b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "95417585-d64b-45a8-bea6-43a94defb33c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7bfa6f5-aec5-4823-80b5-22b96ff25800",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "996739cf-b35e-4a24-9743-c37f3f410ab0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2827c492-5d3b-4929-bdf8-40aa349e285c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "76e6d813-c4d4-49ea-a159-427f4cc0b246"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d9984b4-4e6d-41be-992f-10122f5bbd68",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f66776d3-348c-4eae-a804-2041375c64f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1e6e900-9a32-460b-9478-2d4bda39d88e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02a6b87c-39da-46ae-91b6-cdaca049b713"
            }
          }
        ]
      },
      {
        "id": "f0cae271-3b7d-4a38-9aa2-2c9b698b859c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e20ddb50-cfec-45e6-8fab-cd4f86dcbebc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0951ae04-1865-4e45-a7ea-240f19065fe4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "26a7194e-0552-4333-a034-cc46232d9ab8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4592ddf-6a0e-4b95-b01e-78685b322da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8385a08a-4984-4d3c-a1fe-d94d4be87e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4a5a35-163c-4a62-8813-9a715af15784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f91efd4a-d2a0-45c6-8a9b-6f931473f132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1b88b6-8165-47ac-842e-92005d79f2c8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a3ada1-306a-4e7b-94f0-b507a2bc4681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df8d3f5-a20b-4f24-b5a4-6f21f507ea3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b71118-63cf-478a-8b76-46897a429195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc2944c-20c6-4bf4-af1e-1eb9b1f526c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8b9411-1ee6-4665-8207-f97b58e8922e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794fc3fa-22ae-4780-aada-d3376e5270ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe855e67-2d26-40d3-b843-e7ab8295e20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f8f170-1f40-4a99-a0c3-798b6d28a73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29ce7400-9dbd-4aad-a236-388fd8092e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd79a00e-21f3-481b-9d01-12a3c1c9120f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf722e38-e7ff-4944-8e6b-b2753196cb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b1cb1ae-419e-4bc0-81d8-fb6b565ca424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc14105-97f1-49d6-b1cb-febf8d2cad34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4949d8a-898a-46b5-be34-d17c98a998fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8494ca5-e01e-4774-b8f2-bc2a9ddc504d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02a034d-77f8-47ad-bdf5-c5bc91a3faaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39172d62-8151-4424-86ec-3276d51663dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084a6d70-5b27-4fc9-af0d-2401f0a1842a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12d49509-0f32-446e-a0ac-ad489e8e843c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017d0354-8e9c-4ee6-928d-dfa42acba218",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e96150b-1e71-4ea6-ba8b-3998f13ae4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a408295-9cce-4cd7-bb47-974aad29bc1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d045849-adec-4b82-b3b6-b6e64e0c1307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be047b4d-31a6-435f-bb23-6edcfe230e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802557b6-fc5d-4ccf-a434-cf8a6a483afa",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690ca2f9-8485-423d-9920-863e81f95096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d2a6442-5822-49a7-a9fe-02d82840435f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5187312-d34a-4540-a18e-454d84acf3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "09d3660d-851f-4799-bc30-daa7eb985ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08d52e8-e5ec-40e9-bbc8-b9b66fafb595",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30123b90-4176-4d03-bc04-ee8ccc132cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea8b5a5-f2e9-4f4b-af88-2026881c32da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4d51fd-b2e1-4c53-bfad-18c69f005a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01b0d0e0-52d2-4447-a4bb-1bdbbb5550a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7ac0e3-8b6a-4071-b9c9-4e6ea35935d4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab97719-0aec-482c-b060-29d18ac13ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6097f107-8bd3-4cac-b80f-558cc766298b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0231d5a8-cfb5-49b9-8e6c-6ca721886d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1872e901-add2-41b6-bf56-25667d7c773c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c00599-b848-4584-b436-ebfd37d86416",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8be7a2-0702-4a12-abff-1276e16051e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db590af-630a-44a9-bd87-36504091ac15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ad488c-3350-4196-b893-31229eb0377b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7296f11-4b2a-4eb8-abce-a273674b0700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fec779-98c2-47ad-8f85-d3e45a3bd47c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faff9421-f1d1-40eb-a744-b8ddfaa361ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af508ab9-05f7-4f7f-9175-a7e3854f8c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbbf969-4714-4b3d-ae4b-28bd5741d959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca481ce-1b40-44a8-9c61-d4b56a4d3f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6c8e98-04b1-4b53-8a88-49c5a2b7b93b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54627003-5cca-4b42-a60d-a79eb3a6c94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161c42d0-ba37-438b-8561-e7b197dc8182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4931f22b-3690-430e-99c1-2ddf3d47f4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "043d8232-80e0-4942-8775-d9c7c060fa63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5b8ea3-1183-4c33-947e-ff3f1588695a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db609214-fa49-492f-b649-da8fd294621d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6483ae7c-a8d9-4bdd-a9b7-0f5766a60f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883e19b5-9bd6-4a9a-860a-e3c51b560e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a221c0-7cb4-468c-a8ee-49d01fbc484f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf62da0-e766-451a-b2ba-2df2ff2849e3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9709ac05-a27f-44e6-8b31-6c32ff94ab96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2647d95-85a7-4f2f-a413-ee648fea596e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bb2dc7-12e2-4f14-9cfa-1c7ebb3d0194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4da4a9-9535-4112-917a-c6410d523242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef70d8d0-1305-4146-9206-f79aa0385809",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250a62a9-408b-4c2f-b342-5d1049c34122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b03f0e-6a1c-45db-866d-41f4ebd27924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1575aaa-5f75-4b80-8a3e-428d4e1b7bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5470bd19-110b-4a68-8d78-74c39c9d4661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935f5af2-f45e-4086-aade-bd79bf32f32f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162ccea0-9aa7-464a-bbbb-b1f1526a4875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1dc066-92bf-4c76-aac7-a02e6378bb57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47ac947-1a23-4416-ae2c-07973cb4591f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0f08020-88ce-47f7-811d-82910cd91f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc1c594-593b-4cb7-804b-75d9d15dfa86",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3f563f-5b8c-408b-bb7c-20702c030511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d6f39b-27ac-4621-85cb-c97a701615c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9655dcf8-a7f7-4292-8d2b-1e9bf820557b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "adcbd553-275d-4df4-940a-3e3ad4608332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f892bd0e-78a5-4839-9522-de8026b851ed",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116fd096-ecfe-4324-b7ae-d5e45c1f32fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d081dc-3626-44a1-b686-fba0aa5e4e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a5552a-ca23-41a6-a83e-e6107bb5c96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ee9001-5707-4386-97b6-43abcca544ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4599dd-cda4-4639-a92a-e3e5626208ff",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2356d55c-1caa-4f2a-8221-606a6fef6271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a10bea-9dcd-49f5-a499-159ddd99de40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78f2d4c-9cb9-482a-9662-55a8ee5d3e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eea3220b-810c-4714-8f95-e781b206bf84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b73b36-f658-4f21-95db-f213483b4457",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06026e5-1c41-4651-b47c-8650e291770a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f5fc15-2152-4cb7-9e26-fa942dfae32e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2a10f9-1feb-400b-b462-94fc795ed413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15dd85e6-5ad6-432b-9c95-2a58a640b52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a18e2c-9d72-4ea9-a4d6-59f4c425f7ec",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2899227e-59c0-41ab-b102-9130da27f370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28db2eb4-f4da-44c7-8ee2-432f01923abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da516f4-81c5-4e81-8d66-7701c07d7feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b812f51-b82f-4b90-b665-b94e932cbb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9e20e0-dc7b-48a1-ae69-05b181e46031",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbeb0bcd-839b-4aca-8269-b15f68cf6eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc4ea8a-0b5d-46ad-96e2-19efa09a63b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25720179-5c14-44d4-bcbf-1259ada338d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccada4c4-329c-4cf4-9fc1-8a48419e1eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb3291e-8057-4bc7-9695-1c461fd21cad",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b80be0-8eac-4c70-912b-3b9e08c938d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c72d745-649d-45f1-9153-9c74c603727e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eaa8b22-d037-41f6-8b61-0e01eb81506a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de0a97a5-c12d-463c-81a6-31929d0a927a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33270cf-3c76-4583-8670-120ec49d11b6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba301e4-2633-4f50-a478-0bab22ddccfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8093ad1-079a-48e0-8dac-c7c3c672a8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b5d002-0e74-485b-a9df-3a32236ce2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc41941-04ab-403b-b80f-1fb7caab7e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4607f05-b98e-485a-94ec-0d080ff3231e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3b3fc0-a31f-4d46-9501-61d53e61612b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fb0aab-f826-4831-92fa-25ecb188d89c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90597041-4dcb-427d-896c-9e49ad080c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "329a3957-5ad0-4ef3-8568-e7fe43fda065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a31047-d4bc-4adf-ac0e-58360b7af51c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8e8887-990a-42cc-8b0a-df9af8b9972b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364fccb3-49a6-415b-90a0-1a2b4b242a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304b7011-a94f-4488-9ca2-a2262d179a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9da7f793-0067-4617-a476-b18fce567ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd048a4-4625-432f-b15a-6e0b8bc6b33c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74be86e-1ffb-47fa-bf68-f9670ceca708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5ef3c1-3981-4719-bafc-a7ad1cade056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc46e48-4702-46d4-8dd6-0030459b43a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a71dea7b-3f5f-48eb-9409-bc126a0e1f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21bf42a-9e8a-4a6a-8ad5-c8093c6f1cbc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fde12d1-6edb-46f0-9667-37e4b90e0bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf96391-ea7a-4725-929e-b70a82b16ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989f08bf-ca53-4501-aac9-36bedd3b0507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a463b68f-754c-411b-ba17-6e669f6fb9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ea5184-07c0-45b5-82db-134207327f5c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4535164-4cff-4524-8416-ae4909393bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ceb46e-ff47-4cfe-a90f-8de9dba9a43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669716a6-946c-4d14-99cf-59bfdada7058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b816072c-347d-4e6b-b055-0dfa1736f670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76326ebe-d9f0-47eb-8248-b96fd431132b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cccaebd-ac4c-4cb4-bea7-11d5d206d100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca188d0-eba5-43bb-83b7-44578faf58da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e222e0-c1e1-4d04-bdbc-757a98a4a47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00e7e548-e387-4210-bc1e-b30f8e77e243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fff386d-3317-4114-8e8f-2a5541a53d5e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a9a086-27ed-453b-a444-8d7758dc1425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a857c453-2037-4387-8083-9ae8945dff88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fee80bb-ef82-4f55-b40d-c6ebcc4e1490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e22e0c-78c0-4616-aa01-a4b626aafc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b98d5a-e82a-40ea-a71a-7c1ed26a2b86",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ed1d1d-65f2-4def-b4f3-322e2361d1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae33915-7269-46d6-92d7-68582300908d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d9b49b-73e3-4fc3-aca4-0f38c58b6990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc8e893f-08b6-4bf2-96e8-29b1e64891a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511edfba-fdda-4829-af1a-8d58f817039c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24062c9-4840-4d0d-b69a-2408d8a54b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f946b3-ebda-496d-a85f-4d6af424b5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7107be4a-d80a-4b24-a565-e86b8357b4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d126029-6c26-42f4-86f5-3213ac161157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0074351c-ddac-4cc8-a80a-18b9a21f92ee",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6d8cb3-6645-492d-a642-ba7a34967052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8f8a17-d536-46ea-b91c-3f1bcedeb77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25081108-81fd-4233-b900-72af156d3290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04ac870e-719e-47d9-a514-20ea04a88410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb037343-1124-41fc-864f-716ca58b6a24",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f6ce96-56e7-4f02-a94b-e220412d4b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e4630c-05db-4544-b2fe-2d121520f204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f99358-4925-4837-9c9c-f3664f73ca70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfac1d52-afe1-411f-9c18-dc5d389cdf4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d8a47a-0136-42fe-84e9-c087fb499592",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76145d1-274b-4941-8dca-479a9949b469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d77fb13-87c3-403d-9f35-ad8a45f496db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54348115-7c77-4e75-9151-cf598eeee8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16a4ae91-41fd-4aa4-a5ee-2345e31356fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a256f6-c5eb-4cbd-82f6-349b6d9bda04",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4fca75-7535-4c54-8168-ffed3968b5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073af0a5-ac03-4b55-8b89-86ed2a68de25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f624ef4a-a79e-4d74-94f0-5c09e19b3cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17e9d7f2-62df-48c8-90b3-dba26b6b1b01"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b8246ddf-2825-4b0c-b856-22d59dffc67c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31035c62-223b-4797-a16e-db3da2ee1f8c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a85baf-2de2-4c14-b455-7f5e766e282c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed91e26-33e1-4361-ad38-8925e517c38a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e2f6d1-ecc8-46af-8488-15e1b98db992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2212f05-27b8-4320-bc0a-6e8753725531"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca6c5a16-03dc-470b-9705-ea34855dd1df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e532a90-b868-4b6e-9e24-4d52c15f3227"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4879b7e5-3919-4043-92cf-9ad11d2d369a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be1e5dad-b6b2-4209-97fc-27944739fb3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a1225c2-1273-4d49-b4ef-1c28d564bb0d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c54c3ba4-7354-4f32-a8b4-bef257cc33c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec7ce72c-a7f9-4c5d-8208-833a999cca5d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afba5338-b575-4b4d-8457-221b0783145d"
            }
          }
        ]
      },
      {
        "id": "67195d06-f6de-4a5f-9605-6fa874a1a5ab",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3975a0ed-a4c7-4ccc-b982-1fa485d13689",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26088ede-649c-4895-8c18-8c994c83a5e3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cda8006f-48e7-4480-a388-e391286dc66c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4477b72e-1967-4050-b9a5-c01ca46b96a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e6b97b-7980-4720-88eb-841d85d96f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bf6df6-e771-4dba-a40e-3010d13fe272",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c3b344-cdb1-4c10-ba3a-709edf76cf3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e79225-bfec-444e-af50-9c7b0310dd85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc834ed7-3214-4cc7-8dd6-748d98fed7e1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334bddf4-dddb-46f7-8bdd-1957b40055c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93734e35-438e-4436-94a7-2172cc21aebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9e16ef-731a-426a-ae08-7198611586fb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5abd85-3ee8-4461-82f0-797488da2180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd8c8d8-55df-4453-b09b-78029d54935f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b0b6bc-d1a4-47ac-8d54-147dc6e120d0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37779b53-89fe-4e31-9423-6cd0456b845c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb47acf-16d5-404d-955a-8bfa458a4434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11c128b-deec-407e-ba8d-3341eb5fd550",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7aca12-feb2-4d91-92e2-910d6eedc46d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17dfc930-81a4-4417-adac-77c0e1aaed0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a03755b-ca55-47e7-baac-27f4b24f654d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126b61e9-30f2-49a8-86d1-204b11ccf351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21317914-54f3-4aa2-afce-bd1511157f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63913bad-93f8-4dd1-b28b-e9c0cccf25ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d68741-8969-4e8e-a06c-ce24d622afb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c4cdfb-7d0a-46f5-abd3-015f9f446303",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9daead9-9d0f-4b8b-8997-ad92d17c7fc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c558fb6-979f-4aab-9456-5553d7ac6c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb932282-3ca1-4ce7-9f96-b7cceb8b67a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff2e874-dc00-4b00-a93e-4dad71ebc02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845c396d-eac8-4c84-8bc1-b76b69b9c389",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80117fbb-ac98-4ef4-b32e-9a66857b7994",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6498c1a9-4d36-448e-867c-506eef4c06ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29513367-1778-4dff-8cf4-73cd7ee6d511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c48954-494d-4f6c-a547-d54e69b847db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620d7172-9cb9-47ff-8910-2c130f424c4b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80008c28-24af-4a99-a1c8-a4c0df62a251",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dd95cbb-c1b1-4be8-b87b-fc9c29812b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448068e1-765e-485d-a7c9-2f7c57ba9c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36929ed7-6a25-4a30-8a69-dd567bf350b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f4f0bf-3252-4935-9804-8453fd76dadc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb59b62-dd53-4546-a945-c7070e7f8801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21870cb7-c5bc-4d70-9241-48d47ff98d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7336b38-9053-4183-b169-959c0a14d00f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37fb8be-fe40-47bd-940d-c6cda4b360a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6389dd2e-a3b8-45ab-8ac1-5325512db962",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba58fc3-a882-442c-8697-7a47c8194ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cceb99c3-34ba-4e2c-88ce-7b916fe4a6f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4de85f4-f750-497f-ab0c-5facddbf4397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5546ae3a-c74c-4128-93d5-1582ebe027c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408aa30b-2c68-4b0c-9645-413d1e165547",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d272c6-9fdc-44e8-b80a-6cd6f0dd9403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "946799ae-7257-454f-90bd-120951566b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dc45f7-3b70-4f90-aeed-4dd1c11fe173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f02e2bd-d522-4514-9f4e-dc8eb69348be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24dae434-222b-4aec-8ff3-bdf82a11988d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8c2eb2-66f6-4d63-acb9-bd86e2e54bb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6640cca-a0b5-4036-9253-0399dc604e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a48cfd0-c6f0-44eb-9145-e914c70311e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ae6265-b9ca-4665-9259-a42f8de0fdb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bcdb6c-ca23-473c-9401-e42d25a336db",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd42257-54e8-433e-a17c-3097955f64e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b89f448-3f3e-41b4-95a1-862982099c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ee0f54-b778-4665-bd1b-aca8dedec82c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b669aea7-5358-4fa7-9b8b-ab0b2f76636e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7776f88-d053-4e9c-a3a9-b988d57a2733",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3775b8-2afb-416b-aafb-8fe60d4aa851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a534b3f1-1e65-412e-8f54-3d75509128a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb21ec4-af99-4faf-8d9f-5ad4eac3a2d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2906e398-5983-48a5-a106-565e45ebc54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbfa1c3-7a56-4066-8682-8a5e066c6434",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d97e227-78a0-4196-b74b-eb3d0e0309c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c541c2aa-25f4-4651-955c-38c3e5766a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0206e56f-4c65-436a-bd51-0600f364d0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5750fc25-4962-47e2-984e-a8640d505c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a025be-1681-41b4-8d9e-83d738837c0d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2cf68ec-cef3-4729-94b6-719eef37b520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbadb73f-de4b-439e-8033-82165fad14bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8756dae1-7096-4613-91f1-54e0c3cbabf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f15cd0-8adf-4957-a9ba-5e16762890ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f9cb07-acb0-4ceb-a88a-483ea8c7b451",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f080900e-2cbc-40e8-9cee-ba724005d652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0336df69-2604-46d7-8546-2ac93bfe0625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc170333-3f94-4bd1-9497-1c17b21e3233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0038ce48-4ecb-47d4-80b5-de590a1eae3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36520643-9c15-47cc-a317-c3a1acc92e94",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289e4e12-5d5b-47c9-b84b-5a63db5b4e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce119a5e-7bff-4658-a876-5ad3cbcc36fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e894fe00-5bf2-4a24-bbcc-94548eb8d794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a04e5c-32b8-4f32-b8fe-2bc4efafcd42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb80a4cd-ecd8-4b0b-ac34-3d0f9c4a7eb5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318fd56b-6cf3-4a79-9aeb-07ea9a135ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e876c1b-728c-46ed-9907-9a24715739b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb97c4cb-3daf-4032-970d-ae05c974b5ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "696886d4-4066-432f-b06e-af87590b8de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b575ca6-9a80-4e41-b8ce-7e46589934ab",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60013dd2-a0c9-4a6a-a119-eecbacf7f9fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63d0dd6-8ba6-42b2-8fb0-5138f00c9db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01985ab-02a9-4b28-a299-63e15e2c23ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec5d8fa-fa75-456d-b89b-7ec4dc900b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56d5504-165e-438e-acb4-fc13c796956a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d56268-b452-42ca-8d37-c37434ab52ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f238f38-fbbb-4b4c-a0d0-4ed1aac53db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f7a857-1e71-4da0-935f-215e2957f9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b2baef-1ff3-4393-8052-ed667aa6e07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a93b604-4d44-43d0-bcae-22014b5b5dbe",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9114123c-7bd0-4b28-a7a5-17ea7144ad32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "538cf091-d45d-4051-a306-9ca970342bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e457f33-d97a-4aa9-a458-9770997ced3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17d8b02-d3fe-457b-9e5c-a01a8da77a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca865b0-ec60-448f-b13f-3462bb28f03a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b60e80-72de-4c80-ace5-613179416019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a732bc36-54d4-4854-bfcf-782b3d91cb73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f4370f-88a4-415d-91b2-5966993c22ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c170c359-619d-4027-91f9-1374f3190524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a29b21-0a52-475f-894e-913b26d86e79",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40b45ef-a0a8-4ada-8448-74913484d735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37ba9b48-1c49-4eed-b53a-8dc9484eb16c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ffc11c-e119-4af6-94a1-1d7da06ed6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0929f36-0bb1-4e4f-971e-834aa5974be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fa0117-8931-4178-8e3c-d09a831668d6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f850703-94cf-468a-b6e3-6216cd1c0c98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "499ef061-490b-44a4-803b-5b5d340c09db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80bf829d-1efa-4581-aa6f-97ee17133d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e04743-da18-40d8-8da4-bda85e404f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97e9814-c249-4841-b3e9-f25d7ca59217",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6726636-9543-45f1-bd1a-89c106d33cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d605183b-ef15-4419-b527-718ad7d14041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d48e28-9d65-4cfa-ac5d-eeb22807c0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42454079-6fb5-4ccd-87dc-d7a69de456a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efe3fea-42a7-45c2-8677-e04eb249f4e1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b60cf13-e9b4-494b-ae78-17ec3a4140db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f57c3616-c474-472e-85dd-c999bf790694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b594fa81-ea9b-43e3-9e27-fbde75f31b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a24dc8-8330-47d0-9151-7f57d6f93e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28d11dd-16d4-4d2a-8253-f2f528815906",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4102b6-a365-4f10-8439-81a2f89530df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ec1b855-4db8-4ea0-b42e-cbac31730c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36571a86-0fb9-4892-b058-3ee0705af797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ae0dd5-d6f6-4360-98b7-dfcf0bc84add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957e2b47-8e8a-43ab-b65d-e4a03ad062ea",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f582d9c5-44f0-42e8-b92f-76eac0ea411d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c80d384f-df1f-4830-a2f0-8706dc921ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ceae027-666b-491f-91c3-4aebf4447bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82c8411-b3de-42a1-94f3-4430849756ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bae8c94-c494-446b-8a2d-3ad007e9c6cd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263ab0d6-3aef-42c1-8450-4ca699238cf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69a6e90a-9926-4a98-a455-17d8bea7655f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f060097b-e982-48a3-8154-58c727eb0cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20767a86-edf7-4b8d-9349-e941cea4b615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc249f6-4d15-4ce2-9023-3832abcc246f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc1bbb1-434d-408d-9446-a0a71bdb3959",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d29164c9-30ec-4859-8fc3-09c1244ca030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5690d062-207c-4d9f-9cb3-d4023fc9aee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c06a52a-01e5-48fe-a0e3-40b260ad990d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99c4e60-fe4e-4a9d-ab1f-43d04c9b3965",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccdf444-2603-40a1-a576-8e72cf77c7db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c6e7be3-81ec-4c49-82d5-a38df5b675c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca298b62-31b1-4424-a2a4-b43095e5440f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95be61c8-cb11-4be1-893f-91f4f467eda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c6e5f3-b011-4571-ab79-378be69b617e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf74acb-a985-4f5d-82fb-f34cd3cb4eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8f2f5b-8113-4964-ac8b-5860d986b615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "801be9dd-26ed-4aa5-9aa2-a6349524d36f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63766dce-bb9a-419f-aba1-51009b2f40ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ae9327-0f4a-4400-bfb0-b87ee6e04cca",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30516616-0f22-4515-be58-df3d87e7086f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b960d454-a560-4d12-b4c2-2d31ab2cae17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e03966e-f83b-4907-87ba-1c08f0212c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d430814-f46f-4003-96ce-f2a46c408b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a2ca29-f1c5-417c-b47a-8b09eedb5b16",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d847adc7-aef3-42a1-9417-9a49520a072b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d026ae71-870c-4efb-bc18-c20e348e873e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e33382c-57fc-4d39-8213-7c33cce0fdbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0e1ecc-1edb-4b39-951f-a1434c22e07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828742e3-f7d7-4bc0-998c-162c2447cd76",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cd9ca2-ad2d-43c0-9a31-4755688e6fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ca0b9a-9554-4ce0-a0eb-ce34e6b09d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c587d33a-a000-4829-bf15-51a46a8252f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b324c4cc-8a21-46ef-938d-b1c8858fbecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568aee39-5d2e-4108-8fd8-c9ff14f5c035",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368d3abb-ce36-4057-a720-023956be8bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d0ca995-9e95-41a9-883d-7e7d1b6946f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf70c4d2-3cef-4600-8b1a-6d994673e29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3292929-4743-4684-81db-2dcec8e3cd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5abba5-4d2f-4c39-b824-d001b432cc91",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed5c1e7-d69f-4b19-9850-f3ce99c6ce99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a97313b-1ca7-475f-9b0c-f1c305986c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3162f1d7-fde6-435e-bdc0-72ed12935312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f5b2d3-353c-43f8-b353-9fe641115414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a74eaf7-275c-48be-9998-ac6fd2546155",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a32d0ec-4f97-4a77-8307-602807a0e655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d820dcde-4146-4573-838a-4a05bf4482ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521b57b4-adfb-4c47-82d3-8f51e47dcb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9dae52-e1af-46d6-a786-d5f254ffec0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71d1b9a-084a-4bee-bde9-2373be2ec1c4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99135bcd-21c7-4475-bed4-9d1b019ba0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a93fea1-2ac8-48c6-b0c8-0f437d40995e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "743e5a1b-8d44-4b19-9309-b08ea1f29ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f700c9e-8b6b-424f-bcae-addf593733ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f1aea2-eb2e-46d0-a33a-7a480f5d5d25",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270fea6a-d59f-40f6-8cb2-07f53176cad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f89d85-e70d-47e2-b877-72c87e0501b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f38bc3-a12e-4170-b2c4-fd780f5ea58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a804732e-db8d-477f-a18f-ba61429b8a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5cf70c-f163-4c30-90fe-e6e861ef96e2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e825652-829f-4e4d-b126-8639d7875789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae65b30-24e0-45ab-b65b-4de4a3ad7104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf2cc6b-c7ab-4adc-8765-1d71ae52bbde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfafcd2e-0dcd-4193-ba71-20e3552cd730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b587f341-328f-4093-ad65-cb13dcecef3c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44db21d5-00d2-46e5-affb-c3b0597d51e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb938b5b-1d08-485a-9f34-dae427c4695a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b63701-483e-43a0-95d9-a5b592d7606d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c46d8c4-b379-428c-9a84-9c357feba389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b196940-382c-411e-97cb-af8f7645f059",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429e679e-a0dc-4145-8843-0fb25c023bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa6c782-be65-4b02-951a-0cb76a38ef18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fce8182-561d-4936-b2e0-5bca90d8563b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ff6f7e-dfb6-4c81-b818-7d8af964e952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81707648-e9a3-4220-b66b-660d0d63690b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3442f5e1-1ddb-49cf-b9db-93511522b010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f6f61e-f9b5-4640-8d9c-eaba6260f23f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80edcb7-f5cd-4fb2-86ec-a0562ddfe945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9580c70d-1fd3-4270-a6a4-0ce831b938c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775d76c5-be97-4f72-b07e-d1c62f08f8fe",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c5e214-f457-4cea-b810-68f77d70a757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed7e108-2e42-41ee-b2f9-d64e0f46c56d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a774f28-1c56-474c-bb70-4c95e8210422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2913db47-43a5-4b95-9839-307535f6d445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71e587d-ea8b-4dd9-967c-5d8d7547762a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85303cfc-cf50-4824-81fd-daab3588d9cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd6df6a-c617-463d-968f-4ae3f049bff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a08ee01-e21a-4d17-b276-b794f9c1bccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e544f2-9efe-4553-a5e8-d01e26183a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e793c47-5ac9-4a6c-b49a-6e2a5738d7fe",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d46212e-1e6d-4fdf-a59d-41437cd1eadd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f37070-f0be-4267-ad22-6c8a59247216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24eebf37-626b-4b95-82d0-e23277e57338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec9c30f-c2ed-44e8-8af2-f50acc5afb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc097363-9d13-4913-a09c-0403e6ce9397",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58946611-bc36-4c2b-b160-e9dc4309d8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6768a6af-a6eb-4d8b-a4bc-b510406346bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95f87b0-5168-4377-8360-2c2aa28b44b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6828d5a8-fe9d-4af0-a280-c129a968ac6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a93a89-3b23-4518-b3e4-9646f04642ce",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848fad26-0b0a-4df3-bdbe-6dc26b0f04f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28007f94-08d5-4675-8a28-9e9c062789d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197a9f7e-45b2-4f7b-8a1e-6175ee61990b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33dd84a5-b5cc-451a-b2c0-1609fc255530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2510a515-3f24-4297-885e-9713a2f925c6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f42da4-a541-4338-963e-1b00aa48abb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d047b51-e217-4057-a855-2c3210968476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9726a850-547c-4380-a303-4a98fe4f8486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02848d4d-8a11-4aac-9cad-87a15744cf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad31d5c0-62cd-45b5-8afc-581b9124c846",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfee214-a029-4fc7-82ee-4506c88c7eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1433476-c7f8-4a18-a2df-8b04df7d018d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd756b64-fba0-46b0-acc3-bcf688c0b201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea75885e-0706-4404-ba6d-4196a84668df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f5adcf-073c-48bd-a31c-41dd390ce727",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810a07a8-5927-4abe-8e30-1802f4bbafc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d08b1c-df82-4815-b276-5bc68a2bcd0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb7ceef-1cb0-4633-80ae-52950a18cb69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf5cbfe0-502d-4513-bc7e-9a06806c243c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99aa3ffc-52aa-41d7-b990-f4a9d566c09d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36742f3b-e499-42a0-a8cb-dfd8a22f9cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1bc7782-097a-4924-8899-2051703ebad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b09f20b-4097-4a53-b721-e9bb37f67539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1277d084-f64b-41b2-9b2a-dfc7f157f35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab0879f-f3ef-4902-8eb3-e66facbf46e4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bb58e6-07e1-4021-9064-38edd9383ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40974239-a6f3-4905-b494-92ce29d32d34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2dac40-5896-497e-9fab-d6aab89d43f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f03324a-f63a-480a-b8e6-be0ad9bd7aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270bdfe4-1bb5-415e-b729-f873f7255af4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c4ee5f-8ea6-438f-bcec-23b0e2ac1b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a12e66c-8f35-4b9f-9ceb-0ef8b1a24ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63380be-8d0a-4524-9049-402bef09b6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479d041b-8628-4c00-827e-13e09d70d35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e3f7e2-73dd-4cc8-839f-0a8a156cf0d5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b6bdcd-7031-4862-b0bb-eb04816e681e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a7daf8-c60c-434e-90df-f53fb31edf6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7288e12b-4a84-492e-ae88-343b9634abf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6232f5-41c5-4b31-8256-bd548f4a4715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90056f5d-1c62-4295-9ad0-67d4f22a412b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a17ff46-6cad-47dc-81fa-41f5f1dd46c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e33367-4e02-40a5-8515-dd43828b8dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db54f3f2-7cc5-4189-b88d-87586ba34ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e98d8c-3d3c-4e39-9baa-6085717f3edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c42208f-265e-4ced-859f-b15bc662d3b7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea6711f-7cec-4f71-94f5-b5756f446486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21878ce6-8f50-488a-b40e-eac04ad2980b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ee094e-460f-45d3-9ba2-7b38fb1a3ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60048c3-ce95-49a7-8a54-c9d83332edcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7c28e9-1573-4541-89d3-57f4d9f51223",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d509f28-091d-4ffc-97b3-8745b524a509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a298c1ac-415a-4bb9-b598-d7361a7276ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca6f8d8-cbe4-4683-b4d3-9a10b867b04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a35e8a-c9e3-47ae-9dba-3cc0befa4d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388964b1-bc36-49d5-9156-8e36a57b9b16",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ee5a5c-fa2c-4746-81af-8060e3591586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8bad4d0-c6dd-43f6-b329-e325ea9c1983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "362b0c9e-3f64-4c3f-9394-68a9a0099d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ff830e-49a4-46a3-a0b0-1952a1137544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e7dd06-eded-4288-8989-60be399340cd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a302ccdc-659b-4d1a-ac4e-c152e01bed8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc4fc6ee-9e40-4a60-abe9-be864f880f9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcb42cb-9107-462b-aea0-9f96e0470924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd25a612-44c5-4be8-b514-792d0f2198b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044821c5-5e8c-463d-9837-1ce18f85320c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0100ddef-a787-485a-a054-82cc624aa524",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7c66174-974d-4e88-ae7e-cc70ff14516b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2417efb9-2fef-4dc3-b634-e09c99a27680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7f7d10-34ad-428b-be4b-6b7883086a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cabea07-cc5d-416d-8675-0b116417f115",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af2b996-4058-4e64-b629-0a2ab15f9cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a18c29-b97e-4497-8c0c-1911cad5998a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34438598-9c04-4966-a4e7-175eaa979e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd1e4f1-9c7c-4f88-9b6b-b10a80e81335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad1f637-616a-47d3-9f33-89716c3c14b3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a2ac31-4029-4f40-bc46-4bc79e1cd050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b32e604b-214d-47e2-902e-295592057661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a205c855-afd9-45c0-80a6-41bba5215c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87b7749-a018-4d22-94c9-e562c0edf726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3aca34-e470-49be-a954-f50cebdd9ac6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599b7a02-4e10-4e54-bb96-7032f56277ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "429ff8be-418f-4c01-8879-63e42ad20d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "002c3b40-78f9-499d-90e8-76679233df28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d45e215-d1af-40c6-ad8a-c1996b4abbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0b2494-da40-445f-8e6e-1e02d3b4f79c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431d87c1-d8d8-46ec-aed3-d6435c8d6b95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a24b6f8-88f7-4136-a9f4-23b956916a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbef4ff-2adc-4ee4-b8d0-29c78c48b561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdef8381-dc11-47e5-84c3-cfb8d379ba01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34ffa4c-7ed7-4d9b-9447-30f3c6962e3e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa902dd-76c1-4d3d-9bbb-b0759b76914b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94e35a8c-40c6-48bd-8e1c-dfb6f86beb9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ca8106-6ae2-428f-ade7-58c45e0aca92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c38bc1-85fe-4595-b0bd-5ed84ee1437a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634b3dc4-00f7-4b90-8e64-8b58e31f001a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b63506e-06c7-40e4-9f3a-ec01e0c20ce7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e8ccb9c-b4bd-4d67-b59b-d57eaf9d8378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d8ad26-9aa5-43b0-843d-06a94d508c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3293d48c-974a-4fc3-bb63-4a2dcf99be7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224f8266-e496-4a02-ba3d-0731f4e4fcd5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e907fb9e-37c8-47e7-830f-b73b2ac2caf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3be525fd-09c6-4fc3-99af-ca875baa0073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d86d34-e2f0-465c-8ffa-085df3661890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e6a629-93f6-4cb9-8a02-2aa251384572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c5e8fa-9c63-4bec-afd3-0bb954cc09df",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f93a59-990e-440c-b992-d3aa95084e05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b49a3caa-e845-4fe4-88f0-b54b5bc66347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0552b50-cbff-4419-af9a-89d7296756e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "745d22b0-70e6-491f-bd6d-852f5965c2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9e3f41-fb1c-4522-9cab-812c586d6ef6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa697c33-16b5-4b01-9f5d-50724ee90db3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "833557b0-8113-480d-8d07-333cb3f09aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff5f5d9-a8d5-46ef-bdbc-0751218979d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd0b30e-692e-4329-8eaa-9fa52549c052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0166d86d-9683-4d7a-99d3-a10d29b73083",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29864047-aff7-4be7-9f73-76c0da675789",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab3c32bd-cb3e-4aed-b5e0-601ae521cce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d61e81-e0c3-4827-8888-7750e3041c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4771befb-7f20-435c-83ff-7a5d2e1dd6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157a785b-8d25-4465-b6ee-b4f1fce6eafc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d968b5d2-d090-4254-8f73-d40cfc508d79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9891c98-4296-4703-a4ed-054b4d9dc7e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8d199b-e27d-40d6-bbf5-3d81c6296ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb74345-3727-42a3-8433-08444a952003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382acb25-0f30-40ca-ad4e-52af51d78155",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b68ac9d-c0a2-42bf-91dd-bf7a21bfb75a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d07d7210-59ee-4bf3-bf66-e7e32da36038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc93a3a-2095-4a65-85d5-57c0e4d09e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ee1305-e878-439a-913e-f01f18363021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83b4fba-c519-4673-a843-6be881976cd8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b746ee61-335a-4f25-8f3a-e23198724645",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b28895-013a-4eab-add7-661376411691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7b38b0-bb59-45c6-9b2f-2f9503cf77da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae79248-ff6a-4cad-8811-1ced64a72baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e4b6dc-f4fd-4a5c-8130-c67a9fdccb4d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca29f243-1bc2-4454-8d43-dd5c27dccc58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b2e386a-996d-480c-a1f9-3fa39d233de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b41be3-33ea-4287-aee8-4cde3e884fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab6a0295-ba2f-4abc-b4ae-0af6cb2ae31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d24b76d-5b7d-45be-8e86-7957dbdd224a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a644095-81f9-4a0e-aa93-4cd4e27e1094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2022fff0-996a-4382-807a-006af35f7d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e95260d-c9c5-4735-a7a3-683d5468d865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb18085b-70c8-40ea-be68-7e9e672825f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32eb597-aa43-4f47-b661-6af4ca64df64",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cea326-47db-4e20-9807-da9023e1cbd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4db2ea4-65a1-45ae-8f99-7799745fad9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c4213a-b5da-4dae-ad1a-3ed5b9befc94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e77f56-17b3-4b55-a311-95b35a006ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e570230b-0289-4981-a108-1d847a0d8f12",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0148173-eab1-450c-9f7b-179eaec5f071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6a86ffa-a3c3-4355-86fd-be2915f2cfee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f5ad59-50a0-462b-ad91-a60131f60a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65407784-ee67-473b-a0d7-4361dec9b475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e698de-2b54-41dd-b920-0b6c228c854b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d58a0c2-01ef-44c6-bdbc-b031df96ed45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cadaf4f6-12bb-490f-9d1c-2162e7ab0191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a3ebcd-a897-4a8c-9385-fba4e8ef1231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6cb656-3f1d-4cb9-84a3-91fd26637c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d538945-7ac8-4e0e-b8f7-112cd88ffe38",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a49c0a-2442-439b-9425-87d903c6c417",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "007d43d1-ed09-42fc-9722-bb30e37578b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bb20e7-e9b0-40b7-9cf2-d93bbd2bf5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a7cfca-4e40-45ce-a624-aed4f2e0af17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00991ab-811a-4f1b-b1f2-c3fe844de2e6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eaf4497-7540-44b0-b4a5-49c8482e8fd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7a27ed7-1b93-4721-9ef4-fdb8b73cfe2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d1adf8-375d-4de0-93cb-2517c4de4f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206483c9-8c75-43c4-8e69-72f92817af88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6783a066-ca59-40cb-960b-ea4913cfe4cf",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0a49f0-4429-47da-bd26-c4c152b81002",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9263eef1-fb87-42fe-a8ff-70871df5be92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd941a6b-c60b-43eb-9c8e-faa71029517f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fc6387-db44-4bf9-8790-0cf5051e93a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787fad83-42dd-44c8-b3c7-8488a2c52c0e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4326511f-1061-4f9d-96ea-810c5ef3ee9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b734960c-ef74-4050-b48f-0b1ab67859d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ac11f3-5b57-43db-8ee8-71b01e316d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80ecb35-0351-4415-ad1e-8539a90a6a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b2dbd0-430b-4e7a-9e5a-2fb5478814f5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6cb9a5-4d61-432e-bc21-ee5ea7a78edd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ee9be02-eae0-4331-9d87-f63cfacdb360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e18c9a7-3694-4a37-a4a2-076f8025b51c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ee7cac8-8c6a-4084-a7ae-32b10dd48cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5ee38e-97bf-4b0b-a235-9bbfd3537a32",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c17b4de-a604-4271-8337-79dd10fa3fe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06c8470-9b16-46b3-be64-63088e02fd55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230c0f33-e546-4713-a933-6ac74df840e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed78f116-2101-4218-922e-77ce85bec801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aca403d-288c-4a2d-bf14-11a632ea7108",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41ccc29-993c-40d1-ae26-539cae4016fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d676162-e1fa-42e1-adc0-fb7459dc8c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44d12a2-4d29-498a-b409-23c596a174bc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c01a07-9b17-4c30-8bda-cf36f098be37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fc0ca2-1e20-428b-96bf-a48df17a5c2f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4308e94-6769-41fc-b54d-73863ed5157b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdcc32b2-ae0d-4687-a990-2e5c93dcfad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b96764b-226a-47ea-90d8-8c937ea7aead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7bdd73c-c7dd-43e5-9fad-d1c51a9af555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d8be4e-8216-48c9-b480-d2534490515b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f6d496-ed18-4806-8f85-9e2a591a8c99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ead91fc3-37b9-4bbb-8c48-4e2c1b24a022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c845883e-fa6b-40e3-9935-0a127d908e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92988e40-4f34-4161-868d-59a807ce129d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c997e5e-7d98-483a-b61b-01858fc566e5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ebdee2-e93c-409e-bccb-d7b23d96c5bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15d4e4fd-bc67-481a-9b8a-17f0e150c004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e774bb2d-d3de-4e8e-855d-7c8d04070b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31e8be4-8405-47e7-ab23-4c2682dfbeee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be12155d-521b-42ef-a679-d0c05355a0b4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8973a89e-aaf5-4aab-8744-7d325905e633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7af2c9e2-7ed0-4f1c-8131-7f189c3b1447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7113ccaf-9f3b-4ed6-9856-65b887bfc7ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f917d61e-495f-4c12-b2a8-40fac69aa0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bad617-4aca-456c-a017-87918e4342c1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af2eeb4-45e8-4270-8dc2-42b32c431b8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81746174-20ec-490a-8ab8-4154eb7bd3d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47eb2263-7726-4ff6-aac0-ac88b838aa3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea34c050-c5fb-4edd-ba0c-30a3637e8bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12c907b-3c42-4683-b971-208b8273d515",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67aee891-63d2-43bb-9b34-6c11bdddcbe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "027b6014-5294-4e58-9b12-f2eee254a0d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6366336-a3e3-4497-b5de-336998675331",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb595aeb-de30-41e1-a957-69f4b8b1a307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e75e1c-680d-4734-b206-dbee25d68704",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f161e67-50da-4a56-bd88-6042106e0238",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2005e970-7d72-45d3-8b83-412f90a69c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9214eca2-80f0-4b73-b2cb-35cd8c78dfdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b0676b-6f81-46e8-85df-503f7a97c6cb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0350cc73-8583-46a8-aa11-e651378e3447",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b3fbb70-2ffd-48b8-b54f-f1573be63185"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10709ae1-db79-4380-bdaa-c16b35d9f321",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d79c76b-ce5a-4060-89f4-b1ae3a494971"
                    }
                  }
                ]
              },
              {
                "id": "c68795c7-dddb-46f7-b41e-5160275430e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74063236-7c3b-40e9-9e3b-3dc19df307e6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d02183-47cf-43ee-93e9-596dc5b14f3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6a7e1f4b-7ce5-4f22-b7ca-ad21322e0d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "810add48-081d-475c-9992-e3107cb30bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb4ffa4b-2109-4878-8a8f-caa950a23d60"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "213c1fb7-7f08-48b3-9e4d-0087d0db467f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4831554-e578-4b06-94c7-0e200cf17600"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3a137ea-09fa-4450-928b-d759c55623fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15a91376-8fbb-4a92-8b75-487fcdea4141"
                    }
                  }
                ]
              },
              {
                "id": "cb5cfd32-3154-4fbc-aed8-6671d86e41c3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0fceb913-d8b0-46d0-87e9-1e4da1b2fcae",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d4293c-ac3f-4187-8c74-daa351af820e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f3ca14bd-5343-4c61-a97c-46639c574960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572995ff-441c-49f7-9a4d-f3d1dc0c39dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a93b00-5f4e-4ccb-b5f9-24a0bb83c955"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "10b9b6ce-7e91-4f47-ab72-95eabd91d4af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b14fdcba-9ba7-4cd8-889d-77c95cb88e56",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2670e40-95ca-46e7-a89a-61650a5196c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7c3d8424-77eb-4ecd-999a-a443f1c88999"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22cd8e8e-601d-441b-be89-0c2d7c5e0fbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ee7f415-8fa7-4c98-acbd-a460c30d93f8"
                    }
                  }
                ]
              },
              {
                "id": "53930302-8d1e-4f0c-9ac4-416e4492a248",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad96e943-6428-4e9f-8457-7ee8905fd19a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8c2d349c-896d-4011-b180-51a5c9d9a71f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06870c3c-2b7d-4050-8da2-4e7f26e2fcc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21c3612a-8f67-4d68-b5b3-ca2578c6b895"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29dbb50c-ff1d-4ae7-9191-39beeb6c5989",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ca40b734-1b7e-444a-9f49-29ac5667d620"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0506a21-b301-4b76-aa25-0cf3a67dc8df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a196b51-e88d-4c81-a7e7-f5dc416a09be"
            }
          }
        ]
      },
      {
        "id": "4a7a5396-1fb2-4178-8ba4-def3d285e2d0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1e576758-1151-4b36-a9ab-d7764cc0dea1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed06a4de-23a9-46a3-84d7-09e73504d3de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2b2dcee-fe7f-4958-b60e-a27d6ad3414f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f13edfc-34d5-44ee-bd71-f520f3c50f60",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7cf4c6d2-8de7-4e38-b004-e91796cfd18f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a35aad0-2e31-4343-82c8-68251e18f6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b3edd99-e30a-40d9-a7d0-85fa2c9b2cab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a58a2d6e-c451-440b-bdd1-afbc45069dd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "908447af-5d62-4f29-b0a4-ee26f45daea9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2777051f-f505-4b32-bc6e-80a47a659f5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cf65a2a-117b-4937-b75c-88ae437a509b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3f2aaa1-7ad8-44f5-bd27-8908ccf081ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8598588e-ee09-4316-9b82-80b7fdad4f17"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53665fac-45eb-4e09-85e1-0c994a7ff5ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c104eb8f-f8df-49a4-9b43-fa45fa2498f0"
            }
          }
        ]
      },
      {
        "id": "ed3fe186-5c82-4f24-9cc7-5ebcce254f26",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f158ce66-5462-4eaa-b7c9-da3177d0f05c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a196c30-9e6d-4022-b731-a229df26c4d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bd8efa92-3dfa-4067-9282-694eccd89c21",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bba9a29-99f6-43dc-a459-57adb471524c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76762744-b235-4086-9217-53ca61c81dcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef021ef-b279-439e-96a3-2f6d39998f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "999732e3-9cc9-40cc-9644-24e8f41f1ba6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a07f3fa0-636b-44e8-b70d-a99af04dfb7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "734f362f-b3a1-4db9-9187-ada58b6b346a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "642d1903-13c6-4372-8965-d90759fb9d9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "292328c4-58dc-4d9f-acbb-80d0a4db2fe9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "414638f6-693d-4b8d-9f07-c12af4ee9c41",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89227ea8-557b-47e2-b73e-5b2fdf790c0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc2832e9-5c57-47ce-8ad3-ca23108c9bfa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a3abb42-54a9-48a3-921e-7d2147840875"
            }
          }
        ]
      },
      {
        "id": "154d1c94-4056-4f41-8cb9-b84ce7689d46",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "305a2e8a-441c-4df1-88b3-779c7828fc5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32c8d4b6-fc4a-4123-8c64-7f8ce4990f2b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ac65fff-53b3-49fb-bdc7-716fd172e612",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0b5119-cd55-48c2-8da7-03507bb6438e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "408de69a-e474-42e2-8364-21b76847019d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2a1f79-6c6e-4855-ab73-8443c663d5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7a97ef9-4989-4887-b763-f77998fed5d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6f1866c-0cb7-4806-bff4-84159b0ce8c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52aec279-6fef-4197-b347-786c9d087784"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40c376c4-0950-450f-83c7-2db8c6f283ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afe8163a-cc31-4adf-87e0-12fff89f4e19"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba272011-5dd7-487b-bf7c-6438a7e28061",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "44d02070-0677-470d-a375-9fd2cef50c08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87ef15c1-174a-4ee4-a59a-9a5abdbb016c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "102c53a0-8d05-463e-9dfd-87e2030b8f53"
            }
          }
        ]
      },
      {
        "id": "68dad7f2-cd9b-47fc-9dc2-cf817f51ffa8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef49ca93-2046-4645-891e-a4c28c691b39",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbca6080-aab1-4410-addc-f50456b4fcf4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d82d13a8-8c9c-44fa-b9c6-0086d1364291",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af301637-bbdb-4707-a92d-2fd82c53fe4e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02e33f29-6925-47ca-adab-788c684d53c3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 100.51190476190477,
      "responseMin": 3,
      "responseMax": 11788,
      "responseSd": 791.4357632294581,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725842695096,
      "completed": 1725842728917
    },
    "executions": [
      {
        "id": "71cff2ad-47cc-4bcb-b86a-ddb21ddd71d4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d71840bf-dbbf-497c-98e0-e0555baeebce",
          "httpRequestId": "4f5f033c-e4ec-42d3-b83c-a9174645a42e"
        },
        "item": {
          "id": "71cff2ad-47cc-4bcb-b86a-ddb21ddd71d4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "64cac13c-efbc-4102-8716-b38ce7609c12",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "b444c0ca-c887-4ee4-83c2-1f3649791374",
        "cursor": {
          "ref": "34e15d9c-1605-4084-86c3-baa2acf50e83",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b2c3141e-f3e3-4dbf-83ff-c87525ee2ea9"
        },
        "item": {
          "id": "b444c0ca-c887-4ee4-83c2-1f3649791374",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5c208506-b7d4-453e-a60a-8d88f389e07d",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "ddb4d5e3-8f62-414d-b79b-f6c5047dc7cf",
        "cursor": {
          "ref": "cfa3bb08-2632-425c-9868-7a2a4a25a18c",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "aa68654f-58b1-4690-a12a-d24ce848f19a"
        },
        "item": {
          "id": "ddb4d5e3-8f62-414d-b79b-f6c5047dc7cf",
          "name": "did_json"
        },
        "response": {
          "id": "37dd9734-8231-4304-8f18-badd11b501bd",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ce13fa-f0cb-4298-9f72-df8154687b97",
        "cursor": {
          "ref": "9717d27b-bcfc-4931-9ebf-3607b3256949",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2cbe5aac-66c1-4b5b-9d1a-c8aa7f6d9f13"
        },
        "item": {
          "id": "79ce13fa-f0cb-4298-9f72-df8154687b97",
          "name": "did:invalid"
        },
        "response": {
          "id": "b7eb1e05-24e4-4060-bd4c-6876e5273ac2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 417,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ce13fa-f0cb-4298-9f72-df8154687b97",
        "cursor": {
          "ref": "9717d27b-bcfc-4931-9ebf-3607b3256949",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2cbe5aac-66c1-4b5b-9d1a-c8aa7f6d9f13"
        },
        "item": {
          "id": "79ce13fa-f0cb-4298-9f72-df8154687b97",
          "name": "did:invalid"
        },
        "response": {
          "id": "b7eb1e05-24e4-4060-bd4c-6876e5273ac2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 417,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a435b2-c530-4156-bafa-5f222f8a1bd6",
        "cursor": {
          "ref": "f2d2e790-a091-4255-8345-85097f724756",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "653276fe-9243-499b-989e-55ad5e9acef8"
        },
        "item": {
          "id": "27a435b2-c530-4156-bafa-5f222f8a1bd6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "72efcb03-bd23-4bcd-942c-6931ce32e5bb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f79e29-8f68-4768-8581-93491a578d33",
        "cursor": {
          "ref": "883a6899-3c16-40ff-aa7c-9bfccac8d9b8",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "13dfb237-2b29-42c9-a339-f8a567a22c5f"
        },
        "item": {
          "id": "b9f79e29-8f68-4768-8581-93491a578d33",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1a6c6b0a-10c7-4284-999a-cad7c1a7df41",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262368a8-3d1f-454d-aea7-15699d8e9f2d",
        "cursor": {
          "ref": "1e870616-f11d-439f-ba60-f63a0d0d1fb3",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "71345c07-cf10-4f0a-8727-5166775e6e40"
        },
        "item": {
          "id": "262368a8-3d1f-454d-aea7-15699d8e9f2d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "33d77374-41e6-4f58-bda1-4f6e43d1631f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9072c29-591f-4d77-b88f-acf293454e99",
        "cursor": {
          "ref": "1dd45d35-3634-496e-a7b9-27b4f19644d3",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "416a3d64-e10b-4bcf-be87-7677150c06f8"
        },
        "item": {
          "id": "e9072c29-591f-4d77-b88f-acf293454e99",
          "name": "identifiers"
        },
        "response": {
          "id": "35595524-6d2f-4176-a7d7-0b2ec431fbdb",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e430a0b9-a0d2-40fe-ae71-eb88c51b7c86",
        "cursor": {
          "ref": "ed32660b-9a78-4330-9077-f252b1558d2a",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b81e6f77-e14f-4a81-91fd-3e19d8cc5927"
        },
        "item": {
          "id": "e430a0b9-a0d2-40fe-ae71-eb88c51b7c86",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "95d6e743-7473-496e-9c33-25483ede48e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42aded5c-0e85-49b5-a2b7-ba4b31fae2a8",
        "cursor": {
          "ref": "bf40239d-4566-495c-80ae-8d6117f0cf22",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d603ea2c-5029-47e3-9ace-9c40dcbf33d7"
        },
        "item": {
          "id": "42aded5c-0e85-49b5-a2b7-ba4b31fae2a8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2633eed9-b252-435a-b163-d878954b4641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa65454-2673-4116-9b55-7d439362f8cc",
        "cursor": {
          "ref": "efd49aa7-d415-4411-b853-dd26cf9dd960",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0520fcfb-630b-43de-a2e0-c1f43d148742"
        },
        "item": {
          "id": "6aa65454-2673-4116-9b55-7d439362f8cc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e0b858ff-ab51-4033-8d6f-87b3a0792be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a836bbaf-d777-4955-a81d-c601f7999aa5",
        "cursor": {
          "ref": "efc0f083-3ba7-43a7-bd68-74f216e5a7bf",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ed12ebbf-8b8a-48e9-b314-fc38ce41227a"
        },
        "item": {
          "id": "a836bbaf-d777-4955-a81d-c601f7999aa5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "dc9652f5-a66e-47e9-b9c4-250f3adb3453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3859a3f-5f5d-47b6-a7d8-d2acc70a77fc",
        "cursor": {
          "ref": "f2a1ed28-da43-44a8-88c6-1586d159118e",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7eb08a7d-411b-47cf-a900-af0f8a63486a"
        },
        "item": {
          "id": "b3859a3f-5f5d-47b6-a7d8-d2acc70a77fc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "40e46a9f-5541-4678-a66f-f5f547205cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54af9ecc-b4b9-4b85-84b1-50a26dc1d0b0",
        "cursor": {
          "ref": "895ad014-e4ba-4c36-9881-a3a1df933e29",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2e1554e3-69aa-47bf-a83c-4e9628950626"
        },
        "item": {
          "id": "54af9ecc-b4b9-4b85-84b1-50a26dc1d0b0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a76db160-5b90-44f3-8003-c8e9dbb37daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff63aea-ea9c-475b-bc48-fa34edcd89f3",
        "cursor": {
          "ref": "e39fc5e5-0c81-40f8-815c-f7c932061304",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "17e2c0d4-6ee3-447e-b2d8-7b6e74fb5abd"
        },
        "item": {
          "id": "4ff63aea-ea9c-475b-bc48-fa34edcd89f3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "18a5a577-fb44-45a8-b7f3-707bce3ae0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0a9c98-a282-4e8c-8745-1d2d57f41689",
        "cursor": {
          "ref": "ede3bf30-7adc-41dc-b959-484896b3a985",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0e5270fb-682a-4788-b250-8d1d8224cd41"
        },
        "item": {
          "id": "ed0a9c98-a282-4e8c-8745-1d2d57f41689",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f2074753-2de8-4c0a-85b2-524742cc5b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcc7c0a-b433-4b61-98b1-91572ea5746e",
        "cursor": {
          "ref": "9fccded6-3a52-4077-9377-781352e98c42",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "16c9125a-05c7-47b1-b0f8-4e6d9a69b584"
        },
        "item": {
          "id": "bfcc7c0a-b433-4b61-98b1-91572ea5746e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8e031913-3c95-4e39-9076-6d38c7885c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3895c6-aa2e-4ae6-9a9e-8e8efa4022f9",
        "cursor": {
          "ref": "bd7f9428-30d9-4f16-8f32-bca661d811ee",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "73f755f9-0d99-4576-869c-e025893f05b7"
        },
        "item": {
          "id": "2b3895c6-aa2e-4ae6-9a9e-8e8efa4022f9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6c2018ad-e562-4323-b52b-6587f711c35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ecaefb-9d09-4b01-ad51-6c4bbe9d2d2c",
        "cursor": {
          "ref": "7eaf17cd-77e8-4685-ab7b-aa7f866dce64",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a89d1084-5f6d-4adc-a010-20fec0b33ccb"
        },
        "item": {
          "id": "b1ecaefb-9d09-4b01-ad51-6c4bbe9d2d2c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cecf5f3e-6970-4e8f-9a36-e1ea01011952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71538dfa-6ac6-4e15-96ba-50c0202b0a84",
        "cursor": {
          "ref": "f7270abb-4099-4c4c-8275-9a3fccfffdc6",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c26ce5e1-e8a6-4845-950c-86b0189685cf"
        },
        "item": {
          "id": "71538dfa-6ac6-4e15-96ba-50c0202b0a84",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5f76c159-aec3-45f2-bae7-ab46cb1a6837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e679e07-89d0-4d67-994e-4140da88b3fd",
        "cursor": {
          "ref": "bbc30c6f-0634-4ee2-9b74-288fb0187c12",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3dfbe883-70f1-4fb6-b2c5-cd4bc32e3a81"
        },
        "item": {
          "id": "1e679e07-89d0-4d67-994e-4140da88b3fd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6d04aaab-1bc3-4e74-a830-d93fcc64a4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618dc845-a6a2-4cf2-bffd-1656f4f0ad41",
        "cursor": {
          "ref": "cb9ee910-fdbc-4bd2-825f-dc56560e29e2",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "59470b55-6fe7-4c44-8aff-7335e9ccacda"
        },
        "item": {
          "id": "618dc845-a6a2-4cf2-bffd-1656f4f0ad41",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4c0e45a8-6805-492d-a18e-9f5b7b45575b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e30de35-68d1-400a-81a1-2f85ceb4f28c",
        "cursor": {
          "ref": "31006bf3-e0b4-4eff-bdfe-5aee0be78c67",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4efa5298-57d1-4879-b003-b20058f35654"
        },
        "item": {
          "id": "8e30de35-68d1-400a-81a1-2f85ceb4f28c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "348524a7-04d3-42b0-b9c0-5c6beeb4eb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a18a87-f06b-4317-ac06-e1c6dd02feb9",
        "cursor": {
          "ref": "fa58d889-cf8c-4878-b6b2-f8f2c9d2cd13",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "200d3b58-8c7a-411f-82de-2e80fc8e3f51"
        },
        "item": {
          "id": "e6a18a87-f06b-4317-ac06-e1c6dd02feb9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4158fc18-d01f-4c78-b2a3-f81f69202421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3506fa68-9e32-4bdd-a40c-da4a1042d02e",
        "cursor": {
          "ref": "6d0715a1-868a-4dc3-baaa-d4c4725551a7",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e7017d12-9412-4e7f-83c5-523a41e2eee4"
        },
        "item": {
          "id": "3506fa68-9e32-4bdd-a40c-da4a1042d02e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1d76c285-386d-4910-80f8-51172bcefbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b3eb5b-84b1-4d3a-888c-926b4a0b704b",
        "cursor": {
          "ref": "fe7965ff-31c7-496e-8377-925ed4c593a4",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bcc6ffda-8e04-4a5a-b1e5-f70c68b3bb7e"
        },
        "item": {
          "id": "e1b3eb5b-84b1-4d3a-888c-926b4a0b704b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "811a77c4-e656-4e9d-964a-7735aea54676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc57da98-caf0-410c-b932-f5d671e0f02d",
        "cursor": {
          "ref": "87e7009d-05b1-4b19-8288-498ef1a816dd",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2621cb8d-30e1-4aaa-a8c0-c36d4d4cce5e"
        },
        "item": {
          "id": "dc57da98-caf0-410c-b932-f5d671e0f02d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "dec3b218-dbc9-4d17-9603-4785d5955ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e903f77-b396-498d-b397-98055ac45e5d",
        "cursor": {
          "ref": "bc2359f8-62fc-4559-8a76-6993e6b666e1",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c27a92fb-07d0-45e1-862d-193d9f3500e7"
        },
        "item": {
          "id": "7e903f77-b396-498d-b397-98055ac45e5d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fdc9860c-6852-4859-bede-54ae7c62ced0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6628fe-6e96-4b84-b025-87b5dd630228",
        "cursor": {
          "ref": "6572a7b5-c1ba-4472-8ef0-f29981f37f89",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4ddb628e-7b00-425c-acb5-2ad89f468957"
        },
        "item": {
          "id": "5b6628fe-6e96-4b84-b025-87b5dd630228",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9f089981-7d5a-4fb5-a75c-e028f6153856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec78eebf-0816-4b54-83d3-824a69eb8898",
        "cursor": {
          "ref": "e7cff697-2e46-43e0-b866-12851aa53561",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "af6572c7-a6bd-4714-8e55-f14bae47a402"
        },
        "item": {
          "id": "ec78eebf-0816-4b54-83d3-824a69eb8898",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "26e8066d-554a-48b9-a53c-23d4a54d0e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe1031f-3a30-4cb5-a5d4-640cd5101273",
        "cursor": {
          "ref": "b87ffddb-bf03-481e-8709-50aaf92adc25",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9bf3b1ac-6fa6-428e-8a6c-5bbbe3605a10"
        },
        "item": {
          "id": "fbe1031f-3a30-4cb5-a5d4-640cd5101273",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5d4fdd94-4854-49cc-8759-2299f7384013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a4267a-2cd7-40f9-8520-1c2857ab7055",
        "cursor": {
          "ref": "64ed163b-bdf4-4f81-b82c-f27872bba721",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3d0c20d5-a17e-42d9-bb44-01fe5d2b244a"
        },
        "item": {
          "id": "51a4267a-2cd7-40f9-8520-1c2857ab7055",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a7f41267-522c-49da-a3d0-a1e4ffd492df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e0af3d-b41a-45fe-bc93-6db4696cd0c2",
        "cursor": {
          "ref": "92c0dd86-c14f-4f42-9461-9a62dc9eeee3",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "03859183-f3f7-4954-9294-d8f171bf66cb"
        },
        "item": {
          "id": "92e0af3d-b41a-45fe-bc93-6db4696cd0c2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f33ee9a1-eae2-4578-9a07-00d28c105880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bedc4a-b80e-4cf1-9ca5-b8b9442f8077",
        "cursor": {
          "ref": "16f1db35-47cc-4c03-a91e-09928f51d11b",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e96aa5d7-182c-400c-9e75-d2c9decc5442"
        },
        "item": {
          "id": "01bedc4a-b80e-4cf1-9ca5-b8b9442f8077",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3e931b35-e44a-4915-8e0e-0ea27078d442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0df2aa-c522-4ea4-b272-c3ab57b1c772",
        "cursor": {
          "ref": "1a15abd2-0e19-4173-b72e-9b62a46736f0",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f645ff87-e887-45c4-bf71-2ccd453e1ae7"
        },
        "item": {
          "id": "1b0df2aa-c522-4ea4-b272-c3ab57b1c772",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "14861c03-6542-4d2c-b94f-0732d6616ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f73743-52db-4ffb-b9ab-c64e2a46062a",
        "cursor": {
          "ref": "7833796d-c689-4581-b5cb-d44e4ddd2fa4",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0710d51b-cc0b-4907-88b0-6df40a34ab3a"
        },
        "item": {
          "id": "52f73743-52db-4ffb-b9ab-c64e2a46062a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f55e39bb-fcb4-459c-9215-d6152332de8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87b25b0-55eb-4010-b1cb-d68d197361fd",
        "cursor": {
          "ref": "4bcb4215-65e9-4185-8f2f-e92a5a418b7c",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "95c31b4e-7d54-462c-b754-6f87c428de64"
        },
        "item": {
          "id": "d87b25b0-55eb-4010-b1cb-d68d197361fd",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3285abff-72cc-4ec5-9f1f-241dd5b4b032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2365e6-c690-4b7b-aed0-6869d5809ca0",
        "cursor": {
          "ref": "81ccf068-36fd-48d0-a4f0-860cbb7b0c93",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1785de8f-b05b-4263-a2b3-40976666d91e"
        },
        "item": {
          "id": "4b2365e6-c690-4b7b-aed0-6869d5809ca0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "66dd12b9-ba17-4bc6-a3fc-86c84da46d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3022608-1072-4bfc-ae3a-00a0fae784c6",
        "cursor": {
          "ref": "d98aa822-3c33-423a-83c4-f1738eec2238",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7f7db835-7502-4592-9abc-77b40e4c7ccd"
        },
        "item": {
          "id": "e3022608-1072-4bfc-ae3a-00a0fae784c6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "598f5882-7dbf-4f61-aca5-75ddd62e0808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d92b552-3cc0-467d-beb0-e90ded045d2c",
        "cursor": {
          "ref": "93c9c6b3-569e-4f41-9f4e-7c84ca8969d2",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d4f0181c-4aec-4a09-89d2-6024afc6e45b"
        },
        "item": {
          "id": "5d92b552-3cc0-467d-beb0-e90ded045d2c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e3b1c08e-fcba-4a11-8395-bd4b5beacc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b46943-88d4-44a1-8311-eed9e596cfd5",
        "cursor": {
          "ref": "1fc64c74-0e9e-42a6-b5a1-81f8f2fd8465",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "89982082-b243-47a6-bd9e-617ca775248e"
        },
        "item": {
          "id": "45b46943-88d4-44a1-8311-eed9e596cfd5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ef03951e-c7d0-4106-8a8d-4f58239f4099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a325057-0d19-4193-9a5f-06508b87532a",
        "cursor": {
          "ref": "b8faac40-6c13-41cc-8253-bdd72ff16cb4",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f2d89175-2d24-4a3e-b2b1-7aca1f4a2ee1"
        },
        "item": {
          "id": "4a325057-0d19-4193-9a5f-06508b87532a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5ad12fee-bda9-40a3-a81d-a8f2ee750622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0dea38c-c3a8-4c44-8e5f-c9deedaea30e",
        "cursor": {
          "ref": "b8b8d9a2-0e7b-456e-a607-f395654bc28c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "59586d0d-dfe0-4ccb-a935-1497fa0c3e4c"
        },
        "item": {
          "id": "a0dea38c-c3a8-4c44-8e5f-c9deedaea30e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e5ecda73-ce6a-4109-b972-786674ebcd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f814009-887d-4a71-8ce2-078d5dac7b74",
        "cursor": {
          "ref": "b883303b-4cc8-44f5-aa00-d62a8448b1ad",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6c47be51-d9ae-4d62-90e3-b413514b322b"
        },
        "item": {
          "id": "4f814009-887d-4a71-8ce2-078d5dac7b74",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6f6eecc7-8ab7-4afa-8f66-3f5bd06e212a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553ca8c1-c837-4810-91e4-ccb1d3f099a5",
        "cursor": {
          "ref": "0dc9c8e6-62d8-4196-a3ed-13b2d27160f6",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "716223ba-27f8-4260-ba94-06897abfba93"
        },
        "item": {
          "id": "553ca8c1-c837-4810-91e4-ccb1d3f099a5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "61cbba08-c33c-427e-bc9f-361d05c54ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37baf12a-e393-4060-a969-cd6ac1ab0a76",
        "cursor": {
          "ref": "c65de8a1-88db-49b4-84da-00407eb58673",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "13ccd625-4093-477b-a278-a98fdd1a6dee"
        },
        "item": {
          "id": "37baf12a-e393-4060-a969-cd6ac1ab0a76",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "943a7483-568c-44fb-9d12-d04657e6e6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd48cbed-b3d1-4368-be2d-b922e4eba438",
        "cursor": {
          "ref": "d5eeb082-d186-40d8-a4a2-53dcf9a8bd54",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8d591763-0221-4bfe-8a77-16c3b4db04a1"
        },
        "item": {
          "id": "cd48cbed-b3d1-4368-be2d-b922e4eba438",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c57845ca-2e50-4e08-903d-06a55d424e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82fe04c-6ca9-48f4-be5f-d78a4579d1c8",
        "cursor": {
          "ref": "09746a2c-1ad2-4880-9b03-843ee5b2d839",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7d433a54-0329-4a09-ade0-0bc8d3cbd2da"
        },
        "item": {
          "id": "e82fe04c-6ca9-48f4-be5f-d78a4579d1c8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "44ca6591-0cdf-4f5a-ae9f-119060523010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d22a5d-c224-4e95-9ba3-e6cdade33659",
        "cursor": {
          "ref": "ce444498-3fc8-4295-8ca4-f043a1c1f6d3",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "88fb4385-074d-448d-83b2-f6ba68034d09"
        },
        "item": {
          "id": "24d22a5d-c224-4e95-9ba3-e6cdade33659",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d1bb8035-2104-445d-8e43-ffc485c5a1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fc62eb-8c69-47de-8072-f2a9f07aefe8",
        "cursor": {
          "ref": "a5a1bc83-79ee-426e-8f06-833a4940c360",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6de123ef-0f80-43e3-8c2a-95856f91e405"
        },
        "item": {
          "id": "f0fc62eb-8c69-47de-8072-f2a9f07aefe8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "050bd98e-0ecd-4eb6-a73e-7f1baa3f9b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377e5e6a-1e3b-46bd-8d66-5e7ec097dfba",
        "cursor": {
          "ref": "6efa70ba-4b63-4d6d-b21a-caffcd8a7a9c",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "23385c3f-5890-4999-ab44-dad1afc3ce4b"
        },
        "item": {
          "id": "377e5e6a-1e3b-46bd-8d66-5e7ec097dfba",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "736a2b04-37f8-412a-af80-b615467345c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1495388e-d70a-482f-b899-b9bcf5d8a3f6",
        "cursor": {
          "ref": "71673bde-7f19-4b35-80b5-dc066ed8e7f0",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9fc7ee94-a0b7-40d7-b60a-6b9eb31bb5c3"
        },
        "item": {
          "id": "1495388e-d70a-482f-b899-b9bcf5d8a3f6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4c14e719-f177-4e17-83ce-c27243fbf5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a50d7e3-c18a-4441-8f51-b2e141b19982",
        "cursor": {
          "ref": "40eb1a8a-af4e-499d-ab76-1ca33990f238",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d9ef0e8d-ed7f-4d60-ab3a-8559d0d37e6d"
        },
        "item": {
          "id": "2a50d7e3-c18a-4441-8f51-b2e141b19982",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4f80acc3-5485-4de0-b723-d2aeca6768e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7170d2bd-94d5-4834-81af-7448308b11c4",
        "cursor": {
          "ref": "f8420111-85f3-44c2-a0a7-f6f87f1412c6",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1a48fd00-e592-4c8e-b896-39a601dffd99"
        },
        "item": {
          "id": "7170d2bd-94d5-4834-81af-7448308b11c4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8a56aa01-019d-48d9-b6e2-bb369614084e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e17cc92-4f73-44b0-9b34-e1b60cd364fd",
        "cursor": {
          "ref": "8671544b-60a1-4847-b7bc-5ef0d834332f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9665550e-5d9a-4a16-8f89-48a8da35d7b2"
        },
        "item": {
          "id": "2e17cc92-4f73-44b0-9b34-e1b60cd364fd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "405482b1-8cd7-41a0-95f9-ad75b2949626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65959128-13c2-4caf-90a0-a3102c3d00e6",
        "cursor": {
          "ref": "a309a6a8-ffd1-4cf8-ab4b-4055209fd32b",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "03b151cb-5d04-44dc-817f-444e7bda9cc3"
        },
        "item": {
          "id": "65959128-13c2-4caf-90a0-a3102c3d00e6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8349bb53-33e8-4913-9610-26ef141a6c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d588d09-18a4-488f-baeb-b67f3fdeaccd",
        "cursor": {
          "ref": "97172971-12eb-408e-9038-cbe8ebe9f446",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "124a36ed-96c2-4af5-b493-5cb17b7c3ac1"
        },
        "item": {
          "id": "4d588d09-18a4-488f-baeb-b67f3fdeaccd",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "370a7d50-e87f-40c7-a493-8beaea071701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82f2b6d-f331-4728-a4e2-1fe8205a59df",
        "cursor": {
          "ref": "5050219b-3f2d-4651-a796-de8e622d71ce",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "dd710ee8-f619-4b95-91b7-88dcca8b3308"
        },
        "item": {
          "id": "a82f2b6d-f331-4728-a4e2-1fe8205a59df",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7f09d15f-21bc-44cd-9b73-f4bef4543aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eba6161-a635-4155-b089-c4a1211313cc",
        "cursor": {
          "ref": "fce9d861-52c7-4820-879b-dec418e84c7a",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1eb95cc0-aa05-4009-ba0c-ec7a94ee4c05"
        },
        "item": {
          "id": "6eba6161-a635-4155-b089-c4a1211313cc",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ae8b649b-2498-4304-a9ac-1dc696fc8b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f47e972-4082-4d81-8139-a5fc1b9a3a11",
        "cursor": {
          "ref": "27d4a526-b48b-4e39-afbb-26eb473335de",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ef2dce4e-778d-4446-9089-8578598b957b"
        },
        "item": {
          "id": "9f47e972-4082-4d81-8139-a5fc1b9a3a11",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "445ed133-a26a-46c1-a9be-cbaef325bc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4558f792-39d2-4e35-8d4e-991410431195",
        "cursor": {
          "ref": "43e76458-699d-4eda-9e49-c4ddd72eece8",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ba6be9a4-6685-4824-96bf-23e637d33a83"
        },
        "item": {
          "id": "4558f792-39d2-4e35-8d4e-991410431195",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b5aa1bc2-66e1-4267-8edc-576797e3193d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688a2913-6126-49ce-951e-4ca7a3bd7dc6",
        "cursor": {
          "ref": "a8515f4f-5b03-4dd2-a7b3-8e0545e9a4a1",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fcc30c69-1cd7-4fa9-a45e-f82684c13c00"
        },
        "item": {
          "id": "688a2913-6126-49ce-951e-4ca7a3bd7dc6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cb8d3451-456e-4543-9729-979166f2a805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1675c3-8b0a-49d8-ad44-3f45bf64fc88",
        "cursor": {
          "ref": "d5549e25-7583-470f-a947-74e836494d5e",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5aa4867c-a28c-4d36-9a70-4735f8392ee9"
        },
        "item": {
          "id": "ec1675c3-8b0a-49d8-ad44-3f45bf64fc88",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "33511384-d04f-4155-af8b-b686787213b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389ac129-648a-4924-b615-ed57521ccdef",
        "cursor": {
          "ref": "593b2b5c-5290-49c9-b0f2-173794a1d0cf",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f1502ccd-6f16-4ea5-9950-22d3b16991ea"
        },
        "item": {
          "id": "389ac129-648a-4924-b615-ed57521ccdef",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5d743bd4-0cbc-4f25-951e-876d5f4ed0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20c335b-506b-4373-b4e8-b3ca343e51c6",
        "cursor": {
          "ref": "40668fe1-ee0d-4c16-a8c8-cba442096011",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4637e86f-db13-4595-83f7-331892565783"
        },
        "item": {
          "id": "d20c335b-506b-4373-b4e8-b3ca343e51c6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4dbb0fe3-267e-4ae3-8cd9-a88fa05523e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c63c006-412b-4564-9388-c149a5e467ef",
        "cursor": {
          "ref": "0b585b2a-3bcf-4409-ba33-bf2327a57f14",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3f2326e8-dda0-4639-bef2-1c6982c53624"
        },
        "item": {
          "id": "6c63c006-412b-4564-9388-c149a5e467ef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dcb5a2d5-4d64-4dbd-904b-8da79438ef3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ded0ea-18cd-41e0-b042-a3623c6ee556",
        "cursor": {
          "ref": "7d893948-b66b-4496-a5ea-0c9b2d0645b1",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fba70b63-4a77-4e0f-b64f-322de9fcb10f"
        },
        "item": {
          "id": "03ded0ea-18cd-41e0-b042-a3623c6ee556",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bee31e30-924a-4a82-9285-c5604bd2c480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358275d4-46b6-4886-ac5e-274d71085311",
        "cursor": {
          "ref": "c5b10e3a-f59f-420a-941b-3c5777e487cc",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5353d374-268d-4295-a011-adb8f40c8f60"
        },
        "item": {
          "id": "358275d4-46b6-4886-ac5e-274d71085311",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "84d34eb0-c2ec-460c-ba2b-097b3cd55502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604bb515-0419-4b0d-b839-effdcdc3fbdc",
        "cursor": {
          "ref": "6576c006-c864-4962-b72a-97ea2684e88e",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "eaaf3b02-ac82-4a90-81e4-32711e3a8e10"
        },
        "item": {
          "id": "604bb515-0419-4b0d-b839-effdcdc3fbdc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6f17be9f-95f0-4570-8879-025397a7838c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921c13e2-4bc0-4c12-88aa-23fd5e598fd9",
        "cursor": {
          "ref": "b6a70807-049d-41fa-9988-cf0939bb49cb",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5b3e9a50-9c47-4b23-b138-ef3911bba651"
        },
        "item": {
          "id": "921c13e2-4bc0-4c12-88aa-23fd5e598fd9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a699830e-ae70-479e-b9da-895855c15dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a771f7b8-c65f-4513-ad1d-3689610180d1",
        "cursor": {
          "ref": "d56c8f3e-09bf-4c0d-8168-87919b5b9f21",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "566466ee-8074-4c48-9d81-f9a6f5641969"
        },
        "item": {
          "id": "a771f7b8-c65f-4513-ad1d-3689610180d1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "641c2da7-89be-4396-aaf8-e6caae9b9cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106f7125-c60a-461b-a0e9-35bb28c19122",
        "cursor": {
          "ref": "f2d8b531-fbd7-42fb-b575-59eb371dd1a4",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1a096189-19a5-49b1-8821-48473cae09fb"
        },
        "item": {
          "id": "106f7125-c60a-461b-a0e9-35bb28c19122",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a725a2e7-a50b-434a-a9d3-641da7b0fd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e9d1b9-d52f-49cd-bde6-ec2d27df8da8",
        "cursor": {
          "ref": "2e50c282-af46-4ac5-b64b-3a32e9fc5b67",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7447e00d-0045-4c2e-91ed-f2c6afe1b49e"
        },
        "item": {
          "id": "39e9d1b9-d52f-49cd-bde6-ec2d27df8da8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a41ead31-8253-4e0e-9559-6aa727e77df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e363cd74-9d53-48a2-b52d-916b7467e7a3",
        "cursor": {
          "ref": "3e3c88c0-1466-4094-8eea-156731a482b9",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1ae0b104-196f-4eab-8379-c61fad4d81d1"
        },
        "item": {
          "id": "e363cd74-9d53-48a2-b52d-916b7467e7a3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fffb9dc9-88e4-4361-b1b5-ad1acff2d431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8006ad8c-69f1-494c-adb4-d8d7d5e06c3d",
        "cursor": {
          "ref": "3e643718-4e16-4c68-b1c3-e98a309cafea",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9bdf1ae0-94c9-41a1-b79e-dc1768fa424e"
        },
        "item": {
          "id": "8006ad8c-69f1-494c-adb4-d8d7d5e06c3d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5b7c506d-0f3c-4ed8-b2a6-5c136d41c3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7404467d-6e99-44f9-9bb6-d0658e398654",
        "cursor": {
          "ref": "f4dec3e4-c5dd-4c2a-be83-331f577e8464",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "28ee1e15-2863-40ce-8c5a-99f23b9c06c6"
        },
        "item": {
          "id": "7404467d-6e99-44f9-9bb6-d0658e398654",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c5f8fe52-1cee-4b09-8bde-0cb621b3125b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a959209-7fac-4381-9f10-26f3a78f71ee",
        "cursor": {
          "ref": "5ccf9459-2167-4b2a-9c7b-19d345bfb9a8",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "305bd780-b978-49a3-a6ae-8e872065f7b6"
        },
        "item": {
          "id": "2a959209-7fac-4381-9f10-26f3a78f71ee",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1795825c-76a7-4c60-9fbe-69c7c81ad03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c967412-78b7-48a7-bcfd-75e7e1ecb449",
        "cursor": {
          "ref": "2a6e178b-131f-4a49-9ead-1280e0cf136f",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ee48a4e3-98a9-44ca-960e-5f479cc39c95"
        },
        "item": {
          "id": "4c967412-78b7-48a7-bcfd-75e7e1ecb449",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ad61e032-24ff-49d0-b9e0-1a3b8dc09546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fe5fe6-2df8-4064-96f3-d7c7c6091377",
        "cursor": {
          "ref": "82126561-d4b7-43b2-8117-b3723926a8ce",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cabfad22-f785-441c-9dd5-21e2b7de0b35"
        },
        "item": {
          "id": "d0fe5fe6-2df8-4064-96f3-d7c7c6091377",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c9e1a9f4-8546-4820-987b-1fc7ce960fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b25c1c-736c-402d-acd7-99bf6f28556f",
        "cursor": {
          "ref": "9b8f3a4b-5e5b-44ab-8d16-96509e5854b6",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bb23eb1c-13d3-48af-abe0-833aa3a3fe07"
        },
        "item": {
          "id": "e5b25c1c-736c-402d-acd7-99bf6f28556f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b85378da-9993-4fdc-beae-7ce4dad833b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940bc5fa-180e-48f7-be55-7a5cb5f6d586",
        "cursor": {
          "ref": "6d6d8626-0498-42ef-a979-3e8f31029bf0",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "afd80516-8ad6-49e6-8d74-c941fd1b7d4c"
        },
        "item": {
          "id": "940bc5fa-180e-48f7-be55-7a5cb5f6d586",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "771941e9-1b2a-4395-9b79-73e97bcb0fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc88c140-1c2c-439f-86c7-7b6b62e04413",
        "cursor": {
          "ref": "73a55089-b863-457d-b815-3f74944bc544",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "889b7989-cf1e-4cc8-b054-a3c0ef7dc013"
        },
        "item": {
          "id": "dc88c140-1c2c-439f-86c7-7b6b62e04413",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8b12914c-06f6-4adc-bf98-5251881125ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae72cb7-231a-4e44-b260-95fefd7e5500",
        "cursor": {
          "ref": "273cced4-f3b7-4a2b-8aa0-59274ffb6cf3",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b0534e7c-254a-4b62-ba8b-2aed8f485519"
        },
        "item": {
          "id": "9ae72cb7-231a-4e44-b260-95fefd7e5500",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d821713b-bf83-4ea9-bf5c-ad798f41530a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c543bc0c-1d69-43c2-b86f-945765ff9643",
        "cursor": {
          "ref": "a393c93d-2028-4e59-9fa9-a506beac607d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bcfb5eb0-ecf5-427c-8c6e-29d9c49894da"
        },
        "item": {
          "id": "c543bc0c-1d69-43c2-b86f-945765ff9643",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0c162d80-f8e1-464b-834d-4e034774cebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de0b70b-dad6-43d7-8ac3-dbc3285bec69",
        "cursor": {
          "ref": "54b03b57-2920-4a60-8362-1f3f0b67b7d4",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0074cb88-548b-41ee-bab9-7fd1df8f008f"
        },
        "item": {
          "id": "1de0b70b-dad6-43d7-8ac3-dbc3285bec69",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1d0b1dd3-cc9c-46fb-aaa2-957136f69963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f1eea3-0539-4e4e-8408-229511486099",
        "cursor": {
          "ref": "9c1d04d1-a017-46c4-9c32-2c717acbe3b3",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "df61492c-5c75-412d-b45e-46374a5f2f98"
        },
        "item": {
          "id": "e5f1eea3-0539-4e4e-8408-229511486099",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5a905cb7-16ba-466d-a802-40d3bee7353f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a154087b-e1cc-48a2-ada8-2d33547f799e",
        "cursor": {
          "ref": "531481d6-6b9c-4a21-8283-1aecd8d7a61d",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7cc516a2-6879-4e1e-8fe1-f3ef27508903"
        },
        "item": {
          "id": "a154087b-e1cc-48a2-ada8-2d33547f799e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a0739ed4-78d1-43fe-873e-50202fac136a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589373db-e798-4e99-95cf-13bb816817ef",
        "cursor": {
          "ref": "8015966e-9532-4e68-91b7-4360e9322949",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b97d2485-e5c0-4701-8946-cd72caa341db"
        },
        "item": {
          "id": "589373db-e798-4e99-95cf-13bb816817ef",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1ec13d21-c5d7-480f-b471-17410bda3d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6502963a-55c5-4234-a9d5-2340db834dc9",
        "cursor": {
          "ref": "22e6bf67-c318-46b3-bb15-d3ea2c03566f",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a5ccde21-591f-4187-a576-25132b844330"
        },
        "item": {
          "id": "6502963a-55c5-4234-a9d5-2340db834dc9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "21f6332e-e83d-4aaa-af78-6aa4a67a7c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0340ad-dff0-471f-934e-6a757030d239",
        "cursor": {
          "ref": "f168cf13-1d6c-4c35-8558-a7b1ffd3bb3f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8786b190-cd3a-4604-a412-3ffc0468cb44"
        },
        "item": {
          "id": "4c0340ad-dff0-471f-934e-6a757030d239",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a4f4e10f-005b-4197-afee-3407407ba489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc066a01-ea04-4400-aa20-2da4d20ca59f",
        "cursor": {
          "ref": "ee446a1f-daae-4aca-87d5-277661799489",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "59e8a90e-007c-4ecf-88f5-b74ee99a8924"
        },
        "item": {
          "id": "cc066a01-ea04-4400-aa20-2da4d20ca59f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8bdedb6f-026e-49e6-88fe-3fe1a1e79547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f64db0d-1558-4bea-8bfd-a296a206b215",
        "cursor": {
          "ref": "ae3c7da1-7080-426b-904c-f7091da4e333",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4ae52737-0f4e-45eb-8f66-4a9f7ed2c844"
        },
        "item": {
          "id": "6f64db0d-1558-4bea-8bfd-a296a206b215",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "256f99c2-030f-45e3-b294-88871afd6117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14775239-0eb8-49fa-9acf-afb4625eee9b",
        "cursor": {
          "ref": "82ad5a1d-9ebe-4f8e-b1db-6e1a39fb3875",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ef2c24eb-b2cf-4184-9fdc-e8fc867d32e4"
        },
        "item": {
          "id": "14775239-0eb8-49fa-9acf-afb4625eee9b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e017f808-5785-46c5-974a-a4c02e709666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125b30dc-aa21-4841-b457-9773ba017fe5",
        "cursor": {
          "ref": "b21c4449-98b7-476d-8f9c-4d21e22f2a0d",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "238bc4d8-90e7-4687-8667-04d5c7d6e775"
        },
        "item": {
          "id": "125b30dc-aa21-4841-b457-9773ba017fe5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cd097077-aa51-4af8-8aee-aa5f99c88e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1568562b-d3d3-4ad0-96a7-6241ade785f7",
        "cursor": {
          "ref": "6a0860bd-0853-4358-b605-55e40c32b7be",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dce1f1f0-637f-4dc2-ac4e-2fa06f45e659"
        },
        "item": {
          "id": "1568562b-d3d3-4ad0-96a7-6241ade785f7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b50c11f4-aba7-4764-96cd-127d30dddc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223955a1-f84a-457d-aa2e-e5bc129fd5b7",
        "cursor": {
          "ref": "baedeb8c-9dd1-4f90-ba1b-251ae85a3722",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "baa02e45-208c-4bba-9df9-9c3524b8e948"
        },
        "item": {
          "id": "223955a1-f84a-457d-aa2e-e5bc129fd5b7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "95435747-fc2b-48f1-99dc-4ab72d60444f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02597ebd-ad18-42d1-9999-a6449f5e1168",
        "cursor": {
          "ref": "13e5b640-1e24-4a31-9a37-0b94510a6db7",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "80c844f9-1131-457c-bc45-e6c5b6c8729a"
        },
        "item": {
          "id": "02597ebd-ad18-42d1-9999-a6449f5e1168",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1353ac3d-69f3-46ea-bd3b-29f8af79a438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df583a38-dfd5-43a7-8954-c5e3462f095a",
        "cursor": {
          "ref": "8fcc94e2-cbd7-4b1a-9d9f-a33192523885",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f285eb7f-1e71-4fe7-a6b9-fa563513fc16"
        },
        "item": {
          "id": "df583a38-dfd5-43a7-8954-c5e3462f095a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ae0336b6-867d-4fa6-90d2-d7b426588d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3020b9-1d83-45d3-bc2e-2a4a60ef55fd",
        "cursor": {
          "ref": "820d1252-371a-4222-a235-8d6c775e4971",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "91c327d2-4d7a-44bd-89ea-6d4b0543fdf9"
        },
        "item": {
          "id": "6a3020b9-1d83-45d3-bc2e-2a4a60ef55fd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d48304d5-f58a-4f3f-8a5f-8a69e2c08ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e55ece-f30c-4434-a935-100930446060",
        "cursor": {
          "ref": "84425bb6-bb82-4c8b-a836-7a7a62945ea9",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cc793258-fe0b-49f0-ae9a-e739d0d6cd92"
        },
        "item": {
          "id": "e8e55ece-f30c-4434-a935-100930446060",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c2571058-31eb-4ae1-9ae6-48385a05437c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a2291a-b4d3-4f2e-8c10-0ca45937cefa",
        "cursor": {
          "ref": "8e5af741-8799-45b0-8422-7cbfd28a6b7c",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "79a70d22-62ec-4886-9e52-10d04ff9b6db"
        },
        "item": {
          "id": "71a2291a-b4d3-4f2e-8c10-0ca45937cefa",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f24cd13b-7d5a-4488-955b-2be21946f1a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305ac88d-8f46-4266-8308-bf398285afdf",
        "cursor": {
          "ref": "feeea172-79c9-46e0-92cf-87352e62e040",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8dc51b35-6f75-4e49-bce6-e6beddaf2356"
        },
        "item": {
          "id": "305ac88d-8f46-4266-8308-bf398285afdf",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "179c75b2-2b48-4e42-ad8a-b28fc3857875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "04c8f342-9ddd-4572-8099-6de2d54adc14",
        "cursor": {
          "ref": "8a15fd75-7ce9-4d48-94b5-f4a935344256",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c57297e5-d678-4ad9-b722-85a4f379823f"
        },
        "item": {
          "id": "04c8f342-9ddd-4572-8099-6de2d54adc14",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8571ecdf-85bc-4ef7-b4c9-495617595285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "5f676cdc-ff94-47c4-8fb9-41e64f2d41d0",
        "cursor": {
          "ref": "383c671c-89f3-4498-9408-d09aa9e01991",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f7d3999c-fae6-461e-84b3-8df274468dae"
        },
        "item": {
          "id": "5f676cdc-ff94-47c4-8fb9-41e64f2d41d0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ee60292e-cc0a-40e9-8c85-5940718ceb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "084e0b26-91ef-4cce-a09f-a239ed0adabd",
        "cursor": {
          "ref": "8dc20ccd-4db4-411d-bfcc-53f9fb496c5b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f3ad58f1-a6a5-429e-9c7e-0bbb994a2a2b"
        },
        "item": {
          "id": "084e0b26-91ef-4cce-a09f-a239ed0adabd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "23eb7496-f0a2-4f70-a2a4-32b5f8ccd3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "40920230-9bba-4d78-821c-95bbf97bc07d",
        "cursor": {
          "ref": "6f51ebd6-e56a-4655-81f8-3f244ba759c8",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "492e4cbc-3291-4763-8660-1fd0d63a4fb3"
        },
        "item": {
          "id": "40920230-9bba-4d78-821c-95bbf97bc07d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "35cc75aa-07bd-47be-b9c9-d063ff6872b9",
          "status": "Created",
          "code": 201,
          "responseTime": 11788,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "776c65a0-3ccd-401d-9eb1-c5e84e84cd06",
        "cursor": {
          "ref": "cfc985ee-087d-427b-9e58-95f64353f6d6",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bc83f20b-16c6-4b27-af1a-3bbde349020b"
        },
        "item": {
          "id": "776c65a0-3ccd-401d-9eb1-c5e84e84cd06",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fb62ed2c-ceab-4023-9a60-4e0e17b6ac38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "80cfcb53-a22f-4c43-823e-4f79c440e3bd",
        "cursor": {
          "ref": "5f6f0346-42a6-4c90-9921-a75be2a3fc49",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fad33e56-a16e-4dd8-ba1f-528c42fbb86e"
        },
        "item": {
          "id": "80cfcb53-a22f-4c43-823e-4f79c440e3bd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3531a3a7-9474-4a5b-8c64-b3dc8b059b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "26a7194e-0552-4333-a034-cc46232d9ab8",
        "cursor": {
          "ref": "bc7d5e20-d183-44fa-ac54-2daac851de7a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a74a9346-394f-4fc1-97d6-56337733e166"
        },
        "item": {
          "id": "26a7194e-0552-4333-a034-cc46232d9ab8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ee3a9f75-e7bf-413b-b8fa-db7c71e9f1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1b88b6-8165-47ac-842e-92005d79f2c8",
        "cursor": {
          "ref": "6462b0ea-55de-4ed3-b388-2c9e0a884686",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7483df82-d551-47fc-a6ac-e86365f8e9ae"
        },
        "item": {
          "id": "0b1b88b6-8165-47ac-842e-92005d79f2c8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4b7605b0-6456-48eb-a85b-ac4adb1d385d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8b9411-1ee6-4665-8207-f97b58e8922e",
        "cursor": {
          "ref": "1d78af34-3759-4809-b2f7-36ff212d5a72",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b50d5485-85c5-43ef-984e-c8935bd068b5"
        },
        "item": {
          "id": "de8b9411-1ee6-4665-8207-f97b58e8922e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "86b9667f-7018-4b93-9478-19db3cb36d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd79a00e-21f3-481b-9d01-12a3c1c9120f",
        "cursor": {
          "ref": "1fb0e62e-f0ec-43b2-b503-735d7dad2669",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b523960b-2dbf-447f-81aa-77581cc4f9df"
        },
        "item": {
          "id": "bd79a00e-21f3-481b-9d01-12a3c1c9120f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b95a0c18-7b1a-4bd1-b364-bd2038dd2532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8494ca5-e01e-4774-b8f2-bc2a9ddc504d",
        "cursor": {
          "ref": "d05d2233-3935-4957-873b-648fc32d50ec",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "58834fbf-6941-40f2-bd84-5591a9557e00"
        },
        "item": {
          "id": "b8494ca5-e01e-4774-b8f2-bc2a9ddc504d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9e01d052-f9fb-4ae6-ab2e-ab6f5422d2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017d0354-8e9c-4ee6-928d-dfa42acba218",
        "cursor": {
          "ref": "92f1d8e3-2251-4e7e-8c65-2b7a657922df",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "35ca4e41-1d88-4e32-9d8b-bf6ad4805b5a"
        },
        "item": {
          "id": "017d0354-8e9c-4ee6-928d-dfa42acba218",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "211a9a1c-abb9-453e-98c5-7b51db436feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802557b6-fc5d-4ccf-a434-cf8a6a483afa",
        "cursor": {
          "ref": "76c3d1e2-8c63-4619-8978-488ee71ffdb6",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6284e8dd-9f5a-4b61-801f-6fe6e4703e54"
        },
        "item": {
          "id": "802557b6-fc5d-4ccf-a434-cf8a6a483afa",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7f1f192e-0547-4260-9885-d37ae9ef22bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08d52e8-e5ec-40e9-bbc8-b9b66fafb595",
        "cursor": {
          "ref": "4e5ac83d-02c6-4042-9c71-29e4e3cde3d5",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e3648190-7b4b-4d37-a397-f051e9583e58"
        },
        "item": {
          "id": "b08d52e8-e5ec-40e9-bbc8-b9b66fafb595",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7db7bf89-cf18-4ac5-a1d6-ad46415a9637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7ac0e3-8b6a-4071-b9c9-4e6ea35935d4",
        "cursor": {
          "ref": "d0b8c15f-08c3-4d95-991e-d69ec8984def",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8a4c860a-20d5-4ae4-9b49-08c00a155aa4"
        },
        "item": {
          "id": "2c7ac0e3-8b6a-4071-b9c9-4e6ea35935d4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dafe2daa-2050-4b76-a4ea-ea67ca9668ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c00599-b848-4584-b436-ebfd37d86416",
        "cursor": {
          "ref": "dc70d013-e7cc-4739-b460-22498f8cd6ab",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1f18837a-0f5e-479d-822d-ef53c8bdae53"
        },
        "item": {
          "id": "c8c00599-b848-4584-b436-ebfd37d86416",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "778138dd-205d-4532-96eb-5eeb2fa9844a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fec779-98c2-47ad-8f85-d3e45a3bd47c",
        "cursor": {
          "ref": "431bfe6f-3158-4897-a5b2-bacbd75c0952",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a33caa28-8546-40e1-9eab-a78f76221e5e"
        },
        "item": {
          "id": "c2fec779-98c2-47ad-8f85-d3e45a3bd47c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "95f0c7fe-27bb-4046-a593-3c61685be215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6c8e98-04b1-4b53-8a88-49c5a2b7b93b",
        "cursor": {
          "ref": "62110567-68fb-4f9a-8b38-ecaa68432bdc",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "57a771e0-e27e-45a1-948a-a7d6ed3dcb6e"
        },
        "item": {
          "id": "ae6c8e98-04b1-4b53-8a88-49c5a2b7b93b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2218666e-1b91-4454-bf56-b1f4cb85b865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5b8ea3-1183-4c33-947e-ff3f1588695a",
        "cursor": {
          "ref": "ce4ed40b-55af-4fea-a154-a9cac169a172",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "abbd8164-22a4-4720-b748-b5abd1560920"
        },
        "item": {
          "id": "4f5b8ea3-1183-4c33-947e-ff3f1588695a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d563608f-e576-4082-a715-ab07629c320f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf62da0-e766-451a-b2ba-2df2ff2849e3",
        "cursor": {
          "ref": "24845f23-dcc5-4fd7-b696-64ef8a2e0974",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b6c75012-7c6f-439d-9197-95d46d163238"
        },
        "item": {
          "id": "8cf62da0-e766-451a-b2ba-2df2ff2849e3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "df66ef59-b45a-41ea-8373-16e843907059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef70d8d0-1305-4146-9206-f79aa0385809",
        "cursor": {
          "ref": "3a298617-7de6-441f-bc5c-89dafaeeae83",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6fe396fa-f4f4-42be-a36f-f4eef06ed4d4"
        },
        "item": {
          "id": "ef70d8d0-1305-4146-9206-f79aa0385809",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "259eec9b-2072-4fd7-b284-7567e0810b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935f5af2-f45e-4086-aade-bd79bf32f32f",
        "cursor": {
          "ref": "747ea27e-fd62-4ed1-a76a-06dd33f7fffb",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "023bd29b-98ac-4206-8b9a-5d827cfa7e1e"
        },
        "item": {
          "id": "935f5af2-f45e-4086-aade-bd79bf32f32f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6b076546-2ecd-40b7-8643-4004bf5b2d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc1c594-593b-4cb7-804b-75d9d15dfa86",
        "cursor": {
          "ref": "eefbc1b0-6251-427f-8fcc-7f131c20b58d",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6d6106f7-7066-4925-a839-76e39f97aa73"
        },
        "item": {
          "id": "1cc1c594-593b-4cb7-804b-75d9d15dfa86",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "845bb0c5-094b-40fa-ba62-5e59613f7a91",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "f892bd0e-78a5-4839-9522-de8026b851ed",
        "cursor": {
          "ref": "a806990f-e671-4290-9530-6636dd662338",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "482b5b20-8e4e-47ff-a76c-ac6e4dd9eb83"
        },
        "item": {
          "id": "f892bd0e-78a5-4839-9522-de8026b851ed",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "45ceceae-8472-4a24-8c2f-bb0148fe09fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4599dd-cda4-4639-a92a-e3e5626208ff",
        "cursor": {
          "ref": "359f692f-c5a6-4c86-ad1a-d8386b896fa2",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "850b33e1-49d8-4921-95bd-cb0f1b14fddd"
        },
        "item": {
          "id": "7b4599dd-cda4-4639-a92a-e3e5626208ff",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d7e041cc-c507-4fb2-a005-8b591b971afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b73b36-f658-4f21-95db-f213483b4457",
        "cursor": {
          "ref": "71336a63-9eba-4d4f-8165-a74fafe92312",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "25cbb92e-2c50-488c-8245-8987d049c322"
        },
        "item": {
          "id": "17b73b36-f658-4f21-95db-f213483b4457",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9a9d6a94-f14f-4782-86f1-2b2747ca21f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a18e2c-9d72-4ea9-a4d6-59f4c425f7ec",
        "cursor": {
          "ref": "244d9f45-7a58-4c64-948f-5bb7279bd7f8",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c8615f5e-bfd8-461c-9ada-ebef0960a7b2"
        },
        "item": {
          "id": "41a18e2c-9d72-4ea9-a4d6-59f4c425f7ec",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "28a24b24-921b-4f24-8dcd-37cd08fda469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9e20e0-dc7b-48a1-ae69-05b181e46031",
        "cursor": {
          "ref": "e69a349d-319a-417e-b742-dcd9b33bca58",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "939aa7f0-0acc-4d4b-8930-89f2f4917540"
        },
        "item": {
          "id": "0c9e20e0-dc7b-48a1-ae69-05b181e46031",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8cf4c55b-6e35-4f88-aa0c-8f648173f7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb3291e-8057-4bc7-9695-1c461fd21cad",
        "cursor": {
          "ref": "2796d667-078f-4b5c-94f1-22fbe2332bd8",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ffe12e7f-742f-4492-b7ee-9be1211e1ae4"
        },
        "item": {
          "id": "1fb3291e-8057-4bc7-9695-1c461fd21cad",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f1f3bbb2-90c0-447e-85de-d418013e00f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33270cf-3c76-4583-8670-120ec49d11b6",
        "cursor": {
          "ref": "6bea92f7-74db-4fed-9a07-d12e86b7b790",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6dcc8803-0820-43cf-85b7-1193fc19580e"
        },
        "item": {
          "id": "c33270cf-3c76-4583-8670-120ec49d11b6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "22a79860-34a8-481c-aff1-41ff67e18304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4607f05-b98e-485a-94ec-0d080ff3231e",
        "cursor": {
          "ref": "29159db6-07a5-47e2-bbd3-02cfec166730",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b5681003-61a9-452a-adf4-5ac8571da531"
        },
        "item": {
          "id": "f4607f05-b98e-485a-94ec-0d080ff3231e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0dfc1ec2-239f-45bd-a004-a7d6c1f3250f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "87a31047-d4bc-4adf-ac0e-58360b7af51c",
        "cursor": {
          "ref": "dcb9dae9-228a-40d0-9d01-09454dd68642",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "96570705-7a0e-4d40-a3ce-083590e73f8a"
        },
        "item": {
          "id": "87a31047-d4bc-4adf-ac0e-58360b7af51c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c4dea90d-87f7-44a6-af7c-fb9d531dcfb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd048a4-4625-432f-b15a-6e0b8bc6b33c",
        "cursor": {
          "ref": "fdbc60ce-ff83-4037-862f-60bb4a523305",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a9772463-2d88-4114-877c-ae4376dea4f9"
        },
        "item": {
          "id": "1dd048a4-4625-432f-b15a-6e0b8bc6b33c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5506a9f7-7ea6-4deb-acfa-24e118393e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21bf42a-9e8a-4a6a-8ad5-c8093c6f1cbc",
        "cursor": {
          "ref": "90c03399-1563-4025-ab59-1caa49894440",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a0fcd9e6-2735-4004-a85c-9ca6b2a356a0"
        },
        "item": {
          "id": "f21bf42a-9e8a-4a6a-8ad5-c8093c6f1cbc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c83d73b4-f374-4fd9-9d61-4ebfb0a5f9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ea5184-07c0-45b5-82db-134207327f5c",
        "cursor": {
          "ref": "527c302e-e664-4ef5-837a-0b440aeef322",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4f0a0aa4-afc6-4ba5-ab33-ec474ce58d5c"
        },
        "item": {
          "id": "d8ea5184-07c0-45b5-82db-134207327f5c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4f4a6349-26cf-4f76-99e5-3d22d73b69c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76326ebe-d9f0-47eb-8248-b96fd431132b",
        "cursor": {
          "ref": "5047bf17-20ba-4d9e-a2c8-22b6671519b5",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "969418ec-0e4d-4ae0-b563-c9243010151d"
        },
        "item": {
          "id": "76326ebe-d9f0-47eb-8248-b96fd431132b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "992dfc47-5e07-4280-8f8b-edf37701639a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fff386d-3317-4114-8e8f-2a5541a53d5e",
        "cursor": {
          "ref": "d7f77495-6a38-4aae-8f5f-29a7ed773edc",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8db61629-3588-4007-ba92-e7c7af807c9a"
        },
        "item": {
          "id": "4fff386d-3317-4114-8e8f-2a5541a53d5e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "22b026a5-2c9e-479e-8d70-94663c4281e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b98d5a-e82a-40ea-a71a-7c1ed26a2b86",
        "cursor": {
          "ref": "20d0caa6-fc08-4ab0-b2c9-1716c54285bb",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "32ab8210-3197-4135-9604-7fb3b47ce45f"
        },
        "item": {
          "id": "10b98d5a-e82a-40ea-a71a-7c1ed26a2b86",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "afad3b39-de77-47ae-bdde-bb069fb61fe1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "511edfba-fdda-4829-af1a-8d58f817039c",
        "cursor": {
          "ref": "5ac72874-3084-4459-b5b0-4af05eaf8ec2",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d679509c-4f42-4eca-956c-77b0da16a372"
        },
        "item": {
          "id": "511edfba-fdda-4829-af1a-8d58f817039c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "39ba039b-e6b8-4467-96a5-d0700af635f0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "0074351c-ddac-4cc8-a80a-18b9a21f92ee",
        "cursor": {
          "ref": "90eb8951-aca8-4369-a422-43380dd2c385",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "affe6e4f-c8d1-4cea-811b-db0bf3857c6e"
        },
        "item": {
          "id": "0074351c-ddac-4cc8-a80a-18b9a21f92ee",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d88f859c-22fb-4124-87ce-b9f44ccded0e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "cb037343-1124-41fc-864f-716ca58b6a24",
        "cursor": {
          "ref": "910c335b-1d6c-4b5e-bdd0-af7878ff4015",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1e142267-237a-4ffd-b527-c26e38652145"
        },
        "item": {
          "id": "cb037343-1124-41fc-864f-716ca58b6a24",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "57261b6d-d2bb-4ec8-a350-20260c98a3bf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 24,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "87d8a47a-0136-42fe-84e9-c087fb499592",
        "cursor": {
          "ref": "4e0ad272-ffe7-4cfb-a39e-1b7f01fa3201",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5ed43d60-7808-402a-af5b-2bdc14f79483"
        },
        "item": {
          "id": "87d8a47a-0136-42fe-84e9-c087fb499592",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6287204e-907a-4ac0-8ad5-1439dc6e59e5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "82a256f6-c5eb-4cbd-82f6-349b6d9bda04",
        "cursor": {
          "ref": "4a71712e-7cf1-43ac-ace7-5483432a6deb",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "910f455e-c9de-4ba1-a357-bf677ae2be15"
        },
        "item": {
          "id": "82a256f6-c5eb-4cbd-82f6-349b6d9bda04",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "482f81c7-fd89-457b-994b-12e73782d2bd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "31035c62-223b-4797-a16e-db3da2ee1f8c",
        "cursor": {
          "ref": "80ba19a8-cb2c-479c-a0ba-1c62af6fb800",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b8279769-0ddc-4b7b-9e21-406a6f09e82d"
        },
        "item": {
          "id": "31035c62-223b-4797-a16e-db3da2ee1f8c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b2108269-7091-400f-bf02-f608acfa338a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda8006f-48e7-4480-a388-e391286dc66c",
        "cursor": {
          "ref": "39e4329c-eb20-46cd-871c-df74d54509c4",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8b9a136a-c4e4-47f3-9f31-299ede8f71e3"
        },
        "item": {
          "id": "cda8006f-48e7-4480-a388-e391286dc66c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5d95d944-6af9-4fad-964a-d77d7bb79176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bf6df6-e771-4dba-a40e-3010d13fe272",
        "cursor": {
          "ref": "be0e96df-0466-4d3e-a0db-5ea410114ff9",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "720c207d-948e-4e9e-a286-d306b6b7e871"
        },
        "item": {
          "id": "78bf6df6-e771-4dba-a40e-3010d13fe272",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "11d70a66-5c38-4617-b27a-7b5fa983af1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc834ed7-3214-4cc7-8dd6-748d98fed7e1",
        "cursor": {
          "ref": "82d104c2-0cbc-4245-b384-9567a8ee7bff",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ab1bbcdc-2746-4941-8087-59e73cc0eca1"
        },
        "item": {
          "id": "dc834ed7-3214-4cc7-8dd6-748d98fed7e1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2f057fa7-cb54-42c5-9000-eca86909f1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9e16ef-731a-426a-ae08-7198611586fb",
        "cursor": {
          "ref": "ca781624-ef51-4db9-b9ff-8371c7205fb9",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8ffdb7f0-151c-454b-bd6f-4d884d1eccc7"
        },
        "item": {
          "id": "3d9e16ef-731a-426a-ae08-7198611586fb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c4d27571-ca1b-4a07-9597-13ce04ebf967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b0b6bc-d1a4-47ac-8d54-147dc6e120d0",
        "cursor": {
          "ref": "c9e832d8-9aba-48cd-8984-3b0be9301765",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dbbc9b5a-e9bd-4932-8495-ef598fdf1e2f"
        },
        "item": {
          "id": "e7b0b6bc-d1a4-47ac-8d54-147dc6e120d0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c290fb00-8115-471c-ba4d-1ee02bdeecc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11c128b-deec-407e-ba8d-3341eb5fd550",
        "cursor": {
          "ref": "cd242dd7-5b6e-440a-b4d0-6c2f9e34740e",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "66817810-5dc5-4a1c-a469-1baafacdfd87"
        },
        "item": {
          "id": "e11c128b-deec-407e-ba8d-3341eb5fd550",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "97a70d20-cf44-4228-bf44-4fc8c8675ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a03755b-ca55-47e7-baac-27f4b24f654d",
        "cursor": {
          "ref": "8e8587b8-7b47-47e5-810d-c194f058b249",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "630db367-a47e-4b01-af2a-33f07e150243"
        },
        "item": {
          "id": "6a03755b-ca55-47e7-baac-27f4b24f654d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a6655a4f-82ae-4892-a8e6-dfbbc19dac96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c4cdfb-7d0a-46f5-abd3-015f9f446303",
        "cursor": {
          "ref": "f2c972b7-4b6c-4a76-86f7-25c1cfc36829",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "055ce1c0-8a03-4701-9c17-c97c1e9ef8fb"
        },
        "item": {
          "id": "c2c4cdfb-7d0a-46f5-abd3-015f9f446303",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "99c90237-c73d-470f-9974-48dfb736d64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845c396d-eac8-4c84-8bc1-b76b69b9c389",
        "cursor": {
          "ref": "0149bb0b-6a69-4aa4-9ec0-58b508f91ffb",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "31723175-2157-477e-88d4-e4627b4725e6"
        },
        "item": {
          "id": "845c396d-eac8-4c84-8bc1-b76b69b9c389",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "af825707-b6f6-4f24-a981-7843aa545a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620d7172-9cb9-47ff-8910-2c130f424c4b",
        "cursor": {
          "ref": "f0659007-84fe-4249-ba99-6291ed75a687",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "09ace073-22cd-4f44-8c15-3ce4b852b520"
        },
        "item": {
          "id": "620d7172-9cb9-47ff-8910-2c130f424c4b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bc899319-1667-458e-899e-e28ff58f7ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f4f0bf-3252-4935-9804-8453fd76dadc",
        "cursor": {
          "ref": "d13e8ced-bf40-46f7-b0be-829ca98fafc3",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d54749ae-fa34-41ca-940d-740a8b177c61"
        },
        "item": {
          "id": "a5f4f0bf-3252-4935-9804-8453fd76dadc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c87a763a-8de8-4449-a248-ce8782a65f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6389dd2e-a3b8-45ab-8ac1-5325512db962",
        "cursor": {
          "ref": "5d6e7a03-a9e2-481e-8f4b-231a9d1d7559",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "07aba9c0-d121-4d61-9d5c-058e7a8be62f"
        },
        "item": {
          "id": "6389dd2e-a3b8-45ab-8ac1-5325512db962",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "34fc0e47-671a-4184-93df-ebbafb36d482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408aa30b-2c68-4b0c-9645-413d1e165547",
        "cursor": {
          "ref": "b6c9cdde-feef-4a58-94ba-c96c59f4a13d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "26c5bc63-649c-4e0d-8cb5-8f3aca8b1238"
        },
        "item": {
          "id": "408aa30b-2c68-4b0c-9645-413d1e165547",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "95e4a489-cd23-4dc7-959c-22c80fde9e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24dae434-222b-4aec-8ff3-bdf82a11988d",
        "cursor": {
          "ref": "62a00231-0e31-40be-9951-db55df3ee78e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b2099444-ea5a-440c-9012-9f01751c897b"
        },
        "item": {
          "id": "24dae434-222b-4aec-8ff3-bdf82a11988d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "131533f4-7ca3-4aed-90cf-51ec45ad84eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bcdb6c-ca23-473c-9401-e42d25a336db",
        "cursor": {
          "ref": "68faa804-5f6d-4c4b-9182-c4d9037aa046",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c881e304-ba75-40d2-a859-e96d165f182c"
        },
        "item": {
          "id": "72bcdb6c-ca23-473c-9401-e42d25a336db",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8ef01495-062c-412a-869f-d3d183562300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7776f88-d053-4e9c-a3a9-b988d57a2733",
        "cursor": {
          "ref": "db91dca8-bc6c-4056-805c-f2c6f50596ca",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "960966f8-7eb7-48c1-ad07-bde3a4535779"
        },
        "item": {
          "id": "a7776f88-d053-4e9c-a3a9-b988d57a2733",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9fefe81b-9880-4a92-83f5-b5e8628ca7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbfa1c3-7a56-4066-8682-8a5e066c6434",
        "cursor": {
          "ref": "426812f6-bd7b-49cf-83ea-55fed65b4c43",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fcdcdec8-a1ae-486b-b964-ddea1e62dc64"
        },
        "item": {
          "id": "cbbfa1c3-7a56-4066-8682-8a5e066c6434",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "74d3c69d-1341-47a2-a475-08f61f25c29a",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "66a025be-1681-41b4-8d9e-83d738837c0d",
        "cursor": {
          "ref": "db5e37c9-7cef-4c59-a4c6-285d2e00fda8",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4477c28e-b8c5-4928-9e53-4705aa20e77f"
        },
        "item": {
          "id": "66a025be-1681-41b4-8d9e-83d738837c0d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "06593d6a-fae7-4aef-a91f-6514aaeee0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f9cb07-acb0-4ceb-a88a-483ea8c7b451",
        "cursor": {
          "ref": "5da7ce53-1170-4253-8767-95c5b03c0afd",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7ac452a6-af11-41b8-8afd-038fae73b2c1"
        },
        "item": {
          "id": "88f9cb07-acb0-4ceb-a88a-483ea8c7b451",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a1da1bbc-4ed1-4925-8ff7-2ca0bf3b04ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36520643-9c15-47cc-a317-c3a1acc92e94",
        "cursor": {
          "ref": "f8267a6f-265b-46a5-bd20-1ed40102bac5",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fdb380a7-7308-41a7-a7b9-12d99c641d79"
        },
        "item": {
          "id": "36520643-9c15-47cc-a317-c3a1acc92e94",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e72b0e0e-2772-436a-b814-960ce6ccab88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb80a4cd-ecd8-4b0b-ac34-3d0f9c4a7eb5",
        "cursor": {
          "ref": "cf56bc3e-8db4-4351-84d3-6460d79d6564",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "09787f70-8087-4282-b0e0-f25e1f796222"
        },
        "item": {
          "id": "eb80a4cd-ecd8-4b0b-ac34-3d0f9c4a7eb5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2d45045f-cba1-42fa-be92-e0a4a04a2868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b575ca6-9a80-4e41-b8ce-7e46589934ab",
        "cursor": {
          "ref": "628d399e-9964-4524-9035-96d0c5a5aa60",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "41f96bad-6a6f-46d3-9cb3-fce6927b0ab6"
        },
        "item": {
          "id": "7b575ca6-9a80-4e41-b8ce-7e46589934ab",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "998e10e4-ef4e-40cb-beb2-409cb19dba33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56d5504-165e-438e-acb4-fc13c796956a",
        "cursor": {
          "ref": "22b88188-c5ee-4125-9913-4cb2c040447e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9e98f201-9c07-4c59-bcd9-3a8d1ffe8994"
        },
        "item": {
          "id": "d56d5504-165e-438e-acb4-fc13c796956a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f4cb76c6-65ca-41f8-90be-4ba40b5129b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a93b604-4d44-43d0-bcae-22014b5b5dbe",
        "cursor": {
          "ref": "efbb0982-2e09-4f92-8225-13b77c6a00c1",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4c1278ce-fe21-4697-a1d4-abe343edf1b3"
        },
        "item": {
          "id": "1a93b604-4d44-43d0-bcae-22014b5b5dbe",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d774f779-e48a-44cd-aaae-052ab9fd3dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca865b0-ec60-448f-b13f-3462bb28f03a",
        "cursor": {
          "ref": "5528506a-f5aa-4c1e-9e49-a1b1f64bb222",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "957e3839-236d-4dfb-8aa2-edfb76e880a6"
        },
        "item": {
          "id": "1ca865b0-ec60-448f-b13f-3462bb28f03a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ceb24545-d65d-4746-99e2-0f279f967aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a29b21-0a52-475f-894e-913b26d86e79",
        "cursor": {
          "ref": "b353b028-8d51-4133-8934-478f19c94dfb",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0615be1f-3d8b-4c95-8ced-17e1fa804e52"
        },
        "item": {
          "id": "36a29b21-0a52-475f-894e-913b26d86e79",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "eb42ffe8-4b4c-4bdf-8fd1-c4024566fa06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fa0117-8931-4178-8e3c-d09a831668d6",
        "cursor": {
          "ref": "172c3c5e-75ae-4f5b-b7ec-bd2309227be0",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7fff2c78-d330-41cb-9070-e2f476015f5e"
        },
        "item": {
          "id": "64fa0117-8931-4178-8e3c-d09a831668d6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0bd61721-05c2-49d8-a8d9-7aa0d3bea98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97e9814-c249-4841-b3e9-f25d7ca59217",
        "cursor": {
          "ref": "281337ac-928c-4340-82bc-78d5e5f25740",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fad748ec-a3cb-4504-881c-3a2af2e789b9"
        },
        "item": {
          "id": "b97e9814-c249-4841-b3e9-f25d7ca59217",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1fe63344-4a41-4c22-a333-457b42b7ed48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efe3fea-42a7-45c2-8677-e04eb249f4e1",
        "cursor": {
          "ref": "37783981-c365-4610-b423-d4ed8cac28e0",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "10580364-1f69-4596-984d-6f10a5d602c4"
        },
        "item": {
          "id": "7efe3fea-42a7-45c2-8677-e04eb249f4e1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "87b5eb4e-d942-414c-bf61-ff0f9d19bc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28d11dd-16d4-4d2a-8253-f2f528815906",
        "cursor": {
          "ref": "c8f308e2-b768-4a80-bca1-16eab605c729",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6544308e-75d9-429a-9a81-da487d56b3c4"
        },
        "item": {
          "id": "a28d11dd-16d4-4d2a-8253-f2f528815906",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fdebcb89-a05c-4d08-baa2-f223c7ac1f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957e2b47-8e8a-43ab-b65d-e4a03ad062ea",
        "cursor": {
          "ref": "1784ce28-e7ae-4b37-af8d-0b54237137b7",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fd09d104-0866-406a-8299-944c121a2bc4"
        },
        "item": {
          "id": "957e2b47-8e8a-43ab-b65d-e4a03ad062ea",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c625864c-6f94-4e20-a105-0b9e0248f383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bae8c94-c494-446b-8a2d-3ad007e9c6cd",
        "cursor": {
          "ref": "ee68f21f-7297-40c4-8463-de1fd9f98445",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e1bd78c5-d0b0-437b-a535-481630f8bab9"
        },
        "item": {
          "id": "9bae8c94-c494-446b-8a2d-3ad007e9c6cd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d0f46687-5615-4053-8c0b-78ed043f4a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc249f6-4d15-4ce2-9023-3832abcc246f",
        "cursor": {
          "ref": "2e690d09-2207-4fff-b73a-90fbdd1fcd1a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "311be54d-bb43-4fc1-babe-045375af4ba8"
        },
        "item": {
          "id": "fdc249f6-4d15-4ce2-9023-3832abcc246f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cea6d352-ac73-4bac-b0cd-318c330843fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99c4e60-fe4e-4a9d-ab1f-43d04c9b3965",
        "cursor": {
          "ref": "9ae4550f-f8e1-4343-b7b1-1eb8401a0eb4",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c9b70a80-5b2a-4e5f-9cfc-850fb66f322f"
        },
        "item": {
          "id": "e99c4e60-fe4e-4a9d-ab1f-43d04c9b3965",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ac77e416-98a8-4d61-89ee-16d48560137a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c6e5f3-b011-4571-ab79-378be69b617e",
        "cursor": {
          "ref": "ae6d9768-3b5c-447b-991b-22a3ab508cbd",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "dbb0cd7f-98db-4e50-ac04-a6d847a03dff"
        },
        "item": {
          "id": "b0c6e5f3-b011-4571-ab79-378be69b617e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e60ea2a6-210b-4aab-b769-dc5cd2a2bcba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ae9327-0f4a-4400-bfb0-b87ee6e04cca",
        "cursor": {
          "ref": "dd824c64-bdad-46aa-ba9e-7ea9fb1c1d37",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "72fb2186-dcbc-41f9-a185-46f2c24bb806"
        },
        "item": {
          "id": "96ae9327-0f4a-4400-bfb0-b87ee6e04cca",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bc690651-bfd7-48ed-bfd3-414d2984eb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a2ca29-f1c5-417c-b47a-8b09eedb5b16",
        "cursor": {
          "ref": "3defee18-16f1-4073-a328-bbb27bf9bdf9",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "24c79f12-1012-4738-bd68-3346a791e067"
        },
        "item": {
          "id": "c1a2ca29-f1c5-417c-b47a-8b09eedb5b16",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ba1d150e-b4df-4487-ab4c-b1c74ac1abd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828742e3-f7d7-4bc0-998c-162c2447cd76",
        "cursor": {
          "ref": "d7469835-317f-44e5-ae88-55fbb861bcf6",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "23d6b2f0-a173-4c4b-9376-f22e6da623cc"
        },
        "item": {
          "id": "828742e3-f7d7-4bc0-998c-162c2447cd76",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "91db681a-d941-49f7-a800-824c96ec692f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568aee39-5d2e-4108-8fd8-c9ff14f5c035",
        "cursor": {
          "ref": "e2d8f303-aff7-4237-8157-61bac5dc3dce",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "63b9b2b1-5d85-4d06-83db-d0cfb2759764"
        },
        "item": {
          "id": "568aee39-5d2e-4108-8fd8-c9ff14f5c035",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8c0faa17-1fc7-4101-b484-33b64d057194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5abba5-4d2f-4c39-b824-d001b432cc91",
        "cursor": {
          "ref": "9f0c0d41-4129-4a01-87f2-9702a25579ed",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "96cdb7ac-1a0a-45fa-b152-f268a059298b"
        },
        "item": {
          "id": "1f5abba5-4d2f-4c39-b824-d001b432cc91",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c0743054-d559-472e-ba28-303f791fa68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a74eaf7-275c-48be-9998-ac6fd2546155",
        "cursor": {
          "ref": "ec60fbb7-337c-493b-a67f-6629812479f8",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8281ca13-db43-4222-ad94-06bc37534006"
        },
        "item": {
          "id": "9a74eaf7-275c-48be-9998-ac6fd2546155",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0e7039f7-adfa-4bb4-a334-e6518b50ea97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71d1b9a-084a-4bee-bde9-2373be2ec1c4",
        "cursor": {
          "ref": "e2220656-bb34-4b6c-a036-f7750d4cf3e3",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c9fd9e81-9e0b-4a0a-b0e8-b312669587ba"
        },
        "item": {
          "id": "c71d1b9a-084a-4bee-bde9-2373be2ec1c4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8cba00c1-a968-481a-b786-4b45601cfad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f1aea2-eb2e-46d0-a33a-7a480f5d5d25",
        "cursor": {
          "ref": "3ed1a26b-642b-4b58-93aa-f2af61fa7082",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a705e55d-8cae-4b82-b273-2358ca60449f"
        },
        "item": {
          "id": "32f1aea2-eb2e-46d0-a33a-7a480f5d5d25",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a6db15d3-8bab-4a59-a656-0be15fcac4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5cf70c-f163-4c30-90fe-e6e861ef96e2",
        "cursor": {
          "ref": "4ad6b1df-24a4-4125-a792-72a2270f962d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "23434408-ec9a-47b5-b451-bfaa268d0db9"
        },
        "item": {
          "id": "3b5cf70c-f163-4c30-90fe-e6e861ef96e2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "79350310-caf4-4df9-9f1b-0a4790f1be0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b587f341-328f-4093-ad65-cb13dcecef3c",
        "cursor": {
          "ref": "3d19efa4-afa9-4e59-9288-db7e98edb95b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e7257514-eb5b-40fc-bfea-cb9c914aca13"
        },
        "item": {
          "id": "b587f341-328f-4093-ad65-cb13dcecef3c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "11f33c3d-42dc-44ea-bd79-1acf59dba710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b196940-382c-411e-97cb-af8f7645f059",
        "cursor": {
          "ref": "28baaad9-7f48-4b14-9edf-120db1471784",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d69e3d16-a3f7-49fe-8a62-be94d5db075d"
        },
        "item": {
          "id": "9b196940-382c-411e-97cb-af8f7645f059",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4594b55c-71d4-431e-91d1-3dfce0611b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81707648-e9a3-4220-b66b-660d0d63690b",
        "cursor": {
          "ref": "24e317a6-0077-4891-ab49-7b9fb983d866",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ee28aa1d-a33c-4738-a898-9fb7fd262edc"
        },
        "item": {
          "id": "81707648-e9a3-4220-b66b-660d0d63690b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "71ec9a69-51e7-4186-be21-c357529a2c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775d76c5-be97-4f72-b07e-d1c62f08f8fe",
        "cursor": {
          "ref": "cdd464bd-493f-4e27-8128-d4ec09f5d9e2",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a17c6069-4716-4e60-8302-8039014208bd"
        },
        "item": {
          "id": "775d76c5-be97-4f72-b07e-d1c62f08f8fe",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1737e611-f318-4da6-915d-51b44f1369cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71e587d-ea8b-4dd9-967c-5d8d7547762a",
        "cursor": {
          "ref": "490dc894-7f74-49b1-a900-e97fea4d0c0b",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f34e1cb5-298b-42ad-83ce-c07b83d71693"
        },
        "item": {
          "id": "d71e587d-ea8b-4dd9-967c-5d8d7547762a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c8d0c357-08b8-4bca-93ae-7e9378c7caf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e793c47-5ac9-4a6c-b49a-6e2a5738d7fe",
        "cursor": {
          "ref": "81468e2d-f6c6-402d-aaac-3e4dbdba0769",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5ada0602-7599-4331-bb33-560e1e4b2484"
        },
        "item": {
          "id": "8e793c47-5ac9-4a6c-b49a-6e2a5738d7fe",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fa3ded87-73ce-45d3-aed8-4cdef2ff064e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc097363-9d13-4913-a09c-0403e6ce9397",
        "cursor": {
          "ref": "35446a5f-61cb-4e2a-bff6-98f8d1a551b3",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ee515a21-1b2c-43e9-807a-242390b53749"
        },
        "item": {
          "id": "bc097363-9d13-4913-a09c-0403e6ce9397",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b4e1ee12-2a44-4379-9e69-d13240f05535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a93a89-3b23-4518-b3e4-9646f04642ce",
        "cursor": {
          "ref": "4bb9d394-72c7-45ef-bdd6-47b80f42bcf4",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e9f910c9-98a9-4aac-826f-bf72b8d91ceb"
        },
        "item": {
          "id": "08a93a89-3b23-4518-b3e4-9646f04642ce",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "36d52b80-5c7b-4283-a579-0fb9ec626d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2510a515-3f24-4297-885e-9713a2f925c6",
        "cursor": {
          "ref": "9753ec5a-8905-4de7-975f-1da09715fd86",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6991a385-667f-4e6f-8687-f5da26a0f008"
        },
        "item": {
          "id": "2510a515-3f24-4297-885e-9713a2f925c6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "762dada2-4946-49e4-9e9e-abd92c28a20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad31d5c0-62cd-45b5-8afc-581b9124c846",
        "cursor": {
          "ref": "6bbb024b-80b1-4412-96e2-3908b94d7ec7",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "77d09eb4-13e5-4f80-8796-0ded33a0d4d5"
        },
        "item": {
          "id": "ad31d5c0-62cd-45b5-8afc-581b9124c846",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "12e0d360-e5ab-467f-a9c6-9e7785399c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f5adcf-073c-48bd-a31c-41dd390ce727",
        "cursor": {
          "ref": "5f94088e-7686-4b8b-b007-ce14bfc99888",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8c247ba7-6f21-4837-ab5e-6803b356336c"
        },
        "item": {
          "id": "f3f5adcf-073c-48bd-a31c-41dd390ce727",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9ade3200-b423-4986-bab1-813b09cffde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99aa3ffc-52aa-41d7-b990-f4a9d566c09d",
        "cursor": {
          "ref": "551e06cc-8a5e-47f2-abe7-7c71f4b9f89d",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b322ce52-e580-4d88-9a41-dca934ee2a87"
        },
        "item": {
          "id": "99aa3ffc-52aa-41d7-b990-f4a9d566c09d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0a11ddd8-c3b3-4c56-93b8-f4386eb04028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab0879f-f3ef-4902-8eb3-e66facbf46e4",
        "cursor": {
          "ref": "e1ccd081-de85-41eb-a668-f0fc019dab3e",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "91cd5a31-34fe-4c30-8695-0ab3762ce78a"
        },
        "item": {
          "id": "fab0879f-f3ef-4902-8eb3-e66facbf46e4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7fd6645d-7b0a-4d12-868a-026bbd050ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270bdfe4-1bb5-415e-b729-f873f7255af4",
        "cursor": {
          "ref": "14da5c35-b374-44fc-adbe-2295d3a32648",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e2a05dda-e18f-4f3b-9a7e-85b7367bf0c3"
        },
        "item": {
          "id": "270bdfe4-1bb5-415e-b729-f873f7255af4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c356797f-50bb-4f85-9b43-6ac50cbf60bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e3f7e2-73dd-4cc8-839f-0a8a156cf0d5",
        "cursor": {
          "ref": "595050b6-1b77-467b-b75c-2bd0e8af5236",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "66c89b85-1463-45c9-ac14-3a717a5839b2"
        },
        "item": {
          "id": "79e3f7e2-73dd-4cc8-839f-0a8a156cf0d5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8d69746e-aa0e-4283-8fde-132b998aa52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90056f5d-1c62-4295-9ad0-67d4f22a412b",
        "cursor": {
          "ref": "90466aba-ec09-4d71-8973-d24ae836ee8e",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "40267246-52e1-47ce-959b-8218a8b1241d"
        },
        "item": {
          "id": "90056f5d-1c62-4295-9ad0-67d4f22a412b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f5a5ec0b-c397-4aeb-8c38-f788096709f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c42208f-265e-4ced-859f-b15bc662d3b7",
        "cursor": {
          "ref": "f2614007-9299-4585-8e84-63b28ad3fe50",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "11378953-74e5-46ae-8ea4-6ff742d12fc9"
        },
        "item": {
          "id": "8c42208f-265e-4ced-859f-b15bc662d3b7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "037a7154-c50a-40a6-94f5-cb30b6dda61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7c28e9-1573-4541-89d3-57f4d9f51223",
        "cursor": {
          "ref": "0237067a-9f6f-4c42-9053-60b94204696f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2743a566-8484-4f2d-a338-03487aec9a0b"
        },
        "item": {
          "id": "df7c28e9-1573-4541-89d3-57f4d9f51223",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6d5100e9-9bb2-4659-8c48-49b8222389fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388964b1-bc36-49d5-9156-8e36a57b9b16",
        "cursor": {
          "ref": "3954790f-8173-477e-8c75-80809d536dfa",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5c6c2389-248e-4573-83ba-4a54a2378536"
        },
        "item": {
          "id": "388964b1-bc36-49d5-9156-8e36a57b9b16",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e47bb66e-160c-4770-bfa8-e0ac76a5a99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e7dd06-eded-4288-8989-60be399340cd",
        "cursor": {
          "ref": "abbc43a6-a83d-4b0a-959c-6f41f6b2ae42",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "28b6705f-d4d0-4631-a106-33f4a8b843dc"
        },
        "item": {
          "id": "b9e7dd06-eded-4288-8989-60be399340cd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f5213f65-850c-41d4-9b29-5f04aebda8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044821c5-5e8c-463d-9837-1ce18f85320c",
        "cursor": {
          "ref": "556520ec-8ace-4853-8f2d-da745e83f9a7",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c865afa9-1e4f-4bf4-8f8e-7f002d540852"
        },
        "item": {
          "id": "044821c5-5e8c-463d-9837-1ce18f85320c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bc069228-a39f-46e9-bb78-b4f3e9a0546b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cabea07-cc5d-416d-8675-0b116417f115",
        "cursor": {
          "ref": "87ae2029-f8fc-4bd4-99d4-02a364fe44ec",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fc897975-06e3-4c9e-b1b7-8f9fa4c468d9"
        },
        "item": {
          "id": "7cabea07-cc5d-416d-8675-0b116417f115",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8455c2e5-f305-41e6-9744-982afb977e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad1f637-616a-47d3-9f33-89716c3c14b3",
        "cursor": {
          "ref": "ba32b29e-a250-42b0-a34c-a408d266ddd8",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "69c7b947-eb1f-48b6-9a6e-4e226658f65a"
        },
        "item": {
          "id": "cad1f637-616a-47d3-9f33-89716c3c14b3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4009fef0-64c1-402a-be60-c536aae125b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3aca34-e470-49be-a954-f50cebdd9ac6",
        "cursor": {
          "ref": "c046a7ef-e680-431b-990f-71cdc60cf4dc",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "37b07a0e-ced0-4177-916c-0e069406b2e1"
        },
        "item": {
          "id": "4f3aca34-e470-49be-a954-f50cebdd9ac6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "954698d9-5ce8-4b06-aeb2-b2f61c3a21ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0b2494-da40-445f-8e6e-1e02d3b4f79c",
        "cursor": {
          "ref": "c7ddda8f-03e3-4320-964a-4d636befd4c9",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0aabc0ed-e817-4a16-910d-9271275b6dd2"
        },
        "item": {
          "id": "1b0b2494-da40-445f-8e6e-1e02d3b4f79c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "72b07ea1-0d82-48e5-aeaa-13640ff66401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34ffa4c-7ed7-4d9b-9447-30f3c6962e3e",
        "cursor": {
          "ref": "24f38dbc-5bb9-4174-8dde-0e9d791fb31d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d05f7602-5b88-4eec-917d-23f92717e59e"
        },
        "item": {
          "id": "c34ffa4c-7ed7-4d9b-9447-30f3c6962e3e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0982d140-eadb-4a94-811b-0127df5868e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634b3dc4-00f7-4b90-8e64-8b58e31f001a",
        "cursor": {
          "ref": "bc0537e3-9fcb-4e7b-8aee-82f18343cf3e",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2bf015a4-78bb-49bb-be6e-2886955fc7d3"
        },
        "item": {
          "id": "634b3dc4-00f7-4b90-8e64-8b58e31f001a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8e1b2acc-50bd-440d-8138-05a3fc5a7102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224f8266-e496-4a02-ba3d-0731f4e4fcd5",
        "cursor": {
          "ref": "30142e69-29e1-44ca-9781-cc6b1d13427b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e8f9cc4f-3a2d-497b-bf51-92aaa8ecb83b"
        },
        "item": {
          "id": "224f8266-e496-4a02-ba3d-0731f4e4fcd5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "05278344-17eb-4447-bdc9-6d6f8415d7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c5e8fa-9c63-4bec-afd3-0bb954cc09df",
        "cursor": {
          "ref": "eb79ae1c-2f52-4a42-8a90-d58f2943554f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "44b94143-c8c9-4213-bee1-3ce980f695d1"
        },
        "item": {
          "id": "77c5e8fa-9c63-4bec-afd3-0bb954cc09df",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "85edb02e-c49b-40eb-b81b-348068e61364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9e3f41-fb1c-4522-9cab-812c586d6ef6",
        "cursor": {
          "ref": "03606e51-6a7b-4407-826e-16ee3acfadf3",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8a40629e-3957-456f-886f-906f9e3ec42b"
        },
        "item": {
          "id": "cc9e3f41-fb1c-4522-9cab-812c586d6ef6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ea77ff98-2291-419a-8a04-b4836de9e196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0166d86d-9683-4d7a-99d3-a10d29b73083",
        "cursor": {
          "ref": "65170b04-d44a-4ec2-b2ff-1dd2a1b22b54",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7a149031-70c0-4157-93e4-0e89cb7a1a6c"
        },
        "item": {
          "id": "0166d86d-9683-4d7a-99d3-a10d29b73083",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6786b6da-2911-4da0-accd-fb62acc1df89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157a785b-8d25-4465-b6ee-b4f1fce6eafc",
        "cursor": {
          "ref": "24e7b8b0-13f2-46b9-ad21-fa2dd40995a8",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "821576e8-6689-490e-b8d4-d501598dde0f"
        },
        "item": {
          "id": "157a785b-8d25-4465-b6ee-b4f1fce6eafc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "62e37355-d14e-49ce-aa49-2bbb926e1668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382acb25-0f30-40ca-ad4e-52af51d78155",
        "cursor": {
          "ref": "87add7ae-0eb9-424e-b1b7-46071c79f542",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "28b75d07-b63b-43a2-9765-216eda8dee13"
        },
        "item": {
          "id": "382acb25-0f30-40ca-ad4e-52af51d78155",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "707a3d06-48bf-41f3-8509-b388303ccfe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83b4fba-c519-4673-a843-6be881976cd8",
        "cursor": {
          "ref": "8caaf594-208c-4022-9789-daa3bb4ab23b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e3c8b19b-6554-4984-8015-d2b0c086c995"
        },
        "item": {
          "id": "b83b4fba-c519-4673-a843-6be881976cd8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6e24e51e-9c0d-40ba-ae46-d97b1441cf21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e4b6dc-f4fd-4a5c-8130-c67a9fdccb4d",
        "cursor": {
          "ref": "9fe247bb-941c-4456-9c15-8692758d6bfa",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d92c68aa-78ad-4bc6-873f-f59f5d77cec4"
        },
        "item": {
          "id": "d0e4b6dc-f4fd-4a5c-8130-c67a9fdccb4d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1a53a698-6b7b-4143-b9a0-393a02449e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d24b76d-5b7d-45be-8e86-7957dbdd224a",
        "cursor": {
          "ref": "2edabdb6-66a9-4c0f-925d-253a23decd5c",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5c9613d5-c45c-4528-977c-cbe1c8439369"
        },
        "item": {
          "id": "8d24b76d-5b7d-45be-8e86-7957dbdd224a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1394a08a-fe6c-476e-a785-778a9d86a420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32eb597-aa43-4f47-b661-6af4ca64df64",
        "cursor": {
          "ref": "b5dff6a7-ad5b-4b70-a38d-5c50db818833",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "775a518d-c9cc-4b25-a734-cc3c729ce971"
        },
        "item": {
          "id": "a32eb597-aa43-4f47-b661-6af4ca64df64",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1e43709c-a3ce-4362-855b-6b863ddbb7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e570230b-0289-4981-a108-1d847a0d8f12",
        "cursor": {
          "ref": "6d956559-76dd-4e34-969b-0802e6d8f5ac",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "483dee57-2da2-415a-ae20-78609485d03a"
        },
        "item": {
          "id": "e570230b-0289-4981-a108-1d847a0d8f12",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0d339b1b-9d1a-4688-916f-f66b3c3e4999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e698de-2b54-41dd-b920-0b6c228c854b",
        "cursor": {
          "ref": "c4e8432d-6cd2-46d7-9a7e-f871b5d10ab0",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a90a091a-7c6f-438f-99be-1035807fc4e0"
        },
        "item": {
          "id": "a2e698de-2b54-41dd-b920-0b6c228c854b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7e01e90d-b413-4b3a-983b-9b2f2bd57112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d538945-7ac8-4e0e-b8f7-112cd88ffe38",
        "cursor": {
          "ref": "cb421300-c4e7-4ac9-996d-6fe523abcc10",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "72f14ae1-78b4-42ca-a3b7-b308990b21d4"
        },
        "item": {
          "id": "7d538945-7ac8-4e0e-b8f7-112cd88ffe38",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "34e39c96-7b51-429a-9d1d-13afc2b05603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00991ab-811a-4f1b-b1f2-c3fe844de2e6",
        "cursor": {
          "ref": "9c7036eb-030e-48d8-96cc-7e3dbc885de0",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3fadd59c-c99d-4cd2-88ce-206814b12dee"
        },
        "item": {
          "id": "c00991ab-811a-4f1b-b1f2-c3fe844de2e6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c315b74c-f78f-4ad0-a104-b075f169ca0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6783a066-ca59-40cb-960b-ea4913cfe4cf",
        "cursor": {
          "ref": "94555807-0417-4eda-8f6e-049b71d8d614",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "118d9986-ae5f-43c9-b351-18dd4c1fa070"
        },
        "item": {
          "id": "6783a066-ca59-40cb-960b-ea4913cfe4cf",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f3594033-f82b-4332-9e15-d766f3c041d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787fad83-42dd-44c8-b3c7-8488a2c52c0e",
        "cursor": {
          "ref": "11cde4d8-8bad-4cff-84ee-3095acd2d7da",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fcd36a17-207c-41f8-a668-e720b9e1f305"
        },
        "item": {
          "id": "787fad83-42dd-44c8-b3c7-8488a2c52c0e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "12605aa2-1359-4e68-a406-e529c7ac0424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b2dbd0-430b-4e7a-9e5a-2fb5478814f5",
        "cursor": {
          "ref": "397dff18-668b-4da9-aa93-422a80557645",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a1dda034-e7aa-4cc0-bd44-4aefa21fbc86"
        },
        "item": {
          "id": "c1b2dbd0-430b-4e7a-9e5a-2fb5478814f5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "05c89375-fb42-4a4d-a1f3-ddc704f90d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5ee38e-97bf-4b0b-a235-9bbfd3537a32",
        "cursor": {
          "ref": "59239b74-7f26-4d64-9ab9-74cdc4a3835b",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "112965aa-5e5b-4003-a4cc-7fb511ba1c42"
        },
        "item": {
          "id": "5d5ee38e-97bf-4b0b-a235-9bbfd3537a32",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0353b65c-f0ab-4109-9920-e7b2e7dd1397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aca403d-288c-4a2d-bf14-11a632ea7108",
        "cursor": {
          "ref": "bc634c5e-99f6-4435-b927-fb87a04227df",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f6c9ad74-7f6f-4d75-b766-c99a38d6ccf6"
        },
        "item": {
          "id": "6aca403d-288c-4a2d-bf14-11a632ea7108",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0ff2be99-ee08-4bac-ab2c-85b128c0ae5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fc0ca2-1e20-428b-96bf-a48df17a5c2f",
        "cursor": {
          "ref": "c4f4160c-977e-4943-a80d-4085b859d981",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "128d9027-9f28-4b78-88dd-ce60a2b04e8d"
        },
        "item": {
          "id": "f4fc0ca2-1e20-428b-96bf-a48df17a5c2f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3ff1e0d4-6102-4aac-a9d5-12105af05e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d8be4e-8216-48c9-b480-d2534490515b",
        "cursor": {
          "ref": "c458d26f-8a60-4b87-b32f-8ad4ecaf0d4c",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f7f60dfe-cb8d-4d5c-b87f-5f06e4dea112"
        },
        "item": {
          "id": "74d8be4e-8216-48c9-b480-d2534490515b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "20d28ff0-c718-4dce-b11c-83b2fa0bddd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c997e5e-7d98-483a-b61b-01858fc566e5",
        "cursor": {
          "ref": "a94c029f-0ede-4b61-abd7-1da472e4fd26",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "154663b8-3185-4c82-8366-48080b600078"
        },
        "item": {
          "id": "9c997e5e-7d98-483a-b61b-01858fc566e5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bd297609-a46b-41ed-b32c-c5e7c7fe0804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be12155d-521b-42ef-a679-d0c05355a0b4",
        "cursor": {
          "ref": "49bede9f-7f1b-48f4-8c13-99a0f6cef2d7",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e810b10a-095b-4b2b-b48f-2ad2f3c698bf"
        },
        "item": {
          "id": "be12155d-521b-42ef-a679-d0c05355a0b4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ed12c3bd-0ef7-42ca-a219-77c5ff376404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bad617-4aca-456c-a017-87918e4342c1",
        "cursor": {
          "ref": "4a46226c-3875-44c7-aeaf-8301cb1322a3",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6e784ddb-3c13-4245-a4eb-4ea5cc7366bf"
        },
        "item": {
          "id": "39bad617-4aca-456c-a017-87918e4342c1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "821390ad-32dc-43e4-96c6-2687847592c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12c907b-3c42-4683-b971-208b8273d515",
        "cursor": {
          "ref": "73554e42-722d-4141-81cf-f59bb696b08c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a6db4560-f728-4285-b020-372eb755ae76"
        },
        "item": {
          "id": "b12c907b-3c42-4683-b971-208b8273d515",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e98bb4bf-0ec9-4a8e-8980-8094fb559d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e75e1c-680d-4734-b206-dbee25d68704",
        "cursor": {
          "ref": "0370ba05-0a21-4d2b-b0da-efef39812f22",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "85c4d7c6-344b-41be-8f11-6ba1bab50562"
        },
        "item": {
          "id": "b8e75e1c-680d-4734-b206-dbee25d68704",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7e53995f-8e30-48f0-b101-5e3e00279c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74063236-7c3b-40e9-9e3b-3dc19df307e6",
        "cursor": {
          "ref": "ca7d6de0-3dbb-4718-98f4-635a1072a414",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bb9e8c76-6278-472f-8460-851c4cde5f5e"
        },
        "item": {
          "id": "74063236-7c3b-40e9-9e3b-3dc19df307e6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8d6d544a-94cd-4665-ae01-f74e37716d76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fceb913-d8b0-46d0-87e9-1e4da1b2fcae",
        "cursor": {
          "ref": "3109cbbf-5598-4d29-aa7a-f8f4f9fc240c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "951af8c3-767e-46c4-97c7-a756bad80c8e"
        },
        "item": {
          "id": "0fceb913-d8b0-46d0-87e9-1e4da1b2fcae",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6d94290a-edfb-4ada-bf3a-d500f492aa17",
          "status": "OK",
          "code": 200,
          "responseTime": 37,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14fdcba-9ba7-4cd8-889d-77c95cb88e56",
        "cursor": {
          "ref": "e0cdc1b1-c5b5-44de-b388-ebec975d56dd",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bd74140f-4653-421a-a482-3bff0a103ab7"
        },
        "item": {
          "id": "b14fdcba-9ba7-4cd8-889d-77c95cb88e56",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f2de66b0-ce12-4c90-9c19-9ae419301886",
          "status": "OK",
          "code": 200,
          "responseTime": 3250,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "53930302-8d1e-4f0c-9ac4-416e4492a248",
        "cursor": {
          "ref": "10f326ce-8b29-4dde-9905-66b666863c33",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f377a15e-9ac9-4066-8913-ba071861cf3e"
        },
        "item": {
          "id": "53930302-8d1e-4f0c-9ac4-416e4492a248",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7afdfd5f-c727-422d-a05a-efe29ace03f1",
          "status": "OK",
          "code": 200,
          "responseTime": 3142,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b2dcee-fe7f-4958-b60e-a27d6ad3414f",
        "cursor": {
          "ref": "1d7e66cb-cce1-498c-960a-9d7b9afa9591",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e04ca499-a717-482a-9871-1af561812d24"
        },
        "item": {
          "id": "e2b2dcee-fe7f-4958-b60e-a27d6ad3414f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cfefa865-02c4-4553-89f9-5de38109ec62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b2dcee-fe7f-4958-b60e-a27d6ad3414f",
        "cursor": {
          "ref": "1d7e66cb-cce1-498c-960a-9d7b9afa9591",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e04ca499-a717-482a-9871-1af561812d24"
        },
        "item": {
          "id": "e2b2dcee-fe7f-4958-b60e-a27d6ad3414f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cfefa865-02c4-4553-89f9-5de38109ec62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8efa92-3dfa-4067-9282-694eccd89c21",
        "cursor": {
          "ref": "b4dc95fc-4094-4aa9-8911-4ee847d7de3e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "892c115c-b110-471d-bd44-3d68e591277f"
        },
        "item": {
          "id": "bd8efa92-3dfa-4067-9282-694eccd89c21",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2ca1447d-111a-4f50-8571-9b7782afb5dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac65fff-53b3-49fb-bdc7-716fd172e612",
        "cursor": {
          "ref": "4b0a7a1c-cb81-45c4-9fc0-d4dfb5f63dda",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ff0c9a2d-2d96-42fa-9678-d1b986bb8997"
        },
        "item": {
          "id": "5ac65fff-53b3-49fb-bdc7-716fd172e612",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "33677c8b-439f-4e61-826f-0d1b222926d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}